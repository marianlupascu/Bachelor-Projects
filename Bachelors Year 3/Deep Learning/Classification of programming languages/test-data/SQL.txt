drop view if exists pitt_movies cascade;
drop view if exists pitt_coworkers cascade;
drop view if exists pitt_coworker_counts cascade;
drop view if exists movie_keyword_count cascade;
drop view if exists distinct_actors cascade;
drop view if exists distinct_people cascade;
drop view if exists movie_different_people cascade;
drop view if exists all_positions cascade;
drop view if exists movie_positions cascade;
drop view if exists movie_decade cascade;
drop view if exists decade_super_movie cascade;
drop view if exists super_movies cascade;
drop view if exists super_writers cascade;
drop view if exists regular_movies cascade;
drop view if exists regular_writers cascade;
drop view if exists exclusive_super_writers cascade;
drop view if exists actor_movies cascade;
drop view if exists actor_movies_no_dupl_year cascade;
drop view if exists actor_three_movies cascade;
drop view if exists max_id cascade;
drop view if exists old_movies cascade;
drop view if exists new_movies cascade;
drop vie
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_spell`;
CREATE TABLE `character_spell` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier',
  `spell` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT 'Spell Identifier',
  `active` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `disabled` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guid`,`spell`)
) ENGINE=InnoDB DEFAULT CHARSE
CREATE TABLE dmFlash(
flashWidth decimal(10,2) NULL DEFAULT 0 ,
catFlash nvarchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL DEFAULT {ts '2214-05-05 18:06:41'} ,
flashURL nvarchar(250) NULL DEFAULT NULL ,
status nvarchar(250) NULL DEFAULT NULL ,
flashMovie nvarchar(250) NULL DEFAULT NULL ,
displayMethod nvarchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
createdby nvarchar(250) NOT NULL DEFAULT '' ,
flashQuality nvarchar(250) NULL DEFAULT 'high' ,
flashLoop bit NOT NULL DEFAULT 0 ,
flashHeight decimal(10,2) NULL DEFAULT 0 ,
flashMenu bit NOT NULL DEFAULT 0 ,
bLibrary bit NULL DEFAULT 1 ,
ObjectID nvarchar(50) NOT NULL DEFAULT '' ,
ownedby nvarchar(250) NULL DEFAULT NULL ,
lastupdatedby nvarchar(250) NOT NULL DEFAULT '' ,
teaser nvarchar(MAX) NULL ,
label nvarchar(250) NULL DEFAULT NULL ,
flashPlay bit NOT NULL DEFAULT 1 ,
flashAlign nvarchar(250) NULL DEFAULT 'center' ,
flashVersion nvarchar(250) NULL DEFAULT '8,0,0,0' ,
flashParams nvarchar(250) NULL DEFAULT NUL
DELETE FROM nav_link_2_nav_link;
DELETE FROM sidebar_2_nav_link;
DELETE FROM sidebar;
DELETE FROM nav_link;
-- Home Sidebar --
INSERT INTO sidebar (id, path) VALUES (1, '/home');
-- Home Sidebar Links --
INSERT INTO nav_link (id, name, url, display_priority) VALUES (101, 'Wall', '/home/wall', 1);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (102, 'Projects', '/home/projects', 2);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (103, 'Achievements', '/home/achievements', 3);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (104, 'Scores', '/home/scores', 4);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (105, 'Discussions', '/home/discussions', 5);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (106, 'Calendar', '/home/calendar', 6);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (107, 'Messages', '/home/messages', 7);
INSERT INTO nav_link (id, name, url, display_priority, parent_id) VALUES (112, '

-- Home sidebar_2_nav_link relations --
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (1, 101);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (1, 102);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (1, 103);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (1, 104);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (1, 105);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (1, 106);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (1, 107);
-- Academics Sidebar --
INSERT INTO sidebar (id, path) VALUES (2, '/academic');
-- Academics Sidebar Links --
INSERT INTO nav_link (id, name, url, display_priority) VALUES (201, 'Courses', '/academic/courses', 1);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (202, 'Exams', '/academic/exams', 2);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (203, 'Staff', '/academic/staffs', 3);
INSERT INTO nav_link (id, 

INSERT INTO nav_link (id, name, url, display_priority) VALUES (205, 'Groups', '/academic/groups', 5);
-- Academics sidebar_2_nav_link relations --
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (2, 201);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (2, 202);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (2, 203);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (2, 204);
INSERT INTO sidebar_2_nav_link (sidebar_id, nav_link_id) VALUES (2, 205);
-- Social Sidebar --
INSERT INTO sidebar (id, path) VALUES (3, '/social');
-- Social Sidebar Links --
INSERT INTO nav_link (id, name, url, display_priority) VALUES (301, 'Chat', '/social/chat', 1);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (302, 'Discussions', '/social/discussions', 2);
INSERT INTO nav_link (id, name, url, display_priority) VALUES (303, 'Events', '/social/events', 3);
-- Social sidebar_2_nav_link relations --
INSERT INTO sidebar_2_nav_link (
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table book_model (
  id                        integer not null,
  name                      varchar(255),
  owner_id                  varchar(255),
  holder_id                 varchar(255),
  requester_id              varchar(255),
  constraint pk_book_model primary key (id))
create table user_model (
  email                     varchar(255) not null,
  password                  varchar(255),
  constraint pk_user_model primary key (email))
create sequence book_model_seq;
create sequence user_model_seq;
alter table book_model add constraint fk_book_model_owner_1 foreign key (owner_id) references user_model (email);
create index ix_book_model_owner_1 on book_model (owner_id);
alter table book_model add constraint fk_book_model_holder_2 foreign key (holder_id) references user_model (email);
create index ix_book_model_holder_2 on book_model (holder_id);
alter table b
SELECT  0 as `user`,
        `document_view`.`id` as `view_id`,
        `document_view`.`section_id`,
        `document_view`.`completed`,
        `ner_ann`.`start`,
        `ner_ann`.`type_idx`,
        `ner_ann`.`text`
FROM `document_view`
INNER JOIN `document_annotation`
  ON `document_annotation`.`view_id` = `document_view`.`id` AND `document_annotation`.`content_type_id` = {ct_id}
LEFT JOIN `entity_recognition_entityrecognitionannotation` as `ner_ann`
  ON `ner_ann`.`id` = `document_annotation`.`object_id`
WHERE `document_view`.`id` IN ({user_view_ids})
UNION ALL
SELECT  1 as `user`,
        `document_view`.`id` as `view_id`,
        `document_view`.`section_id`,
        `document_view`.`completed`,
        `ner_ann`.`start`,
        `ner_ann`.`type_idx`,
        `ner_ann`.`text`
FROM `document_view`
INNER JOIN `document_annotation`
  ON `document_annotation`.`view_id` = `document_view`.`id` AND `document_annotation`.`content_type_id` = {ct_id}
LEFT JOIN `entity_recognition_entity
--
-- PostgreSQL database dump
--
SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET search_path = public, pg_catalog;
--
-- Name: viewReadings; Type: VIEW; Schema: public; Owner: daniel
--
CREATE VIEW "viewReadings" AS
    SELECT "Interval".end_time, "MeterData".meter_name, "Reading".channel, "Reading".raw_value, "Reading".value, "Reading".uom, "IntervalReadData".start_time, "IntervalReadData".end_time AS ird_end_time FROM ((("MeterData" JOIN "IntervalReadData" ON (("MeterData".meter_data_id = "IntervalReadData".meter_data_id))) JOIN "Interval" ON (("IntervalReadData".interval_read_data_id = "Interval".interval_read_data_id))) JOIN "Reading" ON (("Interval".interval_id = "Reading".interval_id))) ORDER BY "Interval".end_time, "MeterData".meter_name, "Reading".channel;
ALTER TABLE public."viewReadings" OWNER TO daniel;
--
-- Name: viewReadings; Type: ACL; Schema: public;
USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_shipping_address')
BEGIN
DROP PROCEDURE sp_update_shipping_address
Print '' print  ' *** dropping procedure sp_update_shipping_address'
End
GO
Print '' print  ' *** creating procedure sp_update_shipping_address'
GO
Create PROCEDURE sp_update_shipping_address
@old_ADDRESS_ID[INT],
@old_USER_ID[INT],
@new_USER_ID[INT],
@old_ADDRESS1[NVARCHAR](100),
@new_ADDRESS1[NVARCHAR](100),
@old_ADDRESS2[NVARCHAR](100)=null,
@new_ADDRESS2[NVARCHAR](100),
@old_CITY[NVARCHAR](50),
@new_CITY[NVARCHAR](50),
@old_STATE[NCHAR](2),
@new_STATE[NCHAR](2),
@old_ZIP[NVARCHAR](10),
@new_ZIP[NVARCHAR](10),
@old_ADDRESS_NAME[NVARCHAR](50),
@new_ADDRESS_NAME[NVARCHAR](50)
AS
BEGIN
UPDATE shipping_address
SET USER_ID = @new_USER_ID, ADDRESS1 = @new_ADDRESS1, ADDRESS2 = @new_ADDRESS2, CITY = @new_CITY, STATE = @new_STATE, ZIP = @new_ZIP, ADDRESS_NAME = @new_ADDRESS_NAME
WHERE (ADDRESS_ID = @old_ADDRESS_ID)
AND (USER_I
DROP TRIGGER IF EXISTS `c_rti_meas_interv_ua` //
CREATE definer=`dbadmin`@`localhost` trigger `c_rti_meas_interv_ua` AFTER UPDATE ON `c_rti_meas_interv`
  FOR EACH ROW
BEGIN
    INSERT INTO c_rti_meas_interv_au 
        
    SET     measure_id = OLD.measure_id
            ,intervention_id = OLD.intervention_id
            ,moniker = IF(NEW.moniker != OLD.moniker, OLD.moniker, NULL)
            ,sort_order = IF(NEW.sort_order != OLD.sort_order, OLD.sort_order, NULL)
            ,action_code = 'u'
            ,audit_user_id = NEW.last_user_id
            ,client_id = IF(NEW.client_id != OLD.client_id, OLD.client_id, NULL)
            ,create_user_id = NEW.create_user_id
            ,last_user_id = IF(NEW.last_user_id != OLD.last_user_id, OLD.last_user_id, NULL)
            ,create_timestamp = IF(NEW.create_timestamp != OLD.create_timestamp, OLD.create_timestamp, NULL)
            ,last_edit_timestamp = IF(NEW.last_edit_timestamp != OLD.last_edit_timestamp, OLD.last_edit_timestamp, NULL)

-- Backup old tables
CREATE TABLE catalogue.old_categories AS SELECT * FROM catalogue.categories;
CREATE TABLE catalogue.old_categoriesdes AS SELECT * FROM catalogue.categoriesdes;
CREATE TABLE catalogue.old_groups AS SELECT * FROM catalogue.groups;
CREATE TABLE catalogue.old_groupsdes AS SELECT * FROM catalogue.groupsdes;
CREATE TABLE catalogue.old_isolanguages AS SELECT * FROM catalogue.isolanguages;
CREATE TABLE catalogue.old_isolanguagesdes AS SELECT * FROM catalogue.isolanguagesdes;
CREATE TABLE catalogue.old_languages AS SELECT * FROM catalogue.languages;
CREATE TABLE catalogue.old_metadata AS SELECT * FROM catalogue.metadata;
CREATE TABLE catalogue.old_metadatacateg AS SELECT * FROM catalogue.metadatacateg;
CREATE TABLE catalogue.old_metadatarating AS SELECT * FROM catalogue.metadatarating;
CREATE TABLE catalogue.old_operationallowed AS SELECT * FROM catalogue.operationallowed;
CREATE TABLE catalogue.old_operations AS SELECT * FROM catalogue.operations;
CREATE TABLE catalogue.ol

CREATE TABLE catalogue.old_regions AS SELECT * FROM catalogue.regions;
CREATE TABLE catalogue.old_regionsdes AS SELECT * FROM catalogue.regionsdes;
CREATE TABLE catalogue.old_relations AS SELECT * FROM catalogue.relations;
CREATE TABLE catalogue.old_settings AS SELECT * FROM catalogue.settings;
CREATE TABLE catalogue.old_sources AS SELECT * FROM catalogue.sources;
CREATE TABLE catalogue.old_usergroups AS SELECT * FROM catalogue.usergroups;
CREATE TABLE catalogue.old_users AS SELECT * FROM catalogue.users;
-- Drop old tables
DROP TABLE catalogue.categoriesdes;
DROP TABLE catalogue.metadatacateg;
DROP TABLE catalogue.categories;
DROP TABLE catalogue.groupsdes;
DROP TABLE catalogue.operationallowed;
DROP TABLE catalogue.usergroups;
DROP TABLE catalogue.operationsdes;
DROP TABLE catalogue.operations;
DROP TABLE catalogue.isolanguagesdes;
DROP TABLE catalogue.metadatarating;
DROP TABLE catalogue.isolanguages;
DROP TABLE catalogue.relations;
DROP TABLE catalogue.regionsdes;
DROP TABLE catal
--------------------------------------------------------
--  파일이 생성됨 - 금요일-9월-02-2016   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table MEMBER
--------------------------------------------------------
  CREATE TABLE "FIREWORK"."MEMBER" 
   (	"M_ID" VARCHAR2(10 BYTE), 
	"M_PW" VARCHAR2(10 BYTE), 
	"M_LEVEL" VARCHAR2(10 BYTE), 
	"M_NAME" VARCHAR2(20 BYTE), 
	"M_EMAIL" VARCHAR2(80 BYTE), 
	"M_DATE" DATE, 
	"M_ADDR" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table GOODS
--------------------------------------------------------
  CREATE TABLE "FIREWORK"."GOODS" 


	"G_NAME" VARCHAR2(20 BYTE), 
	"G_ID" VARCHAR2(20 BYTE), 
	"G_CATE" VARCHAR2(20 BYTE), 
	"G_SANGSE" VARCHAR2(80 BYTE), 
	"G_PRICE" NUMBER, 
	"G_DATE" DATE, 
	"G_AGREE" CHAR(1 BYTE) DEFAULT 'N'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ORDERS
--------------------------------------------------------
  CREATE TABLE "FIREWORK"."ORDERS" 
   (	"O_NO" NUMBER, 
	"M_ID" VARCHAR2(10 BYTE), 
	"G_ID" VARCHAR2(10 BYTE), 
	"O_DATE" DATE, 
	"G_CODE" VARCHAR2(20 BYTE), 
	"O_COUNT" NUMBER, 
	"O_TOTAL" NUMBER, 
	"O_STATE" VARCHAR2(80 BYTE) DEFAULT '입금예정'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITI

  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into FIREWORK.MEMBER
SET DEFINE OFF;
Insert into FIREWORK.MEMBER (M_ID,M_PW,M_LEVEL,M_NAME,M_EMAIL,M_DATE,M_ADDR) values ('id001','pw001','관리자','전채은','123@naver.com',to_date('16/08/31','RR/MM/DD'),'전주시');
Insert into FIREWORK.MEMBER (M_ID,M_PW,M_LEVEL,M_NAME,M_EMAIL,M_DATE,M_ADDR) values ('id002','pw002','판매자','김용','cynicalkim@gmai.com',to_date('16/09/01','RR/MM/DD'),'전주시');
Insert into FIREWORK.MEMBER (M_ID,M_PW,M_LEVEL,M_NAME,M_EMAIL,M_DATE,M_ADDR) values ('id003','pw003','판매자','전채은','asd@naver.com',to_date('16/09/01','RR/MM/DD'),'전주시');
Insert into FIREWORK.MEMBER (M_ID,M_PW,M_LEVEL,M_NAME,M_EMAIL,M_DATE,M_ADDR) values ('id004','pw004','구매자','전채은','asd@naver.com',to_date('16/09/01','RR/MM/DD'),'123');
REM INSERTING into FIREWORK.GOODS
SET DEFINE OFF;
REM INSERTING into FIREWORK.ORDERS
SET DEFINE OFF;
----------------------------------
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ProductList]
AS
SELECT        ProductId, ProductName, Price
FROM            dbo.Product
GO
EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 
9-15-2013 Verified Uploader:wmza Time:19:1:48
('ru','nav',',?Comment Moderation','Модерация комментариев','wmza','1.1.2 Dragonprime Edition '),
('ru','nav','/?New Day','/?Новый день','wmza','1.1.2 Dragonprime Edition '),
('ru','nav','??F.A.Q. (Frequently Asked Questions)','??Помощь','wmza','1.1.2 Dragonprime Edition'),
('ru','nav','Continue','Продолжить','wmza','1.1.2 Dragonprime Edition '),
('ru','nav','Daily news','Новости','wmza','1.1.2 Dragonprime Edition '),
('ru','nav','G?Return to the Grotto','Вернуться в Грот','wmza','1.1.2 Dragonprime Edition '),
('ru','nav','G?The Graveyard','Кладбище','wmza','1.1.2 Dragonprime Edition '),
('ru','nav','Log out','Покинуть мир теней','wmza','1.1.2 Dragonprime Edition '),
('ru','nav','M?Return to the Mundane','Вернуться в игру','wmza','1.1.2 Dragonprime Edition '),
('ru','nav','Navigation','Навигация','wmza','1.1.2 Dragonprime Edition '),
('ru','nav','Other','Другое','','1.1.2 Dragonprime Edition'),
('ru','nav','Return','Вернуться','wmza','1.1.2
USE muziekdatabase;
GO
--<div class='control-group'>
--	<label for='speelduur' class='control-label'><span class='tipleft' title='integer'>speelduur</span></label>
--	<div class='controls'>
--		<div class="input-append">
--			<input class='integer' type='text' id='input_speelduur' name='speelduur' value='' style="width:174px;" class='hasnull'/>
--			<span class="add-on"><input class='null tiptop' title='NULL' type="checkbox" name="null_speelduur" checked='true'></span>
--		</div>
--	</div>
--</div>
--<div class='control-group'>
--	<label for='jaartal' class='control-label'><span class='tipleft' title='integer'>jaartal</span></label>
--	<div class='controls'>
--		<input class='integer' type='text' id='input_jaartal' name='jaartal' value=''/>
--	</div>
--</div>
DECLARE @HTML NVARCHAR(MAX) = '';
SELECT @HTML +=
'<div class=''control-group''>
<label for=''' + c.Column_Name + ''' class=''control-label''><span class=''tipleft'' title=''' + c.Data_Type + '''>' + c.Column_Name + '</span></labe
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `backup_migrate_profiles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `backup_migrate_profiles` (
  `profile_id` varchar(32) NOT NULL DEFAULT '0',
  `name` varchar(255) NOT NULL,
  `filename` varchar(50) NOT NULL,
  `append_timestamp` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `timestamp_format` varchar(1
-- MySQL dump 10.13  Distrib 5.6.24, for osx10.8 (x86_64)
--
-- Host: 127.0.0.1    Database: contatos
-- ------------------------------------------------------
-- Server version	5.6.27
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `agenda`
--
DROP TABLE IF EXISTS `agenda`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `agenda` (
  `id` int(11)
<dtml-let content_translation_dict_list="CatalogTool_getContentTranslationDictList(Base_getContentTranslationTargetObject)">
<dtml-let document_list="[]" delete_list="[]">
  <dtml-in prefix="loop" expr="_.range(_.len(content_translation_dict_list))">
    <dtml-if "content_translation_dict_list[loop_item]['translated_text']">
      <dtml-call expr="document_list.append(loop_item)">
    <dtml-else>
      <dtml-call expr="delete_list.append(loop_item)">
    </dtml-if>
  </dtml-in>
  <dtml-if expr="_.len(document_list) > 0">
REPLACE INTO content_translation
VALUES
    <dtml-in prefix="loop" expr="document_list">
(<dtml-sqlvar "content_translation_dict_list[loop_item]['uid']" type=int>,
 <dtml-sqlvar "content_translation_dict_list[loop_item]['property_name']" type=string>,
 <dtml-sqlvar "content_translation_dict_list[loop_item]['content_language']" type=string>,
 <dtml-sqlvar "content_translation_dict_list[loop_item]['translated_text']" type=string>
<dtml-unless sequence-end>,</dtml-unless>
alter table product_area add group_idx nvarchar(100);
/********************************************************
update product_area set group_idx='2,15' where product_area='Garasje villa';
update product_area set group_idx='6' where product_area='Byggelement';
update product_area set group_idx='4' where product_area='Takstol';
update product_area set group_idx='5' where product_area='Garasje rekke';
/********************************************************
create table accident(
  accident_id int identity(1,1) primary key,
  registered_by nvarchar(100) not null,
  registration_date datetime not null,
  job_function_id int references job_function(job_function_id) not null,
  personal_injury int,
  accident_date datetime not null,
  accident_time nvarchar(50),
  accident_description nvarchar(4000) not null,
  accident_cause nvarchar(4000) not null,
  reported_leader int,
  reported_police int,
  reported_social_security int
);
/********************************************************
cre
--------------------------------------------------------
--  DDL for Table FICHIER
--------------------------------------------------------
  CREATE TABLE "BROCARCL"."FICHIER" 
   (	"IDFICHIER" NUMBER(*,0), 
	"IDCLIENT" NUMBER(*,0), 
	"CHEMIN" CLOB, 
	"PARTAGE" NUMBER(*,0), 
	"PRISEDEVUE" CLOB, 
	"RESOLUTION" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CHEMIN") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("PRISEDEVUE") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE ST
CREATE TABLE func_new_issue_status(
    change_id INTEGER NOT NULL,
    id INTEGER NOT NULL DEFAULT (nextval('topics')),
    project_id INTEGER,
    status VARCHAR(40) NOT NULL,
    rank INTEGER NOT NULL,
    def INTEGER
);
CREATE TRIGGER
    func_new_issue_status_bi_1
BEFORE INSERT ON
    func_new_issue_status
FOR EACH ROW
BEGIN
    SELECT debug(
        'TRIGGER func_new_issue_status_bi_1',
        NEW.id,
        NEW.project_id,
        NEW.status,
        NEW.rank,
        NEW.def
    );
    INSERT INTO
        issue_status(
            id,
            project_id,
            status,
            rank,
            def
        )
    VALUES(
        NEW.id,
        NEW.project_id,
        NEW.status,
        NEW.rank,
        NEW.def
    );
    INSERT INTO
        issue_status_deltas(
            change_id,
            issue_status_id,
            new,
            status,
            rank,
            def
        )
    VALUES(
        NEW.change_id,
        NEW.id,
        1,
        
-- ViewName : DocumentNotSelected-Contact-Right
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'EB';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'DocumentNotSelected-Contact-Right'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq_c

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
USE `prestashop`;
DELIMITER $$
CREATE DEFINER=`root`@`localhost` TRIGGER `llx_societe_AUPD` AFTER UPDATE ON `llx_societe` FOR 
EACH ROW
BEGIN
	DECLARE accion VARCHAR(128);
	DECLARE sistema VARCHAR(128);
	DECLARE id_last INT;
	SET accion = (SELECT `action` FROM `tms_log_clientes` ORDER BY `id_log` DESC LIMIT 0, 1);
	SET sistema = (SELECT `system` FROM `tms_log_clientes` ORDER BY `id_log` DESC LIMIT 0, 1);
	SET id_last = (SELECT `id_row` FROM `tms_log_clientes` ORDER BY `id_log` DESC LIMIT 0, 1);
		IF (accion != 'update' OR sistema != 'prestashop' OR NEW.id_sin != id_last) THEN
			INSERT INTO `tms_log_clientes`(
				`id_row`,
				`id_sin`,
				`nombre`,
				`email`,
				`website`,
				`note`,
				`cuil`,
				`address`,
				`postcode`,
				`city`,
				`phone`,
				`active`,
				`date_upd`,
				`system`,
				`action`,
				`id_estado`
			)VALUES(
				NEW.rowid,
				NEW.id_sin,
				NEW.nom,
				NEW.email,
				NEW.url,
				NEW.note_private,
				NEW.siren,
				NEW.address,
				NEW.zip,
				NEW
CREATE TRIGGER insertTrigger AFTER INSERT ON personal_data_info 
  FOR EACH ROW 
  BEGIN
  
  	DECLARE my_id INT ;
  	SET my_id = (SELECT AUTO_INCREMENT FROM information_schema.TABLES WHERE TABLE_SCHEMA='cv_bangalore_qa' AND TABLE_NAME='user_info') ;
    INSERT INTO user_info  SET created_by = NEW.created_by , created_date = NEW.created_date
    , updated_by = NEW.updated_by , updated_date = NEW.updated_date , date_of_birth = NEW.date_of_birth
    , date_of_joining = NEW.date_of_joining , designation = NEW.designation , father_name = NEW.father_name
    , first_name = NEW.first_name , last_name = NEW.last_name , login_id = NEW.login_id
    , middle_name = NEW.middle_name , oracle_id = NEW.oracle_id , person_type = NEW.person_type 
    , supervisor_id=NEW.supervisor_id,email_address=NEW.email_address,user_status=NEW.user_status;
 END;
CREATE TRIGGER updateTrigger AFTER UPDATE ON personal_data_info 
  FOR EACH ROW 
  BEGIN
  
  	DECLARE my_id INT ;
  	SET my_id = (SELECT AUTO_INCREMENT F
-- MySQL dump 10.14  Distrib 5.5.44-MariaDB, for Linux (x86_64)
--
-- Host: localhost    Database: nav
-- ------------------------------------------------------
-- Server version	5.5.44-MariaDB
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Current Database: `nav`
--
ALTER DATABASE `nav` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `nav`;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_
set timing on
set echo on
set linesize 300
column table_name format a30
column segment_name format a30
column plan_table_output format a150
column partition_name format a30
set pagesize 1000
set trims on
spool 06_ins
--
-- This will ensure that we are not using AutoDOP
-- Auto DOP is not a "problem", but using manual
-- DOP will mean that the script will work
-- as intended in this test case.
--
alter session set parallel_degree_policy = 'MANUAL';
--
-- Enable parallel DML so that the write into the
-- staging table will be in parallel for maximum
-- performance.
--
alter session enable parallel dml;
--
-- Read the data files via the external table
-- and insert the rows into the staging table.
--
INSERT /*+ APPEND PARALLEL(itab,2) */ INTO sales_stage itab
SELECT /*+ PARALLEL(tab,2) */ *
FROM   sales_ext tab
SELECT *
FROM   table(dbms_xplan.display_cursor);
--
-- Expect to see an error here!
-- This is because you will need to 
-- commit the data before it is read.
--
SELECT count(*)
F
IF OBJECT_ID('dbo.wsp_getLatLongByCityNew') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_getLatLongByCityNew
    IF OBJECT_ID('dbo.wsp_getLatLongByCityNew') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_getLatLongByCityNew >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_getLatLongByCityNew >>>'
END
go 
/***********************************************************************
**
** CREATION:
**   Author: Generator 
**   Date: @TIMESTAMP@ 
**   Description: getLatLongByCity 
**
*************************************************************************/
CREATE PROCEDURE  wsp_getLatLongByCityNew
    @cityId int
AS
BEGIN
   BEGIN TRAN TRAN_getLatLongByCityNew
   
   DECLARE @lat int, @lon int   
   SELECT latitudeRad as latitude, longitudeRad as longitude
   FROM City_new
   WHERE cityId = @cityId 
  -- IF @lat IS NOT NULL
  -- BEGIN
   --SELECT @lat=@lat-2 
   --SELECT @lat as latitude, @lon as longitude 
  -- END
    
   IF @@error = 0
   BEGIN
      COMMIT TRA
/* Formatted on 8/23/2012 1:51:11 PM (QP5 v5.215.12089.38647) */
CREATE TABLE PROTECT.COURSE_LOG
AS
   SELECT *
     FROM PROTECT.COURSE
    WHERE 1 = 2;
ALTER TABLE PROTECT.COURSE_LOG ADD (LOGTIME TIMESTAMP(6));
CREATE OR REPLACE TRIGGER PROTECT.COURSE_UPDATE
   AFTER UPDATE OF ISDELETED
   ON PROTECT.COURSE
   REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
BEGIN
   INSERT INTO PROTECT.COURSE_LOG
      (SELECT :NEW.COURSEID,
              :NEW.FILENAMEPATTERNFILTER,
              :NEW.FILENAMEPATTERNEXCLUDEFILTER,
              :NEW.MINFILESIZEFILTER,
              :NEW.MAXFILESIZEFILTER,
              :NEW.MINFILEMODIFICATIONDATEFILTER,
              :NEW.MAXFILEMODIFICATIONDATEFILTER,
              :NEW.MINFILELASTACCESSEDDATEFILTER,
              :NEW.MAXFILELASTACCESSEDDATEFILTER,
              :NEW.DEFAULTUSERNAME,
              :NEW.DEFAULTPASSWORDID,
              :NEW.ISDELETED,
              :NEW.ISDIFFERENTIAL,
              :NEW.MARKNEXTSCANFULL,
              :N
3.0;
INSERT IGNORE INTO  `%DB_PREFIX%role_nav` (`id` ,`name` ,`status` ,`sort`)VALUES ('1',  '首页',  '1',  '1');
INSERT IGNORE INTO  `%DB_PREFIX%role_node` (`id` ,`action` ,`action_name` ,`status` ,`module` ,`module_name` ,`nav_id` ,`sort` ,`auth_type` ,`is_show`)VALUES ('234',  'index',  '首页',  '1',  'Top',  '首页',  '1',  '1',  '0',  '1');
INSERT IGNORE INTO  `%DB_PREFIX%role_node` (`id` ,`action` ,`action_name` ,`status` ,`module` ,`module_name` ,`nav_id` ,`sort` ,`auth_type` ,`is_show`)VALUES ('235',  '',  '',  '1',  'Top',  '首页',  '1',  '1',  '1',  '1');
INSERT IGNORE INTO `%DB_PREFIX%role_access` (`role_id` ,`node_id`) VALUES (1,235);
INSERT IGNORE INTO `%DB_PREFIX%sys_conf` VALUES ('SITE_VIDEO', '', '1', '5', '4', '', '1', '1', '0');
INSERT IGNORE INTO `%DB_PREFIX%sharegoods_module` (`id`, `class`, `domain`, `status`, `name`, `url`, `icon`, `logo`, `content`, `api_data`, `sort`) VALUES
(3, 'taobao', 'http://item.taobao.com,http://item.tmall.com', 1, '淘宝', 'http://www.taobao.com', '

(4, 'paipai', 'http://auction1.paipai.com', 1, '拍拍', 'http://www.paipai.com', './public/upload/business/paipai.gif', '', '拍拍应用用于获取拍拍商品、店铺信息，可到 http://pop.paipai.com/ 点击 申请成为合作伙伴 ', 'a:4:{s:3:"uin";s:0:"";s:4:"spid";s:0:"";s:5:"token";s:0:"";s:6:"seckey";s:0:"";}', 100);
INSERT IGNORE INTO `%DB_PREFIX%role_node` (`id`, `action`, `action_name`, `status`, `module`, `module_name`, `nav_id`, `sort`, `auth_type`, `is_show`) VALUES
(4, '', '', 1, 'SharegoodsModule', '商品接口管理', 7, 9, 1, 0),
(5, 'index', '接口列表', 1, 'SharegoodsModule', '商品接口管理', 7, 10, 0, 1);
UPDATE `%DB_PREFIX%role_node` SET status=1,is_show=1 WHERE id=4 or id=5;
ALTER TABLE  `%DB_PREFIX%share` ADD  `check_status` TINYINT( 1 ) NOT NULL DEFAULT  '0';
ALTER TABLE  `%DB_PREFIX%share` ADD  `is_video` TINYINT( 1 ) NOT NULL DEFAULT  '0';
ALTER TABLE  `%DB_PREFIX%share` ADD INDEX (  `is_video` ) ;
INSERT IGNORE INTO `%DB_PREFIX%role_node` (`id`, `action`, `action_name`, `status`, `module`, `module_name`, `nav_id`, `sort`, `auth_type`,
-- POST INSTALLATION INSERTS
-- INSERT DSTs
insert into _db_pref_DST values (1, 'Africa / Egypt', 39312000, 52531200, 5, 5, 5, 4, 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=-15', 'FREQ=1;INTERVAL=1;BYMONTH=9;BYDAY=-14');
insert into _db_pref_DST values (2, 'Africa / Namibia', 52531200, 39312000, 1, 0, 1, 0, 'FREQ=1;INTERVAL=1;BYMONTH=9;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=10');
insert into _db_pref_DST values (3, 'Asia / USSR (former) - most states', 36633600, 55123200, 5, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (4, 'Asia / Iraq', 39312000, 55123200, 0, 0, 0, 0, 'FREQ=1;INTERVAL=1;BYMONTH=4;BYMONTHDAY=1', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYMONTHDAY=1');
insert into _db_pref_DST values (5, 'Asia / Lebanon, Kirgizstan', 36633600, 55123200, 5, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (6, 'Asia / Syria', 39312000, 55123200, 0

insert into _db_pref_DST values (7, 'Australasia / Australia, New South Wales', 55123200, 36633600, 5, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10', 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10');
insert into _db_pref_DST values (8, 'Australasia / Australia - Tasmania', 55123200, 36633600, 1, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10');
insert into _db_pref_DST values (9, 'Australasia / New Zealand, Chatham', 55123200, 36633600, 1, 0, 3, 0, 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=30');
insert into _db_pref_DST values (10, 'Australasia / Tonga', 57801600, 31536000, 1, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=11;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=1;BYDAY=-10');
insert into _db_pref_DST values (11, 'Europe / European Union, UK, Greenland', 36633600, 55123200, 5, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (12, 'Europe / Russia', 

insert into _db_pref_DST values (13, 'North America / United States, Canada, Mexico', 39312000, 55123200, 1, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (14, 'North America / Cuba', 39312000, 55123200, 0, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=4;BYMONTHDAY=1', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (15, 'South America / Chile', 55123200, 36633600, 2, 6, 2, 6, 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=26', 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=26');
insert into _db_pref_DST values (16, 'South America / Paraguay', 52531200, 39312000, 1, 0, 1, 0, 'FREQ=1;INTERVAL=1;BYMONTH=9;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=10');
insert into _db_pref_DST values (17, 'South America / Falklands', 53136000, 39744000, 1, 0, 1, 0, 'FREQ=1;INTERVAL=1;BYMONTH=9;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=10');
-- DEFAULT CALENDAR 
insert into _db_pref_Calendars (title,type,options,owner,descrip
commands run inside PSQL shell:
-- list databases
\l
\list
-- list db roles
\du
-- connect to db_name
\connect db_name
-- close connections on db_name
SELECT pg_terminate_backend(pg_stat_activity.pid)
FROM pg_stat_activity
WHERE pg_stat_activity.datname = 'db_name'
  AND pid <> pg_backend_pid();
-- droping db_name
DROP DATABASE db_name;
-- create db_name with db_role
CREATE DATABASE db_name with owner db_role ENCODING 'UTF-8';
-- create db_role
CREATE ROLE db_role LOGIN PASSWORD 'some_password';
-- create db_name_new based on db_name with user_role
CREATE DATABASE db_name_new WITH TEMPLATE db_name OWNER user_role;
-- add PostGIT extensions:
-- Enable PostGIS (includes raster)
CREATE EXTENSION postgis;
-- Enable Topology
CREATE EXTENSION postgis_topology;
-- fuzzy matching needed for Tiger
CREATE EXTENSION fuzzystrmatch;
-- Enable US Tiger Geocoder
CREATE EXTENSION postgis_tiger_geocoder;
-- enable HSTORE
create extension hstore;
commands run outside PSQL shell
-- give the path to curre
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW dbo.View_1
AS
SELECT        MyID, MyContent
FROM            dbo.TEST_Table1
GO
EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration 

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 
INSERT INTO jc_sys_nav(id,nav_url,parent_id,nav_name_zh,display_order)VALUES 
('n_52452b48e02229.27823582','#','0','会员管理',4);
('n_52452b736f46d0.34950299','member/index/index','n_52452b48e02229.27823582','会员列表',0);
('n_52454721b37376.10758444','','0','酒店管理',1);
('n_52454736a02873.91123206','system/department/index','n_52454721b37376.10758444','部门设置',0);
('n_5245474dc248a0.38371134','','0','cms管理',2);
('n_524547678e2341.87576178','cms/menu/list','n_5245474dc248a0.38371134','栏目管理',0);
('n_52454aee713fe0.18353447','userext/index/index','n_52452b48e02229.27823582','会员扩展字段管理',0);
('n_524782acb71b08.67948756','admin/staff/index','n_52452b48e02229.27823582','管理员管理',0);
('n_5247d9a0033bf7.15786904','cms/news/list','n_5245474dc248a0.38371134','文章管理',0);
('n_5247c635af79e6.83710649','#','0','微信管理',3);
('n_5247c663632ea9.21198968','weixin/module/index','n_5247c635af79e6.83710649','模块管理',0);
('n_5247dc3790f566.71279369','','0','系统管理',6);
('n_5247dc49a7d8c6.16619434','admin/resource/index','n_5247d
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCHScheme_GenerateCodeInsert]    Script Date: 02/13/2012 17:17:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCHScheme_GenerateCodeInsert]
	  @param_Code			NVARCHAR(16)
	 ,@param_SwitchID		INT 
	 ,@param_ClientID		NVARCHAR(20)
	 ,@param_SchemeID		NVARCHAR(50)
AS
BEGIN
	DECLARE @return_Valid int
SET NOCOUNT ON;
IF NOT EXISTS (SELECT [Code]  FROM [NavIntegrationDB].[dbo].[SwitchGenerateCode] WHERE [Code] = @param_Code)
 BEGIN
	INSERT INTO [NavIntegrationDB].[dbo].[SwitchGenerateCode]
		([Code])
	 VALUES
		(@param_Code);
		
	 IF ((SELECT COUNT(*) FROM  [NavIntegrationDB].[dbo].[SwitchSchemeClientSecurityCode] WHERE SwitchID = @param_SwitchID and ClientID = @param_ClientID and SchemeID = @param_SchemeID) > 0)
		BEGIN
			DELETE FROM [NavIntegrationDB].[dbo].[SwitchGenerateCode] WHERE Code = 
				(SELECT Code FROM [NavIntegrationDB].[dbo].[SwitchSchemeClientSecurityCode] WHERE Switc

			UPDATE [NavIntegrationDB].[dbo].[SwitchSchemeClientSecurityCode]
				SET Code = @param_Code, IsConsumed = 0 
			WHERE SwitchID = @param_SwitchID and ClientID = @param_ClientID and SchemeID = @param_SchemeID
		END
	  ELSE 
		BEGIN
			INSERT INTO [NavIntegrationDB].[dbo].[SwitchSchemeClientSecurityCode]
				(Code, SwitchID, ClientID, SchemeID)
			VALUES
				(@param_Code, @param_SwitchID, @param_ClientID, @param_SchemeID)
		END
		SET @return_Valid = 1
	END
ELSE IF EXISTS (SELECT [Code] FROM [NavIntegrationDB].[dbo].[SwitchGenerateCode] WHERE DATEDIFF(dd,DateCreated,GETDATE())  > 30 AND [Code] = @param_Code)
	BEGIN
		UPDATE [NavIntegrationDB].[dbo].[SwitchGenerateCode]
			SET DateCreated = GETDATE()
			WHERE Code = @param_Code
		IF ((SELECT COUNT(*) FROM  [NavIntegrationDB].[dbo].[SwitchSchemeClientSecurityCode] WHERE SwitchID = @param_SwitchID and ClientID = @param_ClientID and SchemeID = @param_SchemeID) > 0)
		BEGIN
			DELETE FROM [NavIntegrationDB].[dbo].[SwitchSchemeClientSecurity
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `FLASH` (
  `flash_id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique ID of external flash unit',
  `manufacturer_id` int(11) DEFAULT NULL COMMENT 'Manufacturer ID of the flash\n',
  `model` varchar(45) DEFAULT NULL COMMENT 'Model name/number of the flash\n',
  `guide_number` int(11) DEFAULT NULL COMMENT 'Guide number of the flash',
  `gn_info` varchar(45) DEFAULT NULL COMMENT 'Extra freeform info about how the guide number was measured',
  `battery_powered` tinyint(1) DEFAULT NULL COMMENT 'Whether this flash takes batteries',
  `pc_sync` tinyint(1) DEFAULT NULL COMMENT 'Whether the flash has a PC sync socket',
  `hot_shoe` tinyint(1) DEFAULT NULL COMMENT 'Whether the flash has a hot shoe connection',
  `light_stand` tinyint(1) DEFAULT NULL COMMENT 'Whether the flash can be used on a light stand',
  `battery_type` varchar(45) DEFAULT NULL COMMENT 'Type of battery ne

  `battery_qty` varchar(45) DEFAULT NULL COMMENT 'Quantity of batteries needed in this flash',
  `manual_control` tinyint(1) DEFAULT NULL COMMENT 'Whether this flash offers manual power control',
  `swivel_head` tinyint(1) DEFAULT NULL COMMENT 'Whether this flash has a horizontal swivel head',
  `tilt_head` tinyint(1) DEFAULT NULL COMMENT 'Whether this flash has a vertical tilt head',
  `zoom` tinyint(1) DEFAULT NULL COMMENT 'Whether this flash can zoom',
  `dslr_safe` tinyint(1) DEFAULT NULL COMMENT 'Whether this flash is safe to use with a digital camera',
  `ttl` tinyint(1) DEFAULT NULL COMMENT 'Whether this flash supports TTL metering',
  `ttl_compatibility` varchar(45) DEFAULT NULL COMMENT 'Compatibility of this flash''s TTL system',
  `trigger_voltage` decimal(4,1) DEFAULT NULL COMMENT 'Trigger voltage of the flash, in Volts',
  `own` tinyint(1) DEFAULT NULL COMMENT 'Whether we currently own this flash',
  PRIMARY KEY (`flash_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101
-- phpMyAdmin SQL Dump
-- version 4.2.7.1
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: Jan 05, 2015 at 12:06 PM
-- Server version: 5.6.20
-- PHP Version: 5.5.15
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `library`
--
-- --------------------------------------------------------
--
-- Table structure for table `shelf`
--
CREATE TABLE IF NOT EXISTS `shelf` (
  `number` int(11) NOT NULL,
  `system` text COLLATE utf8_unicode_ci NOT NULL,
  `min` text COLLATE utf8_unicode_ci,
  `max` text COLLATE utf8_unicode_ci,
  `floor` int(11) NOT NULL,
  `zone` varchar(11) COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
--
-- Dumping data for table `shelf`
--
INSERT INTO

(1, 'old', 'A', 'BZ', 2, 'down'),
(2, 'old', 'C', 'DS578', 2, 'down'),
(3, 'old', 'DS578.1', 'GE195.I', 2, 'down'),
(4, 'old', 'GE195.J', 'HC59.7.V', 2, 'down'),
(5, 'old', 'HC59.7.W', 'HD58.82.G', 2, 'down'),
(6, 'old', 'HD58.82.H', 'HD9940.A2R', 2, 'down'),
(7, 'old', 'HD9940.A2S', 'HF5415.335.N7', 2, 'down'),
(8, 'old', 'HF5415.335.N8', 'HG179.E', 2, 'down'),
(9, 'old', 'HG179.F', 'HM526.H', 2, 'down'),
(10, 'old', 'HM526.I', 'HV1449', 2, 'down'),
(11, 'old', 'HV1450', 'JZ1300', 2, 'down'),
(12, 'old', 'JZ1301', 'KF4150', 2, 'down'),
(13, 'old', 'KF4151', 'MZ', 2, 'down'),
(14, 'old', 'N', 'NA2542', 2, 'down'),
(15, 'old', 'NA2543', 'NE', 2, 'down'),
(16, 'old', 'NK1', 'PE1111', 2, 'down'),
(17, 'old', 'PE1112', 'PN9999', 2, 'down'),
(18, 'old', 'PQ', 'QA76.9.C64', 2, 'left_r'),
(19, 'old', 'QA76.9.C65', 'QC99', 2, 'left_r'),
(21, 'old', 'QK1', 'T396.52', 2, 'left_r'),
(23, 'old', 'TH851', 'TK7875.Z', 2, 'left_r'),
(24, 'old', 'TK7876', 'TT850', 2, 'left_r'),
(25, 'old', 'TT851', '

(1, 'old', 'A', 'BF637.ส6ฝ', 3, 'right'),
(2, 'old', 'BF637.ส6พ', 'BQ942', 3, 'right'),
(3, 'old', 'BQ943', 'BQ5540', 3, 'right'),
(4, 'old', 'BQ5541', 'D11', 3, 'right'),
(5, 'old', 'D12', 'DS527.7.ท', 3, 'right'),
(6, 'old', 'DS527.7.ธ', 'DS570.3.ก1ฟ', 3, 'right'),
(7, 'old', 'DS570.3.ก1ภ', 'DS570.6.น3', 3, 'right'),
(8, 'old', 'DS570.6.น4', 'DS586.ก', 3, 'right'),
(9, 'old', 'DS586.ข', 'DS778.ม7น', 3, 'right'),
(10, 'old', 'DS778.ม7บ', 'GN635.ท9ม', 3, 'right'),
(11, 'old', 'GN635ท9ย', 'HB96', 3, 'right'),
(12, 'old', 'HB97', 'HD30.25.ก', 3, 'right'),
(13, 'old', 'HD30.25.ข', 'HD69.ค6ส42533', 3, 'right'),
(14, 'old', 'HD69.ค6ส42534', 'HD9066.ท92ก', 3, 'right'),
(15, 'old', 'HD9066.ท92ข', 'HF1382.7.ห3ส942545', 3, 'right'),
(16, 'old', 'HF1382.7.ห3ส942546', 'HF5548.4.ม9ส6', 3, 'right'),
(17, 'old', 'HF5548.4.ม9ส7', 'HG228.ฮ', 3, 'right'),
(18, 'old', 'HG229.ก', 'HM262.ฮ', 3, 'right'),
(19, 'old', 'HM263', 'HQ766.5.ฉ', 3, 'right'),
(20, 'old', 'HQ766.5.ช', 'HV8073.ห', 3, 'right'),
(21,
  CREATE TABLE "SYSTEM"."LIKED_REVIEWS" 
   (	"REVIEW_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"USER_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "LIKED_REVIEW_PK" PRIMARY KEY ("REVIEW_ID", "USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE, 
	 CONSTRAINT "LIKEDREVIEW_TO_REVIEW" FOREIGN KEY ("REVIEW_ID")
	  REFERENCES "SYSTEM"."REVIEW" ("REVIEW_ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "LIKEDREVIEW_USEROF" FOREIGN KEY ("USER_ID")
	  REFERENCES "SYSTEM"."USEROF" ("USER_ID") ON DELETE CASCADE ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLES
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE VIEW dbo.vw_AlcheyElement
AS
SELECT     AlchemyName, ElementID
FROM         dbo.Alchemy
GO
EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConf

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 

         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Alchemy"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', 'SCHEMA', N'dbo', 'VIEW', N'vw_AlcheyElement', NULL, NULL
GO
DECLARE @xp int
SELECT @xp=1
EXEC sp_addextendedproperty N'MS_DiagramPaneCount', @xp, 'SCHEMA', N'dbo', 'VIEW', N'vw_AlcheyElement', N
/******************************************************************************
**		File: access.sql
**		Name: sales access
**		Desc: sales access
**
**		Auth: Lemuel E. Aceron
**		Date: 
*******************************************************************************
**		Change History
*******************************************************************************
**		Date:		Author:				Description:
**		--------		--------				-------------------------------------------
**    
*******************************************************************************/ 
/*****************************
**	Added on October 9, 2007 for Sales
**	Lemuel E. Aceron
*****************************/
DELETE FROM sysAccessRights WHERE TranTypeID in (104, 107, 108, 109, 110, 111);
DELETE FROM sysAccessGroupRights WHERE TranTypeID in (104, 107, 108, 109, 110, 111);
DELETE FROM sysAccessTypes WHERE TypeID in (104, 107, 108, 109, 110, 111);
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (104, 'Sales & Receivable 

INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (107, 'Sales Orders');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (108, 'Sales Journals');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (109, 'Sales Returns');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (110, 'SalesCreditMemos');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (111, 'Sales And Receivables Menu');
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 104, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 107, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 108, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 109, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 110, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 111,
﻿-- View: pyarchinit_tipologie_sepolture_view
-- DROP VIEW pyarchinit_tipologie_sepolture_view;
CREATE OR REPLACE VIEW pyarchinit_tipologie_sepolture_view AS 
 SELECT pyarchinit_quote_view.gid, pyarchinit_quote_view.sito_q, pyarchinit_quote_view.area_q, pyarchinit_quote_view.us_q, pyarchinit_quote_view.unita_misu_q, pyarchinit_quote_view.quota_q, pyarchinit_quote_view.id_us, pyarchinit_quote_view.sito, pyarchinit_quote_view.area, pyarchinit_quote_view.us, pyarchinit_quote_view.struttura, pyarchinit_quote_view.d_stratigrafica, pyarchinit_quote_view.d_interpretativa, pyarchinit_quote_view.descrizione, pyarchinit_quote_view.interpretazione, pyarchinit_quote_view.rapporti, pyarchinit_quote_view.periodo_iniziale, pyarchinit_quote_view.fase_iniziale, pyarchinit_quote_view.periodo_finale, pyarchinit_quote_view.fase_finale, pyarchinit_quote_view.anno_scavo, pyarchinit_tipologia_sepolture.id_sepoltura, pyarchinit_tipologia_sepolture.azimut, pyarchinit_tipologia_sepolture.tipologia, pyarchinit_t
/* Formatted on 17/06/2014 18:10:27 (QP5 v5.227.12220.39754) */
CREATE OR REPLACE FORCE VIEW MCRE_OWN.V_MCRES_APP_GEST_SCADENZARIO
   COD_TIPO_SCADENZA,
   DESC_TIPO_SCADENZA,
   VAL_GG_SUCC,
   VAL_GG_PREC,
   VAL_LIMITE_SCADENZA,
   VAL_GG_SUCC_NEW,
   VAL_GG_PREC_NEW,
   VAL_LIMITE_SCADENZA_NEW,
   FLG_VARIATO
AS
   SELECT                                    -- 20130218 AG  Created this view
         cod_tipo_scadenza,
          desc_tipo_scadenza,
          val_gg_succ,
          val_gg_prec,
          val_limite_scadenza,
          val_gg_succ_new,
          val_gg_prec_new,
          val_limite_scadenza_new,
          --
          CASE
             WHEN     val_gg_succ = val_gg_succ_new
                  AND val_gg_prec = val_gg_prec_new
                  AND val_limite_scadenza = val_limite_scadenza_new
             THEN
                0
             ELSE
                1
          END
             flg_variato
     FROM t_mcres_app_scadenzario;
GRANT SELECT ON MCRE_OWN.V_MCRES_
USE [EnterpriseDbTest]
-- Disable all constraints so we can load data
ALTER TABLE [dbo].[UserNotification] NOCHECK CONSTRAINT all
-- Delete all data from tables
DELETE FROM [dbo].[UserNotification]
-- Reseed the identity column starting values
DBCC CHECKIDENT('[dbo].[UserNotification]', RESEED, 0)
-- Insert the test data
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(1, DATEADD(day, -2,  GETDATE()), DATEADD(day, -1, GETDATE()))
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(1, DATEADD(day, -1,  GETDATE()), NULL)
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(2, DATEADD(day, -3,  GETDATE()), DATEADD(day, -2, GETDATE()))
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(2, DATEADD(day, -2,  GETDATE()), NULL)
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(3, DATEADD(day, -4,  GETDATE()), DATEADD(day, -3, GETDATE()))
INSERT INTO [dbo].

INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(4, DATEADD(day, -5,  GETDATE()), DATEADD(day, -4, GETDATE()))
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(4, DATEADD(day, -4,  GETDATE()), NULL)
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(5, DATEADD(day, -6,  GETDATE()), DATEADD(day, -5, GETDATE()))
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(5, DATEADD(day, -5,  GETDATE()), NULL)
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(6, DATEADD(day, -7,  GETDATE()), DATEADD(day, -6, GETDATE()))
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(6, DATEADD(day, -6,  GETDATE()), NULL)
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(7, DATEADD(day, -8,  GETDATE()), DATEADD(day, -7, GETDATE()))
INSERT INTO [dbo].[UserNotification]([UserID] ,[DatePosted] ,[DateRead])VALUES(7,
--
-- database_schema_3-4.sql
--
-- Version: $Revision$
--
-- Date:    $Date: 2012-05-29
--
-- The contents of this file are subject to the license and copyright
-- detailed in the LICENSE and NOTICE files at the root of the source
-- tree and available online at
--
-- http://www.dspace.org/license/
--
--
-- SQL commands to upgrade the database schema of a live DSpace 3.0 or 3.x
-- to the DSpace 4 database schema
--
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
--
-------------------------------------------
-- Add support for DOIs (table and seq.) --
-------------------------------------------
CREATE TABLE Doi
  doi_id           INTEGER PRIMARY KEY,
  doi              VARCHAR2(256) UNIQUE,
  resource_type_id INTEGER

  resource_id      INTEGER,
  status           INTEGER
);
CREATE SEQUENCE doi_seq;
-- index by resource id and resource type id
CREATE INDEX doi_resource_id_type_idx ON doi(resource_id, resource_type_id);
-------------------------------------------
-- Table of running web applications for 'dspace version' --
-------------------------------------------
CREATE TABLE Webapp
    webapp_id INTEGER NOT NULL PRIMARY KEY,
    AppName VARCHAR2(32),
    URL VARCHAR2(1000),
    Started TIMESTAMP,
    isUI NUMBER(1)
);
CREATE SEQUENCE webapp_seq;
-------------------------------------------------------
-- DS-824 RequestItem table
-------------------------------------------------------
CREATE TABLE requestitem
  requestitem_id INTEGER NOT NULL,
  token varchar(48),
  item_id INTEGER,
  bitstream_id INTEGER,
  allfiles NUMBER(1),
  request_email VARCHAR2(64),
  request_name VARCHAR2(64),
  request_date TIMESTAMP,
  accept_request NUMBER(1),
  decision_date TIMESTAMP,
  expires TIMESTAMP,
  CONSTRAIN
--------------------------------------------------------
--  ¤w«Ø¥ßÀÉ®× - ¬P´Á¤G-¤T¤ë-15-2016   
--------------------------------------------------------
@D:\tmp\function\ADD_TWDATE_MONTHS.sql
@D:\tmp\function\ADD_WORKDAYS.sql
@D:\tmp\function\BATCH_CHECK_STEP.sql
@D:\tmp\function\BATCH_FORMLIST.sql
@D:\tmp\function\BATCH_HAS_APPEND.sql
@D:\tmp\function\BATCH_MEMO.sql
@D:\tmp\function\BATCH_MEMO_MONTHLY.sql
@D:\tmp\function\BATCH_STATUS.sql
@D:\tmp\function\CASE_VALID_CONVERT.sql
@D:\tmp\function\CASE_VALID_PROCESS.sql
@D:\tmp\function\CHECK_APPL_PROCESSOR.sql
@D:\tmp\function\CHECK_MANAGER.sql
@D:\tmp\function\GET_AFTER_RECEIVES.sql
@D:\tmp\function\GET_LOGINUSER.sql
@D:\tmp\function\GET_MAX_NOTICE_NO.sql
@D:\tmp\function\GET_PRE_DATE.sql
@D:\tmp\function\GET_PROCESS_PRE_SAVE_MESSAGE.sql
@D:\tmp\function\GET_RELATION_APPL_NO.sql
@D:\tmp\function\GET_REVISE_OPTIONS.sql
@D:\tmp\function\HAS_APPEND.sql
@D:\tmp\function\IS_PROCESSOR_P.sql
@D:\tmp\function\SPOT_CHECK_QTY.sql
@D:\tmp\functi
select xt.create_view('xt.cmiteminfo', $$
select cmitem.*,
  itemsite_item_id as cmitem_item_id,
  itemsite_warehous_id as cmitem_warehous_id
from cmitem
  join itemsite on cmitem_itemsite_id = itemsite_id;
$$, false);
create or replace rule "_INSERT" as on insert to xt.cmiteminfo do instead
  insert into cmitem (
    cmitem_id,
    cmitem_cmhead_id,
    cmitem_linenumber,
    cmitem_itemsite_id,
    cmitem_qtycredit,
    cmitem_qtyreturned,
    cmitem_unitprice,
    cmitem_comments,
    cmitem_rsncode_id,
    cmitem_taxtype_id,
    cmitem_qty_uom_id,
    cmitem_qty_invuomratio,
    cmitem_price_uom_id,
    cmitem_price_invuomratio,
    cmitem_raitem_id,
    cmitem_updateinv,
    obj_uuid
  ) select
    new.cmitem_id,
    new.cmitem_cmhead_id,
    new.cmitem_linenumber,
    itemsite_id,
    new.cmitem_qtycredit,
    new.cmitem_qtyreturned,
    new.cmitem_unitprice,
    new.cmitem_comments,
    new.cmitem_rsncode_id,
    new.cmitem_taxtype_id,
    new.cmitem_qty_uom_id,
    new.cmitem_q

    new.cmitem_price_uom_id,
    new.cmitem_price_invuomratio,
    new.cmitem_raitem_id,
    COALESCE(new.cmitem_updateinv, false),
    new.obj_uuid
  from itemsite
  where itemsite_item_id=new.cmitem_item_id
  and itemsite_warehous_id=new.cmitem_warehous_id;
create or replace rule "_UPDATE" as on update to xt.cmiteminfo do instead
  update cmitem set
  cmitem_cmhead_id = new.cmitem_cmhead_id,
  cmitem_linenumber = new.cmitem_linenumber,
  cmitem_itemsite_id = new.cmitem_itemsite_id,
  cmitem_qtycredit = new.cmitem_qtycredit,
  cmitem_qtyreturned = new.cmitem_qtyreturned,
  cmitem_unitprice = new.cmitem_unitprice,
  cmitem_comments = new.cmitem_comments,
  cmitem_rsncode_id = new.cmitem_rsncode_id,
  cmitem_taxtype_id = new.cmitem_taxtype_id,
  cmitem_qty_uom_id = new.cmitem_qty_uom_id,
  cmitem_qty_invuomratio = new.cmitem_qty_invuomratio,
  cmitem_price_uom_id = new.cmitem_price_uom_id,
  cmitem_price_invuomratio = new.cmitem_price_invuomratio,
  cmitem_raitem_id = new.cmitem_raitem
-- Get all distinct energy readings where distinct is defined
-- as a unique tuple of ("MeterData".meter_name, "Interval".end_time, "Reading".channel)
--
-- This query eliminates duplicate reading data, if present.
-- meco_v2 will be built to prevent duplicate reading data.
--
-- @author Daniel Zhang (張道博)
SELECT
DISTINCT ON ("Interval".end_time,"MeterData".meter_name,"Reading".channel)
	"Interval".end_time,
    "MeterData".meter_name,
    "Reading".channel,
    "Reading".raw_value,
    "Reading".value,
    "Reading".uom,
    "IntervalReadData".start_time,
    "IntervalReadData".end_time AS ird_end_time
FROM
    (
        (
            (
                "MeterData"
                JOIN "IntervalReadData" ON (
                    (
                        "MeterData".meter_data_id = "IntervalReadData".meter_data_id
                    )
                )
            )
            JOIN "Interval" ON (
                (
                    "IntervalReadData".interval_read_data_id = "Inter
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `account_instance_times`;
CREATE TABLE `account_instance_times` (
  `accountId` int(10) unsigned NOT NULL,
  `instanceId` int(10) unsigned NOT NULL DEFAULT '0',
  `releaseTime` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`accountId`,`instanceId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `account_instance_times` WRITE;
/*!40000 ALTER TABLE `account_instance_time
-- triggerC.test
-- 
-- execsql {
--     CREATE TABLE t1(a, b, c);
--     CREATE TABLE log(t, a1, b1, c1, a2, b2, c2);
--     CREATE TRIGGER trig1 BEFORE INSERT ON t1 BEGIN
--       INSERT INTO log VALUES('before', NULL, NULL, NULL, new.a, new.b, new.c);
--     END;
--     CREATE TRIGGER trig2 AFTER INSERT ON t1 BEGIN
--       INSERT INTO log VALUES('after', NULL, NULL, NULL, new.a, new.b, new.c);
--     END;
--     CREATE TRIGGER trig3 BEFORE UPDATE ON t1 BEGIN
--       INSERT INTO log VALUES('before', old.a,old.b,old.c, new.a,new.b,new.c);
--     END;
--     CREATE TRIGGER trig4 AFTER UPDATE ON t1 BEGIN
--       INSERT INTO log VALUES('after', old.a,old.b,old.c, new.a,new.b,new.c);
--     END;
-- 
--     CREATE TRIGGER trig5 BEFORE DELETE ON t1 BEGIN
--       INSERT INTO log VALUES('before', old.a,old.b,old.c, NULL,NULL,NULL);
--     END;
--     CREATE TRIGGER trig6 AFTER DELETE ON t1 BEGIN
--       INSERT INTO log VALUES('after', old.a,old.b,old.c, NULL,NULL,NULL);
--     END;
-- }

select
	projects.name as project,
	SUM(projects.cost) as profitCompany,
	AvgDeveloper.salaryAVG as avgSalaryForDevelopers
from java6.mtm_customer_project_developer
left join mtm_customer_project
	on mtm_customer_project.customer = mtm_customer_project_developer.customer
    and mtm_customer_project.project = mtm_customer_project_developer.project
left join projects
	on mtm_customer_project.project = projects.id
left join (select 
	mtm_customer_project.customer as customer,
	mtm_customer_project.project as project,
	AVG(developers.salary) as salaryAVG
	from mtm_customer_project_developer
	left join mtm_customer_project
		on mtm_customer_project_developer.customer = mtm_customer_project.customer
        and mtm_customer_project_developer.project = mtm_customer_project.project
	left join developers
		on developers.id = mtm_customer_project_developer.developer
	group by customer, project) as AvgDeveloper
on AvgDeveloper.project = projects.id and AvgDeveloper.customer = mtm_customer_project
/*
Navicat MySQL Data Transfer
Source Server         : localhost
Source Server Version : 50151
Source Host           : localhost:3306
Source Database       : zuilv
Target Server Type    : MYSQL
Target Server Version : 50151
File Encoding         : 65001
Date: 2012-02-29 14:13:58
*/
SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `fanwe_role_nav`
-- ----------------------------
DROP TABLE IF EXISTS `fanwe_role_nav`;
CREATE TABLE `fanwe_role_nav` (
  `id` mediumint(8) NOT NULL AUTO_INCREMENT,
  `name` varchar(60) NOT NULL DEFAULT '',
  `status` tinyint(1) NOT NULL DEFAULT '1',
  `sort` smallint(5) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
-- ----------------------------
-- Records of fanwe_role_nav
-- ----------------------------
INSERT INTO `fanwe_role_nav` VALUES ('2', '分享', '1', '2');
INSERT INTO `fanwe_role_nav` VALUES ('4', '会员', '1', '4');
INSERT INTO `fanwe_role_nav` VALUES ('5', '权限', '1', '
<<<<<<< HEAD
-- begin AMS_NEW_ASSET
alter table AMS_NEW_ASSET add constraint FK_AMS_NEW_ASSET_NAME foreign key (NAME_ID) references AMS_ASSET(ID)^
create unique index IDX_AMS_NEW_ASSET_UNIQ_ASSETID on AMS_NEW_ASSET (ASSETID) ^
create index IDX_AMS_NEW_ASSET_NAME on AMS_NEW_ASSET (NAME_ID)^
-- end AMS_NEW_ASSET
-- begin AMS_NEW_ASSET_SUPLIER_LINK
alter table AMS_NEW_ASSET_SUPLIER_LINK add constraint FK_ANASL_NEW_ASSET foreign key (NEW_ASSET_ID) references AMS_NEW_ASSET(ID)^
alter table AMS_NEW_ASSET_SUPLIER_LINK add constraint FK_ANASL_SUPLIER foreign key (SUPLIER_ID) references AMS_SUPLIER(ID)^
-- end AMS_NEW_ASSET_SUPLIER_LINK
=======
-- begin ASSETMANAGEMENT_NEW__ASSET
alter table ASSETMANAGEMENT_NEW__ASSET add constraint FK_ASSETMANAGEMENT_NEW__ASSET_ASSET_NAME foreign key (ASSET_NAME_ID) references ASSETMANAGEMENT_ASSET(ID)^
create unique index IDX_ASSETMANAGEMENT_NEW__ASSET_UNIQ_ASSET_ID on ASSETMANAGEMENT_NEW__ASSET (ASSET_ID) ^
create index IDX_ASSETMANAGEMENT_NEW__ASSET_ASSET_N

-- end ASSETMANAGEMENT_NEW__ASSET
-- begin ASSETMANAGEMENT_REQUEST
alter table ASSETMANAGEMENT_REQUEST add constraint FK_ASSETMANAGEMENT_REQUEST_ASSET_NAME foreign key (ASSET_NAME_ID) references ASSETMANAGEMENT_NEW__ASSET(ID)^
alter table ASSETMANAGEMENT_REQUEST add constraint FK_ASSETMANAGEMENT_REQUEST_USER_NAME foreign key (USER_NAME_ID) references SEC_USER(ID)^
create index IDX_ASSETMANAGEMENT_REQUEST_ASSET_NAME on ASSETMANAGEMENT_REQUEST (ASSET_NAME_ID)^
create index IDX_ASSETMANAGEMENT_REQUEST_USER_NAME on ASSETMANAGEMENT_REQUEST (USER_NAME_ID)^
-- end ASSETMANAGEMENT_REQUEST
-- begin ASSETMANAGEMENT_STATUS
alter table ASSETMANAGEMENT_STATUS add constraint FK_ASSETMANAGEMENT_STATUS_ASSET_DETAIL foreign key (ASSET_DETAIL_ID) references ASSETMANAGEMENT_REQUEST(ID)^
create index IDX_ASSETMANAGEMENT_STATUS_ASSET_DETAIL on ASSETMANAGEMENT_STATUS (ASSET_DETAIL_ID)^
-- end ASSETMANAGEMENT_STATUS
-- begin ASSETMANAGEMENT_NEW__ASSET_SUPPLIER_LINK
alter table ASSETMANAGEMENT_NEW__ASSET_SUP
SET DEFINE OFF;
CREATE TABLE D_CUSTOMER
  CUSTOMER_ID           VARCHAR2(15 BYTE),
  ADDRESSID             NUMBER(12),
  COMPANY_NAME          VARCHAR2(100 BYTE),
  CUSTOMER_TYPE         VARCHAR2(50 BYTE),
  MRKCUSTOMERS_PROFILE  VARCHAR2(50 BYTE),
  MRKCUSTOMERS_COMMENT  VARCHAR2(1000 BYTE),
  DEFAULTBRAND          VARCHAR2(10 BYTE),
  TAXID                 VARCHAR2(20 BYTE),
  GSTPER                VARCHAR2(10 BYTE),
  QCURRENCY             VARCHAR2(3 BYTE),
  PHONE                 VARCHAR2(30 BYTE),
  MOBILE_PHONE          VARCHAR2(30 BYTE),
  FAX                   VARCHAR2(30 BYTE),
  EMAIL                 VARCHAR2(50 BYTE),
  TERRITORY             VARCHAR2(50 BYTE),
  STATUS                VARCHAR2(10 BYTE),
  ORIGIN                VARCHAR2(255 BYTE),
  AFFILIATION_ID        VARCHAR2(20 BYTE),
  COMM_CODE             VARCHAR2(20 BYTE),
  COMM_PAYPER           VARCHAR2(10 BYTE),
  LAST_BROCHURES        VARCHAR2(250 BYTE),
  CREDIT_STATUS         VARCHAR2(40 BYTE),
  CREATED_BY     

  CREATED_DATE          DATE,
  WHOSTAMP              VARCHAR2(50 BYTE),
  DATESTAMP             DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_CUSTOMER_PK ON D_CUSTOMER
(CUSTOMER_ID)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
     
-- ViewName : ProjectBidList-Left
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'BQM';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'ProjectBidList-Left'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1)
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq_count = (select ifnull(max(ID

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
-- --------------------------------------------------
-- Entity Designer DDL Script for SQL Server 2005, 2008, 2012 and Azure
-- --------------------------------------------------
-- Date Created: 05/20/2015 21:27:50
-- Generated from EDMX file: E:\users\asus\documents\visual studio 2013\ControllerCenter\ControllerCenter\ControllerCenter.MVVM\ControllerCenter.Model\CenterModel.edmx
-- --------------------------------------------------
SET QUOTED_IDENTIFIER OFF;
GO
USE [ControllerCenterDB];
GO
IF SCHEMA_ID(N'dbo') IS NULL EXECUTE(N'CREATE SCHEMA [dbo]');
GO
-- --------------------------------------------------
-- Dropping existing FOREIGN KEY constraints
-- --------------------------------------------------
-- --------------------------------------------------
-- Dropping existing tables
-- --------------------------------------------------
IF OBJECT_ID(N'[dbo].[BaudRateModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[BaudRateModel];
GO
IF OBJECT_ID(N'[dbo].[CodedFormatModel]', 'U') IS N

    DROP TABLE [dbo].[CodedFormatModel];
GO
IF OBJECT_ID(N'[dbo].[CommPortModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[CommPortModel];
GO
IF OBJECT_ID(N'[dbo].[CommunicationModeModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[CommunicationModeModel];
GO
IF OBJECT_ID(N'[dbo].[DataBitModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[DataBitModel];
GO
IF OBJECT_ID(N'[dbo].[DeviceActionModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[DeviceActionModel];
GO
IF OBJECT_ID(N'[dbo].[DeviceModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[DeviceModel];
GO
IF OBJECT_ID(N'[dbo].[InteractiveAreaModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[InteractiveAreaModel];
GO
IF OBJECT_ID(N'[dbo].[IpConfigModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[IpConfigModel];
GO
IF OBJECT_ID(N'[dbo].[IpModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[IpModel];
GO
IF OBJECT_ID(N'[dbo].[OperateConfigModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[OperateConfigModel];
GO
IF OBJECT_ID(N'[dbo].[ParityCheckBitModel]', 'U') 

    DROP TABLE [dbo].[ParityCheckBitModel];
GO
IF OBJECT_ID(N'[dbo].[SerialPortConfigModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[SerialPortConfigModel];
GO
IF OBJECT_ID(N'[dbo].[StopBitModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[StopBitModel];
GO
-- --------------------------------------------------
-- Creating all tables
-- --------------------------------------------------
-- Creating table 'BaudRateModel'
CREATE TABLE [dbo].[BaudRateModel] (
    [Id] int IDENTITY(1,1) NOT NULL,
    [BaudRateName] nvarchar(max)  NOT NULL
);
GO
-- Creating table 'CodedFormatModel'
CREATE TABLE [dbo].[CodedFormatModel] (
    [Id] int IDENTITY(1,1) NOT NULL,
    [CodedFormatName] nvarchar(max)  NOT NULL,
    [Status] nvarchar(max)  NOT NULL
);
GO
-- Creating table 'CommPortModel'
CREATE TABLE [dbo].[CommPortModel] (
    [Id] int IDENTITY(1,1) NOT NULL,
    [CommPortName] nvarchar(max)  NOT NULL
);
GO
-- Creating table 'CommunicationModeModel'
CREATE TABLE [dbo].[CommunicationModeModel] (
    [I
CREATE TABLE M_ACCESSORY
	_ID INTEGER NOT NULL,
	DEFENSE_POINT INTEGER,
	APPEND_TYPE INTEGER,
	APPEND_VALUE INTEGER,
	PRIMARY KEY (_ID)
);
CREATE TABLE M_ACTOR
	_ID INTEGER NOT NULL,
	NAME TEXT,
	IMG_RES_ID INTEGER,
	FACE_IMG_ID INTEGER,
	PRIMARY KEY (_ID)
);
CREATE TABLE M_ITEM
	_ID INTEGER NOT NULL,
	ITEM_NAME TEXT,
	ITEM_IMAGE_ID INTEGER,
	ITEM_TYPE INTEGER NOT NULL,
	ITEM_OBJECT_ID INTEGER,
	PRIMARY KEY (_ID)
);
CREATE TABLE M_SCENARIO
	_ID INTEGER NOT NULL,
	SCENARIO_NO INTEGER NOT NULL,
	SEQ_NO INTEGER NOT NULL,
	SCENE_TYPE INTEGER NOT NULL,
	SCENE_ID INTEGER NOT NULL,
	SCENARIO_TITLE TEXT,
	BACK_IMG_FILE_PATH TEXT,
	PRIMARY KEY (_ID)
);
CREATE TABLE M_USE_ITEM
	_ID INTEGER NOT NULL,
	USE_ITEM_NAME TEXT,
	USE_ITEM_TYPE INTEGER,
	USE_ITEM_VALUE INTEGER,
	PRIMARY KEY (_ID)
);
CREATE TABLE M_WEAPON
	_ID INTEGER NOT NULL,
	ATTACK_POINT INTEGER,
	HIT_PROBABILITY INTEGER,
	ATTACK_RANGE_TYPE INTEGER,
	ATTACK_RANGE_VALUE INTEGER,
	APPEND_TYPE INTEGER,
	APPEND_VALUE INTEGER,
	PRIMARY KEY 

);
CREATE TABLE T_ACTOR_STATUS
	_ID INTEGER NOT NULL,
	LEVEL INTEGER,
	EXP INTEGER,
	NEXT_EXP INTEGER,
	ATTACK_POINT INTEGER,
	DEFENCE_POINT INTEGER,
	HIT_POINT INTEGER,
	MAGIC_POINT INTEGER,
	MOVE_POINT INTEGER,
	ATTACK_RANGE INTEGER,
	WEAPON_ID INTEGER NOT NULL,
	ACCESSORY_ID INTEGER NOT NULL,
	PRIMARY KEY (_ID)
);
CREATE TABLE T_PLAYER_PARTY
	_ID INTEGER NOT NULL,
	PRIMARY KEY (_ID)
);
CREATE TABLE T_PLAYER_PARTY_MENBER
	_ID INTEGER NOT NULL,
	PARTY_ID INTEGER NOT NULL,
	ACTOR_ID INTEGER NOT NULL,
	PRIMARY KEY (_ID)
);
CREATE TABLE T_SAVE_DATA
	_ID INTEGER NOT NULL,
	SCENARIO_ID INTEGER NOT NULL,
	PARTY_ID INTEGER NOT NULL,
	GOLD INTEGER,
	EXP INTEGER,
	PRIMARY KEY (_ID)
);
CREATE TABLE T_USER_ITEM
	_ID INTEGER NOT NULL,
	SAVE_ID INTEGER NOT NULL,
	ITEM_ID INTEGER NOT NULL,
	ITEM_COUNT INTEGER,
	PRIMARY KEY (_ID)
);
CREATE TABLE M_MAP_BATTLE
	_ID INTEGER NOT NULL,
	PRIMARY KEY (_ID)
);
CREATE TABLE M_MAP_BATTLE_REWARD
	_ID INTEGER NOT NULL,
	MAP_BATTLE_ID INTEGER NOT NULL,
	OBJECT_
﻿drop table new_properties_detailes_fixed;
create table new_properties_detailes_fixed as
select * from 
new_properties_dup_id
left join property_details
using (dup_id)
);
-- update new_properties_detailes_fixed
-- 	set new_latitude = latitude
-- 	where new_latitude is null;
-- 
-- update new_properties_detailes_fixed
-- 	set new_longitude = longitude
-- 	where new_longitude is null;
-- 
-- update new_properties_detailes_fixed
-- 	set new_geocode_source = geocode_source
-- 	where new_geocode_source is null;
-- 
-- update new_properties_detailes_fixed
-- 	set new_geocode_type = geocode_type
-- 	where new_geocode_type is null;
-- 
-- update new_properties_detailes_fixed
-- 	set new_geocode_status = geocode_status
-- 	where new_geocode_status is null;
update new_properties_detailes_fixed
	set new_strata_fee = strata_fee
	where new_strata_fee is null and strata_fee is not null;
update new_properties_detailes_fixed
	set new_property_tax = property_tax
	where new_property_tax is null and prop

update new_properties_detailes_fixed
	set new_year_built = year_built
	where new_year_built is null and year_built is not null;
update new_properties_detailes_fixed
	set new_floor_area = floor_area
	where new_floor_area is null and floor_area is not null;
update new_properties_detailes_fixed
	set new_bedroom = bedroom
	where new_bedroom is null and bedroom is not null;
update new_properties_detailes_fixed
	set new_bathroom = bathroom
	where new_bathroom is null and bathroom is not null;
update new_properties_detailes_fixed
	set new_assessed_type = assessed_type
	where new_assessed_type is null and assessed_type is not null;
update new_properties_detailes_fixed
	set new_lot_size = lot_size
	where new_lot_size is null and lot_size is not null;
update new_properties_detailes_fixed
	set new_den = den
	where new_den is null and den is not null;
update new_properties_detailes_fixed
	set new_normalized_type = normalized_type
	where new_normalized_type is null and normalized_type is not null;
-- Add option conditions for Rogue trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (85,141,381,410,411,436,3984,4502,4512,4513,4540,4541,4542,4561,4562,4575,4576,4577,4658,4659,4676,4690,5061,6650);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,85,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,85,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,85,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,141,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,141,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,141,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,381,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,381,1,0,15,8,0,0,0,'','Show gossip option if 

(15,381,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,410,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,410,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,410,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,411,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,411,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,411,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,436,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,436,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,436,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,3984,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,3984,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,3984,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4502,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4502,1,0,15

(15,4502,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4512,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4512,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4512,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4513,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4513,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4513,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4540,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4540,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4540,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4541,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4541,1,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4541,2,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4542,0,0,15,8,0,0,0,'','Show gossip option if player is a Rogue'),
(15,4
ALTER TABLE `#__content` ADD COLUMN `copete` mediumtext NULL AFTER `title_alias`;
ALTER TABLE `#__content` ADD COLUMN `subtitle` varchar(255) AFTER `title`;
ALTER TABLE `#__content` ADD COLUMN `attachments` text NULL AFTER `urls`;
REPLACE INTO `#__extensions` (`extension_id`, `name`, `type`, `element`, `folder`, `client_id`, `enabled`, `access`, `protected`, `manifest_cache`, `params`, `custom_data`, `system_data`, `checked_out`, `checked_out_time`, `ordering`, `state`) VALUES (22, 'com_content', 'component', 'com_content', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_content","type":"component","creationDate":"April 2006","author":"Joomla! Project","copyright":"(C) 2005 - 2013 Open Source Matters. All rights reserved.\\t","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.0","description":"COM_CONTENT_XML_DESCRIPTION","group":""}', '{"showpreview":"1","catpreview":"1","article_layout":"_:default","show_title":"1","link_titles":"1","show_subtitle":"1","show_su
  CREATE OR REPLACE  VIEW HV_INCOME_EXP (NAV_ID, FF_VC1, SCHEME, ACCENT_AMNT, PORTFOLIO_TYPE, PORTFOLIO_CATEGORY, PORTFOLIO_CATEGORY_NAME, YEAR_MONTH_ID, DAY_ID, WEEK_OF_YEAR, MONTH_ID, FISC_NUM_IND_QUARTER, YEAR_ID, PORTFOLIO_NAME, TRANS_DATE, NAV_SUM, PORTFOLIO, AVG_NAV, AVG_NAV_MON, AVG_NAV_YEAR, CNT_MN, CNT_YR) AS 
  SELECT SUM_NAV.NAV_ID,
    SUM_NAV.FF_VC1,
    ACCENT.SCHEME,
    SUM(ACCENT.AMOUNT) ACCENT_AMNT,
    SUM_NAV.PORTFOLIO_TYPE,
    SUM_NAV.PORTFOLIO_CATEGORY,
    SUM_NAV.PORTFOLIO_CATEGORY_NAME,
    DT_TIME_DIM.YEAR_MONTH_ID,
    DT_TIME_DIM.DAY_ID,
    DT_TIME_DIM.WEEK_OF_YEAR,
    DT_TIME_DIM.MONTH_ID,
    DT_TIME_DIM.FISC_NUM_IND_QUARTER,
    DT_TIME_DIM.YEAR_ID,
    sum_nav.portfolio_name,
    SUM_NAV.TRANS_DATE,
    (SUM_NAV.SNAV) NAV_SUM ,
    SUM_NAV.PORTFOLIO,
    ROUND( AVG(sum_nav.snav)over (partition BY sum_nav.portfolio order by sum_nav.trans_date),2) avg_nav,
    ROUND( AVG(sum_nav.snav)over (partition BY sum_nav.portfolio,dt_time_dim.year_month_id order b

    ROUND( AVG(sum_nav.snav)over (partition BY sum_nav.portfolio order by dt_time_dim.year_id),2) avg_nav_year,
    count(sum_nav.snav)over (partition by sum_nav.portfolio,dt_time_dim.year_month_id order by dt_time_dim.year_month_id) cnt_mn,
    COUNT(sum_nav.snav)over (partition BY sum_nav.portfolio order by dt_time_dim.year_id) cnt_yr/*,
    gl.level_1      AS gl_level,
    gl.account_name AS account_name,
    gl.CODE         AS code*/
  FROM hdim_time_cal dt_time_dim,
    hi_accent_curr accent,
   -- hi_gl_info gl,
    (SELECT HREP_NAV_SUMMARY_CURR.NAV_ID,
      HREP_NAV_SUMMARY_CURR.FF_VC1,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO_NAME,
      HREP_NAV_SUMMARY_CURR.TRANS_DATE,
      SUM(HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE) SNAV ,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO_TYPE,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY_NAME
    FROM HREP_NAV_SUMMARY_CURR
    WHERE HREP_NAV_SUMMARY_CURR.UNITS_OUTS 

    AND HREP_NAV_SUMMARY_CURR.PORTFOLIO_CLASS <> 'GLOBAL'
      --AND   HREP_NAV_SUMMARY_CURR.PORTFOLIO = 'APR24MT112'
    --AND HREP_NAV_SUMMARY_CURR.TRANS_DATE BETWEEN '01 APR 2013' AND ' 30 NOV 2013'
    GROUP BY HREP_NAV_SUMMARY_CURR.NAV_ID,
      HREP_NAV_SUMMARY_CURR.FF_VC1,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO_NAME,
      HREP_NAV_SUMMARY_CURR.TRANS_DATE,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO_TYPE,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY,
      HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY_NAME
    ORDER BY HREP_NAV_SUMMARY_CURR.TRANS_DATE
    ) SUM_NAV
  WHERE SUM_NAV.TRANS_DATE = DT_TIME_DIM.DAY_END_DATE
  AND (ACCENT.LEVEL_1     IN ('810300','810311'))
  AND (ACCENT.NARRATION NOT LIKE '%lumpsum')
  AND accent.scheme = sum_nav.portfolio
  --and (accent.value_date between '1 APR 2013' and '30 NOV 2013')
 -- AND gl.scheme = accent.scheme
    -- and gl.LEVEL_1 = ACCENT.LEVEL_1
    --AND gl.type   = SUM_NAV.PORTFOLIO_CATEGORY_NAME
  GROUP
DROP VIEW IF EXISTS asset.vw_asset_type CASCADE;
CREATE VIEW asset.vw_asset_type AS
    SELECT a.id, a.assettype_code, a.assettype_name, d.depn_name, 
        public.formatglaccount(a.assettype_gl1) AS assettype_gl1, 
        public.formatglaccount(a.assettype_gl2) AS assettype_gl2, 
        public.formatglaccount(a.assettype_gl3) AS assettype_gl3, 
        public.formatglaccount(a.assettype_gl4) AS assettype_gl4, 
        public.formatglaccount(a.assettype_gl5) AS assettype_gl5, 
        a.assettype_depnperc 
    FROM (asset.asset_type a JOIN asset.asset_depn d ON ((a.assettype_depn = d.depn_id)));
CREATE OR REPLACE RULE "_INSERT" AS ON INSERT TO vw_asset_type DO INSTEAD INSERT INTO asset_type (assettype_code, assettype_name, assettype_depn, assettype_gl1, assettype_gl2, assettype_gl3, assettype_gl4, assettype_gl5, assettype_depnperc) VALUES (new.assettype_code, new.assettype_name, CASE WHEN (new.depn_name = 'Straight Line'::text) THEN 1 WHEN (new.depn_name = 'Diminishing Value'::text
#############################
Expected output for 'h5dump --enable-error-stack filter_fail.h5'
#############################
HDF5 "filter_fail.h5" {
GROUP "/" {
   DATASET "dset_fail" {
      DATATYPE  H5T_STD_I32LE
      DATASPACE  SIMPLE { ( 10 ) / ( 10 ) }
      DATA {
               }
   }
HDF5-DIAG: Error detected in HDF5 (version (number)) thread (IDs):
  #000: (file name) line (number) in H5Dread(): can't read data
    major: Dataset
    minor: Read failed
  #001: (file name) line (number) in H5D_read(): can't read data
    major: Dataset
    minor: Read failed
  #002: (file name) line (number) in H5D_chunk_read(): unable to read raw data chunk
    major: Low-level I/O
    minor: Read failed
  #003: (file name) line (number) in H5D_chunk_lock(): data pipeline read failed
    major: Data filters
    minor: Filter operation failed
  #004: (file name) line (number) in H5Z_pipeline(): required filter is not registered
    major: Data filters
    minor: Read failed
h5dump error: unab
--
-- Test Statistics Collector
--
-- Must be run after tenk2 has been created (by create_table),
-- populated (by create_misc) and indexed (by create_index).
--
-- conditio sine qua non
SHOW stats_start_collector;  -- must be on
-- save counters
CREATE TEMP TABLE prevstats AS
SELECT t.seq_scan, t.seq_tup_read, t.idx_scan, t.idx_tup_fetch,
       (b.heap_blks_read + b.heap_blks_hit) AS heap_blks,
       (b.idx_blks_read + b.idx_blks_hit) AS idx_blks
  FROM pg_catalog.pg_stat_user_tables AS t,
       pg_catalog.pg_statio_user_tables AS b
 WHERE t.relname='tenk2' AND b.relname='tenk2';
-- enable statistics
SET stats_block_level = on;
SET stats_row_level = on;
-- do something
SELECT count(*) FROM tenk2;
SELECT count(*) FROM tenk2 WHERE unique1 = 1;
-- let stats collector catch up
SELECT do_sleep(2);
-- check effects
SELECT st.seq_scan >= pr.seq_scan + 1,
       st.seq_tup_read >= pr.seq_tup_read + cl.reltuples,
       st.idx_scan >= pr.idx_scan + 1,
       st.idx_tup_fetch >= pr.idx_tup_f
-- Sale
SELECT dropIfExists('VIEW', 'api_sale', 'xtpos');
CREATE VIEW xtpos.api_sale
AS
  SELECT 
    salehead_number AS sale_number,
    CASE WHEN (salehead_type='S') THEN 'Sale'
         WHEN (salehead_type='Q') THEN 'Quote'
         WHEN (salehead_type='R') THEN 'Return'
         ELSE 'Error' 
    END AS type,
    CASE 
      WHEN (salehead_closed OR salehead_type IN ('S','R')) THEN
        salehead_closed
      ELSE
        xtpos.checkStatus(salehead_id)
    END AS closed,
    cust_number AS customer_number,
    c.cntct_number AS contact_number,
    c.cntct_honorific AS honorific,
    c.cntct_first_name AS first,
    c.cntct_middle AS middle,
    c.cntct_last_name AS last,
    c.cntct_suffix AS suffix,
    c.cntct_title AS job_title,
    c.cntct_phone AS voice,
    c.cntct_phone2 AS alternate,
    c.cntct_fax AS fax,
    c.cntct_email AS email,
    c.cntct_webaddr AS web,
    ''::text AS contact_change,
    a.addr_number AS address_number,
    a.addr_line1 AS address1,
    a.addr_l

    a.addr_line3 AS address3,
    a.addr_city AS city,
    a.addr_state AS state,
    a.addr_postalcode AS postalcode,
    a.addr_country AS country,
    ''::text AS address_change,
    salehead_time AS date,
    salesrep_number AS sales_rep,
    salehead_notes AS notes,
    warehous_code AS site,
    terminal_number AS terminal,
    taxzone_code AS tax_zone,
    coalesce((sum(round(abs(saleitem_qty) * saleitem_unitprice,2))),0) AS subtotal,
    xtpos.saletax(salehead_id) AS tax,
    coalesce((sum(round((abs(saleitem_qty) * saleitem_unitprice), 2)) + abs(xtpos.saletax(salehead_id))),0) AS total
  FROM xtpos.salehead
    JOIN site() ON (salehead_warehous_id=warehous_id)
    JOIN xtpos.terminal ON (salehead_terminal_id=terminal_id)
    LEFT OUTER JOIN custinfo ON (salehead_cust_id=cust_id)
    LEFT OUTER JOIN cntct c ON (cust_cntct_id=c.cntct_id)
    LEFT OUTER JOIN addr a ON (cntct_addr_id=a.addr_id)
    LEFT OUTER JOIN salesrep ON (salehead_salesrep_id=salesrep_id)
    LEFT OUTER JOIN

    LEFT OUTER JOIN taxzone ON (salehead_taxzone_id=taxzone_id)
  GROUP BY salehead_id, salehead_number,salehead_type,salehead_closed,cust_number,
    c.cntct_number,c.cntct_honorific,c.cntct_first_name,c.cntct_middle,
    c.cntct_last_name,c.cntct_suffix,c.cntct_title,c.cntct_phone,c.cntct_phone2,
    c.cntct_fax,c.cntct_email,c.cntct_webaddr,a.addr_number,a.addr_line1,a.addr_line2,
    a.addr_line3,a.addr_city,a.addr_state,a.addr_postalcode,a.addr_country,salehead_time,
    warehous_code,salesrep_number,terminal_number,salehead_notes,taxzone_code
  ORDER BY salehead_number;
GRANT ALL ON TABLE xtpos.api_sale TO xtrole;
COMMENT ON VIEW xtpos.api_sale IS 'Sale';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO xtpos.api_sale DO INSTEAD
  INSERT INTO xtpos.salehead (
    salehead_number,
    salehead_warehous_id,
    salehead_type,
    salehead_cust_id,
    salehead_time,
    salehead_terminal_id,
    salehead_notes,
    salehead_salesrep_id,
    salehead_taxzone_id )
  VALU
INSERT INTO `nav_items` (`id`, `parent_id`, `title`, `source`, `controller`, `action`, `icon_class`) VALUES
(1, NULL, 'Raiz', 'admin', NULL, NULL, NULL),
(2, 1, 'Painel Inicial', 'admin', NULL, NULL, 'fa-dashboard'),
(3, 1, 'Paginas', 'admin', NULL, NULL, 'fa-clipboard'),
(4, 3, 'Todas as Paginas', 'admin', 'pages', NULL, NULL),
(5, 3, 'Adicionar Pagina', 'admin', 'pages', 'new', NULL),
(6, 3, 'Gerenciar Categorias', 'admin', 'pages-categories', NULL, NULL),
(7, 1, 'Blog', 'admin', NULL, NULL, 'fa-thumb-tack'),
(8, 7, 'Todos os Posts', 'admin', 'posts', NULL, NULL),
(9, 7, 'Adicionar Post', 'admin', 'posts', 'new', NULL),
(10, 7, 'Gerenciar Categorias', 'admin', 'posts-categories', NULL, NULL),
(11, 1, 'Comentarios', 'admin', 'comments', NULL, 'fa-comments'),
(12, 1, 'Biblioteca de Midias', 'admin', NULL, NULL, 'fa-archive'),
(13, 12, 'Todas as Midias', 'admin', 'attachments', NULL, NULL),
(14, 12, 'Adicionar Midia', 'admin', 'attachments', 'new', NULL),
(15, 12, 'Gerenciar Bibliotecas

(16, 1, 'Usuarios', 'admin', NULL, NULL, 'fa-user'),
(17, 16, 'Todos os Usuarios', 'admin', 'users', NULL, NULL),
(18, 16, 'Adicionar Usuario', 'admin', 'users', 'new', NULL),
(19, 1, 'Configuracoes', 'admin', NULL, NULL, 'fa-cog'),
(20, 19, 'Opcoes do Sistema', 'admin', 'settings', NULL, NULL),
(21, 19, 'Itens do Menu', 'admin', 'nav-itens', NULL, NULL),
(22, 19, 'Administradores', 'admin', 'administrators', NULL, NULL);
-- --------------------------------------------------------
INSERT INTO `users` (`id`, `first_name`, `last_name`, `registered`, `registered_utc`, `email`, `username`, `password`, `url`, `activation_key`, `is_admin`, `is_active`, `img_1`, `img_2`, `img_3`) VALUES
(1, 'Mayko', 'Kioschi', '2014-09-04 00:00:00', '2014-09-04 00:00:00', 'mkioschi@gmail.com', 'mkioschi', '6d071901727aec1ba6d8e2497ef5b709', NULL, 'asdpf09u34nfiuahvqoiu4o8hvwo748', 1, 1, NULL, NULL, NULL);
-- --------------------------------------------------------
INSERT INTO `categories` (`id`, `parent_id`,
-- Customer Shipto
SELECT dropIfExists('VIEW', 'custshipto', 'api');
CREATE VIEW api.custshipto
AS
   SELECT
     cust_number::varchar AS customer_number,
     shipto_num::varchar AS shipto_number,
     shipto_active AS active,
     shipto_name AS name,
     shipto_default AS default_flag,
     addr_number AS address_number,
     addr_line1 AS address1,
     addr_line2 AS address2,
     addr_line3 AS address3,
     addr_city AS city,
     addr_state AS state,
     addr_postalcode AS postal_code,
     addr_country AS country,
     (''::text) AS address_change,
     cntct_number AS contact_number,
     cntct_honorific AS honorific,
     cntct_first_name AS first,
     cntct_middle AS middle,
     cntct_last_name AS last,
     cntct_suffix AS suffix,
     cntct_title AS job_title,
     cntct_phone AS phone,
     cntct_fax AS fax,
     cntct_email AS email,
     (''::text) AS contact_change,
     salesrep_number AS sales_rep,
     (shipto_commission * 100.0) AS commission,
     shipzone_na

     taxzone_code AS tax_zone,
     shipto_shipvia AS ship_via,
     shipform_name AS ship_form,
     shipchrg_name AS shipping_charges,
     CASE
       WHEN shipto_ediprofile_id = -1 THEN
         'No EDI'
       WHEN shipto_ediprofile_id = -2 THEN
         'Use Customer Master'
       ELSE
         getEdiProfileName(shipto_ediprofile_id)
     END AS edi_profile,
     shipto_comments AS general_notes,
     shipto_shipcomments AS shipping_notes
     FROM custinfo, shiptoinfo
  LEFT OUTER JOIN shipchrg ON (shipto_shipchrg_id=shipchrg_id)
  LEFT OUTER JOIN cntct ON (shipto_cntct_id=cntct_id)
  LEFT OUTER JOIN addr ON (shipto_addr_id=addr_id)
  LEFT OUTER JOIN taxzone ON (shipto_taxzone_id=taxzone_id)
  LEFT OUTER JOIN shipzone ON (shipto_shipzone_id=shipzone_id)
  LEFT OUTER JOIN salesrep ON (shiptoinfo.shipto_salesrep_id = salesrep_id)
  ,shipform
     WHERE ((cust_id=shipto_cust_id)
     AND (cust_shipform_id=shipform_id));
GRANT ALL ON TABLE api.custshipto TO xtrole;
COMMENT ON VIEW

--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.custshipto DO INSTEAD
  INSERT INTO shiptoinfo (
    shipto_cust_id,
    shipto_name,
    shipto_salesrep_id,
    shipto_comments,
    shipto_shipcomments,
    shipto_shipzone_id,
    shipto_shipvia,
    shipto_commission,
    shipto_shipform_id,
    shipto_shipchrg_id,
    shipto_active,
    shipto_default,
    shipto_num,
    shipto_ediprofile_id,
    shipto_cntct_id,
    shipto_addr_id,
    shipto_taxzone_id
    )
  VALUES (
    getCustId(NEW.customer_number),
    COALESCE(NEW.name,''),
    COALESCE(getSalesRepId(NEW.sales_rep),(
      SELECT cust_salesrep_id
      FROM custinfo
      WHERE (cust_id=getCustId(NEW.customer_number)))),
    COALESCE(NEW.general_notes,''),
    COALESCE(NEW.shipping_notes,''),
    getShipZoneId(NEW.zone),
    COALESCE(NEW.ship_via,(
      SELECT cust_shipvia
      FROM custinfo
      WHERE (cust_id=getCustId(NEW.customer_number)))),
    COALESCE((NEW.commission / 100.0),0),
    COALESCE(ge
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `instance`;
CREATE TABLE `instance` (
  `id` int(10) unsigned NOT NULL DEFAULT '0',
  `map` smallint(5) unsigned NOT NULL DEFAULT '0',
  `resettime` int(10) unsigned NOT NULL DEFAULT '0',
  `difficulty` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `completedEncounters` int(10) unsigned NOT NULL DEFAULT '0',
  `data` tinytext NOT NULL,
  PRIMARY KEY (`id`),
  KEY `map` (`map`) USING B
INSERT INTO site VALUES (3, 'User Profiles', '', 'profiles', '', 'en', NULL, NULL, true, 'start', false, false);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO site_settings VALUES (3, false, false, '', 314572800, false, 'system:join', 50, 20, true, NULL, false, false, 10485760, true);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO site_super_settings VALUES (3, true);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO admin VALUES (3, 3, 1, true);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO member VALUES (3, 3, 1, NOW());;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (21,
    3, '_default',
    false, 20,
    false, 'e:rm;c:rm;m:rm;d:rm;a:rm;r:rm;z:rm;o:rm',
    true, 1, NULL,
    false, 'nav:top', 'nav:side',
    NULL, false, true, NULL, NULL, NULL, true, false, false, NULL
);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (22,
    3, 'system',
    true, 20,
    false, 'e:;c:;m:;d:;a:;r:;z:;o:',
    true, 1, NULL,
    true, 'nav:top', 'nav:side',
    NULL, N
CREATE TABLE func_import_entity(
    change_uuid VARCHAR(40) NOT NULL,
    topic_uuid VARCHAR(40) NOT NULL,
    contact_uuid VARCHAR(40),
    default_contact_method_uuid VARCHAR(40),
    name VARCHAR NOT NULL
);
CREATE TRIGGER
    func_import_entity_bi_1
BEFORE INSERT ON
    func_import_entity
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_uuid,
        NEW.topic_uuid,
        NEW.contact_uuid,
        NEW.default_contact_method_uuid,
        NEW.name
    );
    INSERT INTO
        func_new_entity(
            change_id,
            id,
            contact_id,
            default_contact_method_id,
            name
        )
    SELECT
        c.id,
        t.id,
        ct.id,
        ecm.id,
        NEW.name
    FROM
        changes c
    INNER JOIN
        topics t
    ON
        t.uuid = NEW.topic_uuid
    LEFT JOIN
        topics ct
    ON
        ct.uuid = NEW.contact_uuid
    LEFT JOIN
        topics ecm
    ON
        ecm.uuid = NEW.default_contact_method_uuid
    WHER
﻿--USE [StorageSpace]
--GO
-----------------------------------------------------------------------------------
IF OBJECT_ID ( '[BasicInfo].[UnitView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[UnitView];
GO
-----------------------------------------------------------------------------------
IF OBJECT_ID ( '[BasicInfo].[CurrencyView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[CurrencyView];
GO	
-----------------------------------------------------------------------------------
IF OBJECT_ID ( '[BasicInfo].[SharedGoodView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[SharedGoodView];
GO	
-----------------------------------------------------------------------------------
IF OBJECT_ID ( '[BasicInfo].[CompanyView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[CompanyView];
GO	
-----------------------------------------------------------------------------------
IF OBJECT_ID ( '[BasicInfo].[CompanyVesselView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[CompanyVesselView];
-- -*-sql-*-
--      $Id$ 
--
--    Copyright 2001 X=X Computer Software Trust 
--                  Kangaroo Ground Australia 3097 
--
--
--   This is free software; you can redistribute it and/or modify 
--   it under the terms of the GNU General Public License published by 
--   the Free Software Foundation; either version 2, or (at your option) 
--   any later version. 
--
--   This software is distributed in the hope that it will be useful, 
--   but WITHOUT ANY WARRANTY; without even the implied warranty of 
--   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
--   GNU General Public License for more details. 
--
--   You should have received a copy of the GNU General Public License 
--   along with this software; see the file COPYING.  If not, write to 
--   the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
--
--   Report problems and direct all questions to: 
--
--       Rex McMaster, rmcm@compsoft.com.au 
--
-- Integrity functions and utility

--
--
--
-- PL functions related to cnrt table
--
--
-- PL function to update contract data.
--
drop function cnrt_tr_before();
create function cnrt_tr_before()
returns opaque
as 'DECLARE
      tmp_serv_code serv.serv_code%TYPE;
      tmp_fept fept%ROWTYPE;
      count_other integer;
      count_remaining integer;
    BEGIN
        RAISE NOTICE ''cnrt_tr_before'';
      --
      -- if missing service code, then use a default
      -- 
      if (new.cnrt_serv_code is null) then
        new.cnrt_serv_code := ''-'';
      end if;
      --
      -- load the fee defaults
      -- 
      select fept.*
      into   tmp_fept
      from   fept,patn
      where  patn__sequence = new.cnrt_patn__sequence
      and    fept_serv_code = new.cnrt_serv_code
      and    fept_feet_code = patn_feet_code;
      if not found then
        tmp_fept.fept_amount := 0.00;
      end if;
      --
      -- set some defaults on INSERT
      --
      if ( TG_OP = ''INSERT'' ) then
        if (new.cnrt_amount is nul

          new.cnrt_amount := tmp_fept.fept_amount;
        end if;
      end if;
      
      -- amount cannot be less then already posted amounts
      if ( new.cnrt_last_date is not null ) then
        if ( TG_OP = ''UPDATE'' ) then
          if ( new.cnrt_amount < (old.cnrt_amount - old.cnrt_balance) ) then
            new.cnrt_amount := old.cnrt_amount - old.cnrt_balance;
          end if;
          -- balance needs to be adjusted if amount is adjusted
          if ( new.cnrt_amount != old.cnrt_amount ) then
            new.cnrt_balance := new.cnrt_balance + ( new.cnrt_amount - old.cnrt_amount );
          end if;  
        end if;
      end if;
      --
      -- No nulls
      --
      if ( new.cnrt_amount is null ) then
        new.cnrt_amount := 0;
      end if;
      if ( new.cnrt_first_installment is null ) then
        new.cnrt_first_installment := 0;
      end if;
      if ( new.cnrt_other_installment is null ) then
        new.cnrt_other_installment := 0;
      end if;
   
UPDATE FORM_TEMPLATE SET CONTENT='{"sections":[{"type":"text","tag":"h1","text":"申请单"},{"type":"grid","row":"2","col":"4","merge":[{"startId":"0-1","minRow":0,"minCol":1,"maxRow":0,"maxCol":3},{"startId":"1-1","minRow":1,"minCol":1,"maxRow":1,"maxCol":3}],"fields":[{"type":"label","row":0,"col":0,"text":"请假原因"},{"type":"label","row":1,"col":0,"text":"请假类型"},{"type":"textfield","row":0,"col":1,"name":"reason","required":false,"readOnly":false},{"type":"radio","row":1,"col":1,"name":"type","items":"倒休,事假,病假,婚假","required":false,"readOnly":false}]}]}' where ID=1;
UPDATE FORM_TEMPLATE SET CONTENT='{"sections":[{"type":"text","tag":"h1","text":"上级审批"},{"type":"grid","row":"3","col":"4","merge":[{"startId":"0-1","minRow":0,"minCol":1,"maxRow":0,"maxCol":3},{"startId":"1-1","minRow":1,"minCol":1,"maxRow":1,"maxCol":3},{"startId":"2-1","minRow":2,"minCol":1,"maxRow":2,"maxCol":3}],"fields":[{"type":"label","row":0,"col":0,"text":"请假原因"},{"type":"label","row":1,"col":0,"text":"请假类型"},{"type":"t

UPDATE FORM_TEMPLATE SET CONTENT='{"sections":[{"type":"text","tag":"h1","text":"人事审批"},{"type":"grid","row":"4","col":"4","merge":[{"startId":"0-1","minRow":0,"minCol":1,"maxRow":0,"maxCol":3},{"startId":"1-1","minRow":1,"minCol":1,"maxRow":1,"maxCol":3},{"startId":"2-1","minRow":2,"minCol":1,"maxRow":2,"maxCol":3},{"startId":"3-1","minRow":3,"minCol":1,"maxRow":3,"maxCol":3}],"fields":[{"type":"label","row":0,"col":0,"text":"请假原因"},{"type":"label","row":1,"col":0,"text":"请假类型"},{"type":"textfield","row":0,"col":1,"name":"reason","required":false,"readOnly":true},{"type":"radio","row":1,"col":1,"name":"type","items":"倒休,事假,病假,婚假","required":false,"readOnly":true},{"type":"label","row":2,"col":0,"text":"部门经理意见"},{"type":"radio","row":2,"col":1,"name":"leaderComment","items":"同意,不同意","required":false,"readOnly":true},{"type":"label","row":3,"col":0,"text":"人事意见"},{"type":"radio","row":3,"col":1,"name":"hrComment","items":"同意,不同意","required":false,"readOnly":false}]}]}' where ID=3;
UPDA

UPDATE FORM_TEMPLATE SET CONTENT='{"sections":[{"type":"text","tag":"h1","text":"人事审批"},{"type":"grid","row":"4","col":"4","merge":[{"startId":"0-1","minRow":0,"minCol":1,"maxRow":0,"maxCol":3},{"startId":"1-1","minRow":1,"minCol":1,"maxRow":1,"maxCol":3},{"startId":"2-1","minRow":2,"minCol":1,"maxRow":2,"maxCol":3},{"startId":"3-1","minRow":3,"minCol":1,"maxRow":3,"maxCol":3}],"fields":[{"type":"label","row":0,"col":0,"text":"请假原因"},{"type":"label","row":1,"col":0,"text":"请假类型"},{"type":"textfield","row":0,"col":1,"name":"reason","required":false,"readOnly":true},{"type":"radio","row":1,"col":1,"name":"type","items":"倒休,事假,病假,婚假","required":false,"readOnly":true},{"type":"label","row":2,"col":0,"text":"部门经理意见"},{"type":"radio","row":2,"col":1,"name":"leaderComment","items":"同意,不同意","required":false,"readOnly":true},{"type":"label","row":3,"col":0,"text":"人事意见"},{"type":"radio","row":3,"col":1,"name":"hrComment","items":"同意,不同意","required":false,"readOnly":true}]}]}' where ID=5;
UPDAT
# Copyright (c) Xerox Corporation, Codendi Team, 2001-2009. All rights reserved
# This file is licensed under the GNU General Public License version 2. See the file COPYING.
#-----------------------------------------------
# Script: SF/www/new/index.php
new_index	new_file_release	Nouvelles versions de fichiers
new_index	new_releases	Nouvelles versions
new_index	no_release_found	Aucune nouvelle version.
new_index	no_projects_found	Aucun nouveau projet.
new_index	db_err	Erreur base de données.	
new_index	released_by	Publiée par
new_index	module	Module
new_index	version	Version
new_index	no_desc	Ce projet n'a pas soumis de description.
new_index	download	Télécharger
new_index	total	Total projet
new_index	notes	Notes & Modifications
new_index	newer_releases	Versions plus récentes
new_index	newer_projects	Projets plus récentes
new_index	older_releases	Versions plus anciennes
new_index	older_projects	Projets plus anciens
new_index	new_projects	Nouveaux projets
new_index	prog_lang	Langage de 
CREATE TABLE func_import_issue_delta(
    change_uuid VARCHAR(40) NOT NULL,
    issue_uuid VARCHAR(40),
    project_uuid VARCHAR(40),
    issue_status_uuid VARCHAR(40),
    title VARCHAR(1024)
);
CREATE TRIGGER
    func_import_issue_delta_bi_1
BEFORE INSERT ON
    func_import_issue_delta
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_uuid,
        NEW.issue_uuid,
        NEW.project_uuid,
        NEW.issue_status_uuid,
        NEW.title
    );
    INSERT INTO
        func_update_issue(
            change_id,
            id,
            project_id,
            issue_status_id,
            title
        )
    SELECT
        c.id,
        issues.id,
        projects.id,
        issue_status.id,
        NEW.title
    FROM
        (SELECT 1)
    INNER JOIN
        changes c
    ON
        c.uuid = NEW.change_uuid
    LEFT JOIN
        topics AS issues
    ON
        issues.uuid = NEW.issue_uuid
    LEFT JOIN
        topics AS projects
    ON
        projects.uuid = NEW.project_uuid
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `game_event_condition_save`;
CREATE TABLE `game_event_condition_save` (
  `eventEntry` tinyint(3) unsigned NOT NULL,
  `condition_id` int(10) unsigned NOT NULL DEFAULT '0',
  `done` float DEFAULT '0',
  PRIMARY KEY (`eventEntry`,`condition_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `game_event_condition_save` WRITE;
/*!40000 ALTER TABLE `game_event_condition_save` DISABL
-- ccm_importstrategy
Create table if not exists	ccm_importstrategy(
id	bigint	 not null		Comment 'ID',
rowstamp	bigint	 not null		Comment '时间戳',
fileprocessor	varchar(40)	 not null		Comment '文件处理器',
usefor	varchar(20)	 not null		Comment '用途',
enabled	tinyint	 not null	 default '0'	Comment '当前是否可用',
paramjson	text			Comment '处理器参数json配置',
name	varchar(50)	 not null		Comment '策略名称',
remark	varchar(200)			Comment '备注',
		primary key(id))	COMMENT '文件导入策略';
-- 模块
insert into ccm_module(ID ,moduleno,parentno,name,enabled,remark,sort,level,defselected)
Values
(wbc_central.GetSequenceByID('010'),'water.basesys.fileimpexp','water.basesys','导入导出策略','1',null,'2101','3','1'),
(wbc_central.GetSequenceByID('010'),'water.basesys.fileimpexp.importstrategy','water.basesys.fileimpexp','导入策略定义','1',null,'2102','4','1');
call p_bs_tablechangestamp('ccm_module',0,unix_timestamp(now())*1000);
update ccm_module set remark = LPAD(id,12,0);
-- 可分配权限
insert into ccm_permission(ID ,moduleno,permission,name,depp

Values
(wbc_central.GetSequenceByID('011'),'water.basesys.fileimpexp.importstrategy','query','查询','#query,#read',null,null),
(wbc_central.GetSequenceByID('011'),'water.basesys.fileimpexp.importstrategy','create','新增','#create,#duplicate',null,null),
(wbc_central.GetSequenceByID('011'),'water.basesys.fileimpexp.importstrategy','edit','编辑','#edit',null,null),
(wbc_central.GetSequenceByID('011'),'water.basesys.fileimpexp.importstrategy','delete','删除','#delete',null,null),
(wbc_central.GetSequenceByID('011'),'water.basesys.fileimpexp.importstrategy','fromcentral','从中心下载','#fromcentral',null,null),
(wbc_central.GetSequenceByID('011'),'water.mread.read.import','query','查询','#query',null,null),
(wbc_central.GetSequenceByID('011'),'water.mread.read.import','import','导入','#import',null,null);
call p_bs_tablechangestamp('ccm_permission',0,unix_timestamp(now())*1000);
-- 页面权限
insert into ccm_pagepermission(ID ,moduleno,permission,name,deppageperms,depapiperms,remark)
Values
(wbc_central.GetSeque
USE [MDS]
GO
/****** Object:  UserDefinedFunction [dbo].[f_FA_UID2]    Script Date: 5/15/2015 4:38:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_FA_UID2]
	@Code varchar(MAX),
	@Num varchar(MAX)
RETURNS varchar(MAX)
AS
BEGIN
  RETURN replace(upper(@Code)+'@'+@Num,' ','')
END
/*
--*************************************************************************************************
--	сопоставление записей спр 500
--*************************************************************************************************
--в 500 спр. СПД 2121 записей (+20 записей-дублей, ктр д.б. удалены)
select 
	A.id, A.IDAnalit																				--id счета ДЕПО в СПД
	,A.NameAnalit, isnull(A.Text01,'') + isnull(A.Text02,'') DepoName								--Номер и Наименование счета ДЕПО в СПД
	,A.Int03																						--код депонента ФЭНСИ в СПД
	,A109.id id_Deponent, A109.IDAnalit IDAnalit_Deponent, A109.NameAnalit NameAnalit_Deponent		--id и наименование депонента в СПД
	,A501.id

	,F.ID_F, F.NUMBER, F.NAMEDEPO																	--id, номер и наименование счета ДЕПО в ФЭНСИ
	,F.SELF_ID, F.NAME																				--id и наименование депонента в ФЭНСИ
into #Temp
from [SPD].GL_SPD.dbo.Analit A
left join [SPD].GL_SPD.dbo.Analit A109 on A109.IDAnalitType=109 and A109.IDAnalit=A.Int01
left join [SPD].GL_SPD.dbo.Analit A501 on A501.IDAnalitType=501 and A501.IDAnalit=A.Int02
left join	(
				select T.ID ID_F, T.NUMBER, T.NAME NAMEDEPO, F.SELF_ID, F.NAME 
				from [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_CLIENTS T
				left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_CLIENTS_REC R on R.CLIENT=T.ID and R.E_DATE='01.01.9999' 
				left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_FACES F on F.SELF_ID=T.FACE and F.LAST_FLAG=1
				where PLAN_ID=4
			) F on F.NUMBER=A.NameAnalit collate Cyrillic_General_CI_AS
where A.IDAnalitType=500 
	and A.IDAnalit  not in (5854, 5825, 3305842, 5840, 5827, 5844, 5830, 5832, 5845, 5563, 5828, 5836, 5823, 5312, 5838, 5837, 5853, 5843, 5849, 5824)
--результаты сопоста

select * from #Temp where ID_F is null
		--	всего записей					- 2121
		--	сопоставляются по № счета		- 2121
		--	не сопоставляются по № счета	- 0
--для сопоставившегося счета ДЕПО выходим на разных ЮЛ-депонентов в НСИ 
select 
	T.NameAnalit	
--	,T.id_Deponent, T.IDAnalit_Deponent, T.NameAnalit_Deponent
--	,T.SELF_ID, T.NAME
	,LE1.Name, LE1.FullName, LE1.INN, LE1.OGRN, LE1.OKPO
	,LE2.Name Name_F, LE2.FullName FullName_F, LE2.INN INN_F, LE2.OGRN OGRN_F, LE2.OKPO OKPO_F
from #Temp T
left join NaviconMDM.dbo.CodesMappingDetails M1 on M1.ClientName='SPD' and M1.EntityName='LegalEntity' and M1.ClientId=T.id_Deponent
left join NaviconMDM.dbo.CodesMappingDetails M2 on M2.ClientName='FANSY' and M2.EntityName='LegalEntity' and M2.ClientId=T.SELF_ID
left join NaviconMDM.dbo.CodesMappingDetails M3 on M3.ClientName='NSI' and M3.EntityName='LegalEntity' and M3.MasterCode=M1.MasterCode
left join NaviconMDM.dbo.CodesMappingDetails M4 on M4.ClientName='NSI' and M4.EntityName='LegalEntity' and M4.Maste
-- Name: raw.nav_purchase_order
-- Created: 2015-06-18 16:27:12
-- Updated: 2015-06-18 16:27:12
CREATE VIEW raw.nav_purchase_order AS
/* 	"nav_test.Outfittery GmbH$Purch_ Rcpt_ Header" h; for active POs */
WITH initial AS
SELECT
	h."document type",
	h."no_",
	h."doc_ no_ occurrence",
	h."Document Date",
	h."Order Date",
	h."Buy-from Vendor Name",
	h."Buy-from Vendor No_",
	h."Due Date"
FROM
	/* active purchase order */
	/* document type 0 = quote; 1 = order; 2 = manual invoice; 3 = credit note; 4 = blanket order; 5 = return po */
	"nav_test.Outfittery GmbH$Purchase Header Archive" h
WHERE h."version no_" = 1
),
revised AS
( /* not sure revised header info is needed */
SELECT
/* document no_ = purchase_order_id */
	max_version."document type", max_version."no_", max_version."doc_ no_ occurrence", max_version."version no_", h."Due Date"
	/*, h."Document Date", h."Order Date" */
FROM
	/* active purchase order */
	/* document type 0 = quote; 1 = order; 2 = manual invoice; 3 = credit note; 

	(SELECT
		"document type", "no_", "doc_ no_ occurrence", MAX("version no_") "version no_"
	FROM
		"nav_test.Outfittery GmbH$Purchase Header Archive"
	GROUP BY 1,2,3
	) max_version
	INNER JOIN
	"nav_test.Outfittery GmbH$Purchase Header Archive" h
 		 ON h."document type" = max_version."document type"
		AND h.no_ = max_version.no_
		AND	h."doc_ no_ occurrence" = max_version."doc_ no_ occurrence"
		AND h."version no_" = max_version."version no_"
),
received AS
SELECT
/* "order no_" = purchase_order_id */
	h."order no_",
	MIN(h."posting date") date_received_min,
	MAX(h."posting date") date_received_max
FROM
	"nav_test.Outfittery GmbH$Purch_ Rcpt_ Header" h
GROUP BY 1
),
invoiced AS
SELECT
/* "order no_" = purchase_order_id */
	h."order no_",
	MIN(h."posting date") date_invoiced_min,
	MAX(h."posting date") date_invoiced_max
FROM
	"nav_test.Outfittery GmbH$Purch_ Inv_ Header" h
GROUP BY 1
),
returned AS
SELECT
/* "order no_" = purchase_order_id */
	h."return order no_",
	MIN(h."posting dat

	MAX(h."posting date") date_returned_max
FROM
	"nav_test.Outfittery GmbH$return shipment Header" h
GROUP BY 1
),
credit AS
SELECT
/* "order no_" = purchase_order_id */
	h."return order no_",
	MIN(h."posting date") date_credit_min,
	MAX(h."posting date") date_credit_max
FROM
	"nav_test.Outfittery GmbH$Purch_ cr_ memo Hdr_" h
GROUP BY 1
/* MAIN BODY */
SELECT
	initial."no_" AS order_no,
	/* is the following correct: ? */
	initial."Document Date" AS document_date,
	initial."Order Date" AS order_date,
	initial."Buy-from Vendor No_" AS vendor_no,
	initial."Buy-from Vendor Name" AS vendor_name,
	initial."Due Date" AS date_due_initial,
	revised."Due Date" AS date_due_revised,
	received.date_received_min,
	received.date_received_max,	
	invoiced.date_invoiced_min,
	invoiced.date_invoiced_max,
	returned.date_returned_min,
	returned.date_returned_max,	
	credit.date_credit_min,
	credit.date_credit_max
	/*
	date fulfilled
	date cancelled
	date due
	date updated
	*/
FROM
	initial
	LEFT JOIN
	revise
--GL Account View
SELECT dropIfExists('VIEW', 'glaccount', 'api');
CREATE OR REPLACE VIEW api.glaccount AS
SELECT 
  accnt_company::varchar AS company,
  accnt_profit::varchar AS profit_center,
  accnt_number::varchar AS account_number,
  accnt_sub::varchar AS sub_account,
  accnt_descrip AS description,
  accnt_extref AS ext_reference,
  CASE
    WHEN accnt_type='A' THEN 'Asset'
    WHEN accnt_type='L' THEN 'Liability'
    WHEN accnt_type='E' THEN 'Expense'
    WHEN accnt_type='R' THEN 'Revenue'
    WHEN accnt_type='Q' THEN 'Equity'
    ELSE '?'
  END AS type,
  accnt_subaccnttype_code AS sub_type,
  accnt_closedpost AS allow_posting_to_closed_periods,
  accnt_forwardupdate AS forward_update_trial_balances,
  accnt_comments AS notes
FROM
  accnt
ORDER BY accnt_company, accnt_profit, accnt_number, accnt_sub;
GRANT ALL ON TABLE api.glaccount TO xtrole;
COMMENT ON VIEW api.glaccount IS 'GL Account';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.glaccount DO INSTEAD
INS

  accnt_number,
  accnt_descrip,
  accnt_comments,
  accnt_profit,
  accnt_sub,
  accnt_type,
  accnt_extref,
  accnt_company,
  accnt_closedpost,
  accnt_forwardupdate,
  accnt_subaccnttype_code )
VALUES (
  COALESCE(NEW.account_number, ''),
  COALESCE(NEW.description, ''),
  COALESCE(NEW.notes, ''),
  NEW.profit_center,
  NEW.sub_account,
  CASE
    WHEN NEW.type='Asset' THEN 'A'
    WHEN NEW.type='Liability' THEN 'L'
    WHEN NEW.type='Expense' THEN 'E'
    WHEN NEW.type='Revenue' THEN 'R'
    WHEN NEW.type='Equity' THEN 'Q'
    ELSE NULL
  END,
  COALESCE(NEW.ext_reference, ''),
  NEW.company,
  COALESCE(NEW.allow_posting_to_closed_periods, false),
  COALESCE(NEW.forward_update_trial_balances, false),
  COALESCE(NEW.sub_type, '') );
CREATE OR REPLACE RULE "_UPDATE" AS
    ON UPDATE TO api.glaccount DO INSTEAD
UPDATE accnt SET
  accnt_number=NEW.account_number,
  accnt_descrip=NEW.description,
  accnt_comments=NEW.notes,
  accnt_profit=NEW.profit_center,
  accnt_sub=NEW.sub_account
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (4424, "Toggle PSD", "4.1", "1.3", NULL, now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (77216, 4424, "append_toggle_psd_overlay_images", "/includes/footer.php", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (77217, 4424, "add_toggle_psd_admin_bar", "/includes/admin-bar.php", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (77218, 4424, "load_toggle_psd_assets", "/includes/load-assets.php", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (77219, 4424, "add_toggle_psd_admin_bar_subnodes", "/includes/admin-bar.php", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (77220, 4424, "register_toggle_p

insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (554441, 4424, "Toggle_PSD_Utils", "update_transient", "/includes/class-utility.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (554442, 4424, "Toggle_PSD_Utils", "get_transient", "/includes/class-utility.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (554443, 4424, "Toggle_PSD", "get_json", "/includes/class-toggle-psd.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (554444, 4424, "Toggle_PSD", "get_psds", "/includes/class-toggle-psd.php", now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (47364, 4424, "init", "'register_toggle_psd_cpt'", 0, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_call
DROP TABLE IF EXISTS  sx_clientes_credito_log
CREATE TABLE SX_CLIENTES_CREDITO_LOG
   ID bigint PRIMARY KEY NOT NULL AUTO_INCREMENT,
   CREDITO_ID bigint NOT NULL,
   POSTFECHADO bit NOT NULL,
   CLAVE varchar(7) NOT NULL,
   CNOTA bit NOT NULL,
   DESC_ESTIMADO double,
   DIA_COBRO int NOT NULL,
   DIA_REVISION int NOT NULL,
   LINEA decimal(19,2),
   LINEA_MON varchar(3),
   NOMBRE varchar(255) NOT NULL,
   OPERADOR_CXC int,
   PLAZO int NOT NULL,
   REVISION bit NOT NULL,
   SUSP_DESCTO bit NOT NULL,
   CRED_SUSPENDIDO bit NOT NULL,
   VENCE_FACTURA bit NOT NULL,
   MODIFICADO datetime default NULL,
   TX_REPLICADO datetime default null
/** TRIGGER BEFORE UPDATE PARA BITACORA Y REPLICACION DE CLIENTES CREDITO **/
drop TRIGGER if exists CLIENTES_CREDITO_TRG_BU
CREATE TRIGGER CLIENTES_CREDITO_TRG_BU 
    BEFORE UPDATE ON SX_CLIENTES_CREDITO
    FOR EACH ROW     
    BEGIN          
            INSERT INTO SX_CLIENTES_CREDITO_LOG (
            	CREDITO_ID
            	,POSTFECHADO
    
DO $$
  /* The only purpose of this view is to cast the number as a string because we can't touch the schema directly */
  var dropSql = "drop view if exists xt.incdtxt cascade;";
  var sql = "create or replace view xt.incdtxt as " +
   "select incdt_id, incdt_number::text, incdt_crmacct_id, incdt_cntct_id, incdt_summary, " +
   "incdt_descrip, incdt_item_id, incdt_timestamp, incdt_status, incdt_assigned_username, " +
   "incdt_incdtcat_id, incdt_incdtseverity_id, incdt_incdtpriority_id, incdt_incdtresolution_id, " +
   "incdt_lotserial, incdt_ls_id, incdt_aropen_id, incdt_owner_username, " +
   "incdt_recurring_incdt_id, incdt_updated, " +
   "incdt_prj_id, incdt_public, obj_uuid " +
   "from incdt ";
  try {
    plv8.execute(sql);
  } catch (error) {
    /* let's cascade-drop the view and try again */
    plv8.execute(dropSql);
    plv8.execute(sql);
  }
$$ language plv8;
revoke all on xt.incdtxt from public;
grant all on table xt.incdtxt to group xtrole;
create or replace rule "_INS

insert into incdt (
  incdt_id,
  incdt_number,
  incdt_crmacct_id,
  incdt_cntct_id,
  incdt_summary,
  incdt_descrip,
  incdt_item_id,
  incdt_timestamp,
  incdt_status,
  incdt_assigned_username,
  incdt_incdtcat_id,
  incdt_incdtseverity_id,
  incdt_incdtpriority_id,
  incdt_incdtresolution_id,
  incdt_ls_id,
  incdt_aropen_id,
  incdt_owner_username,
  incdt_recurring_incdt_id,
  incdt_updated,
  incdt_prj_id,
  incdt_public,
  obj_uuid
) values (
  new.incdt_id,
  new.incdt_number::integer,
  new.incdt_crmacct_id,
  new.incdt_cntct_id,
  new.incdt_summary,
  new.incdt_descrip,
  new.incdt_item_id,
  coalesce(new.incdt_timestamp, now()),
  coalesce(new.incdt_status, 'N'),
  new.incdt_assigned_username,
  new.incdt_incdtcat_id,
  new.incdt_incdtseverity_id,
  new.incdt_incdtpriority_id,
  new.incdt_incdtresolution_id,
  new.incdt_ls_id,
  new.incdt_aropen_id,
  new.incdt_owner_username,
  new.incdt_recurring_incdt_id,
  coalesce(new.incdt_updated, now()),
  new.incdt_prj_id,
  new

  coalesce(new.obj_uuid, xt.uuid_generate_v4())
);
create or replace rule "_UPDATE" as on update to xt.incdtxt do instead
update incdt set
  incdt_number = new.incdt_number::integer,
  incdt_crmacct_id = new.incdt_crmacct_id,
  incdt_cntct_id = new.incdt_cntct_id,
  incdt_summary = new.incdt_summary,
  incdt_descrip  = new.incdt_descrip,
  incdt_item_id = new.incdt_item_id,
  incdt_timestamp = new.incdt_timestamp,
  incdt_status = new.incdt_status,
  incdt_assigned_username = new.incdt_assigned_username,
  incdt_incdtcat_id = new.incdt_incdtcat_id,
  incdt_incdtseverity_id = new.incdt_incdtseverity_id,
  incdt_incdtpriority_id = new.incdt_incdtpriority_id,
  incdt_incdtresolution_id = new.incdt_incdtresolution_id,
  incdt_ls_id = new.incdt_ls_id,
  incdt_aropen_id = new.incdt_aropen_id,
  incdt_owner_username = new.incdt_owner_username,
  incdt_recurring_incdt_id = new.incdt_recurring_incdt_id,
  incdt_updated = new. incdt_updated,
  incdt_prj_id = new. incdt_prj_id,
  incdt_public = 
Alter VIEW [dbo].[TopicsComplete]   
AS  
SELECT  
	T.TopicId  
	,T.TopicTitle  
	,T.TopicShortName  
	,T.TopicDescription  
	,T.TopicCreationDate  
	,T.TopicViews  
	,T.TopicReplies  
	,T.UserId  
	,T.TopicTags  
	,T.TopicIsClose  
	,T.TopicOrder  
	,T.LastMessageId  
	,U.UserName
	,U.UserPhoto
	,U.UserRegistrationDate
	,U.UserSignature
	,U.UserGroupId
	,F.ForumId  
	,F.ForumName  
	,F.ForumShortName
	,CASE   
	WHEN ISNULL(T.ReadAccessGroupId, -1) >= ISNULL(F.ReadAccessGroupId, -1) THEN T.ReadAccessGroupId  
	ELSE F.ReadAccessGroupId END AS ReadAccessGroupId  
	,CASE   
	WHEN T.PostAccessGroupId >= ISNULL(F.ReadAccessGroupId,-1) THEN T.PostAccessGroupId -- Do not inherit post access  
	ELSE F.ReadAccessGroupId END AS PostAccessGroupId -- use the parent read access, if greater  
FROM  
	Topics T  
	INNER JOIN Users U ON U.UserId = T.UserId  
	INNER JOIN Forums F ON F.ForumId = T.ForumId  
WHERE  
	T.Active = 1  
	AND  
	F.Active = 1
Go
Alter PROCEDURE [dbo].[SPTopicsGet]
	@TopicId int=
--Login (check for password)
SELECT Password 
FROM Faculty
WHERE FacultyNumber=ourFacultyVar;
--See all requested courses by all students
SELECT DISTINCT CoursesNeeded
FROM Students;
--See courses requested by a particular student
SELECT StudentNumber, CoursesNeeded
FROM CourseStudents
WHERE StudentNumber=ourStudentVar;
--See a current course preference form for a particular faculty member
SELECT *
FROM PreferenceForm
WHERE FacultyNumber=ourFacultyVar AND Crnt='Y';
--See past course perference forms for a particular faculty member
SELECT *
FROM PreferenceForm
WHERE FacultyNumber=ourFacultyVar AND Crnt='N';
--Add a new course preference form
INSERT INTO PreferenceForm
VALUES (NewFormNumber, NewFacultyNumber, NewSemester, NewNumberOfCourses, NewCoursePrefImportance, NewDaysImportance, NewTimesImportance,
	NewCoursePref1, NewCoursePref2, NewCoursePref3, NewMorningPref, NewDayPref, NewEveningPref, NewSummerPref, 'Y');
--Update an old course preference form before the new one is created
UPD
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO
create  PROCEDURE [dbo].[GetMenuShoppingCart](@brand varchar(10)) AS
--declare @brand as varchar(10)
--set @brand = 'tts'
if (@brand = 'tts')
begin
select cat1.name 'cat1', cat2.name 'cat2', prod.name 'cat3',model.name,
model.mfgcode, model.[description], jimage.image_id
from jnctbrandcat a
inner join tblcategory cat1 on cat1.[id] = a.category_id and cat1.active
= 1
inner join jnctcatsubcat jntcat1 on jntcat1.category_id = cat1.[id]
inner join tblcategory cat2 on cat2.[id]= jntcat1.subcategory_id
inner join jnctcatprod catprod on catprod.category_id = cat2.id
inner join tblproduct prod on prod.id = catprod.product_id
inner join jnctprodmodel prodmod on prodmod.product_id = prod.id
inner join tblmodel model on model.id = prodmod.model_id
inner join jnctimage jimage on jimage.objid =model.id and lower(objtype)
= 'model'
where lower(a.brand_code) = @brand
union 
select cat1.name 'cat1', prod.name 'cat2', '' as 'cat3' , model.name,
model.m

from jnctbrandcat a
inner join tblcategory cat1 on cat1.[id] = a.category_id and cat1.active
= 1
--inner join jnctcatsubcat jntcat1 on jntcat1.category_id = cat1.[id]
--inner join tblcategory cat2 on cat2.[id]= jntcat1.subcategory_id
inner join jnctcatprod catprod on catprod.category_id = cat1.id
inner join tblproduct prod on prod.id = catprod.product_id
inner join jnctprodmodel prodmod on prodmod.product_id = prod.id
inner join tblmodel model on model.id = prodmod.model_id
inner join jnctimage jimage on jimage.objid =model.id  and
lower(objtype) = 'model'
where a.brand_code = @brand and cat1.name in ('Fan Coils', 'Air
Handlers')
end
else if (@brand = 'kru')
begin
select cat1.name 'cat1',  prod.name 'cat2','' as 'cat3', model.name,
model.mfgcode,dbo.getmodeldetaildesc(model.id), jimage.image_id
from jnctbrandcat a
inner join tblcategory cat1 on cat1.[id] = a.category_id and cat1.active
= 1
--inner join jnctcatsubcat jntcat1 on jntcat1.category_id = cat1.[id]
--inner join tblcategory c

inner join jnctcatprod catprod on catprod.category_id = cat1.id
inner join tblproduct prod on prod.id = catprod.product_id
inner join jnctprodmodel prodmod on prodmod.product_id = prod.id
inner join tblmodel model on model.id = prodmod.model_id
inner join jnctimage jimage on jimage.objid =model.id and lower(objtype)
= 'model'
where lower(a.brand_code) = @brand
end
else if (@brand = 'tnb')
begin
select  cat1.name 'cat1',prod.name 'cat2', '' as 'cat3', model.name,
model.mfgcode, model.[description], jimage.image_id
from jnctbrandcat a
inner join tblcategory cat1 on cat1.[id] = a.category_id and cat1.active
= 1
--inner join jnctcatsubcat jntcat1 on jntcat1.category_id = cat1.[id]
--inner join tblcategory cat2 on cat2.[id]= jntcat1.subcategory_id
inner join jnctcatprod catprod on catprod.category_id = cat1.id
inner join tblproduct prod on prod.id = catprod.product_id
inner join jnctprodmodel prodmod on prodmod.product_id = prod.id
inner join tblmodel model on model.id = prodmod.model_id
i
CREATE TABLE "WRKCRD"."CC_WRKCRD_DECISION_RDR"
  (
    "APDC_CODE"  VARCHAR2(2 BYTE) NOT NULL ENABLE,
    "START_TERM" VARCHAR2(10 BYTE) NOT NULL ENABLE,
    "END_TERM"   VARCHAR2(10 BYTE),
    CONSTRAINT "CC_WRKCRD_DECISION_RDR_PK" PRIMARY KEY ("APDC_CODE") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) TABLESPACE "CC_DEVELOPMENT" ENABLE
  )
  SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING STORAGE
  (
    INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT
  )
  TABLESPACE "CC_DEVELOPMENT" ;
  
INSERT INTO "WRKCRD"."CC_WRKCRD_DECISION_RDR" (APDC_CODE, START_TERM) VALUES ('A+', '201190');	
INSERT INTO "WRKCRD"."CC_WRKCRD_DECISION
﻿CREATE TABLE [dbo].[RUNPROC_READONLY] (
    [PROC_NAME]              VARCHAR (255) NOT NULL,
    [READ_ONLY]              BIT           CONSTRAINT [DF_RUNPROC_READONLY_READ_ONLY] DEFAULT ((1)) NOT NULL,
    [IS_AUTO_SET]            BIT           CONSTRAINT [DF_RUNPROC_READONLY_IS_AUTO_SET] DEFAULT ((0)) NOT NULL,
    [READ_REPLICA_SUPPORTED] AS            (case when [read_only]=(1) AND [is_auto_set]=(0) then (1) else (0) end) PERSISTED NOT NULL,
    [LAST_MOD_BY]            INT           NULL,
    [LAST_MODIFIED_DATE_UTC] DATETIME      NULL,
    CONSTRAINT [PK_RUNPROC_READONLY] PRIMARY KEY CLUSTERED ([PROC_NAME] ASC)
);
GO
CREATE TRIGGER ins_upd_del_RUNPROC_READONLY ON
	RUNPROC_READONLY
AFTER INSERT, UPDATE, DELETE
AS
	Set nocount on
	declare @oper char(1)
	if update(PROC_NAME)
		set @oper = 'i'
	else if exists (select 1 from inserted)
		set @oper = 'u'
	else
		set @oper = 'd'
	if @oper = 'i' or @oper = 'u'
		BEGIN
			INSERT INTO RUNPROC_READONLY_HIST (PROC_NAME, READ_ONLY, IS_AUTO_SE
DROP TRIGGER IF EXISTS `c_student_ia`//
CREATE definer=`dbadmin`@`localhost` trigger `c_student_ia` AFTER INSERT ON `c_student`
  FOR EACH ROW
/*
$Rev: 7374 $ 
$Author: randall.stanley $ 
$Date: 2009-07-15 13:26:40 -0400 (Wed, 15 Jul 2009) $
$HeadURL: http://atlanta-web.performancematters.com:8099/svn/pminternal/Data/Redwood/Core/triggers/c_student_ia.sql $
$Id: c_student_ia.sql 7374 2009-07-15 17:26:40Z randall.stanley $ 
*/
BEGIN
    if new.login is not null then
        select  client_code
        into    @client_code
        from    pmi_admin.pmi_client
        where   client_id = new.client_id
        ;
        
        insert into pmi_user.ola_student_login 
            
        set client_id = new.client_id
            ,student_id = new.student_id
            ,client_code = @client_code
            ,login = new.login
            ,`password` = new.`password`
            ,active_flag = new.active_flag
            ,create_timestamp = new.create_timestamp
            
        on dup
SELECT DateTime('now'),'create_berlin_segments_db.sql [begin] -with "BEGIN" and "COMMIT"';
SELECT DateTime('now'),'sample: spatialite berlin_segments.db < create_berlin_segments_db.sql';
--- 
-- BEGIN/COMMIT done in script
.read ../source_sql/create_berlin_admin_tables.sql UTF8
---
--- 
-- BEGIN/COMMIT done in script
-- importing older format berlin_ortsteil_segments into new format berlin_ortsteil_segments
-- .read ../source_sql/import_berlin_ortsteil_segmente.sql UTF8
-- importing and rebuilding geometries of  berlin_ortsteil_segments
.read ../source_sql/import_berlin_segments.sql UTF8
---
-- BEGIN/COMMIT done in script
.read ../source_sql/create_segments_spatialviews.sql UTF8
-- BEGIN/COMMIT done in script
.read ../source_sql/build_berlin_geometries.sql UTF8
.read ../source_sql/create_berlin_geometries_spatialviews.sql UTF8
-- SELECT * FROM berlin_geometries WHERE soldner_polygon IS NULL AND soldner_segments IS NOT NULL;
SELECT DateTime('now'),'Updating Statistics';
SELECT UpdateLay
/*
 Navicat Premium Data Transfer
 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 50527
 Source Host           : localhost
 Source Database       : mifan
 Target Server Type    : MySQL
 Target Server Version : 50527
 File Encoding         : utf-8
 Date: 01/02/2013 18:26:36 PM
*/
SET NAMES utf8;
SET FOREIGN_KEY_CHECKS = 0;
-- ----------------------------
--  Table structure for `user`
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `uid` int(11) NOT NULL AUTO_INCREMENT,
  `email` text,
  `password` text,
  `username` text,
  `intro` text,
  `avatar` text,
  `cover` text,
  `plus` int(11) DEFAULT NULL,
  `followers` int(11) DEFAULT NULL,
  `posts` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `updated` datetime DEFAULT NULL,
  `last_login` datetime DEFAULT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
delimiter ;;
CREATE TRIGGER `user_delete_trigger` BEFORE DE

        DELETE FROM topic WHERE topic.author_id = OLD.uid;
        DELETE FROM reply WHERE reply.author_id = OLD.uid;
        DELETE FROM notification WHERE notification.trigger_user_id = OLD.uid;
        DELETE FROM notification WHERE notification.involved_user_id = OLD.uid;
    END;
 ;;
delimiter ;
-- ----------------------------
--  Table structure for `post`
-- ----------------------------
DROP TABLE IF EXISTS `post`;
CREATE TABLE `post` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `author_id` int(11) DEFAULT NULL,
  `channel_id` int(11) DEFAULT NULL,
  `nav_id` int(11) DEFAULT NULL,
  `video_id` int(11) DEFAULT NULL,
  `last_comment` int(11) DEFAULT NULL,
  `comment_count` int(11) DEFAULT 0,
  `intro` text,  
  `score` float(3,1) DEFAULT 0,
  `votes` int(11) DEFAULT 0,
  `favorite` int(11) DEFAULT 0,  
  `spam` int(11) DEFAULT 0, 
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
delimiter ;;
CREATE TRIGGER `post_delete_

        DELETE FROM comment WHERE comment.post_id = OLD.id;
    END;
 ;;
delimiter ;
-- ----------------------------
--  Table structure for `post`
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `author_id` int(11) DEFAULT NULL,
  `post_id` int(11) DEFAULT NULL,
  `content` text,  
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `video`
-- ----------------------------
DROP TABLE IF EXISTS `video`;
CREATE TABLE `video` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `source` text,
  `flash` text,
  `link` text,
  `title` text,
  `thumb` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `channel`
-- ----------------------------
DROP TABLE IF EXISTS `channel`;
CREATE TABLE `channel` (
  `id` int(11) NOT NU
-- Trigger to insert into a new table everytime any change is made in the Takes table
SET SERVEROUTPUT ON;
DROP TABLE Log_Change_Takes;
CREATE TABLE Log_Change_Takes (
	ID VARCHAR(8),
	type VARCHAR(6),
	toc TIMESTAMP,
	course_id VARCHAR(8),
	sec_id VARCHAR(8),
	semester VARCHAR(8),
	year NUMERIC(4, 0),
	grade VARCHAR(2),
	PRIMARY KEY (ID, toc, course_id, sec_id, semester, year)
);
CREATE OR REPLACE TRIGGER Log_Change_Takes 
BEFORE INSERT OR UPDATE OR DELETE ON Takes FOR EACH ROW
BEGIN
	CASE
		WHEN INSERTING THEN
			INSERT INTO Log_Change_Takes VALUES (:NEW.ID, 'INSERT', CURRENT_TIMESTAMP, :NEW.course_id, :NEW.sec_id, :NEW.semester, :NEW.year, :NEW.grade);
			DBMS_OUTPUT.PUT_LINE('INSERT ' || :NEW.ID);
		WHEN DELETING THEN
			INSERT INTO Log_Change_Takes VALUES (:OLD.ID, 'DELETE', CURRENT_TIMESTAMP, :OLD.course_id, :OLD.sec_id, :OLD.semester, :OLD.year, :OLD.grade);
			DBMS_OUTPUT.PUT_LINE('DELETE ' || :OLD.ID);
		WHEN UPDATING THEN
			INSERT INTO Log_Change_Takes VALUES (:NEW.ID, 'UPDA
ALTER TABLE `sizes` CHANGE `size_title` `size_title` varchar(255) default NULL;
ALTER TABLE `sizes` CHANGE `size_label` `size_label` varchar(255) default NULL;
ALTER TABLE `sizes` CHANGE `size_height` `size_height` smallint(5) UNSIGNED default NULL;
ALTER TABLE `sizes` CHANGE `size_width` `size_width` smallint(5) UNSIGNED default NULL;
ALTER TABLE `sizes` CHANGE `size_append` `size_append` varchar(16) default NULL;
ALTER TABLE `sizes` CHANGE `size_prepend` `size_prepend` varchar(16) default NULL;
ALTER TABLE `sizes` CHANGE `size_watermark` `size_watermark` tinyint(3) UNSIGNED default NULL;
ALTER TABLE `guests` CHANGE `guest_title` `guest_title` varchar(255) default NULL;
ALTER TABLE `pages` CHANGE `page_title` `page_title` varchar(255) default NULL;
ALTER TABLE `posts` CHANGE `post_title` `post_title` varchar(255) default NULL;
ALTER TABLE `rights` CHANGE `right_title` `right_title` varchar(255) default NULL;
ALTER TABLE `sets` CHANGE `set_title` `set_title` varchar(255) default NULL;

  CREATE TABLE "REFERENCIA"."TPRY_PROVEEDORES" 
   (	"IDPROVEEDOR" NUMBER(*,0) NOT NULL ENABLE, 
	"RAZONSOCIAL" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"DOMICILIOFISCAL" VARCHAR2(200 BYTE), 
	"DOMCORRESPONDENCIA" VARCHAR2(200 BYTE), 
	"REGISTROABAST" NUMBER, 
	"REGISTROPROYECTOS" NUMBER, 
	"ZONA" NUMBER, 
	 CONSTRAINT "TPRY_PROVEEDORES_PK" PRIMARY KEY ("IDPROVEEDOR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA"  ENABLE, 
	 CONSTRAINT "FK01_TPRY_PROVEEDORES" FOREIGN KEY ("ZONA")
	  REFERENCES "REFERENCIA"."TGEN_ZONA_PROVEEDOR" ("IDZONA") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  
-- MySQL dump 10.13  Distrib 5.5.28, for Win32 (x86)
--
-- Host: 223.4.155.152    Database: topdata2
-- ------------------------------------------------------
-- Server version	5.5.24-log
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET
# ************************************************************
# Sequel Pro SQL dump
# Version 3408
# http://www.sequelpro.com/
# http://code.google.com/p/sequel-pro/
# Host: 127.0.0.1 (MySQL 5.5.9)
# Database: magicstuff
# Generation Time: 2012-07-13 16:04:43 +0000
# ************************************************************
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
# Dump of table nav
# ------------------------------------------------------------
DROP TABLE IF EXISTS `nav`;
CREATE TABLE `nav` (
  `nav_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `nav_url_link` varchar(120) DEFAULT NU

  `nav_url_name` varchar(25) DEFAULT NULL,
  `date_uploaded` datetime DEFAULT NULL,
  `nav_enable` tinyint(1) DEFAULT '1',
  PRIMARY KEY (`nav_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
LOCK TABLES `nav` WRITE;
/*!40000 ALTER TABLE `nav` DISABLE KEYS */;
INSERT INTO `nav` (`nav_id`, `nav_url_link`, `nav_url_name`, `date_uploaded`, `nav_enable`)
VALUES
	(1,'bio','STUFF\'S Bio','2012-07-12 00:00:00',1),
	(2,'photo','Photos','2012-07-12 00:00:00',1),
	(3,'viedo','Videos','2012-07-12 00:00:00',1),
	(4,'book','Book STUFF!','2012-07-12 00:00:00',1),
	(5,'13b413','13 Before 13','2012-07-12 00:00:00',1),
	(6,'school','STUFF\'S School Show','2012-07-12 00:00:00',1),
	(7,'fb','Face Book','2012-07-12 00:00:00',1),
	(8,'twitter','Twiter','2012-07-12 00:00:00',1);
/*!40000 ALTER TABLE `nav` ENABLE KEYS */;
UNLOCK TABLES;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@
DELIMITER $$
DROP TRIGGER IF EXISTS `drug_order_after_update`$$
CREATE TRIGGER `drug_order_after_update` AFTER UPDATE 
ON `drug_order`
FOR EACH ROW
BEGIN
    SET @visit = (SELECT COALESCE((SELECT id FROM flat_table2 WHERE  
        (drug_order_id1 = new.order_id OR drug_order_id2 = new.order_id OR drug_order_id3 = new.order_id OR
        drug_order_id4 = new.order_id OR drug_order_id5 = new.order_id)), 0));
    
    SET @drug_set1 = (SELECT COALESCE(drug_order_id1, '') FROM flat_table2 WHERE ID = @visit AND drug_order_id1 = new.order_id);
    
    SET @drug_set2 = (SELECT COALESCE(drug_order_id2, '') FROM flat_table2 WHERE ID = @visit AND drug_order_id2 = new.order_id);
    
    SET @drug_set3 = (SELECT COALESCE(drug_order_id3, '') FROM flat_table2 WHERE ID = @visit AND drug_order_id3 = new.order_id);
    
    SET @drug_set4 = (SELECT COALESCE(drug_order_id4, '') FROM flat_table2 WHERE ID = @visit AND drug_order_id4 = new.order_id);
    
    SET @drug_set5 = (SELECT COALESCE(drug_order

    CASE 
        WHEN @drug_set1 != "" THEN
            
            SET @drug_name = (SELECT name FROM drug WHERE drug_id = new.drug_inventory_id LIMIT 1);
            
            SET @encounter_id = (SELECT encounter_id FROM orders WHERE order_id = new.order_id LIMIT 1);
               
            UPDATE flat_table2 SET drug_inventory_id1 = new.drug_inventory_id, drug_name1 = @drug_name, drug_equivalent_daily_dose1 = new.equivalent_daily_dose, drug_dose1 = new.dose, drug_frequency1 = new.frequency,drug_quantity1 = new.quantity, drug_quantity1_enc_id = @encounter_id WHERE flat_table2.id = @visit;
                
        WHEN @drug_set2 != "" THEN        
             
            SET @drug_name = (SELECT name FROM drug WHERE drug_id = new.drug_inventory_id LIMIT 1);
            
            SET @encounter_id = (SELECT encounter_id FROM orders WHERE order_id = new.order_id LIMIT 1);
               
            UPDATE flat_table2 SET drug_inventory_id2 = new.drug_inventory_id, drug

                
        WHEN @drug_set3 != "" THEN
         
            SET @drug_name = (SELECT name FROM drug WHERE drug_id = new.drug_inventory_id LIMIT 1);
            
            SET @encounter_id = (SELECT encounter_id FROM orders WHERE order_id = new.order_id LIMIT 1);
               
            UPDATE flat_table2 SET drug_inventory_id3 = new.drug_inventory_id, drug_name3 = @drug_name, drug_equivalent_daily_dose3 = new.equivalent_daily_dose, drug_dose3 = new.dose, drug_frequency3 = new.frequency,drug_quantity3 = new.quantity, drug_quantity3_enc_id = @encounter_id WHERE flat_table2.id = @visit;
                
        WHEN @drug_set4 != "" THEN
         
            SET @drug_name = (SELECT name FROM drug WHERE drug_id = new.drug_inventory_id LIMIT 1);
            
            SET @encounter_id = (SELECT encounter_id FROM orders WHERE order_id = new.order_id LIMIT 1);
               
            UPDATE flat_table2 SET drug_inventory_id4 = new.drug_inventory_id, drug_name4 =
SELECT b.id as b_id, s1.username as s1_u, s2.username as s2_u,  s1.id as s1_id,
s2.id as s2_id FROM Battle b, Shredder s1, Shredder s2
WHERE (shredder1 IN (SELECT f.FaneeId FROM Fan f, Shredder s WHERE f.FanerId = s.id AND f.FanerId = 4089) 
OR shredder2 IN (SELECT f.FaneeId FROM Fan f, Shredder s WHERE f.FanerId = s.id AND f.FanerId = 4089)) 
AND shredder1 != 4089 AND shredder2 != 4089 AND b.Shredder1 = s1.id AND b.Shredder2 = s2.id ORDER BY b.TimeCreated DESC LIMIT 20; -- Get Faneee id
SELECT b.id as b_id, s1.username as s1_u, s2.username as s2_u,
s1.id as s1_id, s2.id as s2_id FROM Battle b, Shredder s1, Shredder s2
WHERE (shredder1 IN (SELECT f.FaneeId FROM Fan f, Shredder s WHERE
f.FanerId = s.id AND f.FanerId = ? OR shredder2 IN
(SELECT f.FaneeId FROM Fan f, Shredder s WHERE 
f.FanerId = s.id AND f.FanerId = ?)) AND shredder1 != ? AND shredder2 != ? 
AND b.Shredder1 = s1.id AND b.Shredder2 = s2.id ORDER BY b.TimeCreated DESC LIMIT 20
SELECT * FROM Shredder;
SELECT f.FaneeId FROM 

-- Get Fanee as shredders
SELECT * FROM Shredder WHERE Id IN (SELECT f.FaneeId FROM Fan f, Shredder s WHERE f.FanerId = s.id AND f.FanerId = 6);
-- Get Battle shreds from fanees
SELECT * FROM ShredForBattle sfb, Shred s, Battle b, Shredder sh WHERE 
sfb.ShredId = s.id AND sfb.battleId = b.id and s.owner = sh.id AND s.owner != 6 AND s.owner IN (SELECT f.FaneeId FROM Fan f, Shredder s WHERE f.FanerId = s.id AND f.FanerId = 6) ORDER BY s.timecreated DESC;
SELECT * FROM Shredder s, GuitarForShredder gs, EquiptmentForShredder es WHERE s.id = gs.ShredderId	and s.id = es.ShredderId;
-- Get battles
SELECT * FROM Battle ORDER BY TimeCreated DESC;
SELECT * FROM Shredder WHERE username like 'slash';
SELECT * FROM Shredder WHERE id = 9;
-- Get battles from fanees
SELECT * FROM Battle WHERE 
	(shredder1 IN (SELECT f.FaneeId FROM Fan f, Shredder s WHERE f.FanerId = s.id AND f.FanerId = 6)
	OR shredder2 IN (SELECT f.FaneeId FROM Fan f, Shredder s WHERE f.FanerId = s.id AND f.FanerId = 6))
	AND shred

	ORDER BY TimeCreated DESC;
SELECT Distinct ON (s.id) s.id, s.username, s.birthdate, s.email, s.password, s.description, s.address, s.timecreated, s.profileimage, s.experiencepoints, s.timeCreated, gs.guitar, es.equiptment FROM Shredder s, GuitarForShredder gs, EquiptmentForShredder es WHERE s.id = gs.ShredderId and s.id = es.ShredderId and s.id != 6 and (s.address LIKE '%Oslo, Norway%' OR gs.guitar like 'Fender Stratocaster' OR es.Equiptment like 'Fender reverb' );
SELECT Distinct ON (s.id) s.id, s.username, s.birthdate, 
				s.email, s.password, s.description, s.address, s.timecreated, s.profileimage,
				 s.experiencepoints, s.timeCreated, gs.guitar, es.equiptment FROM Shredder s, GuitarForShredder
				 gs, EquiptmentForShredder es WHERE s.id = gs.ShredderId and s.id = es.ShredderId
				 and s.id != 6 AND (s.address LIKE 'Oslo, Norway' OR gs.guitar like 'Fender Stratocaster' OR es.Equiptment like 'Fender reverb');
		
		// Add guitars
		for ( String g : shredder.getGuitars() ) {
			
-- phpMyAdmin SQL Dump
-- version 3.3.7deb5build0.10.10.1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Jun 11, 2011 at 09:53 PM
-- Server version: 5.1.49
-- PHP Version: 5.3.3-1ubuntu9.5
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `tukang`
--
-- --------------------------------------------------------
--
-- Table structure for table `wp_images`
--
CREATE TABLE IF NOT EXISTS `wp_images` (
  `images_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `source` text,
  `slug` text,
  PRIMARY KEY (`images_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
--
-- Dumping data for table `wp_images`
--
-- --------------------------------------------------------
--
-- Tabl

--
CREATE TABLE IF NOT EXISTS `wp_poster` (
  `post_id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `category` varchar(100) DEFAULT NULL,
  `status` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`post_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=173 ;
--
-- Dumping data for table `wp_poster`
--
INSERT INTO `wp_poster` (`post_id`, `title`, `category`, `status`) VALUES
(152, '2010 Land Rover Range Rover Sport Autobiography', 'Lamborghini', 'new'),
(151, '2010 Land Rover Range Rover Sport', 'Lamborghini', 'new'),
(149, '2010 Land Rover Range Rover', 'Lamborghini', 'new'),
(150, '2010 Land Rover Range Rover Autobiography Black', 'Lamborghini', 'new'),
(148, '2010 Land Rover Discovery 4', 'Lamborghini', 'new'),
(147, '2010 Holland & Holland Range Rover by Overfinch', 'Lamborghini', 'new'),
(136, '2010 Lamborghini Murcielago LP 670-4 China', 'Lamborghini', 'posted'),
(137, '2010 Lamborghini Reventon Roadster', 'Lamborghini', 'new'),
(138, '2010 Lamborgh

(139, '2010 Wheelsandmore Lamborghini Gallardo LP 620', 'Lamborghini', 'new'),
(140, '2011 Edo Competition Lamborghini Murcielago LP750', 'Lamborghini', 'new'),
(141, '2011 Hamann Lamborghini Gallardo LP560-4 Victory', 'Lamborghini', 'new'),
(146, '2009 Startech Land Rover Range Rover', 'Lamborghini', 'new'),
(145, '2009 Project Kahn Range Rover Vogue', 'Lamborghini', 'new'),
(144, '2011 Lamborghini Gallardo 570-4 Spyder Performante', 'Lamborghini', 'new'),
(143, '2011 Lamborghini Gallardo LP570-4 Blancpain', 'Lamborghini', 'new'),
(142, '2011 Lamborghini Gallardo LP 560-4 Bicolore', 'Lamborghini', 'new'),
(128, '2009 Reiter Lamborghini Gallardo GT3 Strada', 'Lamborghini', 'new'),
(129, '2009 Reiter Lamborghini Murcielago Streetversion', 'Lamborghini', 'new'),
(130, '2010 BF-performance Lamborghini Gallardo GT600', 'Lamborghini', 'new'),
(131, '2010 Edo Competition Lamborghini Gallardo LP600/4', 'Lamborghini', 'new'),
(132, '2010 ENCO Exclusive Lamborghini Gallardo LP 560-4', 'Lamborg
  CREATE TABLE "BI"."SHATIPAC" 
   (	"CODIGO" VARCHAR2(2 BYTE) NOT NULL ENABLE, 
	"DESCR" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"USRCRE" VARCHAR2(100 BYTE), 
	"FECCRE" DATE, 
	"USRACT" VARCHAR2(100 BYTE), 
	"FECACT" DATE, 
	 CONSTRAINT "SHATIPAC_PK" PRIMARY KEY ("CODIGO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
   COMMENT ON COLUMN "BI"."SHATIPAC"."CODIGO" IS 'CODIGO DEL TIPO DE ACCIDENTE';
   COMMENT ON COLUMN "BI"."SHATIPAC"."DESCR" IS 'DESCRIPCI
CREATE TABLE tx_t3m_salutations (
  uid int(11) NOT NULL auto_increment,
  pid int(11) NOT NULL default '0',
  tstamp int(11) NOT NULL default '0',
  crdate int(11) NOT NULL default '0',
  cruser_id int(11) NOT NULL default '0',
  deleted tinyint(4) NOT NULL default '0',
  hidden tinyint(4) NOT NULL default '0',
  name tinytext NOT NULL,
  single_female text NOT NULL,
  single_male text NOT NULL,
  plural text NOT NULL,
  sys_language_uid int(11) NOT NULL default '0',
  l18n_parent int(11) NOT NULL default '0',
  l18n_diffsource mediumblob NOT NULL,
  sorting int(10) NOT NULL default '0',
  include_first_name tinyint(3) NOT NULL default '0',
  include_last_name tinyint(3) NOT NULL default '0',
  append_comma tinyint(3) NOT NULL default '0',
  append tinytext NOT NULL,
  PRIMARY KEY  (uid),
  KEY parent (pid)
)  ;
INSERT INTO tx_t3m_salutations VALUES (1, 139, 1165483416, 1160918024, 2, 0, 0, 'Sehr geehrte ...', 'Sehr geehrte Frau', 'Sehr geehrter Herr', 'Sehr geehrte Damen und Herren',

INSERT INTO tx_t3m_salutations VALUES (2, 139, 1165483407, 1160951558, 2, 0, 0, 'Hallo Frau und Herr', 'Hallo Frau', 'Hallo Herr', 'Hallo', 0, 0, 'a:9:{s:16:"sys_language_uid";N;s:6:"hidden";N;s:4:"name";N;s:13:"single_female";N;s:11:"single_male";N;s:6:"plural";N;s:18:"include_first_name";N;s:17:"include_last_name";N;s:6:"append";N;}', 256, 0, 1, 0, '!');
INSERT INTO tx_t3m_salutations VALUES (3, 139, 1165483395, 1161050687, 2, 0, 0, 'Lieber/Liebe', 'Liebe Frau', 'Lieber Herr', 'Liebe Interessenten', 0, 0, 'a:9:{s:16:"sys_language_uid";N;s:6:"hidden";N;s:4:"name";N;s:13:"single_female";N;s:11:"single_male";N;s:6:"plural";N;s:18:"include_first_name";N;s:17:"include_last_name";N;s:6:"append";N;}', 128, 0, 1, 0, ',');
INSERT INTO tx_t3m_salutations VALUES (4, 139, 1165483388, 1165475099, 2, 0, 0, 'Dear', 'Dear Mrs.', 'Dear Mr.', 'Dear Ladies and Gentlemen', 0, 0, 'a:9:{s:16:"sys_language_uid";N;s:6:"hidden";N;s:4:"name";N;s:13:"single_female";N;s:11:"single_male";N;s:6:"plural";N;s:18:"
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2014-04-09 10:39:08','','farcry_CLIENTUD','','farcry','','','2007-12-17 16:18:21',0,'approved','','E689D721-B6C9-605B-DE1D813E4CDA3339','_self','aObjectIDs','home','Home','Home','','');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2013-11-11 14:59:49','','farcry_CLIENTUD','','farcry','','','2007-12-17 16:18:21',0,'approved','','E689D729-0081-4050-6D2273E9D9B6389F','_self','aObjectIDs','rubbish','Trash','Trash','','');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,External

INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2013-11-11 14:59:25','','farcry_CLIENTUD','','farcry','','','2007-12-17 16:18:21',0,'approved','','E689D720-B19E-FC94-66DD3411BED0693C','_self','aObjectIDs','root','Root','Root','','');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2011-11-11 10:37:36','','farcry_CLIENTUD','','farcry_CLIENTUD','','','2011-11-11 10:37:36',0,'draft','','5A3BB780-0BFD-11E1-BAE44A60BC869D4C','','aObjectIDs','','(incomplete)','','','CDD3B33E-A463-9B75-DC0150D316830765');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,dateti

INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2011-11-11 10:35:50','','farcry_CLIENTUD','','farcry_CLIENTUD','','','2011-11-11 10:35:50',0,'draft','','1AC64B60-0BFD-11E1-BAE44A60BC869D4C','','aObjectIDs','','(incomplete)','','','CDD3B33E-A463-9B75-DC0150D316830765');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2011-11-11 10:35:20','','farcry_CLIENTUD','','farcry_CLIENTUD','','','2011-11-11 10:35:20',0,'draft','','0909BC90-0BFD-11E1-BAE44A60BC869D4C','','aObjectIDs','','(incomplete)','','','CDD3B33E-A463-9B75-DC0150D316830765');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,created
!table
!version 410
!charset WindowsLatin1
Definition Table
  Type ACCESS TABLE "mst_ic_RoofTargets_ac" Charset "WindowsLatin1"
  Fields 34
    icID Integer Index 1 ;
    rICID Char (5) ;
    parcelID Integer Index 2 ;
    divideID Smallint ;
    dscID Integer ;
    nGTORoof Char (6) ;
    exICFtRoof Integer ;
    exRfAreaFt Integer ;
    externalDS Logical ;
    dsTotal Smallint ;
    extoVeg Smallint ;
    extoStreet Smallint ;
    extoPlanter Smallint ;
    extoBioretention Smallint ;
    extoDrywell Smallint ;
    extoEcoroof Smallint ;
    dstoVeg Smallint ;
    dstoStreet Smallint ;
    dstoPlanter Smallint ;
    dstoBioretention Smallint ;
    dstoDrywell Smallint ;
    dstoEcoroof Smallint ;
    dsUncontrollable Smallint ;
    landscapeAvailable Logical ;
    fractionDrained Float ;
    difficulty Smallint ;
    roofEffDisc Float ;
    comments Char (254) ;
    plantersOK Logical ;
    bioretentionOK Logical ;
    buildModelIC Logical Index 3 ;
    source Char (15) ;
    append
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
SELECT 't1', path, ST_AsText(geom) 
FROM (
  SELECT (ST_Dump(g.geom)).* 
  FROM
    (SELECT 
       'POINT (0 9)'::geometry AS geom
    ) AS g
  ) j;
  
SELECT 't2', path, ST_AsText(geom) 
FROM (
  SELECT (ST_Dump(g.geom)).* 
  FROM
    (SELECT 
       'LINESTRING (
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            )'::geometry AS geom
    ) AS g
  ) j;
  
SELECT 't3', path, ST_AsText(geom) 
FROM (
  SELECT (ST_Dump(g.geom)).* 
  FROM
    (SELECT 
       'POLYGON ((
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT 't4', path, ST_AsText(geom) 
FROM (
  SELECT (ST_Dump(g.geom)).* 
  FROM
    (SELECT 
       'TRIANGLE ((
                0 0, 
                0 9, 
                9 0, 
                0 0
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT 't5', path, ST_AsText(geom) 
FROM (
  SEL

  FROM
    (SELECT 
       'POLYGON ((
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            ), (
                1 1, 
                1 3, 
                3 2, 
                1 1
            ), (
                7 6, 
                6 8, 
                8 8, 
                7 6
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT 't6', path, ST_AsText(geom) 
FROM (
  SELECT (ST_Dump(g.geom)).* 
  FROM
    (SELECT 
       'MULTIPOLYGON (((
                0 0, 
                0 3, 
                4 3, 
                4 0, 
                0 0
            )), ((
                2 4, 
                1 6, 
                4 5, 
                2 4
            ), (
                7 6, 
                6 8, 
                8 8, 
                7 6
            )))'::geometry AS geom
    ) AS g
  ) j;
SELECT 't7', path, ST_AsEWKT(geom) 
FROM (
  SELECT (ST_Dump(g.geom)).* 
   FROM
     (SELECT 
       'POLY

                0 0 0, 
                0 0 1, 
                0 1 1, 
                0 1 0, 
                0 0 0
            )), ((
                0 0 0, 
                0 1 0, 
                1 1 0, 
                1 0 0, 
                0 0 0
            ))
            )'::geometry AS geom
   ) AS g
  ) j;
SELECT 't8', path, ST_AsEWKT(geom) 
FROM (
  SELECT (ST_Dump(g.geom)).* 
   FROM
     (SELECT 
       'TIN (((
                0 0 0, 
                0 0 1, 
                0 1 0, 
                0 0 0
            )), ((
                0 0 0, 
                0 1 0, 
                1 1 0, 
                0 0 0
            ))
            )'::geometry AS geom
   ) AS g
  ) j;
SELECT 't9', path, ST_AsText(geom) 
FROM (
  SELECT (ST_Dump(g.geom)).* 
  FROM
    (SELECT 
       'GEOMETRYCOLLECTION(
          POINT(99 98), 
          LINESTRING(1 1, 3 3),
          POLYGON((0 0, 0 1, 1 1, 0 0)),
          POLYGON((0 0, 0 9, 9 9, 9 0, 0 0), (5 5, 5 6, 6 6, 5 5)),
         
CREATE TABLE on_time_performance (
	month VARCHAR, 
	airline_id VARCHAR, 
	carrier VARCHAR, 
	origin_city_name VARCHAR, 
	dest_city_name VARCHAR, 
	dep_delay_new numeric, 
	arr_delay_new numeric
);
COPY on_time_performance FROM '/home/vagrant/code/mks/11-24/on_time_performance.csv' DELIMITER ',' CSV HEADER;
//How many different airlines are represented in this dataset?
SELECT count(DISTINCT carrier)
FROM on_time_performance;
//Which airline had the largest quantity of delayed flights? Which had the fewest?
SELECT count(dep_delay_new) + count(arr_delay_new)
AS count, carrier
FROM on_time_performance
WHERE dep_delay_new > 0
OR arr_delay_new > 0
GROUP BY carrier
ORDER BY count DESC;
//Which departing airport had the highest number of delayed flights? Which had the fewest?
SELECT count(dep_delay_new), origin_city_name
FROM on_time_performance
WHERE dep_delay_new > 0
GROUP BY origin_city_name
ORDER BY count DESC;
//Which arriving airport had the highest number of delayed flights? Which had 
-- Sample script to see how things run
-- Clean Up
SELECT CleanConfigDB();
-- Test1 Sub-Configuration
SELECT CreateCrateConfiguration( 'Test1');
SELECT InsertCrateConfiguration( 'Test1'::TEXT, 0,
				 'A=>1'::HSTORE,
				 'B=>2'::HSTORE,
				 'C=>3'::HSTORE);
SELECT InsertCrateConfiguration( 'Test1', 1,
				 'A=>1'::HSTORE,
				 'B=>2'::HSTORE,
				 'C=>3'::HSTORE);
SELECT InsertCrateConfiguration( 'Test1', 1,
				 'A=>1',
				 'B=>2',
				 'C=>3');
-- Test2 Sub-Configuration
SELECT CreateCrateConfiguration( 'Test2');
SELECT InsertCrateConfiguration( 'Test2', 0,
				 'A=>1,X=>0',
				 'B=>2,Y=>0',
				 'C=>3,Z=>0');
SELECT AppendCrateConfiguration( 'Test2', 
       				 0,   --subconf 
				 1,   --crate
				 -1,  --slot
				 -1,  --channel
       				 '1'::BIT(64),
				 'X=>1' );
SELECT AppendCrateConfiguration( 'Test2', 
       				 0,   --subconf 
				 2,   --crate
				 -1,  --slot
				 -1,  --channel
       				 '11'::BIT(64),
				 'X=>2' );
SELECT AppendCrateConfiguration( 'Test2',

       				 0,   --subconf 
				 2,   --crate
				 1,  --slot
				 -1,  --channel
       				 '111'::BIT(64),
				 'Y=>1' );
SELECT AppendCrateConfiguration( 'Test2', 
       				 0,   --subconf 
				 2,   --crate
				 1,  --slot
				 1,  --channel
       				 '111'::BIT(64),
				 'Z=>1' );
-- Let's try some exception calls
--SELECT InsertCrateConfiguration('Test1',0,0,0,'test1=>1');
-- Create MainConfiguration
SELECT InsertMainConfiguration( 'Test1=>0,Test2=>0'::hstore,
       				'Test1=>1,Test2=>1'::hstore,
       				'MainTest1');
-- Attempt to re-use the same name => Should have an exception
--SELECT InsertMainConfiguration('Test1=>0,Test2=>0,Test3=>0'::hstore,'MainTest1');
-- Attempt to insert the identical configuration set with different name => Should have an exception
--SELECT InsertMainConfiguration('Test1=>0,Test2=>0,Test3=>0'::hstore,'MainTest2');
-- Attempt to insert different configuration with different name => Should not have an exception
--SELECT InsertMainConfigurat
--------------------------------------------------------
--  File created - Ïåòúê-Àïðèë-18-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ARTICLE
--------------------------------------------------------
  CREATE TABLE "ELSYS"."ARTICLE" 
   (	"ID" NUMBER, 
	"PUBLISHED_ON" DATE, 
	"URL" VARCHAR2(25 BYTE), 
	"NAME" VARCHAR2(25 BYTE), 
	"U_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."CATEGORY" 
   (	"ID" NUMBER, 
	"CREATED_BY" VARCHAR2(25 BYTE), 
	"DESCRIPTION" VARCHA

   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(25 BYTE), 
	"PRIORITY" NUMBER, 
	"A_ID" NUMBER, 
	"C_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USERS
------------------------------------

  CREATE TABLE "ELSYS"."USERS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(25 BYTE), 
	"INCOME" NUMBER, 
	"CREATED_ON" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into ELSYS.ARTICLE
SET DEFINE OFF;
Insert into ELSYS.ARTICLE (ID,PUBLISHED_ON,URL,NAME,U_ID) values (1,to_date('2012-12-12','RRRR-MM-DD'),'aasc','cas',1);
Insert into ELSYS.ARTICLE (ID,PUBLISHED_ON,URL,NAME,U_ID) values (2,to_date('2012-12-12','RRRR-MM-DD'),'ccasc','asca',1);
REM INSERTING into ELSYS.CATEGORY
SET DEFINE OFF;
Insert into ELSYS.CATEGORY (ID,CREATED_BY,DESCRIPTION) values (1,'casc','saca');
Insert into ELSYS.CATEGORY (ID,CREATED_BY,DESCRIPTION) values (2,'scasc','cascascascascas');
REM INSERTING into ELSYS.TAG
SET DEFINE OFF;
Insert into EL
/*
MySQL Backup
Source Server Version: 5.5.40
Source Database: fuzhuang
Date: 2014/12/25 18:12:30
*/
SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
--  Table structure for `design`
-- ----------------------------
DROP TABLE IF EXISTS `design`;
CREATE TABLE `design` (
  `id` int(11) NOT NULL,
  `nav_pid` int(11) DEFAULT NULL,
  `nav_id` int(11) DEFAULT NULL,
  `design_title` varchar(255) DEFAULT NULL,
  `design_desc` varchar(1000) DEFAULT NULL,
  `design_content` text,
  `design_photo` varchar(255) DEFAULT NULL,
  `design_order` int(11) DEFAULT NULL,
  `design_status` int(11) DEFAULT NULL,
  `add_time` int(22) DEFAULT NULL,
  `release_time` int(22) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `nav_page`
-- ----------------------------
DROP TABLE IF EXISTS `nav_page`;
CREATE TABLE `nav_page` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `pid` int(11) DEFAULT NULL,
  `nav_title` varchar(255) DEFAU

  `nav_desc` varchar(1000) DEFAULT NULL,
  `nav_photo` varchar(255) NOT NULL,
  `nav_order` int(11) DEFAULT NULL,
  `add_time` int(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `news`
-- ----------------------------
DROP TABLE IF EXISTS `news`;
CREATE TABLE `news` (
  `id` int(11) NOT NULL,
  `nav_pid` int(11) DEFAULT NULL,
  `nav_id` int(11) DEFAULT NULL,
  `news_title` varchar(255) DEFAULT NULL,
  `news_desc` varchar(1000) DEFAULT NULL,
  `news_content` text,
  `news_photo` varchar(255) DEFAULT NULL,
  `add_time` int(20) DEFAULT NULL,
  `release_time` int(20) DEFAULT NULL,
  `news_status` int(11) DEFAULT NULL,
  `news_order` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `page_content`
-- ----------------------------
DROP TABLE IF EXISTS `page_content`;
CREATE TABLE `page_content` (
  `id` int(11) NOT NULL AU

  `nav_id` int(11) DEFAULT NULL,
  `content` text,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `product`
-- ----------------------------
DROP TABLE IF EXISTS `product`;
CREATE TABLE `product` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `nav_pid` int(11) DEFAULT NULL,
  `nav_id` int(11) DEFAULT NULL,
  `product_title` varchar(255) DEFAULT NULL,
  `product_desc` varchar(1000) DEFAULT NULL,
  `product_order` int(11) DEFAULT NULL,
  `product_brand_id` int(11) DEFAULT NULL,
  `product_url` varchar(100) DEFAULT NULL,
  `mtitle` varchar(255) DEFAULT NULL,
  `mkey` varchar(255) DEFAULT NULL,
  `mdesc` varchar(255) DEFAULT NULL,
  `add_time` int(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `product_content`
-- ----------------------------
DROP TABLE IF EXISTS `product_content`;
CREATE TABLE `product_content` (
  `id` int(11) NOT NULL AUT
--------------------------------------------------------
--  DDL for Table TERMINER_ETAPE
--------------------------------------------------------
  CREATE TABLE "G11_FLIGHT"."TERMINER_ETAPE" 
   (	"TOUR_ANNEE" NUMBER(4,0), 
	"PART_NUM" NUMBER(3,0), 
	"ETAPE_NUM" NUMBER(2,0), 
	"CYCLISTE_NOM" VARCHAR2(40 BYTE), 
	"CYCLISTE_PRENOM" VARCHAR2(30 BYTE), 
	"CYCLISTE_PAYS" VARCHAR2(50 BYTE), 
	"CYCLISTE_DATEN" DATE, 
	"EQUIPE_NOM" VARCHAR2(50 BYTE), 
	"ETAPE_TPS" NUMBER(10,0), 
	"ETAPE_CLASS" NUMBER(3,0), 
	"ETAPE_PTS_MONT" NUMBER(3,0), 
	"ETAPE_PTS_SPRINT" NUMBER(3,0), 
	"GENE_TPS" NUMBER(10,0), 
	"GENE_CLASS" NUMBER(3,0), 
	"GENE_PTS_MONT" NUMBER(3,0), 
	"GENE_CLASS_MONT" NUMBER(3,0), 
	"GENE_PTS_SPRINT" NUMBER(3,0), 
	"GENE_CLASS_SPRINT" NUMBER(3,0), 
	"GENE_TPS_ECART" NUMBER(10,0), 
	"ETAPE_TPS_ECART" NUMBER(10,0), 
	"PT_PASS_NUM" NUMBER(3,0), 
	 CONSTRAINT "PK_TERMINER_ETAPE" PRIMARY KEY ("TOUR_ANNEE", "PART_NUM", "ETAPE_NUM") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRAN

  TABLESPACE "BD50_DATA" 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
 PCTTHRESHOLD 50
  PARTITION BY RANGE ("TOUR_ANNEE") 
 (PARTITION "TERMINER_ETAPE_2012"  VALUES LESS THAN (2012) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2013"  VALUES LESS THAN (2013) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2014"  VALUES LESS THAN (2014) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER

  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2015"  VALUES LESS THAN (2015) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2016"  VALUES LESS THAN (2016) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2017"  VALUES LESS THAN (2017) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2018"  VALUES LES
lf	hf	mean	lf_n	hf_n	lf_p	hf_p	state
c	c	c	c	c	c	c	d
							class
1474198.70548	146661.22655	213220.10585	3.3553551677	0.33380880242	0.909516409375	0.090483590625	read
660470.009776	203987.760484	241098.615982	5.73638295415	1.7716957542	0.764028079217	0.235971920783	read
361433.6607	58095.1001102	247949.859388	4.23200431919	0.680231924481	0.861522962101	0.138477037899	read
228366.397106	38905.2478404	250177.165809	2.76058168625	0.470301743375	0.85443555807	0.14556444193	read
239456.480709	73226.8069859	250113.913305	3.09009119512	0.94496298803	0.765811573987	0.234188426013	read
71214.1125821	27350.1983847	249989.602392	4.82525235993	1.85316652157	0.722514182705	0.277485817295	read
433248.965551	73711.4989163	248801.807412	4.7889134652	0.81476937689	0.85460109006	0.14539890994	game
216885.855609	68214.7345083	247483.565726	4.62273806117	1.45393920991	0.760734502583	0.239265497417	game
200098.924813	43096.7291368	246903.045058	6.40407334017	1.37929084013	0.822789887743	0.177210112257	gam
-- Add option conditions for Priest trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (3642,3643,3644,3645,4466,4467,4468,4521,4522,4523,4531,4532,4533,4543,4544,4545,4558,4559,4572,4573,4574,4665,4666,4679,4680,4691,4692,4801,6649,7265,7349,7438);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,3642,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3642,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3642,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3643,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3643,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3643,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3644,0,0,15,16,0,0,0,'','Show gossip option if

(15,3644,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3644,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3645,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3645,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3645,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4466,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4466,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4466,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4467,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4467,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4467,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4468,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4468,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4468,2,0,15,16,0,0,0,'','Show gossip option if

(15,4521,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4521,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4521,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4522,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4522,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4522,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4523,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4523,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4523,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4531,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4531,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4531,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4532,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4532,1,0,15,16,0,0,0,'','Show gossip option if
﻿PRINT 'Populate CarModelMapping table...'
DECLARE @tMask TABLE (Mask NVARCHAR(100), CarBrand NVARCHAR(100), NotMask NVARCHAR(100)) 
DECLARE @tCarModelMapping TABLE (ModelMask NVARCHAR(100), ModelNotMask NVARCHAR(100), CarBrandId INT, CarModelId INT)
INSERT INTO @tMask
    --Audi
    SELECT N'A4%',N'Audi',N'%Allroad' UNION ALL
    SELECT N'A6%',N'Audi',N'%Allroad' UNION ALL
    SELECT N'A8%',N'Audi',N'' UNION ALL
    --BMW
    SELECT N'1%',N'BMW',N'' UNION ALL
    SELECT N'2%',N'BMW',N'' UNION ALL
    SELECT N'3%',N'BMW',N'%Gran Turismo%' UNION ALL
    SELECT N'4%',N'BMW',N'' UNION ALL
    SELECT N'5%',N'BMW',N'%Gran Turismo%' UNION ALL
    SELECT N'6%',N'BMW',N'' UNION ALL
    SELECT N'7%',N'BMW',N'' UNION ALL
    SELECT N'8%',N'BMW',N'' UNION ALL
    --Citroen
    SELECT N'C5%',N'Citroen',N'' UNION ALL
    --Fiat
    SELECT N'Grande%',N'Fiat',N'' UNION ALL
    --Opel
    SELECT N'Astra%',N'Opel',N'' UNION ALL
    --Iveco
    SELECT N'700%',N'Iveco',N'' UNION ALL
    --Renault
    SEL

    SELECT N'Laguna%',N'Renault',N'' UNION ALL
    SELECT N'Clio%',N'Renault',N'' UNION ALL
    SELECT N'Megane%',N'Renault',N'% Scenic' UNION ALL
    --Kia
    SELECT N'Cee%',N'Kia',N'' UNION ALL
    SELECT N'Pro Cee%',N'Kia',N'' UNION ALL
    --Infinity
    SELECT N'EX%',N'Infiniti',N'' UNION ALL
    SELECT N'FX%',N'Infiniti',N'' UNION ALL
    SELECT N'G%',N'Infiniti',N'' UNION ALL
    SELECT N'JX%',N'Infiniti',N'' UNION ALL
    SELECT N'M%',N'Infiniti',N'' UNION ALL
    SELECT N'Q%',N'Infiniti',N'QX%' UNION ALL
    SELECT N'QX%',N'Infiniti',N'' UNION ALL
    --Lancia
    SELECT N'Y%',N'Lancia',N'' UNION ALL
    --Lexus
    SELECT N'CT%',N'Lexus',N'' UNION ALL
    SELECT N'ES%',N'Lexus',N'' UNION ALL
    SELECT N'GS%',N'Lexus',N'' UNION ALL
    SELECT N'GX%',N'Lexus',N'' UNION ALL
    SELECT N'HS%',N'Lexus',N'' UNION ALL
    SELECT N'IS%',N'Lexus',N'' UNION ALL
    SELECT N'LS%',N'Lexus',N'' UNION ALL
    SELECT N'LX%',N'Lexus',N'' UNION ALL
    SELECT N'NX%',N'Lexus',N'' UNION ALL


    SELECT N'SC%',N'Lexus',N'' UNION ALL
    --Peugeot
    SELECT N'407%',N'Peugeot',N'' UNION ALL
    --Mazda
    SELECT N'323%',N'Mazda',N'' UNION ALL
    --Mercedes
    SELECT N'190%',N'Mercedes',N'' UNION ALL
    SELECT N'A%',N'Mercedes',N'' UNION ALL
    SELECT N'B%',N'Mercedes',N'' UNION ALL
    SELECT N'C%',N'Mercedes',N'CL%' UNION ALL
    SELECT N'CL%',N'Mercedes',N'CL[a-Z]%' UNION ALL
    SELECT N'CLA%',N'Mercedes',N'' UNION ALL
    SELECT N'CLC%',N'Mercedes',N'' UNION ALL
    SELECT N'CLK%',N'Mercedes',N'' UNION ALL
    SELECT N'CLS%',N'Mercedes',N'' UNION ALL
    SELECT N'E%',N'Mercedes',N'' UNION ALL
    SELECT N'G%',N'Mercedes',N'GL%' UNION ALL
    SELECT N'GL%',N'Mercedes',N'GL[a-Z]%' UNION ALL
    SELECT N'GLA%',N'Mercedes',N'' UNION ALL
    SELECT N'GLC%',N'Mercedes',N'' UNION ALL
    SELECT N'GLE%',N'Mercedes',N'' UNION ALL
    SELECT N'GLK%',N'Mercedes',N'' UNION ALL
    SELECT N'ML%',N'Mercedes',N'' UNION ALL
    SELECT N'R%',N'Mercedes',N'' UNION ALL
    SELECT N'S
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `group_instance`;
CREATE TABLE `group_instance` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0',
  `instance` int(10) unsigned NOT NULL DEFAULT '0',
  `permanent` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guid`,`instance`),
  KEY `instance` (`instance`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `group_instance` WRITE;
/*!40000 ALTER TABLE `group_
﻿CREATE VIEW dbo.view_SubViewCommissionAmounts
AS
SELECT     InquiryNumber, CommissionAmount, PaidCommissionAmount, CommissionAmount - PaidCommissionAmount AS RemainingCommissionAmount, BranchID, CountryID, RemainCommission
FROM         dbo.ViewCommissionPaymentTotals
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[21] 2[11] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56

      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfigurati

         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ViewCommissionPaymentTotals"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 207
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1
CREATE TABLE change_deltas (
    id INT NOT NULL PRIMARY KEY DEFAULT (nextval('deltas')),
    change_id INTEGER NOT NULL UNIQUE,
    new INTEGER,
    action_format VARCHAR NOT NULL,
    action_topic_id_1 INTEGER,
    action_topic_id_2 INTEGER,
    FOREIGN KEY(change_id) REFERENCES changes(id) ON DELETE CASCADE,
    FOREIGN KEY(action_topic_id_1) REFERENCES topics(id)
        ON DELETE CASCADE,
    FOREIGN KEY(action_topic_id_2) REFERENCES topics(id)
        ON DELETE CASCADE
);
CREATE TRIGGER
    change_deltas_ai_1
AFTER INSERT ON
    change_deltas
FOR EACH ROW WHEN
    NEW.new = 1
BEGIN
    SELECT debug(
        'TRIGGER change_deltas_ai_1',
        NEW.change_id,
        NEW.action_topic_id_1,
        NEW.action_topic_id_2
    );
    UPDATE
        changes
    SET
        ucount = ucount + 1,
        action = (
            SELECT
                printf(NEW.action_format, t1.id, t2.id)
            FROM
                (SELECT 1)
            LEFT JOIN
                topics t1
        

                t1.id = NEW.action_topic_id_1
            LEFT JOIN
                topics t2
            ON
                t2.id = NEW.action_topic_id_2
        )
    WHERE
        id = NEW.change_id
    ;
    UPDATE
        changes_pending
    SET
        terms = terms || (
            SELECT
                '-' || x'0A'
                || '  _: change_delta' || x'0A'
                || CASE WHEN
                    instr(NEW.action_format, ' ')
                THEN
                    '  action_format: ''' || NEW.action_format || '''' || x'0A'
                ELSE
                    '  action_format: ' 
                    || COALESCE(NEW.action_format,'~') || x'0A'
                END
                || '  action_topic_uuid_1: '
                || COALESCE(t1.uuid, '~') || x'0A'
                || '  action_topic_uuid_2: '
                || COALESCE(t2.uuid, '~') || x'0A'
            FROM
                (SELECT 1)
            LEFT JOIN
                topics t1
            ON

﻿USE [B2BProductCatalog]
GO
/****** Object:  Table [dbo].[MarketingInfo]    Script Date: 04/12/2011 15:50:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MarketingInfo_Exceptions](
	[pkId] [int] IDENTITY(1,1) NOT NULL,
	[StyleNumber] [varchar](18) NOT NULL,
	[SalesOrg] [varchar](4) NULL,
	[DistributionChannel] [varchar](2) NULL,
	[MarketingDescEn] [varchar](4000) NULL,
	[MarketingDescFr] [varchar](4000) NULL,
	[StyleKeywords] [varchar](1000) NULL,
	[StyleSizeRun] [varchar](75) NULL,
	[NavCategory1] [varchar](100) NULL,
	[NavCategory2] [varchar](100) NULL,
	[NavCategory3] [varchar](100) NULL,
	[NavCategory4] [varchar](100) NULL,
	[NavCategoryFr1] [varchar](100) NULL,
	[NavCategoryFr2] [varchar](100) NULL,
	[NavCategoryFr3] [varchar](100) NULL,
	[NavCategoryFr4] [varchar](100) NULL,
	[Flag1] [varchar](75) NULL,
	[Flag2] [varchar](75) NULL,
	[Flag3] [varchar](75) NULL,
	[Flag4] [varchar](75) NULL,
	[Flag5] [varchar](75) NULL,
	[Flag6]
INSERT INTO "basuras_puente_alto" ("id","nombre",geom) VALUES ('1','Zona A RR','0106000000010000000103000000010000000B000000FF42AC681DA851C0C90564B807CE40C00837FBC5F2A551C05F5415D768CD40C04F5DCB01F1A551C02482C5AA71CD40C037FB8518D2A551C0B8AA43A6A3CE40C000000040BAA551C060F6F473D8D040C0521A1FD9C4A551C0A178C6740AD140C04DA0772A1DA651C084BFAD2919D140C04EA0772A54A851C0B471454845D140C0CA047AE737A851C0BF89079D39D040C0D6B51C1C18A851C02E2B66DC30CF40C0FF42AC681DA851C0C90564B807CE40C0');
INSERT INTO "basuras_puente_alto" ("id","nombre",geom) VALUES ('2','Zona B RR','0106000000010000000103000000010000004B00000026D03B75BCA551C060F6F473D8D040C070F60BB1BAA551C0776C74ECD9D040C0A6F19189D2A551C0B8AA43A6A3CE40C0067AA7AEEFA551C0F3F4398D77CD40C0531A1F19F4A551C05F5415D768CD40C0F64E5D4B09A651C0FBC64DC7D2CC40C004BD535700A551C0507DDF198FCC40C08858519A1CA551C0012B813070CB40C08CD2F84807A451C06D3261674BCB40C0DDEC1762B3A351C0D838E6A958CC40C02099406FEEA251C0C6E5F29429CC40C08E8F4CA0BFA251C0030063C2B9CB40C03D752D07B5A2

INSERT INTO "basuras_puente_alto" ("id","nombre",geom) VALUES ('3','Zona A Isis
INSERT INTO "basuras_puente_alto" ("id","nombre",geom) VALUES ('4','Zona B isis','0106000000010000000103000000010000002500000050A0772A60A551C096D1E124D1C840C00DF44E1D68A551C0B20580665BC840C0908F4CE0ABA351C0445AB8DAC0C740C01B6245295FA451C09B103D7F14C640C0908F4C604DA351C0F26C274620C640C0924CA03721A351C02C593F303FC640C0F591093412A351C03852102F74C640C02E4AE3E3FDA251C053582998ADC640C0D07E219

UPDATE  zonas set area = null;
update zonas set area = (ST_DUMP('0106000000010000000103000000010000000F0000004EA0772A60A551C09E2D1CACCFC840C01B6245291CA551C0D6DF2FA971CB40C0E0EC1722FEA451C04D7DDF198FCC40C0654569BC09A651C009F292B8D5CC40C09FFD426CF5A551C074D1B24F6ACD40C0B91CDC2CA5A651C0DD4A1BCD9DCD40C0CD047AE7BDA651C0C83A6B4506CD40C098C64766D8A651C09132E41676CC40C0E9E066FFE2A651C0490C726ACBCB40C0BE9683DB09A751C0939307130FCB40C0EA9DBA5615A751C01BF32799A6CA40C0DEEC172235A751C025A9D68A0AC940C0363E32C15CA651C03026F7289CC840C0DC2FC44AE7A551C053235A77F4C840C04EA0772A60A551C09E2D1CACCFC840C0')).geom where id = 1;
update zonas set area = (ST_DUMP('0106000000010000000103000000010000002500000050A0772A60A551C096D1E124D1C840C00DF44E1D68A551C0B20580665BC840C0908F4CE0ABA351C0445AB8DAC0C740C01B6245295FA451C09B103D7F14C640C0908F4C604DA351C0F26C274620C640C0924CA03721A351C02C593F303FC640C0F591093412A351C03852102F74C640C02E4AE3E3FDA251C053582998ADC640C0D07E2196B4A251C0197217E169C640C0782D077771A251C0FF6DA
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*
3、“攻读学位”加“其它”，旧数据的
留学身份
对应的是新数据的攻读学位，
且对应关系是 
大学专科——大专文凭，
大学在读和大学本科——学士学位，
硕士研究生、硕士在读——硕士学位，
博士研究生——博士学位。
old studystatus
待定	wh01 -->其他 xw06
大学专科  	wh02-->大专 xw04
大学在读  	wh03-->学士 xw05
大学本科  	wh04-->学士 xw05
硕士研究生在读	wh05-->硕士xw02
硕士研究生	wh06-->硕士 xw02
博士研究生	wh07-->博士 xw03
访问学者  	wh08-->其他 xw06
其它      	wh09-->其他 xw06
博士后	wh10-->其他 xw06
高中      	wh11-->其他 xw06
本硕连读  	wh13-->其他 xw06
初中  	wh14-->其他 xw06
-----------------------
2	xw04	大专文凭	1
3	xw05	学士学位	2
4	xw02	硕士学位	3
5	xw03	博士学位	4
7	xw06	其他	0
攻读学位 Studystatus_new 对应res: res_Studystatus_new 新建
留学前文化程度  Wenhua_New 对应res: res_wenhua_new ok
*/
delete from archives_new.dbo.res_studystatus_new where code='xw06' and name='其它';
insert into archives_new.dbo.res_studystatus_new(code,name) values('xw06','其它');
------------------
/*
待定	wh01 -->其他 xw06
大学专科  	wh02 -->专科 xw04
大学在读  	wh03 -->学士 xw05
大学本科  	wh04 -->学士 xw05
硕士研究生在读	wh05 -->硕士 xw02
硕士研究生	wh06 -->硕士 xw02
博士研究生	wh07 -->博士 xw03
访问学者  	wh08 -->其他 xw06
其它      	wh09 -->其他 xw06
博士后		wh10 -->其他
SET DEFINE OFF;
CREATE TABLE L_BUDGET_FORECAST
  FISCALYEAR       NUMBER(10),
  MONTH            VARCHAR2(15 BYTE),
  PERIOD           NUMBER(3),
  COMPANY          VARCHAR2(10 BYTE),
  BRANDID          VARCHAR2(10 BYTE),
  CHANNEL          VARCHAR2(10 BYTE),
  DIVISION         VARCHAR2(10 BYTE),
  CLASIFICATION    VARCHAR2(50 BYTE),
  GROUPTYPE        VARCHAR2(100 BYTE),
  AFFILIATION_ID   VARCHAR2(50 BYTE),
  GL_NUMBER        VARCHAR2(50 BYTE),
  GLNAME           VARCHAR2(100 BYTE),
  BUDGETAMOUNT     NUMBER(19,4),
  BUDGET_PAX       NUMBER(10),
  FORECAST_AMOUNT  NUMBER(19,4),
  FORECAST_PAX     NUMBER(10)
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLAS
DROP TRIGGER IF EXISTS `phpbb_to_mantis_insert`;
DELIMITER //
CREATE TRIGGER `phpbb_to_mantis_insert` BEFORE INSERT ON `phpbb_users`
 FOR EACH ROW BEGIN
	IF NOT NEW.user_type = 3 THEN
		INSERT INTO mantis_user_table (username, realname, email, password, enabled, protected, access_level, login_count, lost_password_request_count, failed_login_count, cookie_string, last_visit, date_created) VALUES (NEW.username, NEW.username, NEW.user_email, NEW.user_password, 1, 0, 25, 1, 0, 0, LEFT(UUID(), 64), UNIX_TIMESTAMP(), UNIX_TIMESTAMP())
		ON DUPLICATE KEY UPDATE email=NEW.user_email, password=NEW.user_password, cookie_string=LEFT(UUID(), 64);
	END IF;
END
//
DELIMITER ;
DROP TRIGGER IF EXISTS `phpbb_to_mantis_update`;
DELIMITER //
CREATE TRIGGER `phpbb_to_mantis_update` BEFORE UPDATE ON `phpbb_users`
 FOR EACH ROW BEGIN
	IF NOT NEW.user_type = 3 THEN
		INSERT INTO mantis_user_table (username, realname, email, password, enabled, protected, access_level, login_count, lost_password_request_count,
proc $sc_$cpu_evs_send_debug
;JAN 11 2006 CFE_TBL added
;APR 14 2006 updated message for CFE_SB
on ERROR resume
#include "ut_statusdefs.h"
write
write "     Sending DEBUG message for CFE_EVS."
write "     *** EVS messages are all ERROR or INFO types ***"
write ""
write "     Sending DEBUG message for CFE_SB."
write "     *** SB no-op evt msg is of type INFO ***"
write ""
write "     Sending DEBUG message for CFE_ES."
write "     *** ES messages are all ERROR or INFO types ***"
write ""
write "     Sending DEBUG message for CFE_TIME."
write "     *** TIME messages are all ERROR or INFO types ***"
write ""
write "     Sending DEBUG message for CFE_TBL."
write "     *** TBL no-op evt msg if of INFO type"
write ""
write "     Sending DEBUG message for CI_APP."
write "     *** NO messages are being attempted at this time ***"
write
write "     Sending DEBUG message for TO_APP."
write "     *** NO messages are being attempted at this time ***"
write
write "     Sending DEBUG message for TST_
IF OBJECT_ID('dbo.wsp_updProfileShowShowP') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_updProfileShowShowP
    IF OBJECT_ID('dbo.wsp_updProfileShowShowP') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_updProfileShowShowP >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_updProfileShowShowP >>>'
END
go
 /***********************************************************************
**
** CREATION:
**   Author:  Mark Jaeckle
**   Date:  November 11 2002
**   Description:  Updates show and showprefs on profile
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
*************************************************************************/
CREATE PROCEDURE wsp_updProfileShowShowP
 @productCode CHAR(1)
,@communityCode CHAR(1)
,@userId NUMERIC(12,0)
,@show CHAR(1)
,@show_prefs CHAR(1)
AS
BEGIN TRAN TRAN_updProfileShowShowP
	UPDATE a_profile_dating 
	SET show_prefs = @show_prefs,show = @show
	WHERE user_id=@userId
	IF @@error = 0
		BEGIN
			COMMIT TRAN TRAN_updP
﻿CREATE VIEW dbo.UserInfo
AS
SELECT        dbo.UserAccount.*, CONVERT(VARBINARY(85), UserAccountId) AS UserSID
FROM            dbo.UserAccount
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'UserInfo';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[32] 4[24] 2[17] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
        

         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (

      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "UserAccount"
            Begin Extent = 
               Top = 6
               Left = 262
               Bottom = 135
               Right = 500
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 19
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width =
-- Jeffrey McGovern
-- jmcgover@calpoly.edu
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(1, 1, 'amc');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(2, 2, 'audi');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(3, 3, 'bmw');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(4, 4, 'buick');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(5, 4, 'cadillac');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(6, 5, 'capri');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(7, 4, 'chevrolet');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(8, 6, 'chrysler');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(9, 7, 'citroen');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(10, 8, 'datsun');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(11, 6, 'dodge');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(12, 9, 'fiat');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(13, 5, 'ford');
INSERT INTO modelList (ModelId, Make

VALUES(14, 10, 'hi');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(15, 11, 'honda');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(16, 12, 'mazda');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(17, 13, 'mercedes');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(18, 13, 'mercedes-benz');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(19, 5, 'mercury');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(20, 8, 'nissan');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(21, 4, 'oldsmobile');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(22, 14, 'opel');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(23, 15, 'peugeot');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(24, 6, 'plymouth');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(25, 4, 'pontiac');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(26, 16, 'renault');
INSERT INTO modelList (ModelId, Maker, Model) 
VALUES(27, 17, 'saab');
INSERT INTO modelLis
------------Создание процедуры "flsh_proc_list"------------
DELIMITER $$
DROP PROCEDURE IF EXISTS `flsh_proc_list` $$
CREATE PROCEDURE `flsh_proc_list`(IN `v_component` VARCHAR(50), IN `v_id_object` INT, IN `v_object` VARCHAR(50))
    NO SQL
SELECT fb.*,
       f.title,
       f.url_fla,
       f.url_swf
FROM flsh_flash_bind fb
LEFT JOIN flsh_flash f
ON fb.id_flash = f.id_flash
where (fb.component = v_component) and 
      (fb.id_object = v_id_object) and
      (fb.object = v_object)$$
DELIMITER ;
------------Создание процедуры "flsh_proc_view"------------
DELIMITER $$
DROP PROCEDURE IF EXISTS `flsh_proc_view` $$
CREATE PROCEDURE `flsh_proc_view`(IN `v_id_flash` INT)
    NO SQL
SELECT fb.*,
       f.title,
       f.url_fla,
       f.url_swf
FROM flsh_flash_bind fb
LEFT JOIN flsh_flash f
ON fb.id_flash = f.id_flash
where (id_flash_bind = v_id_flash)$$
DELIMITER ;
------------------------------------------------------
------------------Начинаются таблицы------------------
---------------

------------Создание таблицы "flsh_flash"------------
CREATE TABLE `flsh_flash` (
  `id_flash` int(11) NOT NULL AUTO_INCREMENT, 
  `title` varchar(255) NOT NULL, 
  `url_fla` varchar(255) NOT NULL, 
  `url_swf` varchar(255) NOT NULL, 
  `order` int(11) NOT NULL, 
  `id_owner` int(11) DEFAULT NULL, 
  `create_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, 
  `update_date` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00', 
  `id_updater` int(11) NOT NULL, 
  PRIMARY KEY (`id_flash`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ;
------------Создание таблицы "flsh_flash_bind"------------
CREATE TABLE `flsh_flash_bind` (
  `id_flash_bind` int(11) NOT NULL AUTO_INCREMENT, 
  `id_flash` int(11) NOT NULL, 
  `component` varchar(50) NOT NULL, 
  `object` varchar(50) NOT NULL, 
  `id_object` int(11) NOT NULL, 
  `order` int(11) NOT NULL, 
  `id_owner` int(11) NOT NULL, 
  `id_updater` int(11) NOT NULL, 
  `create_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, 
  `update_date` timestamp NOT N
-- ----------------------------
-- Table structure for `sas_main_menu`
-- ----------------------------
DROP TABLE IF EXISTS `sas_main_menu`;
CREATE TABLE `sas_main_menu` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `page` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;
-- ----------------------------
-- Records of sas_main_menu
-- ----------------------------
INSERT INTO `sas_main_menu` VALUES ('1', 'Home', 'home');
INSERT INTO `sas_main_menu` VALUES ('2', 'Apache', 'mysql');
INSERT INTO `sas_main_menu` VALUES ('3', 'Postfix', 'apache');
INSERT INTO `sas_main_menu` VALUES ('4', 'FTP', 'postfix');
INSERT INTO `sas_main_menu` VALUES ('5', 'MySQL', 'ftp');
INSERT INTO `sas_main_menu` VALUES ('6', 'Samba', 'samba');
INSERT INTO `sas_main_menu` VALUES ('7', 'Control', 'management');
INSERT INTO `sas_main_menu` VALUES ('8', 'Webuser', 'webuser');
INSERT INTO `sas_main_menu` VALUES ('9', 'Tools', 'tools');
IN

-- ----------------------------
-- Table structure for `sas_mysql_users`
-- ----------------------------
DROP TABLE IF EXISTS `sas_mysql_users`;
CREATE TABLE `sas_mysql_users` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `serverid` int(10) NOT NULL,
  `user` varchar(255) NOT NULL,
  `pass` varchar(255) NOT NULL,
  `host` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
-- ----------------------------
-- Records of sas_mysql_users
-- ----------------------------
INSERT INTO `sas_mysql_users` VALUES ('1', '1', 'root', '123', '127.0.0.1');
-- ----------------------------
-- Table structure for `sas_page_content`
-- ----------------------------
DROP TABLE IF EXISTS `sas_page_content`;
CREATE TABLE `sas_page_content` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `page` varchar(255) NOT NULL,
  `spage` varchar(255) NOT NULL,
  `inc_path` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;
-- -

-- Records of sas_page_content
-- ----------------------------
INSERT INTO `sas_page_content` VALUES ('1', 'home', '', 'includes/content/home/home.inc.php');
INSERT INTO `sas_page_content` VALUES ('2', 'tools', 'console', 'inc/tools/console.inc.php');
INSERT INTO `sas_page_content` VALUES ('3', 'home', 'overview', 'inc/index/overview.inc.php');
INSERT INTO `sas_page_content` VALUES ('4', 'home', 'panel', 'inc/index/panel.inc.php');
INSERT INTO `sas_page_content` VALUES ('5', 'home', 'stats', 'inc/index/stats.inc.php');
INSERT INTO `sas_page_content` VALUES ('6', 'home', 'doku', 'inc/index/doku.inc.php');
INSERT INTO `sas_page_content` VALUES ('7', 'home', 'help', 'inc/index/help.inc.php');
INSERT INTO `sas_page_content` VALUES ('8', 'home', 'about', 'inc/index/about.inc.php');
INSERT INTO `sas_page_content` VALUES ('9', 'mysql', 'console', 'inc/mysql/sqlcmd.inc.php');
INSERT INTO `sas_page_content` VALUES ('10', 'mysql', '', 'inc/mysql/overview.inc.php');
INSERT INTO `sas_page_content
-- Copyright (C) 2014-2015 LinkedIn Corp. All rights reserved.
--
-- Licensed under the Apache License, Version 2.0 (the "License"); you may not use
-- this file except in compliance with the License. You may obtain a copy of the
-- License at  http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software distributed
-- under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, either express or implied.
-- MySQL DDL for the tables needed by the Gobblin job history store.
CREATE TABLE IF NOT EXISTS gobblin_job_executions (
	job_name VARCHAR(128) NOT NULL,
	job_id VARCHAR(128) NOT NULL,
	start_time TIMESTAMP,
	end_time TIMESTAMP,
	duration BIGINT(21),
	state ENUM('PENDING', 'RUNNING', 'SUCCESSFUL', 'COMMITTED', 'FAILED', 'CANCELLED'),
	launched_tasks INT,
	completed_tasks INT,
	launcher_type ENUM('LOCAL', 'MAPREDUCE', 'YARN'),
  tracking_url VARCHAR(512),
	created_ts TIMESTAMP DEFAULT CURR

	last_modified_ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (job_id),
	INDEX (job_name),
	INDEX (state)
);
CREATE TABLE IF NOT EXISTS gobblin_task_executions (
	task_id VARCHAR(128) NOT NULL,
	job_id VARCHAR(128) NOT NULL,
	start_time TIMESTAMP,
	end_time TIMESTAMP,
	duration BIGINT(21),
	state ENUM('PENDING', 'RUNNING', 'SUCCESSFUL', 'COMMITTED', 'FAILED', 'CANCELLED'),
	failure_exception TEXT,
	low_watermark BIGINT(21),
	high_watermark BIGINT(21),
	table_namespace VARCHAR(128),
	table_name VARCHAR(128),
	table_type ENUM('SNAPSHOT_ONLY', 'SNAPSHOT_APPEND', 'APPEND_ONLY'),
	created_ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	last_modified_ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (task_id),
	FOREIGN KEY (job_id)
	REFERENCES gobblin_job_executions(job_id)
	ON DELETE CASCADE,
	INDEX (state),
	INDEX (table_namespace),
	INDEX (table_name),
	INDEX (table_type)
);
CREATE TABLE IF NOT EXISTS gobblin_job_metrics (
	metric

	job_id VARCHAR(128) NOT NULL,
	metric_group VARCHAR(128) NOT NULL,
	metric_name VARCHAR(128) NOT NULL,
	metric_type ENUM('COUNTER', 'METER', 'GAUGE'),
	metric_value VARCHAR(256) NOT NULL,
	created_ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	last_modified_ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (metric_id),
	FOREIGN KEY (job_id)
	REFERENCES gobblin_job_executions(job_id)
	ON DELETE CASCADE,
	INDEX (metric_group),
	INDEX (metric_name),
	INDEX (metric_type)
);
CREATE TABLE IF NOT EXISTS gobblin_task_metrics (
	metric_id BIGINT(21) NOT NULL AUTO_INCREMENT,
	task_id VARCHAR(128) NOT NULL,
	metric_group VARCHAR(128) NOT NULL,
	metric_name VARCHAR(128) NOT NULL,
	metric_type ENUM('COUNTER', 'METER', 'GAUGE'),
	metric_value VARCHAR(256) NOT NULL,
	created_ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	last_modified_ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (metric_id),
	FOREIGN KEY (task_id)
	REFERENCES gobblin_task_execu
/* project */
-- DROP TABLE IF EXISTS project;
CREATE TABLE IF NOT EXISTS project (
	project_id	MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT,
	name		varchar(32) NOT NULL,
	code		varchar(32) NULL, /* like 200M6AAXX_4 from BCGSC for Ncrass*/
	description	varchar(255) NULL, /* */
 	PRIMARY KEY (project_id),
	UNIQUE KEY ui_name (name),
	UNIQUE KEY ui_code (code),
	KEY i_desc (description)
);
/* short-read info */
--DROP TABLE IF EXISTS read_info;
CREATE TABLE IF NOT EXISTS read_info (
	read_id	INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	project_id MEDIUMINT UNSIGNED NOT NULL REFERENCES project(project_id),
	machid	varchar(32) NOT NULL, /* machine assigned Id for read */
	seq	char(36) NOT NULL,
	qual	char(36) NOT NULL DEFAULT '',
	adaptor_trimmed 	boolean NOT NULL DEFAULT FALSE,
	trim_5  		TINYINT NOT NULL DEFAULT '-1', /* 5' trim site */
	trim_3  		TINYINT NOT NULL DEFAULT '-1', /* 3' trim site */
	PRIMARY KEY (read_id),
	KEY        i_project (project_id),
	UNIQUE KEY ui_machid (project_i

	KEY        i_seq  (seq),
	KEY        i_qual (qual),
	KEY i_trimmed (adaptor_trimmed),
	KEY i_trim (trim_3,trim_5)
);
/* chromosome info */
-- DROP TABLE IF EXISTS chromosome;
CREATE TABLE IF NOT EXISTS chromosome (
	chromosome_id	MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT,
	organism	varchar(255) NOT NULL,
	name		varchar(64) NOT NULL,
	length		MEDIUMINT UNSIGNED NOT NULL,
	description	varchar(255) NULL,
	PRIMARY KEY (chromosome_id),
	UNIQUE KEY ui_name_organism (organism,name),
	KEY i_length (length)
);
/* read mapped location info */
-- DROP TABLE IF EXISTS analysis_method;
CREATE TABLE IF NOT EXISTS analysis_method (
	method_id	SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
	program		varchar(64) NOT NULL,
	program_params	varchar(255) NOT NULL DEFAULT '',
	PRIMARY KEY (method_id),
	UNIQUE KEY ui_prog (program,program_params)
);
/* read mapped location info */
-- DROP TABLE IF EXISTS read_location;
CREATE TABLE IF NOT EXISTS read_location (
	read_location_id	integer(10) UNSIGNED NOT NULL 

	method_id		SMALLINT UNSIGNED NOT NULL REFERENCES analysis_method(method_id),
	chromosome_id		MEDIUMINT UNSIGNED NOT NULL REFERENCES chromosome(chromosome_id),
	read_id                 integer(10) UNSIGNED NOT NULL REFERENCES read_info (read_id),
	startmatch		MEDIUMINT UNSIGNED NOT NULL,
	endmatch		MEDIUMINT UNSIGNED NOT NULL,
	strand			boolean NOT NULL DEFAULT '1', /* 1 = +, 0 = - */
	score			TINYINT UNSIGNED NOT NULL DEFAULT '0',
	mismatches		TINYINT UNSIGNED NOT NULL DEFAULT '0',
	quality			TINYINT UNSIGNED NOT NULL DEFAULT '0', /* sum quality scores in trimmed seq? */	
	PRIMARY KEY (read_location_id),
	KEY i_read (read_id),
	KEY i_method (method_id),
	KEY i_chrom (chromosome_id),
	KEY i_loc (startmatch,endmatch),
	KEY i_end (endmatch),
	KEY i_strand (strand),
	KEY i_score (score),
	KEY i_mm (mismatches),
	KEY i_qual (quality)
);
-- DROP TABLE IF EXISTS read_location_loc;
CREATE TABLE IF NOT EXISTS read_location_loc (
	read_location_id	integer(10) UNSIGNED NOT NULL,
	location		LINE
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
# Dump of table jos_dbtest
# ------------------------------------------------------------
DROP TABLE IF EXISTS `jos_dbtest`;
CREATE TABLE `jos_dbtest` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `start_date` datetime NOT NULL,
  `description` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CL
# ************************************************************
# Sequel Pro SQL dump
# Version 4096
# http://www.sequelpro.com/
# http://code.google.com/p/sequel-pro/
# Host: localhost (MySQL 5.6.14)
# Database: congreso
# Generation Time: 2014-04-22 13:53:38 +0000
# ************************************************************
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
# Dump of table asistencias
# ------------------------------------------------------------
LOCK TABLES `asistencias` WRITE;
/*!40000 ALTER TABLE `asistencias` DISABLE KEYS */;
INSERT INTO `asistencias` (`ciudadano_id`, `sesion

VALUES
	(1,1),
	(2,1);
/*!40000 ALTER TABLE `asistencias` ENABLE KEYS */;
UNLOCK TABLES;
# Dump of table bienes_economicos
# ------------------------------------------------------------
LOCK TABLES `bienes_economicos` WRITE;
/*!40000 ALTER TABLE `bienes_economicos` DISABLE KEYS */;
INSERT INTO `bienes_economicos` (`id`, `valor`, `año`, `ciudadano_id`, `detalles`)
VALUES
  (1,10,2010,1,'Auto'),
  (2,20,2010,2,'Auto'),
  (3,10,2011,1,'Auto'),
  (4,20,2011,2,'Auto'),
  (5,10,2012,1,'Auto'),
  (6,20,2012,2,'Auto'),
  (7,10,2013,1,'Auto'),
  (8,20,2013,2,'Auto'),
  (9,20,2014,1,'Auto'),
  (10,10,2014,1,'Bici'),
  (11,15,2014,2,'Auto'),
  (12,15,2014,2,'Moto'),
  (13,50,2010,1,'Barco');
/*!40000 ALTER TABLE `bienes_economicos` ENABLE KEYS */;
UNLOCK TABLES;
# Dump of table bloques_politicos
# ------------------------------------------------------------
# Dump of table bloques_politicos_ciudadanos_integrantes
# ------------------------------------------------------------
# Dump of table bloq

# ------------------------------------------------------------
# Dump of table camaras
# ------------------------------------------------------------
LOCK TABLES `camaras` WRITE;
/*!40000 ALTER TABLE `camaras` DISABLE KEYS */;
INSERT INTO `camaras` (`id`, `tipo`, `año`, `presidente_id`)
VALUES
	(1,'diputados',2010,1),
	(2,'senadores',2010,5),
	(3,'diputados',2011,1),
	(4,'senadores',2011,5),
	(5,'diputados',2012,1),
	(6,'senadores',2012,5),
	(7,'diputados',2013,1),
	(8,'senadores',2013,5),
	(9,'diputados',2014,1),
	(10,'senadores',2014,5);
/*!40000 ALTER TABLE `camaras` ENABLE KEYS */;
UNLOCK TABLES;
# Dump of table camaras_diputados
# ------------------------------------------------------------
LOCK TABLES `camaras_diputados` WRITE;
/*!40000 ALTER TABLE `camaras_diputados` DISABLE KEYS */;
INSERT INTO `camaras_diputados` (`id`)
VALUES
	(1),
	(3),
	(5),
	(7),
	(9);
/*!40000 ALTER TABLE `camaras_diputados` ENABLE KEYS */;
UNLOCK TABLES;
# Dump of table camaras_senadores
# -------------
CREATE TABLE `__PREFIX__pages` (
  `pageID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `pageParentID` int(10) unsigned NOT NULL DEFAULT '0',
  `pagePath` varchar(255) NOT NULL DEFAULT '',
  `pageTitle` varchar(255) NOT NULL DEFAULT '',
  `pageNavText` varchar(255) NOT NULL DEFAULT '',
  `pageNew` tinyint(1) unsigned NOT NULL DEFAULT '1',
  `pageOrder` int(10) unsigned NOT NULL DEFAULT '1',
  `pageDepth` tinyint(10) unsigned NOT NULL DEFAULT '0',
  `pageSortPath` varchar(255) NOT NULL DEFAULT '',
  `pageTreePosition` varchar(64) NOT NULL DEFAULT '',
  `pageSubpageRoles` varchar(255) NOT NULL DEFAULT '',
  `pageSubpagePath` varchar(255) NOT NULL DEFAULT '',
  `pageHidden` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `pageNavOnly` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `pageAccessTags` varchar(255) NOT NULL DEFAULT '',
  `pageCreatorID` int(10) unsigned NOT NULL DEFAULT '0',
  `pageModified` datetime NOT NULL DEFAULT '2014-01-01 00:00:00',
  `pageAttributes` text NOT NULL,
  `pageAtt
/*==============================================================*/
/* Table : new_INDIVIDUS                                            */
/*==============================================================*/
create table new_INDIVIDUS
   Nr_Individus         smallint(4) unsigned not null AUTO_INCREMENT,
   Nom_Individu         tinytext,
   Sexe					char(1),
   primary key (Nr_Individus)
);
/*==============================================================*/
/* Table : new_ACTEURS                                              */
/*==============================================================*/
create table new_ACTEURS
   Nr_Individus         smallint(4) unsigned not null,
   Nr_Nation            char(3) not null,
   primary key (Nr_Individus)
);
/*==============================================================*/
/* Table : new_REALISATEURS                                         */
/*==============================================================*/
create table new_REALISATEURS
   Nr_Individus

   Nr_Nation            char(3) not null,
   primary key (Nr_Individus)
);
/*==============================================================*/
/* Table : new_SCENARISTE                                           */
/*==============================================================*/
create table new_SCENARISTE
   Nr_Individus         smallint(4) unsigned not null,
   primary key (Nr_Individus)
);
/*==============================================================*/
/* Table : new_A_ECRIT                                              */
/*==============================================================*/
create table new_A_ECRIT
   Nr_Film              smallint(4) unsigned not null,
   Nr_Individus         smallint(4) unsigned not null,
   primary key (Nr_Film, Nr_Individus)
);
/*==============================================================*/
/* Table : new_CINEPHILE                                            */
/*==============================================================*/
create table new

   Nr_cinephile         smallint(4) unsigned not null AUTO_INCREMENT,
   Password             tinytext,
   Nom_Cinephile        tinytext,
   primary key (Nr_cinephile)
);
/*==============================================================*/
/* Table : new_EST_CLASSE_DANS_LE                                   */
/*==============================================================*/
create table new_EST_CLASSE_DANS_LE
   Id_Genre             smallint(4) unsigned not null,
   Nr_Film              smallint(4) unsigned not null,
   primary key (Id_Genre, Nr_Film)
);
/*==============================================================*/
/* Table : new_EST_D_ORIGINE                                        */
/*==============================================================*/
create table new_EST_D_ORIGINE
   Nr_Film              smallint(4) unsigned not null,
   Nr_Nation            char(3) not null,
   primary key (Nr_Film, Nr_Nation)
);
/*==============================================================*/

# $Id$
# Authors:
#      Jeff Buchbinder <jeff@freemedsoftware.org>
# FreeMED Electronic Medical Record and Practice Management System
# Copyright (C) 1999-2012 FreeMED Software Foundation
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
SOURCE data/schema/mysql/patient.sql
SOURCE data/schema/mysql/patient_emr.sql
SOURCE data/schema/mysql/procrec.sql
CREATE TABLE IF 

	payrecdtadd		DATE,
	payrecdtmod		DATE,
	payrecpatient		BIGINT UNSIGNED NOT NULL,
	payrecdt		DATE,
	payreccat		INT UNSIGNED,
	payrecproc		BIGINT UNSIGNED NOT NULL DEFAULT 0,
	payrecsource		INT UNSIGNED,
	payreclink		INT UNSIGNED,
	payrectype		INT UNSIGNED,
	payrecnum		VARCHAR (100),
	payrecamt		REAL,
	payrecdescrip		TEXT,
	payreclock		ENUM ( 'unlocked', 'locked' ),
	user			INT UNSIGNED NOT NULL DEFAULT 0,
	active			ENUM ( 'active', 'inactive' ) NOT NULL DEFAULT 'active',
	id			SERIAL,
	#	Define keys
	KEY			( payrecpatient, payrecproc ),
	FOREIGN KEY		( payrecpatient ) REFERENCES patient ( id ) ON DELETE CASCADE,
	FOREIGN KEY		( payrecproc ) REFERENCES procrec ( id ) ON DELETE CASCADE
);
DROP PROCEDURE IF EXISTS payrec_Upgrade;
DELIMITER //
CREATE PROCEDURE payrec_Upgrade ( )
BEGIN
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION BEGIN END;
	#----- Remove triggers
	DROP TRIGGER payrec_Delete;
	DROP TRIGGER payrec_Insert;
	DROP TRIGGER payrec_Update;
	#----- Upgrades
	ALTER IGNORE TABLE payre

	ALTER IGNORE TABLE payrec ADD COLUMN active ENUM ( 'active', 'inactive' ) NOT NULL DEFAULT 'active' AFTER user;
END
//
DELIMITER ;
CALL payrec_Upgrade( );
#----- Triggers
DELIMITER //
CREATE TRIGGER payrec_Delete
	AFTER DELETE ON payrec
	FOR EACH ROW BEGIN
		DELETE FROM `patient_emr` WHERE module='payrec' AND oid=OLD.id;
	END;
//
CREATE TRIGGER payrec_Insert
	AFTER INSERT ON payrec
	FOR EACH ROW BEGIN
		# EMR aggregation
		INSERT INTO `patient_emr` ( module, patient, oid, stamp, summary, locked, user, status ) VALUES ( 'payrec', NEW.payrecpatient, NEW.id, NOW(), NEW.payrecdescrip, NEW.payreclock, NEW.user, NEW.active );
		#----- Procedure modification
		# Deductable (8), Withholding (7)
		IF FIND_IN_SET( NEW.payreccat, '7,8' ) THEN
			UPDATE procrec SET proccharges = proccharges - ABS(NEW.payrecamt), procbalcurrent = procbalcurrent - ABS(NEW.payrecamt) WHERE id=NEW.payrecproc;
		END IF;
		# Feeadjust (1)
		IF NEW.payreccat = 1 THEN
			UPDATE procrec SET procamtallowed = proccharges -
SET IDENTITY_INSERT #__extensions  ON;
INSERT INTO #__extensions (extension_id, name, type, element, folder, client_id, enabled, access, protected, manifest_cache, params, custom_data, system_data, checked_out, checked_out_time, ordering, state)
SELECT 28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2012 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '1900-01-01 00:00:00', 0, 0;
SET IDENTITY_INSERT #__extensions  OFF;
INSERT INTO #__menu (menutype, title, alias, note, path, link, type, published, parent_id, level, component_id, ordering, checked_out, checked_out_time, browserNav, access, img, template_style_id, params, lft, rgt, home, language, client_id)
SELECT 'men
﻿-- View: pyarchinit_reperti_view
-- DROP VIEW pyarchinit_reperti_view;
CREATE OR REPLACE VIEW pyarchinit_reperti_view AS 
 SELECT pyarchinit_reperti_e_us_view.id_invmat, pyarchinit_reperti_e_us_view.sito_rep, pyarchinit_reperti_e_us_view.area_rep, pyarchinit_reperti_e_us_view.us_rep, pyarchinit_reperti_e_us_view.tipo_reperto, pyarchinit_reperti_e_us_view.criterio_schedatura, pyarchinit_reperti_e_us_view.definizione, pyarchinit_reperti_e_us_view.descrizione_rep, pyarchinit_reperti_e_us_view.lavato, pyarchinit_reperti_e_us_view.nr_cassa, pyarchinit_reperti_e_us_view.luogo_conservazione, pyarchinit_reperti_e_us_view.stato_conservazione_rep, pyarchinit_reperti_e_us_view.datazione_reperto, pyarchinit_reperti_e_us_view.elementi_reperto, pyarchinit_reperti_e_us_view.misurazioni, pyarchinit_reperti_e_us_view.rif_biblio, pyarchinit_reperti_e_us_view.tecnologie, pyarchinit_reperti_e_us_view.sito_us, pyarchinit_reperti_e_us_view.area_us, pyarchinit_reperti_e_us_view.us_us, pyarchinit_reperti_e_u
-- MySQL dump 10.11
--
-- Host: localhost    Database: fuel_test
-- ------------------------------------------------------
-- Server version	5.0.67-community-nt
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_
--
--   Licensed to the Apache Software Foundation (ASF) under one or more
--   contributor license agreements.  See the NOTICE file distributed with
--   this work for additional information regarding copyright ownership.
--   The ASF licenses this file to You under the Apache License, Version 2.0
--   (the "License"); you may not use this file except in compliance with
--   the License.  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--   Unless required by applicable law or agreed to in writing, software
--   distributed under the License is distributed on an "AS IS" BASIS,
--   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--   See the License for the specific language governing permissions and
--   limitations under the License.
--
--
-- Script for creating the test database that will be used for testing
-- that dblook returns triggers in the correct order (which is
-- important because creation order dec

-- Regression test case for DERBY-6387.
--
create table t1(x int);
-- Create enough triggers to fill at least one page in
-- SYS.SYSTRIGGERS.
create trigger tr01 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr02 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr03 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr04 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr05 after update on t1 referencing new table as new for each statement select * f

create trigger tr06 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr07 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr08 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr09 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr10 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr11 after update on t1 referencin
--------------------------------------------------------
--  Constraints for Table POINT_PASSAGE
--------------------------------------------------------
  ALTER TABLE "G11_FLIGHT"."POINT_PASSAGE" ADD CONSTRAINT "PK_POINT_PASSAGE" PRIMARY KEY ("TOUR_ANNEE", "ETAPE_NUM", "PT_PASS_NUM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND"  LOCAL
 (PARTITION "POINT_PASSAGE_2012" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2013" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD

 PARTITION "POINT_PASSAGE_2014" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2015" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2016" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2017" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCRE

  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2018" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2019" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2020" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" )  ENABLE;
  ALTER TABLE "G11_FLIGHT"."POINT_PASSAGE" MODIFY ("TOUR_ANNEE" NOT NULL ENABLE);
  ALTER TABLE "G11_FLIGHT"."POINT_PA
--------------------------------------------------------
--  File created - Tuesday-May-13-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table TBL_CART
--------------------------------------------------------
  CREATE TABLE "ORACLE"."TBL_CART" 
   (	"CT_ID" NUMBER, 
	"PD_ID" NUMBER, 
	"USER_ID" NUMBER, 
	"CT_QTY" NUMBER, 
	"CT_DATE" DATE, 
	"CT_SESSION_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into ORACLE.TBL_CART
SET DEFINE OFF;
Insert into ORACLE.TBL_CART (CT_ID,PD_ID,USER_ID,CT_QTY,CT_DATE,CT_SESSION_ID) values (124,1,41,1,to_date('12-MAY-14','DD-MON-RR'),1);
-----------------------------------------------------

--  DDL for Index TBL_CART_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "ORACLE"."TBL_CART_PK" ON "ORACLE"."TBL_CART" ("CT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table TBL_CART
--------------------------------------------------------
  ALTER TABLE "ORACLE"."TBL_CART" ADD CONSTRAINT "TBL_CART_PK" PRIMARY KEY ("CT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ORACLE"."TBL_CART" MODIFY ("CT_DATE" 
﻿create or replace procedure u1.ETLT_DWH_DM_CARDSDAILY_HD_T is
      s_mview_name     varchar2(30) := 'DWH_DM_CARDSDAILY_HD_T';
      vStrDate         date := sysdate;
      v_sql            varchar2(1024);
      v_max_date       timestamp;
    begin
      v_sql := 'truncate table DWH_DM_CARDSDAILY_HD_T';
      execute immediate v_sql;
      select max(t.rep_date) into v_max_date
          from DWH_PORT t;
      --update DWH_DM_CARDSDAILY_HD
      insert /*+ append enable_parallel_dml parallel(10)*/ into DWH_DM_CARDSDAILY_HD_T
      select  /*+ parallel(30)*/t.cdhd_rep_date,
              t.cdhd_deal_number,
              t.cdhd_begin_date,
              t.cdhd_set_revolving_date,
              t.cdhd_prod_type,
              t.cdhd_pc_cred,
              t.cdhd_pc_overlimit,
              t.cdhd_pc_overdraft,
              t.cdhd_pc_prc,
              t.cdhd_pc_ovrd_cred,
              t.cdhd_pc_ovrd_overlimit,
              t.cdhd_pc_ovrd_overdraft,
              t.cdhd_pc_ovrd_prc,

/**
 * Projet BDD
 * Base de donnée de la NSA
 *
 * @author : Olivia Bruce
 * @author : Matthieu Riou
 * @author : Brice Thomas
 */
/* Suppression des Trigger */
DROP TRIGGER cookie;
DROP TRIGGER terroriste;
DROP TRIGGER mail_free_ajout;
DROP TRIGGER mail_orange_ajout;
DROP TRIGGER mail_laposte_ajout;
DROP TRIGGER telephone_sfr_ajout;
DROP TRIGGER telephone_free_ajout;
DROP TRIGGER telephone_orange_ajout;
DROP TRIGGER telephone_bouygues_ajout;
DROP TRIGGER telephone_numericable_ajout;
/* Suppression des Vues*/
DROP VIEW fbi_view;
DROP VIEW i_hack_you_view;
DROP VIEW mail_free_view;
DROP VIEW mail_orange_view;
DROP VIEW mail_laposte_view;
DROP VIEW telephone_sfr_view;
DROP VIEW telephone_free_view;
DROP VIEW telephone_orange_view;
DROP VIEW telephone_bouygues_view;
DROP VIEW telephone_numericable_view;
/* Suppression des Roles */
DROP ROLE NSA;
DROP ROLE FBI;
DROP ROLE FREE;
DROP ROLE ORANGE;
DROP ROLE LAPOSTE;
DROP ROLE SFR;
DROP ROLE BOUYGUES;
DROP ROLE NUMERICABLE;
/* Suppression des
<dtml-let delivery_list="[]">
  <dtml-in prefix="loop" expr="_.range(_.len(uid))">
      <dtml-call expr="delivery_list.append(loop_item)">
  </dtml-in>
  <dtml-if expr="_.len(delivery_list) > 0">
REPLACE INTO
  delivery
VALUES
    <dtml-in prefix="loop" expr="delivery_list">
( 
  <dtml-sqlvar expr="uid[loop_item]" type="int">,
  <dtml-sqlvar expr="getSourceUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getDestinationUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getSourceSectionUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getDestinationSectionUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getResourceUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getRecoupDate[loop_item]" type="datetime" optional>,
  <dtml-sqlvar expr="getSourcePaymentReference[loop_item]" type="string" optional>,
  <dtml-sqlvar expr="getDestinationPaymentReference[loop_item]" type="string" optional>,
  <dtml-sqlvar expr="getSourcePaymentInternalBankAccountN
CREATE VIEW [dbo].[LastWeeksMailStats]
AS
	SELECT DISTINCT
		RANK() OVER (ORDER BY COUNT ([Name]) ASC) AS [Id],
		[Mailer],
		(
			COUNT ([Name])
		) 
		AS [Mailed]
	FROM
	(
		SELECT [MAILEES].[Name], [MAIL].[UserName] AS [Mailer]
		FROM [dbo].[RecruitmentMailees] AS [MAILEES] WITH (NOLOCK)
		INNER JOIN [dbo].[AspNetUsers] AS [MAIL] WITH (NOLOCK)
			ON [MAIL].[Id] = [MAILEES].[MailerId]
		WHERE [MAILEES].[Mailed] >= DATEADD(DD, -7, GETDATE())
	) AS [a]
	GROUP BY [Mailer]
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'LastWeeksMailStats';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         N

         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
      

      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 95
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Co
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='draw_follow_log' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='draw_follow_log' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_draw_follow_log`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='lottery_prize_list' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='lottery_prize_list' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_lottery_prize_list`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='lucky_follow' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='lucky_follow' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_lucky_follow`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='lzwg_activities' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='lzwg_activities' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_lzwg_activities`;


DELETE FROM `wp_model` WHERE `name`='lzwg_activities_vote' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_lzwg_activities_vote`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='sport_award' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='sport_award' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_sport_award`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='sports' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='sports' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_sports`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='sports_drum' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='sports_drum' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_sports_drum`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='sports_support' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='spor

DROP TABLE IF EXISTS `wp_sports_support`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='sports_team' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='sports_team' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_sports_team`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='lottery_games' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='lottery_games' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_lottery_games`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='lottery_games_award_link' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='lottery_games_award_link' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_lottery_games_award_link`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='draw_follow_log' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='draw_follow_log' ORDER BY id DESC 
-- Add option conditions for Warrior trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (523,655,656,4091,4475,4481,4482,4509,4511,4525,4526,4527,4546,4547,4548,4568,4569,4570,4578,4579,4581,4645,4649,4650,4653,4683,4684,4696,4697,7263);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,523,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,523,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,523,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,655,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,655,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,655,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,656,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior

(15,656,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,656,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4091,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4091,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4091,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4475,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4475,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4475,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4481,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4481,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4481,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4482,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4482,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4482,2,0,15,1,0,0,0,'','Show gossip option if pl

(15,4509,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4509,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4509,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4511,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4511,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4511,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4525,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4525,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4525,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4526,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4526,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4526,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4527,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4527,1,0,15,1,0,0,0,'','Show gossip option if 
﻿CREATE VIEW dbo.vRespondedTasks
AS
SELECT     TaskID, State, TaskType, CreateTime, Status
FROM         dbo._TaskList
WHERE     (Status = 20)
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
  

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 

         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "_TaskList (dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 190
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1530
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vRespondedTasks';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @leve
# data relevant to the application as a whole
%global = (
	name => "truncfield",
	description => "truncates specified fields from a string-delimited data stream",
	version => "\"CRUSH_PACKAGE_VERSION\"",
	trailing_opts => "[file ...]",
	usage_extra => "if -d is not specified and DELIMITER enviroment variable is defined, that value will be used.",
	do_long_opts => 1,
	preproc_extra => '#include <crush/crush_version.h>',
	copyright => <<END_COPYRIGHT
   Copyright 2008 Google Inc.
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
  

END_COPYRIGHT
);
# descriptions of individual command-line arguments
# valid types are
#	flag		- no argument
#	var		- required argument
#	var_optional	- optional argument
#	custom_flag	- no arg, and specify parseopt_code 
#	custom_var	- required arg, and specify parseopt_code 
#	custom_var_optional - optional arg, and specify parseopt_code 
@args = ( {
	  name => 'help',
	  shortopt => 'h',
	  longopt => 'help',
	  type => 'flag',
	  required => 0,
	  main_code => 'usage(argv[0]); exit(EXIT_HELP);',
	  description => 'print this message and exit'
	},
	{
	  name => 'version',
	  shortopt => 'V',
	  longopt => 'version',
	  type => 'flag',
	  required => 0,
	  main_code => 'version(); exit(1);',
	  description => 'print version info and exit'
	},
	{
	  name        => 'delim',
	  shortopt    => 'd',
	  longopt     => 'delimiter',
	  required    => 0,
	  type        => 'var',
	  description => 'field-separator string',
	},
	{
	  name        => 'fields',
	  shortopt    => 'f',
	  longopt  
-- phpMyAdmin SQL Dump
-- version 3.5.1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Jun 10, 2013 at 11:58 AM
-- Server version: 5.5.24-log
-- PHP Version: 5.4.3
SET FOREIGN_KEY_CHECKS=0;
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `testly`
--
-- --------------------------------------------------------
--
-- Table structure for table `group`
--
DROP TABLE IF EXISTS `group`;
CREATE TABLE IF NOT EXISTS `group` (
  `group_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `group_name` varchar(255) NOT NULL,
  `deleted` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=65 ;
--
-- Dumping data for table `group`
--
INSERT INTO `group` (`gr

(1, 'AK-47', 0),
(2, 'AR-15', 0),
(3, 'USA-12', 0),
(4, 'miskit', 0),
(15, 'append YOU motherfucker!', 0),
(16, 'append my ass!', 0),
(64, 'grupikene', 0);
-- --------------------------------------------------------
--
-- Table structure for table `student`
--
DROP TABLE IF EXISTS `student`;
CREATE TABLE IF NOT EXISTS `student` (
  `student_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `student_name` varchar(255) NOT NULL,
  `group_id` int(10) unsigned NOT NULL,
  `email` varchar(255) NOT NULL,
  `deleted` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`student_id`),
  KEY `group_id` (`group_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=30 ;
--
-- Dumping data for table `student`
--
INSERT INTO `student` (`student_id`, `student_name`, `group_id`, `email`, `deleted`) VALUES
(3, 'aia', 1, 'aia@khk.ee', 0),
(4, 'saia', 2, 'saia@khk.ee', 0),
(5, 'Milky Way', 3, 'milki@hot.ee', 0),
(6, 'nupsik', 3, 'nups@gmail.com', 0),
(7, 'kia', 4, 'kia@hot.ee', 0),
(8, 'aisa', 4,
-- from http://www.ssistalk.com/2013/01/31/ssis-2012-catalog-indexing-recommendations/
-- via http://ssisreportingpack.codeplex.com/
USE [SSISDB]
GO
/****** Object:  Index [ncidxOperation_Id]    Script Date: 4/25/2012 3:45:32 PM ******/
CREATE NONCLUSTERED INDEX [ncidxOperation_Id] ON [internal].[event_messages]
	[operation_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [ncidxExecution_id]    Script Date: 4/25/2012 3:47:53 PM ******/
CREATE NONCLUSTERED INDEX [ncidxExecution_id] ON [internal].[executable_statistics]
	[execution_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [NonClusteredIndex-20120425-124229]    Script Date: 4/25/2012 1:04:44 PM ******/
CREATE NONCLUSTERED INDEX 

	[execution_id] ASC,
	[sequence_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [ncidxOperation_id]    Script Date: 4/25/2012 3:46:42 PM ******/
CREATE NONCLUSTERED INDEX [ncidxOperation_id] ON [internal].[operation_messages]
	[operation_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  Index [ncidxEvent_message_id]    Script Date: 4/25/2012 3:49:06 PM ******/
CREATE NONCLUSTERED INDEX [ncidxEvent_message_id] ON [internal].[event_message_context]
	[event_message_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [internal].[appen

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [internal].[append_execution_component_phases]
        @execution_id                 bigint,                             
        @package_name                 nvarchar(260),
        @package_location_type        nvarchar(128),
        @package_path_full            nvarchar(4000),                            
        @task_name                    nvarchar(4000),                                
        @subcomponent_name            nvarchar(4000),
        @phase                        sysname,
        @is_start                     bit,
        @start_phase_time             datetimeoffset,
        @end_phase_time               datetimeoffset,
        @execution_path               nvarchar(MAX),
        @sequence_id                  int
AS
SET NOCOUNT ON
-- Phil Brammer - Added serializable isolation level to single-thread this proc call.
---- from http://www.ssistalk.com/2013/01/31/ssis-2012-catalog-indexing-recommendations
SET DEFINE OFF;
CREATE TABLE D_ACC_CHART
  COMPANY_ID      VARCHAR2(10 BYTE),
  ACCOUNT_ID      VARCHAR2(15 BYTE),
  ACCOUNT_NAME    VARCHAR2(85 BYTE),
  STATEMENT_ID    VARCHAR2(3 BYTE),
  BALANCE_TYPE    VARCHAR2(1 BYTE),
  EXPORT_ACCOUNT  VARCHAR2(20 BYTE),
  ACTIVE_FLAG     VARCHAR2(1 BYTE),
  WHOSTAMP        VARCHAR2(50 BYTE),
  DATESTAMP       DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_ACC_CHART_PK ON D_ACC_CHART
(COMPANY_ID, ACCOUNT_ID)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INI
use QSM;
IF OBJECT_ID(N'up_Fix_Car_Make') IS NOT NULL
	DROP PROC up_Fix_Car_Make;
GO
CREATE PROC up_Fix_Car_Make
AS
DECLARE @MakeModel TABLE
	Make	varchar(20),
	Model	varchar(30),
	Cnt		int
);
INSERT @MakeModel (Make, Model, Cnt)
SELECT Make, Model, count(*)
FROM CarData.Car
WHERE Make = '' and Model <> ''
  and Model like '[A-Z]%'
GROUP BY Make, Model;
/*
select * from @MakeModel
where Cnt > 10
order by Model, Cnt desc
*/
DECLARE @Make  varchar(20);
DECLARE @Model varchar(30);
DECLARE m_cursor CURSOR FOR SELECT Model FROM @MakeModel;
DECLARE @f table
	Make		varchar(20),
	Model		varchar(30),
	Cnt			int,
	Rate		numeric(3,2)
-- 	MakeMatch	char(1)
);
OPEN m_cursor;
FETCH NEXT FROM m_cursor INTO @Model;
declare @i smallint = 0;
declare @total float = 0;
WHILE @@FETCH_STATUS = 0
BEGIN
	delete @f;
	insert @f (Make, Model, Cnt)
	select Make, Model, count(*) Cnt
	from CarData.Car
	where Model = @Model
	  and Make <> ''
	group by Make, Model;
	select @total = sum(Cnt) FROM @f;
	update @f set Ra
CREATE DATABASE MonteCarlo;
GO;
CREATE TABLE modelType (
	strModel varchar(32) NOT NULL PRIMARY KEY,
CREATE TABLE modelYear (
	intYear int NOT NULL PRIMARY KEY,
CREATE TABLE intensities (
	intYear        int         NOT NULL,
	strModel       varchar(32) NOT NULL,
	intRun         int         NOT NULL,
	strCensa123Key varchar(3)  NOT NULL,
	fltIntensity   float           NULL,
	CONSTRAINT intensities_PK PRIMARY KEY (intRun, intYear, strModel, strCensa123Key),
	CONSTRAINT intensities_FK_modelYear FOREIGN KEY (intYear) REFERENCES ModelYear (intYear),
	CONSTRAINT intensities_FK_modelType FOREIGN KEY (strModel) REFERENCES modelType (strModel),
);
INSERT INTO modelType (strModel) VALUES('Single Region')
INSERT INTO modelType (strModel) VALUES('Two Region')
INSERT INTO modelYear (intYear) VALUES(2005)
INSERT INTO modelYear (intYear) VALUES(2006)
INSERT INTO modelYear (intYear) VALUES(2007)
INSERT INTO modelYear (intYear) VALUES(2008)
INSERT INTO modelYear (intYear) VALUES(2009)
INSERT INTO mod
/* 
Sequences of high quality reads (each base quality >= 20, AGACAGCAG correct)
not mapped against sscrofa 9.53, not matching RT primers.
Grouped and counted
*/ 
-- drop table if exists test8_qs20_unaligned_sequences ;
create temp table test8_qs20_unaligned_sequences AS (
  select 
    "tmpTest8_qs20".read_sequence, 
    count(*) AS read_count
  from "tmpTest8_qs20" left join "tmpSoapTest8_qs20_r1" on
    "tmpTest8_qs20".read_name = "tmpSoapTest8_qs20_r1".read_name 
  where 
    "tmpTest8_qs20".read_sequence not like '%AAGGTCTAT%' AND -- Remove RT primers
    "tmpSoapTest8_qs20_r1".read_name is null                 -- Remove aligned reads
  group by "tmpTest8_qs20".read_sequence                
  order by read_count desc
  );
-- Write out fasta file (N.B. writefasta() can't read temporary tables)
create table tmp_notaligned AS (select * from test8_qs20_unaligned_sequences); 
select writefasta('select read_count, read_sequence from tmp_notaligned order by read_count desc limit 1000')
d

-------------------------------------[ Stats ]---------------------------------
select 
  sum(read_count) AS unidentified_reads,
  sum(read_count)::numeric / (select count(*) from "tmpTest8_qs20") AS proportion_unidentified,
  count(*) AS unidentified_sequences,
  count(*)::numeric / (select count(distinct read_sequence) from "tmpTest8_qs20") AS proportion_unid_reads
from test8_qs20_unaligned_sequences ;
----------------------------------[ Tritume ]----------------------------------
-- Sequence expression in aligned, not RT primers
create temp table aligned_not_rdna AS(
  select "tmpTest8_qs20".read_sequence, count("tmpTest8_qs20".read_sequence) AS sequence_count
  from "tmpTest8_qs20" 
    left join "tmpTest8_qs20_rDNA" on
      "tmpTest8_qs20".read_name = "tmpTest8_qs20_rDNA".read_name
    inner join "tmpSoapTest8_qs20_r1" on                 -- Retain aligned reads
      "tmpTest8_qs20".read_name = "tmpSoapTest8_qs20_r1".read_name
  where "tmpTest8_qs20_rDNA" is null AND            
--------------------------------------------------------
--  File created - Sunday-May-31-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence CORREOS_SEQ
--------------------------------------------------------
   CREATE SEQUENCE  "DBO"."CORREOS_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 2 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PERSONAS_SEQ
--------------------------------------------------------
   CREATE SEQUENCE  "DBO"."PERSONAS_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 12 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TELEFONOS_SEQ
--------------------------------------------------------
   CREATE SEQUENCE  "DBO"."TELEFONOS_SEQ"  MINVALUE 1 MAXVALUE 99999999999 INCREMENT BY 1 START WITH 2 NOCACHE  NOORDER  NOCYCLE ;
----------

--  DDL for Table CORREOS
--------------------------------------------------------
  CREATE TABLE "DBO"."CORREOS" 
   (	"CORREO_ID" NUMBER(6,0), 
	"CORREO" VARCHAR2(60 BYTE), 
	"PERSONA_ID" NUMBER(6,0), 
	"ESTADO" VARCHAR2(8 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PERSONAS
--------------------------------------------------------
  CREATE TABLE "DBO"."PERSONAS" 
   (	"PERSONA_ID" NUMBER(6,0), 
	"NOMBRE" VARCHAR2(30 BYTE), 
	"APELLIDO" VARCHAR2(30 BYTE), 
	"SEXO" VARCHAR2(1 BYTE), 
	"FECHA_NACIMIENTO" DATE, 
	"DIRECCION" VARCHAR2(80 BYTE), 
	"ESTADO" VARCHAR2(8 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 25

  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SEQUENCE
--------------------------------------------------------
  CREATE TABLE "DBO"."SEQUENCE" 
   (	"SEQ_NAME" VARCHAR2(50 BYTE), 
	"SEQ_COUNT" NUMBER(38,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TELEFONOS
--------------------------------------------------------
  CREATE TABLE "DBO"."TELEFONOS" 
   (	"TELEFONO_ID" NUMBER(6,0), 
	"TELEFONO" VARCHAR2(13 BYTE), 
	"PERSON
-- *
-- * バージョンアップ用スクリプト
-- *
-- * PHP versions 5
-- *
-- * LICENSE: This source file is licensed under the terms of the GNU General Public License.
-- *
-- * @package    Magic3 Framework
-- * @author     平田直毅(Naoki Hirata) <naoki@aplo.co.jp>
-- * @copyright  Copyright 2006-2015 Magic3 Project.
-- * @license    http://www.gnu.org/copyleft/gpl.html  GPL License
-- * @version    SVN: $Id$
-- * @link       http://www.magic3.org
-- *
-- --------------------------------------------------------------------------------------------------
-- バージョンアップ用スクリプト
-- --------------------------------------------------------------------------------------------------
-- *** システムベーステーブル ***
-- 管理画面ナビゲーション項目マスター
ALTER TABLE _nav_item DROP PRIMARY KEY;                                                                 -- プライマリーキー削除
ALTER TABLE _nav_item DROP INDEX ni_nav_id;                                                                    -- ユニーク制約削除
ALTER TABLE _nav_item ADD PRIMARY KEY (ni_nav_id, ni_id);  
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[Switch_CurrencyMultiplier]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Switch_CurrencyMultiplier]
	-- Add the parameters for the stored procedure here
	 @param_strClientID nvarchar(50)
	,@param_strFundCurrency nchar(3)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
    SELECT  (SELECT ExchangeRate/(SELECT ExchangeRate FROM NavGlobalDBwwwGUID.dbo.Currency WHERE Currency = (SELECT Currency FROM NavGlobalDBwwwGUID.dbo.Client where ClientID = @param_strClientID)) AS RelativeExch FROM NavGlobalDBwwwGUID.dbo.Currency WHERE Currency = @param_strFundC
# Question 1
# Karl Seal has made the most rentals (45) at store 2
WITH store2_customers AS (
    SELECT rental.customer_id, rental.rental_id
    FROM rental
    JOIN customer ON rental.customer_id = customer.customer_id
    WHERE customer.store_id = 2
  ),
    best_customer AS (
    SELECT customer_id, COUNT(*)
    FROM store2_customers
    GROUP BY customer_id ORDER BY count DESC
    LIMIT 1
    )
SELECT first_name, last_name, customer.customer_id, count
FROM customer
JOIN best_customer
ON best_customer.customer_id = customer.customer_id;
#********************************************************************
WITH store2_rentals AS (
    SELECT rental.customer_id, rental.rental_id
    FROM rental
    JOIN staff ON staff.staff_id = rental.staff_id
    WHERE staff.store_id = 2
  ),
  best2_customers AS (
    SELECT store2_rentals.customer_id, COUNT(*)
    FROM store2_rentals
    JOIN customer ON store2_rentals.customer_id = customer.customer_id
    GROUP BY store2_rentals.customer_id ORD
  SELECT dropIfExists('VIEW', 'prospect', 'api', true);
  CREATE OR REPLACE VIEW api.prospect AS
  SELECT 
    prospect_number::VARCHAR AS prospect_number,
    prospect_name AS prospect_name,
    prospect_active AS active,
    salesrep_number AS sales_rep,
    warehous_code AS site_code,
    taxzone_code AS default_tax_zone,
    prospect_comments AS notes,
    cntct_number AS contact_number,
    cntct_honorific AS contact_honorific,
    cntct_first_name AS contact_first,
    cntct_middle AS contact_middle,
    cntct_last_name AS contact_last,
    cntct_suffix AS contact_suffix,
    cntct_title AS contact_job_title,
    cntct_phone AS contact_voice,
    cntct_phone2 AS contact_alternate,
    cntct_fax AS contact_fax,
    cntct_email AS contact_email,
    cntct_webaddr AS contact_web,
    (''::TEXT) AS contact_change,
    addr_number AS contact_address_number,
    addr_line1 AS contact_address1,
    addr_line2 AS contact_address2,
    addr_line3 AS contact_address3,
    addr_city AS cont

    addr_state AS contact_state,
    addr_postalcode AS contact_postalcode,
    addr_country AS contact_country,
    (''::TEXT) AS contact_address_change
  FROM
    prospect
      LEFT OUTER JOIN cntct ON (prospect_cntct_id=cntct_id)
      LEFT OUTER JOIN addr ON (cntct_addr_id=addr_id)
      LEFT OUTER JOIN taxzone ON (prospect_taxzone_id=taxzone_id)
      LEFT OUTER JOIN salesrep ON (prospect_salesrep_id=salesrep_id)
      LEFT OUTER JOIN whsinfo ON (prospect_warehous_id=warehous_id);
GRANT ALL ON TABLE api.prospect TO xtrole;
COMMENT ON VIEW api.prospect IS 'Prospect';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.prospect DO INSTEAD
INSERT INTO prospect
	(
        prospect_number,
        prospect_name,
        prospect_active,
        prospect_cntct_id,
        prospect_taxzone_id,
        prospect_salesrep_id,
        prospect_warehous_id,
  	prospect_comments)
        VALUES (
        UPPER(NEW.prospect_number),
        COALESCE(NEW.prospect_name,''),
	COALES

        saveCntct(
          getCntctId(NEW.contact_number),
          NEW.contact_number,
          saveAddr(
            getAddrId(NEW.contact_address_number),
            NEW.contact_address_number,
            NEW.contact_address1,
            NEW.contact_address2,
            NEW.contact_address3,
            NEW.contact_city,
            NEW.contact_state,
            NEW.contact_postalcode,
            NEW.contact_country,
            NEW.contact_address_change),
          NEW.contact_honorific,
          NEW.contact_first,
          NEW.contact_middle,
          NEW.contact_last,
          NEW.contact_suffix,
          NEW.contact_voice,
          NEW.contact_alternate,
          NEW.contact_fax,
          NEW.contact_email,
          NEW.contact_web,
          NEW.contact_job_title,
          NEW.contact_change
          ),
        getTaxZoneId(NEW.default_tax_zone),
        getSalesRepId(NEW.sales_rep),
        getWarehousId(NEW.site_code,'ACTIVE'),
        COALESCE(NEW.note
/*
SQL AGENT JOB :  DAILY
=======================================================================
*/
GENERAL
----------------------------------------------------
NAME:		Daily
OWNER:	gemuser
CATEGORY:	GEM
DESCRIPTION:	NONE
STEPS
----------------------------------------------------
STEP NAME:		Daily processing
TYPE:			Transact-SQL script (T-SQL)
RUN AS:
DATABASE:		GEMdb
COMMAND:		exec sp_Recur_ProcessItems 'support'
ADVANCED:
ON SUCCESS:	Go to the next step
ON FAILURE:		Go to the next step
OUTPUT FILE:		<PATH TO SQLJobs.log FILE >
Append		CHECKED
Run as user:		gemuser
---------------------------------------------------------------------------------------------------------
STEP NAME:		Post Recur Batch
TYPE:			Transact-SQL script (T-SQL)
RUN AS:
DATABASE:		GEMdb
COMMAND:		declare @d datetime
			set @d = getdate()
			exec sp_Batch_Post 'system','recur',@d
ADVANCED:
ON SUCCESS:	Quit Job Reporting Success
ON FAILURE:		Quit Job Reporting Failure
OUTPUT FILE:		<PATH TO SQLJobs.log FILE >
Append
-- To-Do List View
SELECT dropIfExists('VIEW', 'todo', 'api');
CREATE OR REPLACE VIEW api.todo AS
  SELECT
    todoitem_id AS task_number,
    todoitem_owner_username AS owner,
    todoitem_username AS assigned_to,
    todoitem_name AS task_name,
    incdtpriority_name AS priority,
    incdt_number AS incident,
    ophead_name AS opportunity,
    crmacct_number AS account,
    formatdate(todoitem_due_date) AS date_due,
    formatdate(todoitem_assigned_date) AS date_assigned,
    formatdate(todoitem_start_date) AS date_started,
    formatdate(todoitem_completed_date) AS date_completed,
    CASE
      WHEN todoitem_status = 'P' THEN
        'Pending Input'
      WHEN todoitem_status = 'D' THEN
        'Deferred'
      ELSE
        'Neither'
    END AS status,
    todoitem_active AS active,
    todoitem_description AS description,
    todoitem_notes AS notes
    FROM todoitem()
       LEFT OUTER JOIN incdt ON (incdt_id=todoitem_incdt_id)
       LEFT OUTER JOIN ophead ON (ophead_id=todoite

       LEFT OUTER JOIN crmacct ON (crmacct_id=todoitem_crmacct_id)
       LEFT OUTER JOIN incdtpriority ON (incdtpriority_id=todoitem_priority_id);
GRANT ALL ON TABLE api.todo TO xtrole;
COMMENT ON VIEW api.todo IS 'To-Do List';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.todo DO INSTEAD
  SELECT createTodoItem(
    NULL,
    NEW.assigned_to,
    COALESCE(NEW.task_name, ''),
    COALESCE(NEW.description, ''),
    getIncidentId(NEW.incident),
    COALESCE(getIncdtCrmAcctId(NEW.incident), getCrmAcctId(NEW.account)),
    getOpHeadId(NEW.opportunity),
    CASE
      WHEN (NEW.date_started > '') THEN
        NEW.date_started::DATE
      ELSE
        NULL
    END,
    CASE
      WHEN (NEW.date_due > '') THEN
        NEW.date_due::DATE
      ELSE
        NULL
    END,
    CASE
      WHEN NEW.status = 'Pending Input' THEN
        'P'
      WHEN NEW.status = 'Deferred' THEN
        'D'
      ELSE
        'N'
    END,
    CASE
      WHEN (NEW.date_assigned > '') THEN
      

      ELSE
        NULL
    END,
    CASE
      WHEN (NEW.date_completed > '') THEN
        NEW.date_completed::DATE
      ELSE
        NULL
    END,
    getIncdtPriorityId(NEW.priority),
    COALESCE(NEW.notes, ''),
    NEW.owner
    );
CREATE OR REPLACE RULE "_UPDATE" AS 
    ON UPDATE TO api.todo DO INSTEAD
  SELECT updateTodoItem(
    OLD.task_number,
    OLD.assigned_to,
    NEW.task_name,
    NEW.description,
    getIncidentId(NEW.incident),
    COALESCE(getIncdtCrmAcctId(NEW.incident), getCrmAcctId(NEW.account)),
    getOpHeadId(NEW.opportunity),
    CASE
      WHEN (NEW.date_started > '') THEN
        NEW.date_started::DATE
      ELSE
        NULL
    END,
    CASE
      WHEN (NEW.date_due > '') THEN
        NEW.date_due::DATE
      ELSE
        NULL
    END,
    CASE
      WHEN NEW.status = 'Pending Input' THEN
        'P'
      WHEN NEW.status = 'Deferred' THEN
        'D'
      WHEN NEW.status = 'Neither' THEN
        'N'
      ELSE
        NULL
    END,
    CASE
      WHEN
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
SET ANSI_PADDING ON
GO
CREATE TABLE [Production].[ProductModelProductDescriptionCulture] (
		[ProductModelID]           [int] NOT NULL,
		[ProductDescriptionID]     [int] NOT NULL,
		[CultureID]                [nchar](6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[ModifiedDate]             [datetime] NOT NULL,
		CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID]
		PRIMARY KEY
		CLUSTERED
		([ProductModelID], [ProductDescriptionID], [CultureID])
	ON [PRIMARY]
) ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Clustered index created by a primary key constraint.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel

GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	ADD
	CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate]
	DEFAULT (getdate()) FOR [ModifiedDate]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'DF_ProductModelProductDescriptionCulture_ModifiedDate'
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID]
	FOREIGN KEY ([CultureID]) REFERENCES [Production].[Culture] ([CultureID])
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing Culture.CultureID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'FK_

GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]
	FOREIGN KEY ([ProductDescriptionID]) REFERENCES [Production].[ProductDescription] ([ProductDescriptionID])
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing ProductDescription.ProductDescriptionID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID'
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID]
	FOREIGN KEY ([ProductModelID]) REFERENCES [Production].[ProductModel] ([Pr
-- phpMyAdmin SQL Dump
-- version 3.5.2
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Aug 25, 2013 at 04:02 PM
-- Server version: 5.5.25a
-- PHP Version: 5.4.4
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `sampledb`
--
-- --------------------------------------------------------
--
-- Table structure for table `columns`
--
CREATE TABLE IF NOT EXISTS `columns` (
  `colId` int(11) NOT NULL AUTO_INCREMENT,
  `tableId` int(11) NOT NULL,
  `isForm` tinyint(1) NOT NULL,
  `isGrid` tinyint(1) NOT NULL,
  `isQuickSearch` tinyint(1) NOT NULL,
  `dataBind` varchar(200) NOT NULL,
  `refTableName` varchar(120) NOT NULL,
  `optionsText` varchar(50) NOT NULL,
  `optionsValue` varchar(50) NOT NULL,
  `colName` varchar(

  `isPk` tinyint(1) NOT NULL,
  `ai` tinyint(1) NOT NULL,
  `dataType` varchar(20) NOT NULL,
  `size` int(11) NOT NULL,
  `isNull` tinyint(1) NOT NULL,
  `orderNo` int(11) NOT NULL,
  PRIMARY KEY (`colId`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=50 ;
--
-- Dumping data for table `columns`
--
INSERT INTO `columns` (`colId`, `tableId`, `isForm`, `isGrid`, `isQuickSearch`, `dataBind`, `refTableName`, `optionsText`, `optionsValue`, `colName`, `isPk`, `ai`, `dataType`, `size`, `isNull`, `orderNo`) VALUES
(13, 30, 0, 0, 0, '', '', '', '', 'NavigationId', 1, 1, 'int', 100, 0, 0),
(14, 30, 1, 1, 1, '', '', '', '', 'NavName', 0, 0, 'varchar', 100, 0, 2),
(15, 30, 1, 1, 0, '', '', '', '', 'NavOrder', 0, 0, 'int', 0, 0, 3),
(16, 30, 1, 1, 0, '', '', '', '', 'ActionPath', 0, 0, 'varchar', 100, 0, 4),
(17, 30, 1, 1, 1, '', 'Navigations', 'NavName', 'NavigationId', 'ParentNavId', 0, 0, 'int', 0, 1, 4),
(18, 31, 0, 0, 0, '', '', '', '', 'RoleId', 1, 1, 'int', 0, 0, 0),
(19, 31, 1, 1, 

(20, 31, 1, 1, 1, '', 'Navigations', 'NavName', 'NavigationId', 'NavigationId', 0, 0, 'int', 0, 1, 0),
(21, 31, 1, 1, 0, '', '', '', '', 'IsRead', 0, 0, 'boolean', 0, 0, 0),
(22, 31, 1, 1, 0, '', '', '', '', 'IsInsert', 0, 0, 'boolean', 0, 0, 0),
(23, 31, 1, 1, 0, '', '', '', '', 'IsUpdate', 0, 0, 'boolean', 0, 0, 0),
(24, 31, 1, 1, 0, '', '', '', '', 'IsDelete', 0, 0, 'boolean', 0, 0, 0),
(25, 32, 0, 0, 0, '', '', '', '', 'UserId', 1, 1, 'int', 0, 0, 1),
(26, 32, 1, 1, 1, '', '', '', '', 'UserName', 0, 0, 'varchar', 100, 0, 4),
(27, 32, 1, 1, 1, '', '', '', '', 'FirstName', 0, 0, 'varchar', 50, 0, 0),
(28, 32, 1, 1, 1, '', '', '', '', 'LastName', 0, 0, 'varchar', 50, 0, 6),
(29, 32, 1, 0, 0, '', '', '', '', 'Password', 0, 0, 'varchar', 100, 0, 5),
(30, 32, 1, 1, 1, '', '', '', '', 'Email', 0, 0, 'varchar', 100, 0, 6),
(31, 32, 1, 1, 1, '', 'Roles', 'RoleName', 'RoleId', 'Role', 0, 0, 'int', 0, 0, 7),
(32, 32, 1, 1, 1, '', '', '', '', 'IsActive', 0, 0, 'boolean', 0, 1, 8),
(33, 32, 1,
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'POINT (0 9)'::geometry AS geom
    ) AS g
  ) j;
  
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'LINESTRING (
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            )'::geometry AS geom
    ) AS g
  ) j;
  
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'POLYGON ((
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'TRIANGLE ((
                0 0, 
                0 9, 
                9 0, 
                0 0
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (S

  FROM
    (SELECT 
       'POLYGON ((
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            ), (
                1 1, 
                1 3, 
                3 2, 
                1 1
            ), (
                7 6, 
                6 8, 
                8 8, 
                7 6
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'MULTIPOLYGON (((
                0 0, 
                0 3, 
                4 3, 
                4 0, 
                0 0
            )), ((
                2 4, 
                1 6, 
                4 5, 
                2 4
            ), (
                7 6, 
                6 8, 
                8 8, 
                7 6
            )))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsEWKT(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
   FROM
     (SELECT 
       'POLY

                0 0 0, 
                0 0 1, 
                0 1 1, 
                0 1 0, 
                0 0 0
            )), ((
                0 0 0, 
                0 1 0, 
                1 1 0, 
                1 0 0, 
                0 0 0
            ))
            )'::geometry AS geom
   ) AS g
  ) j;
SELECT path, ST_AsEWKT(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
   FROM
     (SELECT 
       'TIN (((
                0 0 0, 
                0 0 1, 
                0 1 0, 
                0 0 0
            )), ((
                0 0 0, 
                0 1 0, 
                1 1 0, 
                0 0 0
            ))
            )'::geometry AS geom
   ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'GEOMETRYCOLLECTION(
          POINT(99 98), 
          LINESTRING(1 1, 3 3),
          POLYGON((0 0, 0 1, 1 1, 0 0)),
          POLYGON((0 0, 0 9, 9 9, 9 0, 0 0), (5 5, 5 6, 6 6, 5 5)),
         
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `creature_respawn`;
CREATE TABLE `creature_respawn` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier',
  `respawnTime` int(10) unsigned NOT NULL DEFAULT '0',
  `instanceId` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Instance Identifier',
  PRIMARY KEY (`guid`,`instanceId`),
  KEY `idx_instance` (`instanceId`) USING BTREE
) ENGINE=InnoDB DEFAULT 
CREATE TABLE &PPXUSER..orders_id_range (
    order_id                                 NUMBER(12)   NOT NULL
  , order_date                               TIMESTAMP(6) NOT NULL
  , order_mode                               VARCHAR2(8)
  , customer_id                              NUMBER(12) NOT NULL
  , order_status                             NUMBER(2)
  , order_total                              NUMBER(8,2)
  , sales_rep_id                             NUMBER(6)
  , promotion_id                             NUMBER(6)
  , warehouse_id                             NUMBER(6)
PARTITION BY RANGE (order_id) (
    PARTITION id_00m VALUES LESS THAN (1000000)
  , PARTITION id_01m VALUES LESS THAN (2000000)
  , PARTITION id_02m VALUES LESS THAN (3000000)
  , PARTITION id_03m VALUES LESS THAN (4000000)
  , PARTITION id_04m VALUES LESS THAN (5000000)
  , PARTITION id_05m VALUES LESS THAN (6000000)
  , PARTITION id_06m VALUES LESS THAN (7000000)
  , PARTITION id_07m VALUES LESS THAN (8000000)
  , PARTIT
DROP TABLE IF EXISTS car;
CREATE TABLE car (
	id BIGINT PRIMARY KEY AUTO_INCREMENT,
    number_of_wheels INT DEFAULT 4,
    brand VARCHAR(20) NOT NULL,
    model VARCHAR(35) NOT NULL,
    number_plate VARCHAR(20) UNIQUE NOT NULL,
    color VARCHAR(25) NOT NULL,
    manufacturing_date DATE NOT NULL
);
INSERT INTO car (number_of_wheels, brand, model, number_plate, color, manufacturing_date) VALUES
	(4, "BMW", "318d", "ABC-123", "black", "2006-10-24"),
	(4, "BMW", "318d", "ABC-124", "black", "2007-10-24"),
	(4, "BMW", "320d", "ABC-125", "white", "2012-10-24");
    
DROP TABLE IF EXISTS car_model;
CREATE TABLE car_model (
	car_model_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    number_of_wheels INT DEFAULT 4,
    brand VARCHAR(20) NOT NULL,
    model VARCHAR(35) NOT NULL	
);
INSERT INTO car_model (brand, model, number_of_wheels) SELECT DISTINCT brand, model, number_of_wheels FROM car;
ALTER TABLE car ADD COLUMN car_model_id BIGINT;
UPDATE car c SET c.car_model_id =
	(SELECT m.car_model_id FROM
/* Procedure copyright(c) 1995 by Edward M Barlow */
/******************************************************************************
**
** Name        : sp__iostat
**
******************************************************************************/
:r database
go
:r dumpdb
go
if exists (select * from sysobjects
           where  name = "sp__iostat"
           and    type = "P")
   drop proc sp__iostat
go
/*---------------------------------------------------------------------------*/
create proc sp__iostat( @cnt int=3, @seconds_delay int=10, 
	@dont_format char(1) = null
	)
AS 
BEGIN
/* Process Stats */
declare @seconds_delaystr char(10)
set nocount on
create table #tmp
	spid 		smallint,
	suid 		smallint,
	cmd		char(16) null,
	cpu		int null,
	physical_io	int null,
	memusage	int null,
	new_cmd		char(16) null,
	new_cpu		int null,
	new_physical_io	int null,
	new_memusage	int null,
	blocked  smallint null,
	p_cpu char(6) null,
	p_io	char(4) null,
	p_mem char(4) null,
	p_state char(4) null
/*


	Fill With Any New Rows (new=-1, state='New')
	Update all rows with newest data
	If Any Changes, modify & print them
	Delete if new=-1 (dead rows)
	Save Data & Set new=-1,state=''
	Wait
End Loop
*/
While @cnt > 0
begin
	/* Insert Processes that are not in #tmp already */
	insert 	#tmp
	select 	spid,suid,cmd,cpu,physical_io,memusage,
		 		cmd,-1,-1,-1,blocked, null,null,null,'New'
	from 		master..sysprocesses
	where	 	spid!=@@spid
	and		spid*1000 + suid not in ( select spid*1000+suid from #tmp )
	update #tmp
	set 	new_cmd=p.cmd,
			new_cpu=p.cpu,
			new_physical_io=p.physical_io,
			new_memusage=p.memusage,
		 	blocked=p.blocked
	from master..sysprocesses p,#tmp t
	where p.spid = t.spid
	and   p.suid = t.suid
	/* new_cpu = -1 is dead row, any with cpu is active or new */
	/* If Any Rows Changed, Print Them */
	if not exists ( select * 
			from #tmp
			where new_cpu-cpu != 0
				or new_physical_io-physical_io != 0
				or blocked=1)
	begin
		select convert(char(8),getdate(),8), "No Chang

	end
	else
	begin
		update #tmp
		set	
			p_cpu     = convert(char(6),new_cpu-cpu),
			p_io      = convert(char(4),new_physical_io-physical_io),
			p_mem     = convert(char(4),new_memusage-memusage)
		where new_cpu >= 0
		update 	#tmp
			set 	p_cpu = "N.A." 
			where new_cpu-cpu < 0
		   and 	new_cpu >= 0
		update 	#tmp
			set 	p_io = "N.A." 
			where new_physical_io-physical_io  < 0
		   and 	new_cpu >= 0
		update 	#tmp
			set 	p_mem = "N.A." 
			where new_memusage-memusage  < 0
		   and 	new_cpu >= 0
		update #tmp
			set p_cpu = "NEW",
			    p_io = "NEW",
			    p_mem = "NEW"
			where p_state='New'
		update #tmp
			set p_cpu = "DEAD",
			    p_io = "DEAD",
			    p_mem = "DEAD"
			where new_cpu = -1
		select 
			"Time"  = convert(char(8),getdate(),8),
			Spid	  = convert(char(4),spid),
			"Login" = convert(char(13),suser_name(suid)), 
			Cmd     = new_cmd,
			Cpu     = p_cpu,
			Io      = p_io,
			Mem     = p_mem,
		 	Blk     = blocked
		from #tmp
		where new_cpu-cpu 	!= 0
			or ne
select xt.create_view('xt.teiteminfo', $$
select teitem.*,
  teitem_qty * teitem_empcost as hourly_total,
  basecurrid() as hourly_curr_id
from te.teitem;
$$, false);
create or replace rule "_INSERT" as on insert to xt.teiteminfo do instead
insert into te.teitem (
  teitem_id,
  teitem_tehead_id,
  teitem_linenumber,
  teitem_type,
  teitem_workdate,
  teitem_cust_id,
  teitem_vend_id,
  teitem_po,
  teitem_item_id,
  teitem_qty,
  teitem_rate,
  teitem_total,
  teitem_prjtask_id,
  teitem_lastupdated,
  teitem_billable,
  teitem_prepaid,
  teitem_notes,
  teitem_posted,
  teitem_curr_id,
  teitem_uom_id,
  teitem_invcitem_id,
  teitem_vodist_id,
  teitem_postedvalue,
  teitem_empcost,
  obj_uuid
) values (
  coalesce(new.teitem_id, nextval('te.timesheet_seq'::regclass)),
  new.teitem_tehead_id,
  new.teitem_linenumber,
  new.teitem_type,
  new.teitem_workdate,
  new.teitem_cust_id,
  new.teitem_vend_id,
  new.teitem_po,
  new.teitem_item_id,
  new.teitem_qty,
  new.teitem_rate,
  new.

  new.teitem_prjtask_id,
  coalesce(new.teitem_lastupdated, ('now'::text)::timestamp(6) with time zone),
  new.teitem_billable,
  new.teitem_prepaid,
  new.teitem_notes,
  coalesce(new.teitem_posted, false),
  new.teitem_curr_id,
  new.teitem_uom_id,
  new.teitem_invcitem_id,
  new.teitem_vodist_id,
  coalesce(new.teitem_postedvalue, 0),
  new.teitem_empcost,
  new.obj_uuid
);
create or replace rule "_UPDATE" as on update to xt.teiteminfo do instead
update te.teitem set
  teitem_linenumber=new.teitem_linenumber,
  teitem_workdate=new.teitem_workdate,
  teitem_cust_id=new.teitem_cust_id,
  teitem_vend_id=new.teitem_vend_id,
  teitem_po=new.teitem_po,
  teitem_item_id=new.teitem_item_id,
  teitem_qty=new.teitem_qty,
  teitem_rate=new.teitem_rate,
  teitem_total=new.teitem_total,
  teitem_prjtask_id=new.teitem_prjtask_id,
  teitem_lastupdated=new.teitem_lastupdated,
  teitem_billable=new.teitem_billable,
  teitem_prepaid=new.teitem_prepaid,
  teitem_notes=new.teitem_notes,
  teitem_poste
-- Creates the db structure for sites tables ...
--
-- $Id: db_sites.sql 2247 2007-11-02 13:56:21Z alex $ --
--
-- Table app_sites_archives --
CREATE SEQUENCE sites_archives_seq INCREMENT BY 1 NO MAXVALUE MINVALUE 1 CACHE 1;
CREATE TABLE app_sites_archives (
    site_archive_id integer DEFAULT nextval('sites_archives_seq'::text) NOT NULL,
    routes_quantity smallint,
    max_rating smallint,
    min_rating smallint,
    mean_rating smallint,
    max_height smallint,
    min_height smallint,
    mean_height smallint,
    equipment_rating smallint,
    climbing_styles smallint[],
    rock_types smallint[],
    site_types smallint[],
    children_proof smallint,
    rain_proof smallint,
    facings smallint[],
    best_periods smallint[],
    v4_id smallint,
    v4_type varchar(4) -- area / sect (sector)
) INHERITS (app_documents_archives);
ALTER TABLE ONLY app_sites_archives ADD CONSTRAINT sites_archives_pkey PRIMARY KEY (site_archive_id);
-- added here because indexes are not inherited

CREATE INDEX app_sites_archives_id_idx ON app_sites_archives USING btree (id); 
CREATE INDEX app_sites_archives_geom_idx ON app_sites_archives USING GIST (geom GIST_GEOMETRY_OPS); 
CREATE INDEX app_sites_archives_redirects_idx ON app_sites_archives USING btree (redirects_to); -- useful for filtering on lists
CREATE INDEX app_sites_archives_elevation_idx ON app_sites_archives USING btree (elevation);
ALTER TABLE app_sites_archives ADD CONSTRAINT enforce_dims_geom CHECK (ndims(geom) = 3);
CREATE INDEX app_sites_v4_idx ON app_sites_archives USING btree (v4_id, v4_type); -- useful for filtering on v4 type (area/sector)
CREATE INDEX app_sites_archives_latest_idx ON app_sites_archives USING btree (is_latest_version);
CREATE INDEX app_sites_archives_document_archive_id_idx ON app_sites_archives USING btree (document_archive_id);
-- Table app_sites_i18n_archives --
CREATE SEQUENCE sites_i18n_archives_seq INCREMENT BY 1 NO MAXVALUE MINVALUE 1 CACHE 1;
CREATE TABLE app_sites_i18n_archives (
   

    remarks text,
    pedestrian_access text,
    way_back text,
    external_resources text,
    site_history text
) INHERITS (app_documents_i18n_archives);
ALTER TABLE ONLY app_sites_i18n_archives ADD CONSTRAINT sites_i18n_archives_pkey PRIMARY KEY (site_i18n_archive_id);
-- added here because indexes are not inherited from parent table (app_documents_i18n_archives):
CREATE INDEX app_sites_i18n_archives_id_culture_idx ON app_sites_i18n_archives USING btree (id, culture);
-- index for text search:
-- nb : be sure to search on the lowercased version of word typed, so that this index is useful.
CREATE INDEX app_sites_i18n_archives_name_idx ON app_sites_i18n_archives USING btree (search_name);
CREATE INDEX app_sites_i18n_archives_latest_idx ON app_sites_i18n_archives USING btree (is_latest_version);
CREATE INDEX app_sites_i18n_archives_document_i18n_archive_id_idx ON app_sites_i18n_archives USING btree (document_i18n_archive_id);
-- Views --
CREATE OR REPLACE VIEW sites AS SELECT sa.oid
SELECT dropIfExists('VIEW', 'vendor', 'api');
CREATE OR REPLACE VIEW api.vendor AS
SELECT 
  vend_number::varchar AS vendor_number,
  vendtype_code AS vendor_type,
  vend_name AS vendor_name,
  vend_active AS active,
  vend_accntnum AS account_number,
  addr_number AS address_number,
  addr_line1 AS address1,
  addr_line2 AS address2,
  addr_line3 AS address3,
  addr_city AS city,
  addr_state AS state,
  addr_postalcode AS postalcode,
  addr_country AS country,
  (''::TEXT) AS address_change,
  terms_code AS default_terms,
  vend_shipvia AS ship_via,
  curr_abbr AS default_currency,
  CASE 
    WHEN vend_fobsource='W' THEN
     'Receiving Site'
    ELSE
     vend_fob
  END AS default_fob,
  vend_po AS sells_purchase_order_items,
  vend_restrictpurch AS may_only_sell_item_source,
  vend_qualified AS qualified,
  vend_match AS matching_vo_po_amounts,
  vend_1099 AS receives_1099,
  taxzone_code AS default_tax_zone,
  CASE WHEN (accnt_id IS NULL) THEN 'N/A'
       ELSE formatGLAccount(ac

  END AS default_dist_gl_account,
  CASE WHEN (expcat_id IS NULL) THEN 'N/A'
       ELSE expcat_code
  END AS default_dist_expense_category,
  CASE WHEN (tax_id IS NULL) THEN 'N/A'
       ELSE tax_code
  END AS default_dist_tax_code,
  c1.cntct_number AS contact1_number,
  c1.cntct_honorific AS contact1_honorific,
  c1.cntct_first_name AS contact1_first,
  c1.cntct_middle AS contact1_middle,   
  c1.cntct_last_name AS contact1_last,
  c1.cntct_suffix AS contact1_suffix,
  c1.cntct_title AS contact1_job_title,
  c1.cntct_phone AS contact1_voice,
  c1.cntct_phone2 AS contact1_alternate,
  c1.cntct_fax AS contact1_fax,
  c1.cntct_email AS contact1_email,
  c1.cntct_webaddr AS contact1_web,
  (''::TEXT) AS contact1_change,
  c2.cntct_number AS contact2_number,
  c2.cntct_honorific AS contact2_honorific,
  c2.cntct_first_name AS contact2_first,
  c2.cntct_middle AS contact2_middle,
  c2.cntct_last_name AS contact2_last,
  c2.cntct_suffix AS contact2_suffix,
  c2.cntct_title AS contact2_job

  c2.cntct_phone AS contact2_voice,
  c2.cntct_phone2 AS contact2_alternate,
  c2.cntct_fax AS contact2_fax,
  c2.cntct_email AS contact2_email,
  c2.cntct_webaddr AS contact2_web,
  (''::TEXT) AS contact2_change,
  vend_comments AS notes,
  vend_pocomments AS po_comments,
  vend_emailpodelivery AS allow_email_po_delivery,
  vend_ediemail AS po_edi_email,
  vend_edicc AS po_edi_cc,
  vend_edisubject AS po_edi_subject,
  vend_edifilename AS po_edi_filename,
  vend_ediemailbody AS po_edi_emailbody
FROM
  vendinfo
    LEFT OUTER JOIN addr ON (vend_addr_id=addr_id)
    LEFT OUTER JOIN cntct c1 ON (vend_cntct1_id=c1.cntct_id)
    LEFT OUTER JOIN cntct c2 ON (vend_cntct2_id=c2.cntct_id)
    LEFT OUTER JOIN taxzone ON (vend_taxzone_id=taxzone_id)
    LEFT OUTER JOIN curr_symbol ON (vend_curr_id=curr_id)
    LEFT OUTER JOIN terms ON (vend_terms_id=terms_id)
    LEFT OUTER JOIN vendtype ON (vend_vendtype_id=vendtype_id)
    LEFT OUTER JOIN accnt ON (vend_accnt_id=accnt_id)
    LEFT OUTER JOIN 
-- MySQL dump 10.13  Distrib 5.5.29, for debian-linux-gnu (i686)
--
-- Host: localhost    Database: moodle
-- ------------------------------------------------------
-- Server version	5.5.29-0ubuntu0.12.04.2
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `mdl_log`
--
DROP TABLE IF EXISTS `mdl_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `

  `id` bigint(10) NOT NULL AUTO_INCREMENT,
  `time` bigint(10) NOT NULL DEFAULT '0',
  `userid` bigint(10) NOT NULL DEFAULT '0',
  `ip` varchar(45) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `course` bigint(10) NOT NULL DEFAULT '0',
  `module` varchar(20) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `cmid` bigint(10) NOT NULL DEFAULT '0',
  `action` varchar(40) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `url` varchar(100) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  `info` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  KEY `mdl_log_coumodact_ix` (`course`,`module`,`action`),
  KEY `mdl_log_tim_ix` (`time`),
  KEY `mdl_log_act_ix` (`action`),
  KEY `mdl_log_usecou_ix` (`userid`,`course`),
  KEY `mdl_log_cmi_ix` (`cmid`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='Every action is logged as far as possible';
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `mdl_

--
LOCK TABLES `mdl_log` WRITE;
/*!40000 ALTER TABLE `mdl_log` DISABLE KEYS */;
INSERT INTO `mdl_log` VALUES (1,1366473603,2,'127.0.0.1',1,'user',0,'login','view.php?id=0&course=1','2'),(2,1366473716,2,'127.0.0.1',1,'user',0,'update','view.php?id=2&course=1',''),(3,1366473756,2,'127.0.0.1',1,'user',0,'logout','view.php?id=2&course=1','2'),(4,1366474262,2,'127.0.0.1',1,'user',0,'login','view.php?id=0&course=1','2'),(5,1366474265,2,'127.0.0.1',1,'course',0,'view','view.php?id=1','1'),(6,1366474351,2,'127.0.0.1',1,'course',0,'view','view.php?id=1','1'),(7,1366474389,2,'127.0.0.1',1,'course',0,'new','view.php?id=2','First course (ID 2)'),(8,1366474462,2,'127.0.0.1',2,'course',0,'view','view.php?id=2','2'),(9,1366474471,2,'127.0.0.1',2,'course',0,'view','view.php?id=2','2'),(10,1366474471,2,'127.0.0.1',2,'course',0,'view','view.php?id=2','2'),(11,1366474530,2,'127.0.0.1',1,'user',0,'logout','view.php?id=2&course=1','2'),(12,1366475200,2,'127.0.0.1',1,'user',0,'login','view.php?id=0&course=
# this is a dummy file used only for generating documentation.
# data relevant to the application as a whole
%global = (
  name => "buffer",
  description => "buffers all input and prints it out all at once.",
  version => "\"CRUSH_PACKAGE_VERSION\"",
  trailing_opts => "[input-file(s)]",
  usage_extra => qq{
  This is useful if the output should go to one of the input files.
  * If no files are specified, stdin is used for input, and stdout for output.
  * Warning: this has potential to consume large amounts of memory.
  NOTE: When redirecting output, your shell may open the target file for writing
        before the processes begin executing.  so using the '-o' option is safer
        than redirecting to a file.
},
  do_long_opts => 1,
  preproc_extra => '#include <crush/crush_version.h>',
  copyright => qq{
   Copyright 2008 Google Inc.
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may ob

       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
},
);
# descriptions of individual command-line arguments
@args = ( { name => 'help',
            shortopt => 'h',
            longopt => 'help',
            type => 'flag',
            required => 0,
            main_code => 'usage(argv[0]); exit(EXIT_HELP);',
            description => 'print this message and exit'
          },
          { name        => 'output',
            shortopt    => 'o',
            longopt     => '',
            type        => 'var',
            required    => 0,
            description => 'specifies output file for writing'
          },
          { name        => 'append',
            shortop
---------------------------------------------------------------------------
--
-- views.sql-
--    test views queries
--
--
-- Copyright (c) 1994-5, Regents of the University of California
--
-- $Id: views.sql,v 1.1.1.1 1996/07/09 06:22:30 scrappy Exp $
--
---------------------------------------------------------------------------
-- create a real table first
create table v1 (x int4, y int4, z int4);
insert into v1 values (1, 2, 3);
insert into v1 values (1, 3, 4);
insert into v1 values (1, 4, 5);
insert into v1 values (1, 2, 6);
-- create views for selecting single column
create view vv1 as select x from v1;
create view vv2 as select y from v1;
create view vv3 as select z from v1;
select * from vv1;
select * from vv2;
select * from vv3;
drop view vv2;
drop view vv3;
-- create views for selecting column(s) from another view
create view vv as select * from vv1;
select * from vv;
create view vv2 as select x from vv;
select * from vv2;
drop view vv;
drop view vv1;
drop view vv2;
-- create
insert into contact (first_name, last_name, birth_date, description, photo) values ('Zep', 'Brennigan', '1988-09-09', 'Default description', FILE_READ('classpath:1.jpg'));
insert into contact (first_name, last_name, birth_date, description, photo) values ('Bender', 'Rodriges', '1988-08-09', 'Default description', FILE_READ('classpath:1.jpg'));
insert into contact (first_name, last_name, birth_date, description, photo) values ('Rakkaus', 'Prophet', '1988-09-09', 'Default description', FILE_READ('classpath:1.jpg'));
insert into contact (first_name, last_name, birth_date, description, photo) values ('Lila', 'Singleye', '1988-04-06', 'Default description', FILE_READ('classpath:1.jpg'));
insert into contact (first_name, last_name, birth_date, description, photo) values ('Doctor', 'Zoildberg', '1988-05-09', 'Default description', FILE_READ('classpath:1.jpg'));
insert into contact (first_name, last_name, birth_date, description, photo) values ('Pudge', 'Chinchope', '1988-01-09', 'Default desc
﻿create or replace procedure u1.ETLT_KAS_PKB_PC is
    s_mview_name varchar2(30) := 'T_RFO_Z#KAS_PKB_PC';
    vStrDate date := sysdate;
    n_id_max number;
    begin
     select max(id)
       into n_id_max
       from T_RFO_Z#KAS_PKB_PC;
     insert /*+ append enable_parallel_dml parallel(10)*/into T_RFO_Z#KAS_PKB_PC
     select /*+ parallel(20)*/ c.id,c.c_payment_title,c.c_payment_overdue,c.collection_id,c.sn,c.su,
     case when length(c.c_payment_title) in (4,5) then
               to_date('01-'||lpad(substr(c.c_payment_title,1,instr(c.c_payment_title,'/')-1),2,'0')||'-20'||substr(c.c_payment_title,instr(c.c_payment_title,'/')+1,length(c.c_payment_title)) ,'dd-mm-yyyy')
          when length(c.c_payment_title) > 5 then
               to_date('01-'||lpad(substr(c.c_payment_title,1,instr(c.c_payment_title,'/')-1),2,'0')||substr(c.c_payment_title,instr(c.c_payment_title,'/')+1,length(c.c_payment_title)),'dd-mm-yyyy')
      end as c_payment_date
     from IBS.Z#KAS_PKB_PC@RFO_SNAP c
 
-- Drop the existing table (if any)
DROP TABLE "CS414S16"."ENROLLMENT" 
-- Create a new Relational table with 3 columns
--------------------------------------------------------
--  DDL for Table ENROLLMENT
--------------------------------------------------------
  CREATE TABLE "CS414S16"."ENROLLMENT" 
   (	"ENROLLMENT_ID" NUMBER, 
	"STUDENT_ID" NUMBER, 
	"SECTION_ID" NUMBER, 
	 CONSTRAINT "ENROLLMENT_PK" PRIMARY KEY ("ENROLLMENT_ID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 PCTTHRESHOLD 50;
--------------------------------------------------------
--  DDL for Index ENROLLMENT_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "CS414S16"."ENROLLMENT_PK" ON "CS414S16"."ENROLLMENT" ("ENROLLMENT_ID") 
  PCTFREE 1

  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table ENROLLMENT
--------------------------------------------------------
  ALTER TABLE "CS414S16"."ENROLLMENT" MODIFY ("SECTION_ID" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."ENROLLMENT" ADD CONSTRAINT "ENROLLMENT_PK" PRIMARY KEY ("ENROLLMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "CS414S16"."ENROLLMENT" MODIFY ("STUDENT_ID" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."ENROLLMENT" MODIFY ("ENROLLMENT_ID" NOT NULL ENABLE);
------------------------------------------
  CREATE OR REPLACE  VIEW HV_UPLOAD_IV (SCHEME, SCHCLASS, TRANTYPE, VALUE_DATE, NAV, NAV_UNITS, AMOUNT, LOAD, UPR_AMT, EQ_AMT, TDS, STT_TAX, BANK_ACCOUNT, DD_CHARGES, SCH_AMC, SCHEME_TYPE) AS 
  SELECT 'HDFCMS'      AS scheme,
    h.nav_schemeclass  AS schclass ,
    'RDIV'             AS trantype,
    h.nav_wkend_dt     AS value_date,
    h.nav              AS nav,
    h.nav_units        AS nav_units,
    h.corp_dd_dr       AS amount,
    0                  AS load ,
    0                  AS upr_amt,
    0                  AS eq_amt ,
    0                  AS tds ,
    0                  AS stt_tax,
    '110100-BNK15-INR' AS bank_account ,
    0                  AS dd_charges ,
    'I'                AS sch_amc ,
    'Corporate'        AS scheme_type
  FROM HI_DIVIDEND h
  UNION ALL
  SELECT 'HDFCMS'      AS scheme,
    h.nav_schemeclass  AS schclass ,
    'RDIV'             AS trantype,
    h.nav_wkend_dt     AS value_date,
    h.nav              AS nav,
    h.nav_units        AS n
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_behavior' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_behavior' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_behavior`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_group' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_group' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_group`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_keyword' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_keyword' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_keyword`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_logs' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_logs' ORDER BY id 

DROP TABLE IF EXISTS `wp_youaskservice_logs`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_user' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_user' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_user`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_wechat_enddate' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_wechat_enddate' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_wechat_enddate`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_wechat_grouplist' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_wechat_grouplist' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_wechat_grouplist`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_wxlogs' ORDER
--------------------------------------------------------
--  File created - Monday-February-29-2016   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ATTENDANCE_STATUS
--------------------------------------------------------
  CREATE TABLE "PRIYA"."ATTENDANCE_STATUS" 
   (	"STATUS_ID" NUMBER, 
	"CODE" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ATTENDANCE_STATUS_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "PRIYA"."ATTENDANCE_STATUS_PK" ON "PRIYA"."ATTENDANCE_STATUS" ("STATUS_ID")
/*
Navicat MySQL Data Transfer
Source Server         : itxxz
Source Server Version : 50621
Source Host           : localhost:3306
Source Database       : itxxzblog
Target Server Type    : MYSQL
Target Server Version : 50621
File Encoding         : 65001
Date: 2015-03-25 22:57:13
*/
SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for itxxz_article
-- ----------------------------
DROP TABLE IF EXISTS `itxxz_article`;
CREATE TABLE `itxxz_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_name` varchar(128) DEFAULT NULL,
  `article_type` int(11) DEFAULT NULL COMMENT '原创、转载、译文',
  `article_content` blob,
  `publish_or_draft` int(1) DEFAULT NULL,
  `is_on_top` int(1) DEFAULT NULL,
  `is_recommend` int(1) DEFAULT NULL,
  `is_focus` int(1) DEFAULT NULL,
  `summary` varchar(255) DEFAULT NULL,
  `reading_times` int(11) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  `author` int(255) DEFAULT NULL,
  `categoryid` int(11) DEFAULT NULL,
  `tagids` varc

  `commentid` int(11) DEFAULT NULL,
  `small_image_path` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
-- ----------------------------
-- Records of itxxz_article
-- ----------------------------
INSERT INTO `itxxz_article` VALUES ('1', '技术文档', '0', null, '0', '0', '0', '0', null, '0', null, '0', '0', null, '0', null);
INSERT INTO `itxxz_article` VALUES ('2', '常用组建', '0', null, '0', '0', '0', '0', null, '0', null, '0', '0', null, '0', null);
INSERT INTO `itxxz_article` VALUES ('3', '框架搭建', '0', null, '0', '0', '0', '0', null, '0', null, '0', '0', '', '0', '/itxxzblog/uploads/7120ed89-839e-4e2d-b985-218030d5b282.png');
INSERT INTO `itxxz_article` VALUES ('4', 'el标签', '0', null, '0', '0', '0', '0', null, '0', null, '0', '0', '', '0', '/itxxzblog/uploads/8ccd4fe8-321f-465f-b4d9-a16221ff6539.png');
INSERT INTO `itxxz_article` VALUES ('5', 'struts教程', '0', 0x3C703E3C696D6720616C743D2222207372633D222F697478787A626C6F672F75706C6F616473

INSERT INTO `itxxz_article` VALUES ('6', 'spring新特性', '0', 0x3C703E3C696D6720616C743D2222207372633D222F697478787A626C6F672F75706C6F6164732F37396133363664312D363433392D343764662D393262352D6461643531626365326364622E706E6722207374796C653D226865696768743A33303870783B2077696474683A373037707822202F3E7364667364667364667364663C2F703E0D0A, '0', '0', '0', '0', '', '0', null, '0', '0', '', '0', '/itxxzblog/uploads/79a366d1-6439-47df-92b5-dad51bce2cdb.png');
INSERT INTO `itxxz_article` VALUES ('7', 'bootstrap', '0', 0x3C703E73646673646664646464643C2F703E0D0A, '0', '0', '0', '0', 'sdf', '0', null, '0', '0', 'sdf', '0', 'sdf');
INSERT INTO `itxxz_article` VALUES ('8', 'java', '0', 0x3C703E7364663C2F703E0D0A, '0', '0', '0', '0', 'sdf', '0', null, '0', '0', '', '0', '');
INSERT INTO `itxxz_article` VALUES ('9', 'test', '0', null, '0', '0', '0', '0', null, '0', null, '0', '0', null, '0', null);
-- ----------------------------
-- Table structure for itxxz_menu
-- ----------------------------
DROP TABLE
CREATE TABLE cm_flashaltcontent(
	flashaltcontentid int identity(1,1) NOT NULL CONSTRAINT PK_cm_flashaltcontent PRIMARY KEY,
	sectionid int NOT NULL,
	createdby int NOT NULL,
	modifiedby int NULL,
	title varchar(255) NULL,	
	content text NOT NULL,
	inserttimestamp datetime DEFAULT current_timestamp NOT NULL,
	updatetimestamp datetime DEFAULT current_timestamp NOT NULL)
go
ALTER TABLE cm_flashaltcontent
	ADD CONSTRAINT FK_flashaltcontent_section_sectionid
		FOREIGN KEY (sectionid) REFERENCES cuyahoga_section (sectionid)
go
/*
 *  Table data
 */
DECLARE @moduletypeid int
INSERT INTO cuyahoga_moduletype ([name], assemblyname, classname, path, editpath, inserttimestamp, updatetimestamp) VALUES ('Flash', 'Cuyahoga.Modules.Flash', 'Cuyahoga.Modules.Flash.FlashModule', 'Modules/Flash/Flash.ascx', 'Modules/Flash/EditFlash.aspx', current_timestamp, current_timestamp)
SELECT @moduletypeid = Scope_Identity()
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, i

INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIEBGCOLOR', 'Movie Background Color', 'System.String', 0, 0)
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIEHEIGHT', 'Movie Height', 'System.String', 0, 1)
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIEWIDTH', 'Movie Width', 'System.String', 0, 1)
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIENAME', 'Movie Name', 'System.String', 0, 1)
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIEQUALITY', 'Movie Quality', 'Cuyahoga.Modules.Flash.MovieQuality', 1, 1)
INSERT INT

INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MAJORPLUGINVERSION', 'Major Plugin Version', 'System.Int32', 0, 1)
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MAJORPLUGINVERSIONREVISION', 'Major Plugin Version Revision', 'System.Int32', 0, 1)
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MINORPLUGINVERSION', 'Minor Plugin Version', 'System.Int32', 0, 1)
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MINORPLUGINVERSIONREVISION', 'Minor Plugin Version Revision', 'System.Int32', 0, 0)
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'AL
--
-- PostgreSQL database dump
--
-- Dumped from database version 9.5.0
-- Dumped by pg_dump version 9.5.0
SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'SQL_ASCII';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
--
-- Name: trades; Type: SCHEMA; Schema: -; Owner: traders
--
CREATE SCHEMA trades;
SET default_with_oids = false;
--
-- Name: d_hld_svxy; Type: TABLE; Schema: trades; Owner: traders
--
CREATE TABLE d_hld_svxy (
    date date,
    security text,
    typeid integer,
    shares double precision,
    exposure double precision,
    marketvalue double precision,
    UNIQUE(date, typeid)
);
--
-- Name: d_hld_uvxy; Type: TABLE; Schema: trades; Owner: traders
--
CREATE TABLE d_hld_uvxy (
    date date,
    security text,
    typeid integer,
    shares double precision,
    exposure double precision,
    marketvalue double precision,
    UNIQUE (date, typeid)
);
--
-- Name: d_nav_svxy; Type: TABLE; S

--
CREATE TABLE d_nav_svxy (
    date date,
    nav double precision,
    priornav double precision,
    navchangepct double precision,
    navchange double precision,
    shares double precision,
    assets double precision
);
--
-- Name: d_nav_uvxy; Type: TABLE; Schema: trades; Owner: traders
--
CREATE TABLE d_nav_uvxy (
    date date,
    nav double precision,
    priornav double precision,
    navchangepct double precision,
    navchange double precision,
    shares double precision,
    assets double precision
);
--
-- Name: d_q_spy; Type: TABLE; Schema: trades; Owner: traders
--
CREATE TABLE d_q_spy (
    date date,
    close double precision,
    volume double precision,
    open double precision,
    high double precision,
    low double precision
);
--
-- Name: d_q_svxy; Type: TABLE; Schema: trades; Owner: traders
--
CREATE TABLE d_q_svxy (
    date date,
    close double precision,
    volume double precision,
    open double precision,
    high double precision,
    low dou
--
-- PostgreSQL database dump
--
SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET search_path = public, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;
--
-- Name: world; Type: TABLE; Schema: public; Owner: pg_dump_test; Tablespace:
--
CREATE TABLE world (
    name character varying(255) NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    active boolean NOT NULL,
    uuid bytea,
    id integer NOT NULL
);
ALTER TABLE public.world OWNER TO pg_dump_test;
--
-- Name: world_id_seq; Type: SEQUENCE; Schema: public; Owner: pg_dump_test
--
CREATE SEQUENCE world_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE public.world_id_seq OWNER TO pg_dump_test;
--
-- Name: world_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: pg_dump_test
--
ALTER SEQUEN

--
-- Name: country; Type: TABLE; Schema: public; Owner: pg_dump_test; Tablespace:
--
CREATE TABLE country (
    name character varying(255) NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    active boolean NOT NULL,
    uuid bytea,
    id integer NOT NULL,
    world_id integer,
    bigness numeric(10,2)
);
ALTER TABLE public.country OWNER TO pg_dump_test;
--
-- Name: country_id_seq; Type: SEQUENCE; Schema: public; Owner: pg_dump_test
--
CREATE SEQUENCE country_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE public.country_id_seq OWNER TO pg_dump_test;
--
-- Name: country_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: pg_dump_test
--
ALTER SEQUENCE country_id_seq OWNED BY country.id;
--
-- Name: city; Type: TABLE; Schema: public; Owner: pg_dump_test; Tablespace:
--
CREATE TABLE city (
    name character varying(255) NOT NULL,
    created_at timestamp without time zone,
    u

    active boolean NOT NULL,
    uuid bytea,
    id integer NOT NULL,
    country_id integer,
    weight integer,
    is_big boolean DEFAULT false NOT NULL,
    pseudonym character varying(255) DEFAULT ''::character varying NOT NULL,
    description text DEFAULT ''::text NOT NULL
);
ALTER TABLE public.city OWNER TO pg_dump_test;
--
-- Name: city_id_seq; Type: SEQUENCE; Schema: public; Owner: pg_dump_test
--
CREATE SEQUENCE city_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE public.city_id_seq OWNER TO pg_dump_test;
--
-- Name: city_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: pg_dump_test
--
ALTER SEQUENCE city_id_seq OWNED BY city.id;
--
-- Name: person; Type: TABLE; Schema: public; Owner: pg_dump_test; Tablespace:
--
CREATE TABLE person (
    name character varying(255) NOT NULL,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    active boolean NOT NULL,
    uuid bytea,
    id in
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CUST_FlowRelationship]') AND type in (N'U'))
DROP TABLE [dbo].[CUST_FlowRelationship]
CREATE TABLE [dbo].[CUST_FlowRelationship](
	[Id] [int]  identity(1,1) primary key,
	[ProdLine] [varchar](50) NOT NULL,
	[Flow] [varchar](50) NOT NULL ,
	[CreateUser] [int] NOT NULL,
	[CreateUserNm] [varchar](100) NOT NULL,
	[CreateDate] [datetime] NOT NULL,
	[LastModifyUser] [int] NOT NULL,
	[LastModifyUserNm] [varchar](100) NOT NULL,
	[LastModifyDate] [datetime] NOT NULL,
---------------------
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ORD_TyreOrderMaster]') AND type in (N'U'))
DROP TABLE [dbo].[ORD_TyreOrderMaster]
CREATE TABLE [dbo].[ORD_TyreOrderMaster](
	[TyreOrderNo] [varchar](50) NOT NULL primary key,
	[CreateUser] [int] NOT NULL,
	[CreateUserNm] 

	[CreateDate] [datetime] NOT NULL,
	[LastModifyUser] [int] NOT NULL,
	[LastModifyUserNm] [varchar](100) NOT NULL,
	[LastModifyDate] [datetime] NOT NULL,
------------------------------
/****** Object:  Table [dbo].[ORD_OrderDet]    Script Date: 05/27/2014 14:45:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ORD_TyreOrderDet]') AND type in (N'U'))
DROP TABLE [dbo].[ORD_TyreOrderDet]
CREATE TABLE [dbo].[ORD_TyreOrderDet](
	[Id] [int] IDENTITY(1,1) primary key,
	DetId int not null,
	[TyreOrderNo] [varchar](50) NOT NULL,
	[ProdNo] [varchar](50) NOT NULL,
	[RefOrderNo] [varchar](50) NOT NULL,
	[Flow] [varchar](50) NOT NULL,
	[FlowDescription] [varchar](50) NOT NULL,
	[ProdLine] [varchar](50) NOT NULL,
	[ProdLineDescription] [varchar](50) NOT NULL,
	[SeqGroup] [varchar](50)  NULL,
	[VanNo] [varchar](50) NOT NULL,
	[Item] [varchar](50) NOT NULL,
	[ItemDesc] [varchar](100) NOT NULL,
	

	[Uom] [varchar](5) NOT NULL,
	[UC] [decimal](18, 8) NOT NULL,
	[OrderQty] [decimal](18, 8) NOT NULL,
	[ShipQty] [decimal](18, 8) NOT NULL,
	[RecQty] [decimal](18, 8) NOT NULL,
	[LocFrom] [varchar](50) NULL,
	[LocFromNm] [varchar](100) NULL,
	[LocTo] [varchar](50) NULL,
	[LocToNm] [varchar](100) NULL,
	[CompleteDate] [datetime] NOT NULL,
	[CreateUser] [int] NOT NULL,
	[CreateUserNm] [varchar](100) NOT NULL,
	[CreateDate] [datetime] NOT NULL,
	[LastModifyUser] [int] NOT NULL,
	[LastModifyUserNm] [varchar](100) NOT NULL,
	[LastModifyDate] [datetime] NOT NULL,
) 
GO
-------------------
--------------------
insert into SYS_Menu values('Url_TyreOrder','轮胎下线结算','Menu.Production.Trans',220,'轮胎下线结算',null,'~/Content/Images/Nav/Default.png',1)
go
insert into SYS_Menu values('Url_FlowRelationshipList_View','轮胎路线生产线维护','Url_TyreOrder',60,'轮胎路线生产线维护','~/TyreOrder/FlowRelationshipList','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_FlowRelationshipList_View','轮胎路线生产
#DROP TRIGGER IF EXISTS `messages_insert`;
#DELIMITER //
#CREATE TRIGGER `messages_insert` AFTER INSERT ON `eva_activity_messages`
# FOR EACH ROW 
# BEGIN
# DELETE FROM `eva_activity_indexes` WHERE `eva_activity_indexes`.`message_id` = NEW.`id` AND (NEW.`messageType` = 'original' OR NEW.`messageType` = 'forward');
# INSERT INTO `eva_activity_indexes` (`user_id` ,`author_id` ,`message_id` ,`messageTime`) SELECT NEW.`user_id` AS `user_id`, NEW.`user_id` AS `author_id`, `id`, NEW.`createTime` AS `createTime` FROM `eva_activity_messages` WHERE `eva_activity_messages`.`id` = NEW.`id` AND (NEW.`messageType` = 'original' OR NEW.`messageType` = 'forward');
# INSERT INTO `eva_activity_indexes` (`user_id` ,`author_id` ,`message_id` ,`messageTime`) SELECT `follower_id`, NEW.`user_id` AS `author_id`, NEW.`id` AS `id`, NEW.`createTime` AS `createTime` FROM `eva_activity_followers` WHERE `eva_activity_followers`.`user_id` = NEW.`user_id` AND (NEW.`messageType` = 'original' OR NEW.`messageType` = 'fo

# DELETE FROM `eva_activity_atindexes` WHERE `eva_activity_atindexes`.`message_id` = NEW.`id` AND (NEW.`messageType` = 'original' OR NEW.`messageType` = 'forward');
# INSERT INTO `eva_activity_atindexes` (`atuser_id`, `message_id`, `messageTime`) SELECT `user_id`, NEW.`id` AS `message_id`, NEW.`createTime` AS `createTime` FROM `eva_activity_atusers` WHERE `eva_activity_atusers`.`message_id` = NEW.`id` AND (NEW.`messageType` = 'original' OR NEW.`messageType` = 'forward');
# END
#//
#DELIMITER ;
DROP TRIGGER IF EXISTS `messages_insert`;
DELIMITER //
CREATE TRIGGER `messages_insert` AFTER INSERT ON `eva_activity_messages`
 FOR EACH ROW 
 BEGIN
 DELETE FROM `eva_activity_indexes` WHERE `eva_activity_indexes`.`message_id` = NEW.`id` AND (NEW.`messageType` = 'original' OR NEW.`messageType` = 'forward');
 INSERT INTO `eva_activity_indexes` (`user_id` ,`author_id` ,`message_id` ,`messageTime`) SELECT NEW.`user_id` AS `user_id`, NEW.`user_id` AS `author_id`, `id`, NEW.`createTime` AS `createTi

 INSERT INTO `eva_activity_indexes` (`user_id` ,`author_id` ,`message_id` ,`messageTime`) SELECT `follower_id`, NEW.`user_id` AS `author_id`, NEW.`id` AS `id`, NEW.`createTime` AS `createTime` FROM `eva_activity_followers` WHERE `eva_activity_followers`.`user_id` = NEW.`user_id` AND (NEW.`messageType` = 'original' OR NEW.`messageType` = 'forward');
 END
//
DELIMITER ;
DROP TRIGGER IF EXISTS `messages_delete`;
DELIMITER //
CREATE TRIGGER `messages_delete` AFTER DELETE ON `eva_activity_messages`
 FOR EACH ROW 
 BEGIN 
 DELETE FROM `eva_activity_indexes` WHERE `eva_activity_indexes`.`message_id` = OLD.`id`;
 DELETE FROM `eva_activity_atindexes` WHERE `eva_activity_atindexes`.`message_id` = OLD.`id`;
 END
//
DELIMITER ;
DROP TRIGGER IF EXISTS `followers_insert`;
DELIMITER //
CREATE TRIGGER `followers_insert` AFTER INSERT ON `eva_activity_followers`
 FOR EACH ROW 
 BEGIN
 DELETE FROM `eva_activity_indexes` WHERE `eva_activity_indexes`.`user_id` = NEW.`follower_id` AND `eva_activity_indexes
--------------------------------------------------------
--  File created - Saturday-April-04-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table RM_CASE_STUDY
--------------------------------------------------------
  CREATE TABLE "MART_USER"."RM_CASE_STUDY" 
   (	"ENTERPRISE_ID" NUMBER DEFAULT SYS_CONTEXT('ARGUS_MART_CTX','enterprise_id'), 
	"CASE_ID" NUMBER, 
	"STUDY_KEY" NUMBER, 
	"STUDY_NUM" VARCHAR2(35 CHAR), 
	"STUDY_TYPE" NUMBER, 
	"CENTER_ID" NUMBER, 
	"CENTER_NAME" VARCHAR2(40 CHAR), 
	"PROTOCOL_ID" NUMBER, 
	"PROTOCOL_NUM" VARCHAR2(40 CHAR), 
	"OTHER_ID" VARCHAR2(20 CHAR), 
	"CODE_BROKEN" NUMBER, 
	"BROKEN_BY" NUMBER, 
	"BROKEN_DATE" DATE, 
	"REASON" VARCHAR2(100 CHAR), 
	"WEEK" VARCHAR2(5 CHAR), 
	"VISIT" VARCHAR2(5 CHAR), 
	"DELETED" DATE, 
	"PRODUCT_COUNT" NUMBER(2,0), 
	"CLASSIFICATION_ID" NUMBER, 
	"BLIND_NAME" VARCHAR2(70 CHAR), 
	"STUDY_DESC" CLOB, 
	"STUDY_DESC_J" CLOB, 
	"BLIND_N

	"CENTER_NAME_J" VARCHAR2(40 CHAR), 
	"CLIN_COMPOUND_NUM_J" VARCHAR2(70 CHAR), 
	"PROTOCOL_NUM_J" VARCHAR2(40 CHAR), 
	"STUDY_NUM_J" VARCHAR2(35 CHAR), 
	"DEV_PHASE_ID" NUMBER, 
	"DLP_REVISION_NUMBER" NUMBER, 
	"REVISION_DELETE_FLAG" NUMBER DEFAULT 0, 
	"DELETED_FLAG" NUMBER(1,0), 
	"EFFECTIVE_START_DATE" DATE, 
	"EFFECTIVE_END_DATE" DATE, 
	"COHORT_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AM_MART_DATA_01" 
 LOB ("STUDY_DESC") STORE AS BASICFILE "RCS_STUDY_DESC_CLOB"(
  TABLESPACE "AM_MART_LOB_01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FL

 LOB ("STUDY_DESC_J") STORE AS BASICFILE "RCS_STUDY_DESC_J_CLOB"(
  TABLESPACE "AM_MART_LOB_01" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Index PK_RM_CASE_STUDY
--------------------------------------------------------
  CREATE UNIQUE INDEX "MART_USER"."PK_RM_CASE_STUDY" ON "MART_USER"."RM_CASE_STUDY" ("ENTERPRISE_ID", "CASE_ID", "DLP_REVISION_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AM_MART_INDEX_01" ;
--------------------------------------------------------
--  DDL for Index I_RM_CASE_STUDY
-
-- To: girts.karnitis@lu.lv Subj: DBI PD KD1 aj05044
-- DBI PD KD1 aj05044 Andrejs Jurčenoks
-- Tabula Automasina
-- Nosaukums   Datu tips   Izmērs  Piezīmes
-- RegNr   Simbolu virkne ar fiksētu garumu    10  Primarā atslēga
-- Marka   Simbolu virkne ar mainīgu garumu    30  Nav Null
-- Modelis Simbolu virkne ar mainīgu garumu    25  Nav Null
-- IzlaidumaGads   Vesels skaitlis     Nav Null
-- Ipasnieks   Simbolu virkne ar mainīgu garumu    50  Var būt Null
CREATE TABLE [Automasina] (
     RegNr          [char]    (10) NOT NULL PRIMARY KEY
    ,Marka          [varchar] (30) NOT NULL
    ,Modelis        [varchar] (25) NOT NULL
    ,IzlaidumaGads  [int]          NOT Null
    ,Ipasnieks      [varchar] (50) COLLATE Latvian_CI_AI NULL
GO
-- Tabula Sods
-- Nosaukums   Datu tips   Izmērs  Piezīmes
-- ID  Vesels skaitlis     Automātiski numurējas, primārā atslēga
-- Izmers  Decimāldaļkaitlis, 2 cipari aiz komata  4,2 Nav Null
-- Parkapums   Simbolu virkne ar mainīgu garumu    100 Var būt  Null


-- AutoRegNr   Simbolu virkne ar fiksētu garumu    10  Ārējā atslēga. Norāde uz tabulu Automasina lauku RegNr
CREATE TABLE [Sods] (
     ID         [int] IDENTITY(1,1) NOT NULL PRIMARY KEY
    ,Izmers     [numeric] (4,2) NOT NULL
    ,Parkapums  [varchar] (100) COLLATE Latvian_CI_AI NULL
    ,Datums     [datetime] NOT NULL
    ,AutoRegNr  [char]    (10)
GO
ALTER TABLE [Sods]
ADD  CONSTRAINT [fk_sods_automasina_regnr] FOREIGN KEY([AutoRegNr])
REFERENCES [Automasina] ([RegNr])
GO
-- Automasina
-- RegNr   Marka   Modelis IzlaidumaGads   Ipasnieks
-- GT9354  Audi    A4  2010    Mērija Popinsa
-- BU9838  Opel    Vectra  2006    Mākoņpūka SIA
-- FU23    BMW 530 2011
-- HK9559  Citroen C5  2011    Jānis Zaļenieks
INSERT INTO Automasina (RegNr, Marka, Modelis, IzlaidumaGads, Ipasnieks)
VALUES('GT9354',  'Audi',    'A4',  2010,    'Mērija Popinsa')
INSERT INTO Automasina (RegNr, Marka, Modelis, IzlaidumaGads, Ipasnieks)
VALUES('BU9838',  'Opel',    'Vectra',  2006,    'Mākoņpūka SIA')
INSERT I

VALUES('FU23',    'BMW', '530', 2011, NULL)
INSERT INTO Automasina (RegNr, Marka, Modelis, IzlaidumaGads, Ipasnieks)
VALUES('HK9559',  'Citroen', 'C5',  2011,    'Jānis Zaļenieks')
-- Sods
-- Izmers  Parkapums   Datums  AutoRegNr
-- 5.00    Stāvēšana neatļautā vietā   11.02.2013  GT9354
-- 40.00   Ātruma pārkāpšana   05.06.2012  HK9559
-- 99.99      09.04.2013  BU9838
-- 10.00   Neatļauta pagrieziena veikšana  14.03.2012  GT9354
INSERT INTO Sods (Izmers,  Parkapums,   Datums,  AutoRegNr)
VALUES (5.00,    'Stāvēšana neatļautā vietā',   '2013-02-11',  'GT9354')
INSERT INTO Sods (Izmers,  Parkapums,   Datums,  AutoRegNr)
VALUES (40.00,   'Ātruma pārkāpšana',   '2012-06-05', 'HK9559')
INSERT INTO Sods (Izmers,  Parkapums,   Datums,  AutoRegNr)
VALUES (99.99,  NULL,    '2013-04-09',  'BU9838')
INSERT INTO Sods (Izmers,  Parkapums,   Datums,  AutoRegNr)
VALUES (10.00,   'Neatļauta pagrieziena veikšana',  '2012-03-14',  'GT9354')
-- Izmainīt datus tabulā Automasina – Automašīnai  FU23 nomain
mysqldump -u root -p --databases sdc > sdc.sql
alter table filter_el add column user_post varchar(500) after message;
create table fb_filter_assessment(id int auto_increment, meesage text, user_post varchar(2000), filter_status varchar(10), agree_value varchar(10), create_date datetime, primary key(id));
create table training_data(id int auto_increment, user_id varchar(200), 
post_id varchar(200), poster_name varchar(1000), cred_value varchar(10), likes int, shares int,
comments int, hashtags int, images int, vdo int, url int, word_in_dict int,
word_outside_dict int, num_of_number_in_sentense int, app_sender int, share_with_location int, share_with_non_location int, tag_with int, 
feeling_status int, share_public int, share_only_friend int, 
word_count int, character_length int, question_mark int, exclamation_mark int,
create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, message text, user_evaluator varchar(1000),
primary key(id));
        lst.append(likes)
        lst.append(comments)
   
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='weisite_category' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='weisite_category' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_weisite_category`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='weisite_slideshow' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='weisite_slideshow' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_weisite_slideshow`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='weisite_footer' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='weisite_footer' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_weisite_footer`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='scratch' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='scratch' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_scratch`;
DELETE FROM `wp_at
-- Select reads with a *single* best alignment
-- drop table if exists bowtie_plus;
create temp table bowtie_plus AS (
  select 
    read_name, 
    strand, 
    refseq_name, 
    "position", 
    read_sequence, 
    list_mism, 
    count_pattern(list_mism, '>') AS no_mism
  from bowtie
  where job_id = 4
  );
-- drop table if exists bowtie4_mism_stratum;
create temp table bowtie4_mism_stratum AS (
  select 
    read_name, 
    no_mism,
    count(count_pattern(list_mism, '>')) AS no_hits_stratum -- Number of hits with "no_mism" no of mismatches
  from bowtie_plus
  group by read_name, no_mism
  );
-- drop table if exists bowtie4;
create temp table bowtie4 AS (
  select bowtie_plus.*, bowtie4_mism_stratum.no_hits_stratum
  from bowtie_plus inner join bowtie4_mism_stratum on
    bowtie4_mism_stratum.read_name = bowtie_plus.read_name AND
    bowtie4_mism_stratum.no_mism = bowtie_plus.no_mism
  order by bowtie_plus.read_name, bowtie_plus.no_mism
  );
-- drop table if exists best_stratum;
c

  select read_name, min(no_mism) AS best_stratum
  from bowtie4
  group by read_name
  );
-- drop table if exists best_single;
create table best_single AS (
  select bowtie4.*
  from bowtie4 inner join best_stratum on
    bowtie4.read_name = best_stratum.read_name AND
    bowtie4.no_mism = best_stratum.best_stratum
  where no_hits_stratum = 1
  );
--------------------------------[ Stats ]--------------------------------------
-- Total reads mapped and single, best mappers
select 
  (select count(distinct read_name) from bowtie4) AS no_aligned_reads,
  (select count(*) from best_single) AS no_single_mappers,
  (select count(*) from best_single)::numeric / (select count(distinct read_name) from bowtie4) AS perc_single_mappers
  ;
-- Overwiev of alignment quality: Mismatches in single, best mappers
select 
  no_mism, 
  count(*) AS no_reads, 
  count(*)::numeric / (select count(*) from best_single) AS mism_frequency
from best_single 
group by no_mism;
-- Where single, best mappers align,

select 
  refseq_name AS reference_chr, 
  count(*) AS no_reads, 
  count(*)::numeric / (select count(*) from best_single) AS proportion
from best_single
group by refseq_name
order by no_reads;
--------------------------------[ Tritume ]------------------------------------
select no_mism, count(distinct read_name)
from bowtie4
where refseq_name = 'gi|555853|gb|U13369.1|HSU13369'
group by no_mism;
select no_mism, count(distinct read_name), count(distinct read_name)::numeric / (select count(distinct read_name) from bowtie4)
from bowtie4
group by no_mism;
select refseq_name, count(*) AS no_mapped_reads
from best_single  
group by refseq_name
order by no_mapped_reads;
select * from bowtie4 limit 200;
-- Select best strata
-- drop table if exists bowtie4_best_strata;
create temp table bowtie4_best_strata AS(
  select 
    read_name,
    min(no_mism) AS best_stratum
  from bowtie4_mism_stratum 
  group by read_name
  );
-- Which reads have a single hit in the best startum?
-- drop table if 
DELIMITER $$
DROP TRIGGER IF EXISTS articlehistorian $$
CREATE TRIGGER articlehistorian 
  BEFORE UPDATE ON jos_content
  FOR EACH ROW
    BEGIN
      IF NEW.version <> OLD.version THEN
        INSERT INTO jos_content_history (revision_date,`id`, `title`, `alias`, `title_alias`, `introtext`, `fulltext`, `state`, `sectionid`, `mask`, `catid`, `created`, `created_by`, `created_by_alias`, `modified`, `modified_by`, `checked_out`, `checked_out_time`, `publish_up`, `publish_down`, `images`, `urls`, `attribs`, `version`, `parentid`, `ordering`, `metakey`, `metadesc`, `access`, `hits`, `metadata`)
          VALUES (now(),OLD.`id`, OLD.`title`, OLD.`alias`, OLD.`title_alias`, OLD.`introtext`, OLD.`fulltext`, OLD.`state`, OLD.`sectionid`, OLD.`mask`, OLD.`catid`, OLD.`created`, OLD.`created_by`, OLD.`created_by_alias`, OLD.`modified`, OLD.`modified_by`, OLD.`checked_out`, OLD.`checked_out_time`, OLD.`publish_up`, OLD.`publish_down`, OLD.`images`, OLD.`urls`, OLD.`attribs`, OLD.`version`, OLD.`p
SELECT New_Training_Session('2011-04-28 10:00', '100 / 100 m gång');
SELECT New_Training_Session('2011-04-28 10:00', '100,200,300, 400,  500,400 / 100 m gång');
SELECT New_Training_Session('2011-04-28 10:00', '100,200,300,400,500,400/100m gång');
SELECT New_Training_Session('2011-04-28 10:00', '100,200,300,400,500,400 / 100 meter gång');
-- Play!
tdb=# SELECT New_Training_Session('2011-04-28 10:00');
 new_training_session
----------------------
                    1
(1 row)
tdb=# SELECT * FROM TrainingSessions;
 trainingsessionid |       datestamp
-------------------+------------------------
                 1 | 2011-04-28 10:00:00+02
(1 row)
tdb=# SELECT New_Training_Event(1, '24.6 seconds', 200);
 new_training_event
--------------------
                  1
(1 row)
tdb=# SELECT New_Training_Event(1, '3 minutes', 0);
 new_training_event
--------------------
                  2
(1 row)
tdb=# SELECT New_Training_Event(1, '25.5 seconds', 200);
 new_training_event
--------------------
    

(1 row)
tdb=# SELECT New_Training_Event(1, '3 minutes', 0);
 new_training_event
--------------------
                  4
(1 row)
tdb=# SELECT New_Training_Event(1, '25.3 seconds', 200);
 new_training_event
--------------------
                  5
(1 row)
tdb=# SELECT New_Training_Event(1, '10 minutes', 0);
 new_training_event
--------------------
                  6
(1 row)
tdb=# SELECT New_Training_Event(1, '24.7 seconds', 200);
 new_training_event
--------------------
                  7
(1 row)
tdb=# SELECT New_Training_Event(1, '3 minutes', 0);
 new_training_event
--------------------
                  8
(1 row)
tdb=# SELECT New_Training_Event(1, '25.2 seconds', 200);
 new_training_event
--------------------
                  9
(1 row)
tdb=# SELECT New_Training_Event(1, '3 minutes', 0);
 new_training_event
--------------------
                 10
(1 row)
tdb=# SELECT New_Training_Event(1, '24.4 seconds', 200);
 new_training_event
--------------------
                 11
(1 row)
td
DROP VIEW IF EXISTS "QUADRANT_ACTUALS_VIEW";
DROP VIEW IF EXISTS "DEPARTMENT_MANAGERS_VIEW";
DROP VIEW IF EXISTS "CUSTOMERS_VIEW";
DROP VIEW IF EXISTS "EMPLOYEES_VIEW";
DROP VIEW IF EXISTS "OFFICES_VIEW";
DROP VIEW IF EXISTS "ORDERDETAILS_VIEW";
DROP VIEW IF EXISTS "ORDERS_VIEW";
DROP VIEW IF EXISTS "PAYMENTS_VIEW";
DROP VIEW IF EXISTS "ORDERFACT_VIEW"; -- MUST COME BEFORE PRODUCTS
DROP VIEW IF EXISTS "PRODUCTS_VIEW";
DROP VIEW IF EXISTS "TRIAL_BALANCE_VIEW";
DROP VIEW IF EXISTS "DIM_TIME_VIEW";
DROP VIEW IF EXISTS "CUSTOMER_W_TER_VIEW";
-- CREATE VIEWS
CREATE VIEW "QUADRANT_ACTUALS_VIEW" ("REGION", "DEPARTMENT", "POSITIONTITLE", "ACTUAL", "BUDGET", "VARIANCE") 
AS SELECT "REGION", "DEPARTMENT", "POSITIONTITLE", "ACTUAL", "BUDGET", "VARIANCE" from "QUADRANT_ACTUALS";
CREATE VIEW "DEPARTMENT_MANAGERS_VIEW" ("REGION", "MANAGER_NAME", "EMAIL") 
AS SELECT "REGION", "MANAGER_NAME", "EMAIL" FROM "DEPARTMENT_MANAGERS";
CREATE VIEW "CUSTOMERS_VIEW" ("CUSTOMERNUMBER", "CUSTOMERNAME", "CONTACTLA

AS SELECT "CUSTOMERNUMBER", "CUSTOMERNAME", "CONTACTLASTNAME", "CONTACTFIRSTNAME", "PHONE", "ADDRESSLINE1", "ADDRESSLINE2", "CITY", "STATE", "POSTALCODE", "COUNTRY", "SALESREPEMPLOYEENUMBER", "CREDITLIMIT" FROM "CUSTOMERS";
CREATE VIEW "EMPLOYEES_VIEW" ("EMPLOYEENUMBER", "LASTNAME", "FIRSTNAME", "EXTENSION", "EMAIL", "OFFICECODE", "REPORTSTO", "JOBTITLE") 
AS SELECT "EMPLOYEENUMBER", "LASTNAME", "FIRSTNAME", "EXTENSION", "EMAIL", "OFFICECODE", "REPORTSTO", "JOBTITLE" FROM "EMPLOYEES";
CREATE VIEW "OFFICES_VIEW" ("OFFICECODE", "CITY", "PHONE", "ADDRESSLINE1", "ADDRESSLINE2", "STATE", "COUNTRY", "POSTALCODE", "TERRITORY") 
AS SELECT "OFFICECODE", "CITY", "PHONE", "ADDRESSLINE1", "ADDRESSLINE2", "STATE", "COUNTRY", "POSTALCODE", "TERRITORY" FROM "OFFICES";
CREATE VIEW "ORDERDETAILS_VIEW" ("ORDERNUMBER", "PRODUCTCODE", "QUANTITYORDERED", "PRICEEACH", "ORDERLINENUMBER") 
AS SELECT "ORDERNUMBER", "PRODUCTCODE", "QUANTITYORDERED", "PRICEEACH", "ORDERLINENUMBER" FROM "ORDERDETAILS";
CREATE VI

AS SELECT "ORDERNUMBER", "ORDERDATE", "REQUIREDDATE", "SHIPPEDDATE", "STATUS", "COMMENTS", "CUSTOMERNUMBER" FROM "ORDERS";
CREATE VIEW "PAYMENTS_VIEW" ("CUSTOMERNUMBER", "CHECKNUMBER", "PAYMENTDATE", "AMOUNT") 
AS SELECT "CUSTOMERNUMBER", "CHECKNUMBER", "PAYMENTDATE", "AMOUNT" FROM "PAYMENTS";
CREATE VIEW "PRODUCTS_VIEW" ("PRODUCTCODE", "PRODUCTNAME", "PRODUCTLINE", "PRODUCTSCALE", "PRODUCTVENDOR", "PRODUCTDESCRIPTION", "QUANTITYINSTOCK", "BUYPRICE", "MSRP") 
AS SELECT "PRODUCTCODE", "PRODUCTNAME", "PRODUCTLINE", "PRODUCTSCALE", "PRODUCTVENDOR", "PRODUCTDESCRIPTION", "QUANTITYINSTOCK", "BUYPRICE", "MSRP" FROM "PRODUCTS";
CREATE VIEW "TRIAL_BALANCE_VIEW" ("TYPE", "ACCOUNT_NUM", "CATEGORY", "CATEGORY2", "DETAIL", "AMOUNT") 
AS SELECT "TYPE", "ACCOUNT_NUM", "CATEGORY", "CATEGORY2", "DETAIL", "AMOUNT" FROM "TRIAL_BALANCE";
CREATE VIEW "ORDERFACT_VIEW" ("ORDERNUMBER", "PRODUCTCODE", "QUANTITYORDERED", "PRICEEACH", "ORDERLINENUMBER", "TOTALPRICE", "ORDERDATE", "REQUIREDDATE", "SHIPPEDDATE",
INSERT INTO `#__extensions` (`extension_id`, `name`, `type`, `element`, `folder`, `client_id`, `enabled`, `access`, `protected`, `manifest_cache`, `params`, `custom_data`, `system_data`, `checked_out`, `checked_out_time`, `ordering`, `state`) VALUES
(28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2015 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '0000-00-00 00:00:00', 0, 0);
INSERT INTO `#__menu` (`menutype`, `title`, `alias`, `note`, `path`, `link`, `type`, `published`, `parent_id`, `level`, `component_id`, `ordering`, `checked_out`, `checked_out_time`, `browserNav`, `access`, `img`, `template_style_id`, `params`, `lft`, `rgt`, `home`, `language`, `client_id`) VA
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_social`;
CREATE TABLE `character_social` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Character Global Unique Identifier',
  `friend` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Friend Global Unique Identifier',
  `flags` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Friend Flags',
  `note` varchar(48) NOT NULL DEFAULT '' COMMENT 'Friend Note',
  PRIMA
drop table SA_USERS purge; 
-- Create table
create table SA_USERS
  staff_id   NUMBER,
  staff_name VARCHAR2(64),
  passwd varchar2(32),
  org_id     NUMBER,
  staff_type NUMBER,
  create_time date
);
-- Add comments to the columns 
comment on column SA_USERS.staff_type
  is '1:普通员工,2:经理';
select * from SA_USERS for update;
commit;
/*
属性版本编码
属性名称
数据周期
分析框架编码
分析框架名称
属性分类编码
属性分类名称
绑定维层编码
绑定维层名称
业务描述
敏感等级
加密策略
物理表编码
物理表中文名称
物理表名称
物理表字段
*/
create table sa_users
  staff_id    NUMBER,
  staff_name  VARCHAR2(64),
  passwd      varchar2(32),
  org_id      NUMBER,
  staff_type  NUMBER,
  create_time date
);
/*
create table sa_cfg_frame_detail as
select * from pt166.sa_cfg_frame_detail where 1 = 0;
truncate table sa_cfg_frame_detail;
*/
select * from sa_cfg_frame_detail;
select tname, cname from sa_cfg_frame_detail group by tname, cname having count(0) > 1;
create table sa_cfg_frame
  frame_id varchar2(64),
  frame_name varchar2(64),
  frame_desc varchar2(4000)
);
create table sa_cfg_attr_class 

  frame_id varchar2(64),
  attr_class_id varchar2(64),
  attr_class_name varchar2(256),
  attr_class_desc varchar2(4000)
);
create table sa_cfg_attr (
  attr_class_id varchar2(64),
  attr_id varchar2(64),
  attr_name varchar2(64),
  attr_desc varchar2(4000),
  dim_id  varchar2(64),
  sensitive_type  number,--敏感等级
  encrypt_type  number --加密类型
);
create table sa_cfg_dim (
  dim_id varchar2(64),
  dim_name varchar2(64),
  dim_sql varchar2(4000)
);
/*
drop table sa_cfg_table purge; 
*/
create table sa_cfg_table
  table_id     varchar2(64),
  table_name     varchar2(64),
  table_name_cn  varchar2(64),
  table_desc     varchar2(4000),
	update_date    number,
  cycle_type  number(1) --1,按日;2,按月
);
drop table sa_cfg_column purge; 
create table sa_cfg_column
  table_name varchar2(64),
  column_name varchar2(64),
  column_name_cn varchar2(64),
  column_type number,  --1,数值类型;2,字符串;3,时间;4,BLOB
  column_desc varchar2(4000)
);
create table sa_cfg_attr_column_rela (
  attr_id varchar2(64),
  colum

);
/*
truncate table sa_cfg_frame;
*/
insert /*+APPEND NOLOGGING*/
into sa_cfg_frame
  (frame_id, frame_name)
  select distinct fcode, fname from sa_cfg_frame_detail ;
commit;
select * from sa_cfg_frame;
/*
truncate table sa_cfg_attr_class;
*/
insert /*+APPEND NOLOGGING*/
into sa_cfg_attr_class
  (frame_id, attr_class_id, attr_class_name)
  select distinct fcode, vcode, vname from sa_cfg_frame_detail;
commit;
select *
  from sa_cfg_attr_class
 where attr_class_id = 'V00000000450'
   for update;
commit;
select * from sa_cfg_attr_class;
select * from sa_cfg_attr;
select count(0) from sa_cfg_frame_detail;
commit;
select * from sa_cfg_attr;
/*
truncate table sa_cfg_attr;
*/
insert /*+APPEND NOLOGGING*/
into sa_cfg_attr
  (attr_class_id,
   attr_id,
   attr_name,
   attr_desc,
   dim_id,
   sensitive_type,
   encrypt_type)
  select distinct vcode,
                  scode,
                  sname,
									busi_desc,
                  lcode,
                  decode(seni_level, '工作秘密级', 1, 
insert into SYS_Menu values('Url_PickGroup_View','拣货组','Url_WMS_Setup',300,'高级仓库-设置-拣货组','~/PickGroup/Index','~/Content/Images/Nav/Default.png',1)
insert into SYS_Menu values('Url_RepackGroup_View','翻包组','Url_WMS_Setup',400,'高级仓库-设置-翻包组','~/RepackGroup/Index','~/Content/Images/Nav/Default.png',1)
insert into SYS_Menu values('Url_ShipGroup_View','发货组','Url_WMS_Setup',500,'高级仓库-设置-发货组','~/ShipGroup/Index','~/Content/Images/Nav/Default.png',1)
insert into ACC_Permission (Code,Desc1,category,Sequence) values('Url_PickGroup_View','拣货组查看','WMS',20000)
insert into ACC_Permission (Code,Desc1,category,Sequence) values('Url_RepackGroup_View','翻包组查看','WMS',21000)
insert into ACC_Permission (Code,Desc1,category,Sequence) values('Url_ShipGroup_View','发货组查看','WMS',22000)
insert into ACC_Permission (Code,Desc1,category,Sequence) values('Url_PickGroup_Edit','拣货组编辑','WMS',20000)
insert into ACC_Permission (Code,Desc1,category,Sequence) values('Url_RepackGroup_Edit','翻包组编辑','WMS',21000)
insert into ACC_
﻿\COPY routes(kode,disabled,created,create_uid,nama,path,perm_name) FROM stdin
aset	0	2014-12-24 03:04:42.837591	1	Aset	/aset	read
aset-kategori	0	2014-12-24 03:04:42.837591	1	Kategori Aset	/aset/kategori	read
aset-kategori-add	0	2014-12-24 03:04:42.837591	1	Tambah Kategori Aset	/aset/kategori/add	read
aset-kategori-edit	0	2014-12-24 03:04:42.837591	1	Edit Kategori Aset	/aset/kategori/{id}/edit	edit
aset-kategori-delete	0	2014-12-24 03:04:42.837591	1	Hapus Kategori Aset	/aset/kategori/{id}/delete	delete
aset-kategori-act	0	2014-12-24 03:04:42.837591	1	Kategori Aset Act	/aset/kategori/{act}/act	read
aset-kategori-csv	0	2014-12-24 03:04:42.837591	1	Kategori Aset CSV	/aset/kategori/{csv}/csv	read
aset-kebijakan	0	2014-12-24 03:04:42.837591	1	Kebijakan Aset	/aset/kebijakan	read
aset-kebijakan-add	0	2014-12-24 03:04:42.837591	1	Tambah Kebijakan Aset	/aset/kebijakan/add	read
aset-kebijakan-edit	0	2014-12-24 03:04:42.837591	1	Edit Kebijakan Aset	/aset/kebijakan/{id}/edit	edit
aset-kebijakan-d

aset-kebijakan-act	0	2014-12-24 03:04:42.837591	1	Kebijakan Aset Act	/aset/kebijakan/{act}/act	read
aset-kebijakan-csv	0	2014-12-24 03:04:42.837591	1	Kebijakan Aset CSV	/aset/kebijakan/{csv}/csv	read
aset-mutasi	0	2014-12-24 03:04:42.837591	1	Mutasi Aset	/aset/mutasi	read
aset-mutasi-add	0	2014-12-24 03:04:42.837591	1	Tambah Mutasi Aset	/aset/mutasi/add	read
aset-mutasi-edit	0	2014-12-24 03:04:42.837591	1	Edit Mutasi Aset	/aset/mutasi/{id}/edit	edit
aset-mutasi-delete	0	2014-12-24 03:04:42.837591	1	Hapus Mutasi Aset	/aset/mutasi/{id}/delete	delete
aset-mutasi-act	0	2014-12-24 03:04:42.837591	1	Mutasi Aset Act	/aset/mutasi/{act}/act	read
aset-mutasi-csv	0	2014-12-24 03:04:42.837591	1	Mutasi Aset CSV	/aset/mutasi/{csv}/csv	read
aset-kiba	0	2014-12-24 03:04:42.837591	1	KIB A (Tanah)	/aset/kiba	read
aset-kiba-add	0	2014-12-24 03:04:42.837591	1	Tambah KIB A (Tanah)	/aset/kiba/add	add
aset-kiba-edit	0	2014-12-24 03:04:42.837591	1	Edit KIB A (Tanah)	/aset/kiba/{id}/edit	edit
aset-kiba-delete

aset-kiba-act	0	2014-12-24 03:04:42.837591	1	KIB A (Tanah) Act	/aset/kiba/{act}/act	read
aset-kiba-csv	0	2014-12-24 03:04:42.837591	1	KIB A (Tanah) CSV	/aset/kiba/{csv}/csv	read
aset-kibb	0	2014-12-24 03:04:42.837591	1	KIB KIB B (Peralatan dan Mesin)	/aset/kibb	read
aset-kibb-add	0	2014-12-24 03:04:42.837591	1	Tambah KIB KIB B (Peralatan dan Mesin)	/aset/kibb/add	add
aset-kibb-edit	0	2014-12-24 03:04:42.837591	1	Edit KIB KIB B (Peralatan dan Mesin)	/aset/kibb/{id}/edit	edit
aset-kibb-delete	0	2014-12-24 03:04:42.837591	1	Hapus KIB KIB B (Peralatan dan Mesin)	/aset/kibb/{id}/delete	delete
aset-kibb-act	0	2014-12-24 03:04:42.837591	1	KIB KIB B (Peralatan dan Mesin) Act	/aset/kibb/{act}/act	read
aset-kibb-csv	0	2014-12-24 03:04:42.837591	1	KIB KIB B (Peralatan dan Mesin) CSV	/aset/kibb/{csv}/csv	read
aset-kibc	0	2014-12-24 03:04:42.837591	1	KIB C (Bangunan)	/aset/kibc	read
aset-kibc-add	0	2014-12-24 03:04:42.837591	1	Tambah KIB C (Bangunan)	/aset/kibc/add	add
aset-kibc-edit	0	2014-12-24 
SELECT mx.tid, NewTrans_Create_Date date,
       CASE WHEN
        (SELECT COUNT(*) FROM tblNewTyreStock
         WHERE mx.serial=NewStock_Tyre_Serial AND mx.code=NewStock_Tyre_Code)>0
        THEN 1 ELSE 0
        END InStock, Comp_Name
FROM
(SELECT NewTransDetail_NewTrans_ID tid, NewTransDetail_Tyre_Serial serial, NewTransDetail_Tyre_Code code
FROM tblNewTyreTransactionDetail
WHERE NewTransDetail_NewTrans_ID LIKE 'NTO1301001%'
GROUP BY NewTransDetail_NewTrans_ID) mx
LEFT OUTER JOIN tblNewTyreTransaction
ON mx.tid=NewTrans_ID
LEFT OUTER JOIN tblDocument
ON mx.tid=Doc_Transaction_ID
LEFT OUTER JOIN tblCompany
ON Doc_Comp_ID=Comp_ID
ORDER BY NewTrans_Create_Date DESC
--SELECT NewTransDetail_Tyre_Serial NewStock_Tyre_Serial, NewTransDetail_Tyre_Code NewStock_Tyre_Code
--FROM tblNewTyreTransactionDetail
--WHERE NewTransDetail_NewTrans_ID='NTO13010014'
--INSERT INTO tblNewTyreStock
--SELECT NewTransDetail_Tyre_Serial NewStock_Tyre_Serial, NewTransDetail_Tyre_Code NewStock_Tyre_Code
--FROM 

--WHERE NewTransDetail_NewTrans_ID='NTO13010015' --'NTO13010014' --'NTO13010020'
--SELECT NewTransDetail_NewTrans_ID, MAX(NewTransDetail_Serial), COUNT(NewTransDetail_Tyre_Serial)
--FROM tblNewTyreTransactionDetail
--WHERE NewTransDetail_NewTrans_ID LIKE 'NTO1301002%'
--GROUP BY NewTransDetail_NewTrans_ID
--SELECT * FROM tblNewTyreStock
--SELECT mx.tid
--FROM
--(SELECT NewTransDetail_NewTrans_ID tid, NewTransDetail_Tyre_Serial, NewTransDetail_Tyre_Code
--FROM tblNewTyreTransactionDetail
--WHERE NewTransDetail_Tyre_Serial LIKE '5211321%'
--GROUP BY NewTransDetail_NewTrans_ID) mx
--SELECT mx.tid, ProdTrans_Create_Date date,
  --CASE WHEN
    --(SELECT COUNT(*) FROM tblProductionStock WHERE ProdStock_Casing_ID=mx.casing)>0
  --THEN 1 ELSE 0
  --END InStock, Comp_Name
--FROM 
--(SELECT ProdTransDetail_ProdTrans_ID tid, MAX(ProdTransDetail_Serial) sn, ProdTransDetail_Casing_ID casing
--FROM tblProductionTransactionDetail
--WHERE ProdTransDetail_ProdTrans_ID LIKE 'PRO%'
--GROUP BY ProdTrans
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table phone_model (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_phone_model primary key (id))
create table task_model (
  id                        bigint not null,
  label                     varchar(255),
  enabled                   boolean,
  constraint pk_task_model primary key (id))
create table user_model (
  id                        bigint not null,
  name                      varchar(255),
  phone_id                  bigint,
  constraint pk_user_model primary key (id))
create sequence phone_model_seq;
create sequence task_model_seq;
create sequence user_model_seq;
alter table user_model add constraint fk_user_model_phone_1 foreign key (phone_id) references phone_model (id) on delete restrict on update restrict;
create index ix_user_model_phone_1 on user_model (phone_id);
# --- !Downs
SET REFERENTI
SELECT 
    id,
    code,
    amountXL - amountXLout AS netXL,
    netAmount,
    TimeSys,
    DateSys,
    timeSys
FROM
    ying.hs_s_MoneyFlow_rt
WHERE
    DateSys = CURRENT_DATE()
--       AND TimeSys > NOW() - INTERVAL 30 MINUTE AND 
--        code IN ('601318')
ORDER BY code , DateSys DESC , TimeSys DESC;
SELECT 
    *
FROM
    ying.hs_s_MoneyFlow_rt
WHERE
    code IN ('600030' , '601318')
ORDER BY code , DateSys DESC , TimeSys DESC;
SELECT 
    code,
    amountXL - amountXLout AS netXL,
    netAmount,
    TimeSys,
    DateSys,
    DatetimeSys
FROM
    ying.hs_s_MoneyFlow_rt
WHERE
    DateSys = CURRENT_DATE()
        AND code IN ('600030' , '601318')
ORDER BY code , id desc, DateSys DESC , TimeSys DESC;
SELECT 
    code, amountXL - amountXLout as netXL, netAmount, TimeSys, DateSys
FROM
    ying.hs_s_MoneyFlow_rt
WHERE
    code IN ('600030')
ORDER BY code, id DESC;
DELETE FROM ying.hs_s_MoneyFlow_rt 
WHERE
    DateSys = '2015-03-05' AND TimeSys < '12:59:59' AND TimeSys > '11:33:00'

    
SELECT * FROM ying.hs_s_MoneyFlow_rt 
WHERE
    DateSys = '2015-03-05' AND TimeSys < '12:59:59' AND TimeSys > '11:33:00';
    
    
USE `ying`;
DELIMITER $$
DROP TRIGGER IF EXISTS ying.hs_s_MoneyFlow_rt_BEFORE_INSERT$$
USE `ying`$$
CREATE DEFINER=`gxh`@`%` TRIGGER `ying`.`hs_s_MoneyFlow_rt_BEFORE_INSERT` BEFORE INSERT ON `hs_s_MoneyFlow_rt` FOR EACH ROW
    BEGIN   
        SET NEW.amountXL = NEW.amountXL/1000000;        
        SET NEW.amountL = NEW.amountL/1000000;        
        SET NEW.amountS = NEW.amountS/1000000;        
        SET NEW.amountI = NEW.amountI/1000000;        
        SET NEW.amountXLout = NEW.amountXLout/1000000;        
        SET NEW.amountLout = NEW.amountLout/1000000;        
        SET NEW.amountSout = NEW.amountSout/1000000;        
        SET NEW.amountIout = NEW.amountIout/1000000;        
        SET NEW.amountXLtotal = NEW.amountXLtotal/1000000;        
        SET NEW.amountLtotal = NEW.amountLtotal/1000000;        
        SET NEW.amountSto
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `gm_subsurveys`;
CREATE TABLE `gm_subsurveys` (
  `surveyId` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `subsurveyId` int(10) unsigned NOT NULL DEFAULT '0',
  `rank` int(10) unsigned NOT NULL DEFAULT '0',
  `comment` text NOT NULL,
  PRIMARY KEY (`surveyId`,`subsurveyId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Player System';
LOCK TABLES `gm_subsurveys` WRITE;
/*!40000 ALTER
# --- !Ups
create table company_model (
  id                        bigint not null,
  name                      varchar(255),
  description               varchar(255),
  marquee                   varchar(255),
  created_at                timestamp,
  constraint pk_company_model primary key (id))
create table content_model (
  id                        bigint not null,
  name                      varchar(255),
  description               varchar(255),
  url                       varchar(255),
  phone_number              varchar(255),
  small_pic                 varchar(255),
  big_pic                   varchar(255),
  content_type              integer,
  language                  integer,
  delete_flag               boolean,
  created_at                timestamp,
  constraint ck_content_model_content_type check (content_type in (0,1,2,3,4)),
  constraint ck_content_model_language check (language in (0,1)),
  constraint pk_content_model primary key (id))
create table user_model (
  id  
﻿USE [StorageSpace]
GO
/****** Object:  View [BasicInfo].[InventoryUnitView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryUnitView]'))
DROP VIEW [BasicInfo].[InventoryUnitView]
GO
/****** Object:  View [BasicInfo].[InventorySharedGoodView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventorySharedGoodView]'))
DROP VIEW [BasicInfo].[InventorySharedGoodView]
GO
/****** Object:  View [BasicInfo].[InventoryCurrencyView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCurrencyView]'))
DROP VIEW [BasicInfo].[InventoryCurrencyView]
GO
/****** Object:  View [BasicInfo].[InventoryCompanyView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCompanyView]'))
DR

GO
/****** Object:  View [BasicInfo].[InventoryCompanyVesselView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCompanyVesselView]'))
DROP VIEW [BasicInfo].[InventoryCompanyVesselView]
GO
/****** Object:  View [BasicInfo].[InventoryCompanyVesselTankView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCompanyVesselTankView]'))
DROP VIEW [BasicInfo].[InventoryCompanyVesselTankView]
GO
/****** Object:  View [BasicInfo].[InventoryCompanyGoodView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCompanyGoodView]'))
DROP VIEW [BasicInfo].[InventoryCompanyGoodView]
GO
/****** Object:  View [BasicInfo].[InventoryCompanyGoodUnitView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT
--------------------------------------------------------
--  File creato - giovedì-gennaio-15-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table DEGENTI
--------------------------------------------------------
  CREATE TABLE "SCOTT"."DEGENTI" 
   (	"DEG_STANZA" NUMBER(5,0), 
	"DEG_LETTO" NUMBER(4,0), 
	"DEG_STR_STR" NUMBER(5,0), 
	"DEG_RIC_ANNO" NUMBER(4,0), 
	"DEG_RIC_CARTELLA" NUMBER(12,0), 
	"DEG_ASS_IPCA" NUMBER(8,0), 
	"DEG_ASS_COGN" VARCHAR2(30 BYTE), 
	"DEG_ASS_NOME" VARCHAR2(30 BYTE), 
	"DEG_ASS_DATNA" DATE, 
	"DEG_REPARTO_ASS" VARCHAR2(6 BYTE), 
	"DEG_DESC_REP_ASS" VARCHAR2(60 BYTE), 
	"DEG_LETTO_INI" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TA
-- ViewName : CompaniesByWorkgroupBidList-CostCodes
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'BQM';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'CompaniesByWorkgroupBidList-CostCodes'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table 

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
select xt.create_view('xt.coiteminfo', $$
select coitem.*,
  itemsite_item_id as coitem_item_id,
  itemsite_warehous_id as coitem_warehous_id,
  xt.co_line_base_price(coitem) as base_price,
  xt.co_line_markup(coitem) as markup,
  xt.co_line_list_price(coitem) as list_price,
  xt.co_line_list_price_discount(coitem) as list_price_discount,
  xt.co_line_customer_discount(coitem) as cust_discount,
  xt.co_line_extended_price(coitem) as ext_price,
  xt.co_line_ship_balance(coitem) as ship_balance,
  xt.co_line_at_shipping(coitem) as at_shipping,
  xt.co_line_margin(coitem) as margin,
  xt.co_line_tax(coitem) as tax,
  sochild_uuid as child_uuid
from coitem
  join itemsite on coitem_itemsite_id=itemsite_id
  left join xt.sochild on coitem_order_id = sochild_id and sochild_type = coitem_order_type;
$$, false);
create or replace rule "_INSERT" as on insert to xt.coiteminfo do instead
insert into coitem (
  coitem_id,
  coitem_cohead_id,
  coitem_linenumber,
  coitem_itemsite_id,
  coitem_sche

  coitem_qtyord,
  coitem_unitcost,
  coitem_price,
  coitem_custprice,
  coitem_memo,
  coitem_custpn,
  coitem_prcost,
  coitem_imported,
  coitem_qty_uom_id,
  coitem_qty_invuomratio,
  coitem_price_uom_id,
  coitem_price_invuomratio,
  coitem_promdate,
  coitem_taxtype_id,
  coitem_status,
  coitem_qtyshipped,
  coitem_order_id,
  coitem_qtyreturned,
  coitem_closedate,
  coitem_order_type,
  coitem_close_username,
  coitem_lastupdated,
  coitem_substitute_item_id,
  coitem_created,
  coitem_creator,
  coitem_warranty,
  coitem_cos_accnt_id,
  coitem_qtyreserved,
  coitem_subnumber,
  coitem_firm,
  coitem_rev_accnt_id,
  coitem_pricemode,
  obj_uuid
) select
  new.coitem_id,
  new.coitem_cohead_id,
  new.coitem_linenumber,
  itemsite_id,
  new.coitem_scheddate,
  new.coitem_qtyord,
  coalesce(new.coitem_unitcost, itemcost(itemsite_id)),
  new.coitem_price,
  new.coitem_custprice,
  new.coitem_memo,
  new.coitem_custpn,
  new.coitem_prcost,
  coalesce(new.coitem_imported, false),


  new.coitem_qty_invuomratio,
  new.coitem_price_uom_id,
  new.coitem_price_invuomratio,
  new.coitem_promdate,
  new.coitem_taxtype_id,
  new.coitem_status,
  coalesce(new.coitem_qtyshipped, 0),
  coalesce((select sochild_id from xt.sochild where sochild_uuid=new.child_uuid),-1),
  coalesce(new.coitem_qtyreturned, 0),
  new.coitem_closedate,
  (select sochild_type from xt.sochild where sochild_uuid=new.child_uuid),
  new.coitem_close_username,
  coalesce(new.coitem_lastupdated, now()),
  new.coitem_substitute_item_id,
  coalesce(new.coitem_created, now()),
  coalesce(new.coitem_creator, geteffectivextuser()),
  new.coitem_warranty,
  new.coitem_cos_accnt_id,
  coalesce(new.coitem_qtyreserved, 0),
  new.coitem_subnumber,
  coalesce(new.coitem_firm, false),
  new.coitem_rev_accnt_id,
  coalesce(new.coitem_pricemode, 'D'),
  coalesce(new.obj_uuid, xt.uuid_generate_v4())
from itemsite
where itemsite_item_id=new.coitem_item_id
  and itemsite_warehous_id=new.coitem_warehous_id;
create or r
# Tests for the performance schema
# ==========================================
# HELPER include/event_aggregate_cleanup.inc
# ==========================================
--disable_query_log
revoke all privileges, grant option from user1@localhost;
revoke all privileges, grant option from user2@localhost;
revoke all privileges, grant option from user3@localhost;
revoke all privileges, grant option from user4@localhost;
drop user user1@localhost;
drop user user2@localhost;
drop user user3@localhost;
drop user user4@localhost;
flush privileges;
drop procedure dump_thread;
drop procedure dump_one_thread;
drop prepare dump_waits_account;
drop prepare dump_waits_user;
drop prepare dump_waits_host;
drop prepare dump_waits_history;
drop prepare dump_waits_global;
drop prepare dump_stages_account;
drop prepare dump_stages_user;
drop prepare dump_stages_host;
drop prepare dump_stages_history;
drop prepare dump_stages_global;
drop prepare dump_statements_account;
drop prepare dump_statements_user
DROP VIEW CoordType;
DROP VIEW FieldMask;
DROP VIEW FieldQuality;
DROP VIEW FramesStatus;
DROP VIEW GalaxyTag;
DROP VIEW HoleType;
DROP VIEW ImageMask;
DROP VIEW InsideMask;
DROP VIEW MaskType;
DROP VIEW ObjType;
DROP VIEW PhotoAux;
DROP VIEW PhotoAuxAll;
DROP VIEW PhotoFamily;
DROP VIEW PhotoFlags;
DROP VIEW PhotoMode;
DROP VIEW PhotoObj;
DROP VIEW Galaxy;
DROP VIEW PhotoSecondary;
DROP VIEW PhotoStatus;
DROP VIEW PhotoType;
DROP VIEW PrimTarget;
DROP VIEW ProgramType;
DROP VIEW PspStatus;
DROP VIEW QsoCatalog;
DROP VIEW QsoConcordance;
DROP VIEW RegionConvex;
DROP VIEW Run;
DROP VIEW SecTarget;
DROP VIEW Sky;
DROP VIEW spbsParams;
DROP VIEW SpecClass;
DROP VIEW SpecLine ;
DROP VIEW SpecLineNames;
DROP VIEW SpecObj ;
DROP VIEW SpecPhoto ;
DROP VIEW SpecZStatus;
DROP VIEW SpecZWarning;
DROP VIEW Star;
DROP VIEW StarTag;
DROP VIEW TargPhotoObj;
DROP VIEW TargPhotoPrimary ;
DROP VIEW TargPhotoSecondary;
DROP VIEW Tile;
DROP VIEW TiledTarget;
DROP VIEW TilingBoundary;
DROP VIEW TilingMask
--------------------------------------------------------
-- Archivo creado  - lunes-enero-06-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for View IFAC_GASTOPUNTORED_FGPR
--------------------------------------------------------
  DROP  VIEW "INTEGRA"."IFAC_GASTOPUNTORED_FGPR";
  DROP  VIEW "INTEGRA"."IFAC_HUECOEMD_HEMD";
  DROP  VIEW "INTEGRA"."IFAC_HUECOESC_HESC";
  DROP  VIEW "INTEGRA"."IFAC_HUECOFAP_HFAP";
  DROP  VIEW "INTEGRA"."IFAC_HUECOMAN_HMAN";
  DROP  VIEW "INTEGRA"."IFAC_HUECOPRS_HPRS";
  DROP  VIEW "INTEGRA"."IFAC_HUECOSUP_HSUP";
  DROP  VIEW "INTEGRA"."IFAC_LECTURAPUNTORED_FLPR";
  DROP  VIEW "INTEGRA"."IFAC_LINEAFACTURAV_LFAV";
  DROP  VIEW "INTEGRA"."IFAC_LINEAVALORACIONV_LVAV";
  DROP  VIEW "INTEGRA"."IFAC_SITUACIONBL_SIBL";
  DROP  VIEW "INTEGRA"."IFAC_SITUACIONEDA_SIEA";
  DROP  VIEW "INTEGRA"."IFAC_SITUACIONEMD_SIED";
  DROP  VIEW "INTEGRA"."IFAC_SITUACIONESC_SIES";
  DROP  VIEW "INT
--
-- IMPORTANT NOTE:
--
-- If you source in this SQL, then you should export a custom spell file and distribute it to the players on your server, otherwise
-- the rest-state as displayed in the UI (SoF and SoD) may not reflect the rest-state as determined by the server.
--
-- All the spells that follow are those that allow rest-state regen IN THE SoD CLIENT.
--
-- If your server does not support accelerated rest-state regen, then you do not need this file.
--
-- The first set of spell IDs are within the range of the Titanium spell file.
--
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 110;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 111;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 112;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 676;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 677;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 678;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 1577;
UPDATE `spells_new` SET `allowrest` = 1 WHERE 

UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 1699;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 1702;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 1704;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 1772;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 2464;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 2468;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 2473;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 2475;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 3342;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 3387;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 3395;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 3650;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 5051;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 5573;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 5984;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 5985;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 59

UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7023;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7024;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7025;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7026;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7800;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7801;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7802;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7803;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7804;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7805;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7806;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7807;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7808;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7809;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7810;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 7811;
UPDATE `spells_new` SET `allowrest` = 1 WHERE `id` = 78
-- Timestamp: 2015-05-13 14:15:27.714
-- Source database is: test_sessions
-- Connection URL is: jdbc:derby://localhost:1527/test_sessions;user=db;password=db
-- appendLogs: false
-- ----------------------------------------------
-- DDL Statements for schemas
-- ----------------------------------------------
CREATE SCHEMA "DB";
-- ----------------------------------------------
-- DDL Statements for tables
-- ----------------------------------------------
CREATE TABLE "DB"."TOKENS" ("ID" VARCHAR(48) NOT NULL, "USERID" VARCHAR(48) NOT NULL, "EXPIRED" TIMESTAMP NOT NULL, "USERAGENT" VARCHAR(50) NOT NULL);
CREATE TABLE "DB"."USERS" ("ID" VARCHAR(48) NOT NULL, "USERNAME" VARCHAR(100), "PASSWORD" VARCHAR(60) NOT NULL);
-- ----------------------------------------------
-- DDL Statements for indexes
-- ----------------------------------------------
CREATE INDEX "DB"."USERS_PASSWORD_IDX" ON "DB"."USERS" ("PASSWORD");
CREATE INDEX "DB"."USERS_USERNAME_IDX" ON "DB"."USERS" ("USERNAME");
CREATE IN
-- phpMyAdmin SQL Dump
-- version 4.0.5
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Aug 15, 2013 at 10:55 PM
-- Server version: 5.5.32-MariaDB-log
-- PHP Version: 5.4.17
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `minimalCms`
--
-- --------------------------------------------------------
--
-- Table structure for table `config`
--
CREATE TABLE IF NOT EXISTS `config` (
  `prop` varchar(100) NOT NULL,
  `value` text NOT NULL,
  PRIMARY KEY (`prop`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
-- --------------------------------------------------------
--
-- Table structure for table `content`
--
CREATE TABLE IF NOT EXISTS `content` (
  `name` varchar(100) NOT NULL,
  `title` varchar(100) NOT NULL,
  `templ
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='vote' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='vote' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_vote`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='vote_log' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='vote_log' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_vote_log`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='vote_option' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='vote_option' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_vote_option`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_vote' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_vote' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_vote`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='s
[{"pk": 1, "model": "contenttypes.contenttype", "fields": {"model": "logentry", "name": "log entry", "app_label": "admin"}}, {"pk": 2, "model": "contenttypes.contenttype", "fields": {"model": "permission", "name": "permission", "app_label": "auth"}}, {"pk": 3, "model": "contenttypes.contenttype", "fields": {"model": "group", "name": "group", "app_label": "auth"}}, {"pk": 4, "model": "contenttypes.contenttype", "fields": {"model": "user", "name": "user", "app_label": "auth"}}, {"pk": 5, "model": "contenttypes.contenttype", "fields": {"model": "contenttype", "name": "content type", "app_label": "contenttypes"}}, {"pk": 6, "model": "contenttypes.contenttype", "fields": {"model": "session", "name": "session", "app_label": "sessions"}}, {"pk": 7, "model": "contenttypes.contenttype", "fields": {"model": "migrationhistory", "name": "migration history", "app_label": "south"}}, {"pk": 8, "model": "contenttypes.contenttype", "fields": {"model": "profile", "name": "profile", "app_label": "dash"}}
CREATE OR REPLACE PROCEDURE NCAOWII.SP_COPY_D(P_TABLE varchar2) IS
  v_strsql VARCHAR2(400);
  v_code   NUMBER;
  v_errm   varchar2(1024);
  v_IS_EXIST number := 0;
BEGIN
--every Saturday ,if P_TABLE is  new table,then add record msg into table_control
---by ZhangWJ 2012-02-06
  IF TO_CHAR(SYSDATE+0.2,'D') = 7 THEN   ---如果4.8小时后是周六，则判断是否是新增表,主要是应对23点前就开始运行的表。
    select count(*)
    into v_IS_EXIST
    from naiawii.TABLE_CONTROL a
    where table_name = P_TABLE;
    COMMIT;
  IF v_IS_EXIST = 0 THEN
     v_strsql := ' insert into naiawii.TABLE_CONTROL values ('''||P_TABLE||''',0,0,''Y'',''Y'',''D'',''S'',''S'',NULL,NULL,''4'',NULL,NULL,1000,''NEW_TABLE'')';
     execute immediate v_strsql;
     COMMIT;
  END IF ;
  END IF ;
---cancel the data copy from naiawii to ncaowii by ZhangWJ 2013-04-01 
--
--  v_strsql := 'truncate table ' || P_TABLE;
--  execute immediate v_strsql;
--  v_strsql := 'insert /*+append,parallel(a,16) */ into ' || P_TABLE ||
--              ' a select /*+parallel(t,1

--   ;
--  PRC_PRE_COPY_TABLE(P_TABLE,'U');
--  execute immediate v_strsql;
--  PRC_PRE_COPY_TABLE(P_TABLE,'A');
--  COMMIT;
--
  
  -----update table rownum into table_control@wii01
  update naiawii.TABLE_CONTROL  T
     set TABLE_RECORDS_BEFORE     = TABLE_RECORDS_CURRENT,
         COUNT_STATUS             = 'W',
         COUNT_PROCESS_START_DATE = SYSDATE
   WHERE TABLE_ENABLE = 'Y'
     AND T.TABLE_NAME = P_TABLE;
  commit;
  v_strsql := 'update naiawii.TABLE_CONTROL T set TABLE_RECORDS_CURRENT =(select count(*) from ' ||
              P_TABLE ||
              ') , COUNT_STATUS=''S'',COUNT_PROCESS_END_DATE=SYSDATE  where t.TABLE_ENABLE=''Y''  and table_name=''' ||
              P_TABLE || '''';
  execute immediate v_strsql;
  commit;
exception
  when others then
    v_code := SQLCODE;
    v_errm := SQLERRM;
    rollback;
    insert into naiawii.sp_error_log
    values
      ('SP_COPY_D',
       sysdate,
       v_code,
       v_errm,
       'SP_COPY_D Error, The Sql is : ' || v_str
-- MySQL dump 10.14  Distrib 5.5.44-MariaDB, for Linux (x86_64)
--
-- Host: localhost    Database: scm
-- ------------------------------------------------------
-- Server version	5.5.44-MariaDB
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Current Database: `scm`
--
ALTER DATABASE `scm` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `scm`;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_
/*
DROP TABLE #ReadWriteTemp
SELECT [divfs].[database_id] ,
         [divfs].[file_id] ,
         [divfs].[sample_ms] ,
         [divfs].[num_of_reads] ,
         [divfs].[num_of_bytes_read] ,
         [divfs].[io_stall_read_ms] ,
         [divfs].[num_of_writes] ,
         [divfs].[num_of_bytes_written] ,
         [divfs].[io_stall_write_ms] ,
         [divfs].[io_stall] ,
         [divfs].[size_on_disk_bytes] ,
         [divfs].[file_handle]
   INTO	#ReadWriteTemp         
   FROM [sys].[dm_io_virtual_file_stats](NULL, NULL) AS divfs
*/
SELECT
    DB_NAME([divfs].[database_id]) AS [database] ,
    [mf].[type_desc] AS [file type] ,
    mf.[name] AS [file name] ,
    CONVERT(DECIMAL(16, 3), CONVERT(BIGINT, [mf].[size]) / 128.0) AS [size_mb] ,
    CONVERT(DECIMAL(10, 2), ( [divfs].[sample_ms] - [t].[sample_ms] ) / 1000.0) AS [elapsed time s] ,
    [divfs].[num_of_reads] - [t].[num_of_reads] AS [reads] ,
    [divfs].[num_of_bytes_read] - [t].[num_of_bytes_read] AS [bytes read] ,
    [div

    CASE WHEN ( [divfs].[io_stall_read_ms] - [t].[io_stall_read_ms] )
              - ( [divfs].[io_stall_write_ms] - [t].[io_stall_write_ms] ) > 0
         THEN '<< Read Bias'
         WHEN ( [divfs].[io_stall_read_ms] - [t].[io_stall_read_ms] )
              - ( [divfs].[io_stall_write_ms] - [t].[io_stall_write_ms] ) < 0
         THEN 'Write Bias >>'
         ELSE '<Balanced>'
    END AS [Stall Balance] ,
    CASE WHEN ( [divfs].[num_of_bytes_read] - [t].[num_of_bytes_read] )
              - ( [divfs].[num_of_bytes_written] - [t].[num_of_bytes_written] ) > 0
         THEN '<< Read Bias'
         WHEN ( [divfs].[num_of_bytes_read] - [t].[num_of_bytes_read] )
              - ( [divfs].[num_of_bytes_written] - [t].[num_of_bytes_written] ) < 0
         THEN 'Write Bias >>'
         ELSE '<Balanced>'
    END AS [Read/Write Balance] ,
    [divfs].[num_of_writes] - [t].[num_of_writes] AS [writes] ,
    [divfs].[num_of_bytes_written] - [t].[num_of_bytes_written] AS [bytes write] ,
    [divf
drop table if exists sage_rs;
create temp table sage_rs AS(
  select "SAGEID", "Dataset", "TagChrPos", "E"
  from "outSAGEtop" 
  where "Dataset" like 'RvsS' and "E"<0.01
  order by "E"
  );
drop table if exists sage_rs2;
create temp table sage_rs2 AS(
  select sage_rs.*, "Read", "ReadCount", "SolexaRuns"."RunID", "SolexaRuns"."LibraryID", "TreatmentGroup"
  from sage_rs inner join "SolexaTags" on sage_rs."TagChrPos" = "SolexaTags"."TagChrPos" inner join
  "SolexaRuns" on "SolexaRuns"."RunID" = "SolexaTags"."RunID" inner join
  "qrySolexaLambs" on "qrySolexaLambs"."LibraryID" = "SolexaRuns"."LibraryID"
  where "InUse" = True
  order by "E"
  );
drop table if exists sage_rs3;
create table sage_rs3 AS(
  select "SAGEID", "Dataset", "TagChrPos", "E", max("ReadCount") AS maxcount
  from sage_rs2 
  group by "SAGEID", "Dataset", "TagChrPos", "E"
  );
select distinct sage_rs2."SAGEID", sage_rs2."Dataset", sage_rs2."TagChrPos", sage_rs2."E", sage_rs2."Read"
from sage_rs2 inner join sage_rs3 o
/**************************************************************************
* Copyright 2016 Observational Health Data Sciences and Informatics (OHDSI)
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* http://www.apache.org/licenses/LICENSE-2.0
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
* Authors: Timur Vakhitov, Christian Reich
* Date: 2016
**************************************************************************/
-- 1. Update latest_update field to new date 
DECLARE
   cNDDFDate   DATE;
   cNDDFVer    VARCHAR2 (100);
BEGIN
   SELECT TO_DATE (NDDF_VERSION, 'YYYYMMDD'), NDDF_VERSION || ' R

     INTO cNDDFDate, cNDDFVer
     FROM NDDF_PRODUCT_INFO;
   DEVV5.VOCABULARY_PACK.SetLatestUpdate (pVocabularyName        => 'ETC',
                                          pVocabularyDate        => cNDDFDate,
                                          pVocabularyVersion     => cNDDFVer,
                                          pVocabularyDevSchema   => 'DEV_GCNSEQNO');
END;
COMMIT;
-- 2. Truncate all working tables
TRUNCATE TABLE concept_stage;
TRUNCATE TABLE concept_relationship_stage;
TRUNCATE TABLE concept_synonym_stage;
TRUNCATE TABLE pack_content_stage;
TRUNCATE TABLE drug_strength_stage;
--3. Add ETC to concept_stage from RETCTBL0_ETC_ID
INSERT /*+ APPEND */ INTO concept_stage (concept_id,
                           concept_name,
                           domain_id,
                           vocabulary_id,
                           concept_class_id,
                           standard_concept,
                           concept_code,
                           valid_start

                           valid_end_date,
                           invalid_reason)
	SELECT  NULL AS concept_id,
		SUBSTR (r.etc_name, 1, 255) AS concept_name,
		'Drug' AS domain_id,
		'ETC' AS vocabulary_id,
		'ETC' AS concept_class_id,
		'C' AS standard_concept,
		r.etc_id AS concept_code,
		(select v.latest_update from vocabulary v where v.vocabulary_id = 'ETC' ) AS valid_start_date,
		CASE r.etc_retired_date WHEN '00000000' THEN TO_DATE ('20991231', 'yyyymmdd') ELSE TO_DATE(r.etc_retired_date,'YYYYMMDD') END AS valid_end_date,
		CASE r.etc_retired_date WHEN '00000000' THEN NULL ELSE 'D' END AS invalid_reason
	FROM RETCTBL0_ETC_ID r;
COMMIT;
--4. Load into concept_relationship_stage
INSERT /*+ APPEND */ INTO  concept_relationship_stage (concept_code_1,
                                        concept_code_2,
                                        vocabulary_id_1,
                                        vocabulary_id_2,
                                        relationship_id,
    
CREATE TABLE EQUIPMENT (
    id BIGINT NOT NULL,
    name VARCHAR (250) not null,
    description VARCHAR (250) not null,
    city_id BIGINT not null,
    city_name VARCHAR(100) not null,
    city_state VARCHAR(2) not null,
	equip_model_id BIGINT not null,
    equip_model_name varchar(255) not null,
    equip_model_code varchar(50) not null
);
ALTER TABLE EQUIPMENT
ADD CONSTRAINT EQUIPMENT_PK
PRIMARY KEY(ID);
CREATE INDEX EQUIPMENT_IDX01_CITY ON EQUIPMENT(city_name);
CREATE INDEX EQUIPMENT_IDX02_MODEL ON EQUIPMENT(equip_model_code);
insert into EQUIPMENT (id, name, description, city_id, city_name, city_state, equip_model_id, equip_model_name, equip_model_code)
        values (101, 'Equip101', 'Equip101 - R2D2 - RIO', 2, 'Rio de Janeiro', 'RJ', 1, 'Model R2D2', 'R2D2');
insert into EQUIPMENT (id, name, description, city_id, city_name, city_state, equip_model_id, equip_model_name, equip_model_code)
        values (102, 'Equip102', 'Equip102 - C3PO - Petropolis', 4, 'Petropolis', 'RJ', 2,

insert into EQUIPMENT (id, name, description, city_id, city_name, city_state, equip_model_id, equip_model_name, equip_model_code)
        values (103, 'Equip103', 'Equip103 - T800 - Petropolis', 4, 'Petropolis', 'RJ', 3, 'Model T-800', 'T-800');
insert into EQUIPMENT (id, name, description, city_id, city_name, city_state, equip_model_id, equip_model_name, equip_model_code)
        values (104, 'Equip104', 'Equip104 - T1000 - Petropolis', 4, 'Petropolis', 'RJ', 4, 'Model T-1000', 'T-1000');
insert into EQUIPMENT (id, name, description, city_id, city_name, city_state, equip_model_id, equip_model_name, equip_model_code)
        values (105, 'Equip105', 'Equip105 - T800 - Petropolis', 4, 'Petropolis', 'RJ', 3, 'Model T-800', 'T-800');
insert into EQUIPMENT (id, name, description, city_id, city_name, city_state, equip_model_id, equip_model_name, equip_model_code)
        values (106, 'Equip106', 'Equip106 - T1000 - Petropolis', 4, 'Petropolis', 'RJ', 4, 'Model T-1000', 'T-1000');
insert in
select xt.create_view('xt.itemsiteinfo', $$
   select i.*, item_number, item_upccode,
     case
       when i.itemsite_location_id != -1 or length(i.itemsite_location) > 0 then true
       else false
     end as "use_default_loc",
     round(itemcost(i.itemsite_id), 6) as "unit_cost",
     case when i.itemsite_supply_itemsite_id is null then false else true end as planned_transfers,
     s.itemsite_warehous_id as supply_warehous_id
   from itemsite i
     join item on item_id=i.itemsite_item_id
     left join itemsite s on s.itemsite_id = i.itemsite_supply_itemsite_id;
$$, false);
create or replace rule "_INSERT" as on insert to xt.itemsiteinfo do instead
insert into itemsite (
  itemsite_id,
  itemsite_item_id,
  itemsite_warehous_id,
  itemsite_qtyonhand,
  itemsite_reorderlevel,
  itemsite_ordertoqty,
  itemsite_cyclecountfreq,
  itemsite_datelastcount,
  itemsite_datelastused,
  itemsite_loccntrl,
  itemsite_safetystock,
  itemsite_minordqty,
  itemsite_multordqty,
  itemsite_leadt

  itemsite_abcclass,
  itemsite_issuemethod,
  itemsite_controlmethod,
  itemsite_active,
  itemsite_plancode_id,
  itemsite_costcat_id,
  itemsite_eventfence,
  itemsite_sold,
  itemsite_stocked,
  itemsite_freeze,
  itemsite_location_id,
  itemsite_useparams,
  itemsite_useparamsmanual,
  itemsite_soldranking,
  itemsite_createpr,
  itemsite_location,
  itemsite_location_comments,
  itemsite_notes,
  itemsite_perishable,
  itemsite_autoabcclass,
  itemsite_ordergroup,
  itemsite_disallowblankwip,
  itemsite_maxordqty,
  itemsite_mps_timefence,
  itemsite_createwo,
  itemsite_warrpurc,
  itemsite_autoreg,
  itemsite_costmethod,
  itemsite_value,
  itemsite_ordergroup_first,
  itemsite_supply_itemsite_id,
  itemsite_planning_type,
  itemsite_wosupply,
  itemsite_posupply,
  itemsite_lsseq_id,
  itemsite_cosdefault,
  itemsite_createsopr,
  itemsite_createsopo,
  itemsite_dropship,
  itemsite_recvlocation_id,
  itemsite_issuelocation_id,
  itemsite_location_dist,
  itemsite_recvlocatio

  itemsite_issuelocation_dist,
  obj_uuid
) values (
  coalesce(new.itemsite_id, nextval('itemsite_itemsite_id_seq')),
  new.itemsite_item_id,
  new.itemsite_warehous_id,
  0,
  coalesce(new.itemsite_reorderlevel, 0),
  coalesce(new.itemsite_ordertoqty, 0),
  coalesce(new.itemsite_cyclecountfreq, 0),
  null,
  startoftime(),
  coalesce(new.itemsite_loccntrl, false),
  coalesce(new.itemsite_safetystock, 0),
  coalesce(new.itemsite_minordqty, 0),
  coalesce(new.itemsite_multordqty, 0),
  coalesce(new.itemsite_leadtime, 0),
  coalesce(new.itemsite_abcclass, 'A'),
  new.itemsite_issuemethod,
  coalesce(new.itemsite_controlmethod, 'N'),
  new.itemsite_active,
  new.itemsite_plancode_id,
  new.itemsite_costcat_id,
  coalesce(new.itemsite_eventfence, 10),
  coalesce(new.itemsite_sold, false),
  coalesce(new.itemsite_stocked, false),
  false,
  coalesce(new.itemsite_location_id, -1),
  coalesce(new.itemsite_useparams, false),
  coalesce(new.itemsite_useparamsmanual, false),
  coalesce(new.ite
-- MySQL dump 10.13  Distrib 5.6.17, for osx10.9 (x86_64)
--
-- Host: localhost    Database: encho_ochu
-- ------------------------------------------------------
-- Server version	5.6.17
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `member`
--
DROP TABLE IF EXISTS `member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `member` (
  `id` bigin
use patstat
go
/*
Those triple argument rules and their queries are derivatives of other doubule rules.
E.g. N1W4W5b pairs can be obtained by intersection of pair set that follows N1W4 rule and N1W5b rule.
Since certain double rules can be omitted in 4.1 and 4.2, the triple rules that are made up of them behave differently.
If all double rules are used, the triple rules scores provide only an additional bonus for scoring on multiple rules.
If some double rules are omitted, triple rules should score the pairs with the point scale established in 4.1 and 4.2.
However, this step can be considered as a simplification of the notion that pairs scored by multiple rules are more valuable than simple addition of rule scores.
As a result, simple bonus can be provided to those pairs irrespective of their previous (lack of) scoring. 
*/
--Strong N + Weak W + Weak W
--N1W4W5a
if object_id('rule_N1W4W5a') is not null drop table rule_N1W4W5a
select distinct a.new_id as new_id1, b.new_id as new_id2
int

from evaluated_patterns as a
join evaluated_patterns as b on
	a.bib_numeric=b.bib_numeric
	and a.bibliographic_type=b.bibliographic_type
	and a.residual=b.residual
where a.new_id < b.new_id
go
--N1W4W5b
if object_id('rule_N1W4W5b') is not null drop table rule_N1W4W5b
select distinct a.new_id as new_id1, b.new_id as new_id2
into rule_N1W4W5b
from evaluated_patterns as a
join evaluated_patterns as b on
	a.bib_numeric=b.bib_numeric
	and a.bibliographic_type=b.bibliographic_type
where a.new_id < b.new_id
	and a.residual is not null
	and b.residual is not null
	and (len(a.residual))>=10
	and (len(b.residual))>=10
	and dbo.ComputeDistancePerc(substring(a.residual, ((len(a.residual)/2)-5), 10), substring(b.residual, ((len(b.residual)/2)-5), 10)) >= 0.70
except (select * from rule_N1W4W5a)
go
--Strong N + Middle W + Weak W
--N1W3bW4
if object_id('rule_N1W3bW4') is not null drop table rule_N1W3bW4
select distinct a.new_id as new_id1, b.new_id as new_id2
into rule_N1W3bW4
from evaluated_pattern

join evaluated_patterns as b on
	a.bib_numeric=b.bib_numeric
	and a.bibliographic_type=b.bibliographic_type
where a.new_id < b.new_id
	and a.name is not null
	and b.name is not null
	and a.aetal is null
	and b.aetal is null
	and dbo.ComputeDistancePerc(a.name, b.name) >= 0.70
go
--N1W2bW5b
if object_id('rule_N1W2bW5b') is not null drop table rule_N1W2bW5b
select distinct a.new_id as new_id1, b.new_id as new_id2
into rule_N1W2bW5b
from evaluated_patterns as a
join evaluated_patterns as b on
	a.bib_numeric=b.bib_numeric
where a.new_id < b.new_id
	and a.aetal is not null
	and b.aetal is not null
	and dbo.ComputeDistancePerc(a.aetal, b.aetal) >= 0.70
	and a.residual is not null
	and b.residual is not null
	and (len(a.residual))>=10
	and (len(b.residual))>=10
	and dbo.ComputeDistancePerc(substring(a.residual, ((len(a.residual)/2)-5), 10), substring(b.residual, ((len(b.residual)/2)-5), 10)) >= 0.70
go
--N2...
--N2W3bW4
if object_id('rule_N2W3bW4') is not null drop table rule_N2W3bW4
select 
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE format A19
column CLOSE_DATE format A19
column TERM_COMMENT format A120
column ARTIST_NAME format A160
column ARTIST_KANA format A60
column DATA_FLAG format 99
set linesize 878
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE
# Tests for PERFORMANCE_SCHEMA
#    Show existing objects and information about their structure
show databases like 'performance_schema';
show create database performance_schema;
use performance_schema;
show tables;
show create table accounts;
show create table cond_instances;
show create table events_stages_current;
show create table events_stages_history;
show create table events_stages_history_long;
show create table events_stages_summary_by_host_by_event_name;
show create table events_stages_summary_by_thread_by_event_name;
show create table events_stages_summary_by_user_by_event_name;
show create table events_stages_summary_by_account_by_event_name;
show create table events_stages_summary_global_by_event_name;
show create table events_statements_current;
show create table events_statements_history;
show create table events_statements_history_long;
show create table events_statements_summary_by_host_by_event_name;
show create table events_statements_summary_by_thread_by_event_name;

show create table events_statements_summary_by_user_by_event_name;
show create table events_statements_summary_by_account_by_event_name;
show create table events_statements_summary_global_by_event_name;
show create table events_waits_current;
show create table events_waits_history;
show create table events_waits_history_long;
show create table events_waits_summary_by_host_by_event_name;
show create table events_waits_summary_by_instance;
show create table events_waits_summary_by_thread_by_event_name;
show create table events_waits_summary_by_user_by_event_name;
show create table events_waits_summary_by_account_by_event_name;
show create table events_waits_summary_global_by_event_name;
show create table file_instances;
show create table file_summary_by_event_name;
show create table file_summary_by_instance;
show create table host_cache;
show create table hosts;
show create table mutex_instances;
show create table objects_summary_global_by_type;
show create table performance_timers;
sho
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[CMS_GetTableToolsFilters_XML]
	@tableName VARCHAR(100),
	@leagueName VARCHAR(100),
	@tableKey VARCHAR(100)
AS
--=============================================
-- Author:	  ikenticus
-- Create date: 10/09/2015
-- Description: get table tools filters for SportsEditCMS
-- Update:		10/14/2015 - ikenticus: adding SMG_Data_Front_Attrs, setting delete field,
--										fixing PGA Tour select, adding key_nav_display and nav_mode
-- 				10/29/2015 - ikenticus: adding SMG_Mappings and league_nav_display
-- 				11/11/2015 - ikenticus: adding Suspender_List
-- =============================================
BEGIN
    SET NOCOUNT ON
    SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	-- set nav_mode, delete field
	DECLARE @nav_mode VARCHAR(100)
	DECLARE @delete_field VARCHAR(100)
	DECLARE @delete_value VARCHAR(100) = 'delete'
    -- tables
    DECLARE @tables TABLE
	(
	    id VARCHAR(100),
	    display VARCHAR(100),
		priority

	)
	INSERT INTO @tables (priority, id, display)
	VALUES (1, 'default_dates', 'Default Dates'),
		   (2, 'data_front_attrs', 'Data Front Attrs'),
		   (3, 'arrests', 'Arrests'),
		   (4, 'mappings', 'Mappings'),
		   (5, 'suspender_list', 'Suspender List')
    IF NOT EXISTS (SELECT 1 FROM @tables WHERE id = @tableName)
	BEGIN
		SELECT TOP 1 @tableName = id
		  FROM @tables
		 ORDER BY priority ASC
	END
	DECLARE @table_display VARCHAR(100)
	SELECT @table_display = display
	  FROM @tables
	 WHERE id = @tableName
    -- leagues
    DECLARE @leagues TABLE
	(
	    id VARCHAR(100),
	    display VARCHAR(100),
		priority INT IDENTITY(1, 1)
	)
	DECLARE @league_nav_display VARCHAR(100) = 'league'
	IF (@tableName = 'arrests')
	BEGIN
		SET @nav_mode = 'dropdown'
		SET @delete_field = '_case_'
		INSERT INTO @leagues (id, display)
		SELECT LOWER(sport), UPPER(sport)
		  FROM dbo.Feeds_Arrests
		 GROUP BY sport
		 ORDER BY sport ASC
	END
	ELSE IF (@tableName = 'data_front_attrs')
	BEGIN
		SET @nav_mo

		SET @delete_field = 'value'
		INSERT INTO @leagues (id, display)
		VALUES ('all', 'All Leagues')
		INSERT INTO @leagues (id, display)
		SELECT LOWER(league_name), UPPER(league_name)
		  FROM dbo.SMG_Data_Front_Attrs
		 GROUP BY league_name
		 ORDER BY league_name ASC
	END
	ELSE IF (@tableName = 'default_dates')
	BEGIN
		SET @nav_mode = 'all'
		SET @delete_field = 'filter'
		INSERT INTO @leagues (id, display)
		VALUES ('all', 'All Leagues')
		INSERT INTO @leagues (id, display)
		SELECT LOWER(league_key), CASE WHEN LEN(league_key) <= 5 THEN UPPER(league_key)
								  ELSE UPPER(LEFT(league_key, 1)) + LOWER(RIGHT(league_key, LEN(league_key) - 1))
								  END
		  FROM SportsDB.dbo.SMG_Default_Dates
		 WHERE league_key <> ''				-- exclude empty
		   AND league_key NOT LIKE 'l.%'	-- exclude legacy
		   AND page <> 'source'				-- exclude source
		 GROUP BY league_key
		 ORDER BY league_key ASC
		IF (@tableKey = 'source')
		BEGIN
			SET @leagueName = 'all'
		END
	END
	ELSE IF (@tableName
-- changes to CFMBB 1.20 from 1.1/1.11
alter table cfmbb_settings add defaultIndex varchar(35) not null default 'forums.cfm';
alter table cfmbb_settings add enableChat smallint not null default 1;
alter table cfmbb_settings add useCaptcha smallint not null default 1;
alter table cfmbb_threads add views integer not null default 0;
alter table cfmbb_forums add lastpost text null;
alter table cfmbb_forums add msgcount integer not null default 0;
alter table cfmbb_threads add `msgcount` integer not null default 0;
alter table cfmbb_threads add `lastpost` datetime not null default '1970-01-01 00:00:00';
alter table cfmbb_forums add groupidfk char(35) not null default '';
CREATE TABLE cfmbb_notifications
	useridfk varchar(35) not null,
	idfk varchar(35) not null default '',
	notification_type smallint not null,
	primary key (useridfk, idfk)
);
CREATE TABLE cfmbb_pages (
	PAGE_ID char(35) not null,
	PAGE_FILENAME varchar(255) NOT NULL,
	PAGE_TITLE varchar(255) NOT NULL,
	META_DESC text NOT NU

	META_KEYS text NOT NULL,
	CONTENT_ID varchar(35) NOT NULL,
	INCLUDE_CONTENT varchar(255) null,
	REDIRECT_URL varchar(255) null,
	MEMBERS_ONLY smallint not null default '0',
	PRIMARY KEY  (PAGE_ID)
);
CREATE TABLE cfmbb_page_content (
	CONTENT_ID varchar(35) NOT NULL default '',
	HISTORY_ID bigint not null,
	HISTORY_DATE datetime NOT NULL,
	CONTENT mediumtext NULL,
	PRIMARY KEY  (CONTENT_ID,HISTORY_ID)
);
CREATE TABLE cfmbb_custom_nav (
	nav_id char(35) NOT NULL,
	nav_order smallint(6) NOT NULL default '0',
	page_id char(35) default NULL,
	nav_url varchar(255) default NULL,
	nav_title varchar(255) default NULL,
	target varchar(255) default NULL,
	PRIMARY KEY  (nav_id)
);
CREATE TABLE cfmbb_usergroups
	id char(35) not null,
	title varchar(255) not null,
	description text null,
	primary key (id)
);
CREATE TABLE cfmbb_usergroup_members
	groupidfk char(35) not null,
	useridfk char(35) not null,
	primary key (groupidfk, useridfk)
);
CREATE TABLE chat_rooms (
	room_id int not null auto_incr
USE muziekdatabase;
GO
--<div class=''control-group''>
--	<label for=''speelduur'' class=''control-label''><span class=''tipleft'' title=''integer''>speelduur</span></label>
--	<div class=''controls''>
--		<div class="input-append">
--			<input class=''integer'' type=''text'' id=''input_speelduur'' name=''speelduur'' value='''' style="width:174px;" class=''hasnull''/>
--			<span class="add-on"><input class=''null tiptop'' title=''NULL'' type="checkbox" name="null_speelduur" checked=''true''></span>
--		</div>
--	</div>
--</div>
--<div class=''control-group''>
--	<label for=''jaartal'' class=''control-label''><span class=''tipleft'' title=''integer''>jaartal</span></label>
--	<div class=''controls''>
--		<input class=''integer'' type=''text'' id=''input_jaartal'' name=''jaartal'' value=''''/>
--	</div>
--</div>
DECLARE @HTML NVARCHAR(MAX) = '''';
SELECT 
''<div class=''''control-group''''>
<label for='''''' + c.Column_Name + '''''' class=''''control-label''''><span class=''''tipleft''''
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `gm_surveys`;
CREATE TABLE `gm_surveys` (
  `surveyid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `player` int(10) unsigned NOT NULL DEFAULT '0',
  `mainSurvey` int(10) unsigned NOT NULL DEFAULT '0',
  `overall_comment` longtext NOT NULL,
  `timestamp` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`surveyid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Player System';
LOC
SET DEFINE OFF;
CREATE TABLE DREF_ACC_CODES
  ACCOUNT_ID    VARCHAR2(50 BYTE),
  ACCOUNT_NAME  VARCHAR2(100 BYTE),
  ACCOUNT_TYPE  VARCHAR2(100 BYTE),
  DESC_LEVEL1   VARCHAR2(100 BYTE),
  DESC_LEVEL2   VARCHAR2(100 BYTE),
  DESC_LEVEL3   VARCHAR2(100 BYTE),
  DESC_LEVEL4   VARCHAR2(100 BYTE)
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX DREF_ACCOUNT_CODES_PK ON DREF_ACC_CODES
(ACCOUNT_ID, ACCOUNT_NAME)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
 
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `guild_bank_tab`;
CREATE TABLE `guild_bank_tab` (
  `guildid` int(10) unsigned NOT NULL DEFAULT '0',
  `TabId` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `TabName` varchar(16) NOT NULL DEFAULT '',
  `TabIcon` varchar(100) NOT NULL DEFAULT '',
  `TabText` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`guildid`,`TabId`),
  KEY `guildid_key` (`guildid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf
IF OBJECT_ID('dbo.wsp_newPayPalResponse') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newPayPalResponse
    IF OBJECT_ID('dbo.wsp_newPayPalResponse') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newPayPalResponse >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newPayPalResponse >>>'
END
go
/*******************************************************************
**
** CREATION:
**   Author:      Andy Tran
**   Date:        July 2009
**   Description: Inserts row into PayPalResponse
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
*******************************************************************/
CREATE PROCEDURE wsp_newPayPalResponse
 @xactionId     NUMERIC(12,0)
,@tokenId       VARCHAR(20)
,@payerId       VARCHAR(17)
,@responseCode  VARCHAR(5)
,@correlationId VARCHAR(20)
AS
DECLARE
 @dateNow DATETIME
,@return  INT
EXEC @return = dbo.wsp_GetDateGMT @dateNow OUTPUT
IF @return != 0
    BEGIN
        RETURN @return
    END
BEGIN TRAN TRAN_newPay
-- DVA Alternativni dotazy
set autotrace on;
select distinct r.*
from
  vypujceni v
  join ridici r on v.ridic_id = r.ridic_id
  join vozidlo vo on v.vozidlo_id = vo.vozidlo_id
  join model m on m.model_id = vo.model_id
where
  m.znacka = 'MAN'
select distinct r.* from ridici r, vozidlo v, model m where m.znacka = 'MAN';
set autotrace on;
select
  v.datum_vypujceni
  ,m.znacka || ' ' || m.model vozidlo_model
  ,vo.spz
  ,r.prijmeni || ' ' || r.jmeno jmeno
  ,v.vzdalenost_celkem
from
  vypujceni v
  join ridici r on v.ridic_id = r.ridic_id
  join vozidlo vo on v.vozidlo_id = vo.vozidlo_id
  join model m on m.model_id = vo.model_id
order by
  v.vzdalenost_celkem desc
select vyp.datum_vypujceni
  ,m.znacka || ' ' || m.model vozidlo_model
  ,v.spz
  ,r.prijmeni || ' ' || r.jmeno jmeno
  ,vyp.vzdalenost_celkem
  from vypujceni vyp, ridici r, vozidlo v, model m 
  where m.model_id = v.model_id AND v.vozidlo_id = vyp.vozidlo_id AND vyp.ridic_id = r.ridic_id
  order by vyp.vzdalenost_celkem de
CREATE OR REPLACE FORCE VIEW HV_EQUITY_CHECK_EOD1 (SOURCE, NAV_DATE, SECURITY, STK_SEC_ID, AMT, TICKER, S_STK_ID, NSE_CODE, NSE_CLOSE, BSE_CODE, BSE_CLOSE) AS 
  SELECT 'NSE' AS SOURCE,
  TRADED.NAV_DATE,
  TRADED.SECURITY,
  TRADED.STK_SEC_ID,
  TRADED.AMT,
  TRADED.TICKER,
  TRADED.S_STK_ID,
  NSE.NSE_CODE AS NSE_CODE,
  NSE.NSE_CLOSE,
  NULL AS BSE_CODE,
  NULL BSE_CLOSE
FROM
  (SELECT SCHNAVBD.SECURITY,
    SECURITY.STK_SEC_ID,
    -SUM(SCHNAVBD.AMOUNT)/SUM(SCHNAVBD.UNITS) AMT,
    SECURITY.TICKER,
    SCHNAVBD.NAV_DATE,
    SUBSTR(SECURITY.STK_SEC_ID,3,(LENGTH(SECURITY.STK_SEC_ID)-2)) S_STK_ID
  FROM HI_SCHNAVBD_CURR SCHNAVBD,
    HM_SECURITY SECURITY
  WHERE SCHNAVBD.SECURITY     = SECURITY.SECURITY
  AND ( (SCHNAVBD.INVEST_TYPE ='INVEST')
  AND (SCHNAVBD.UNITS        <>'0')
  AND (SECURITY.ASSET_TYPE    ='01')
  AND (SECURITY.SECURITY     <>SECURITY.STK_SEC_ID)
  AND (SCHNAVBD.SCHEME NOT   IN ('HDFCSX','HDFCS+','HDFCNY'))
  AND (SECURITY.RECTYPE       ='L') )
  AND SECURITY.SECU

    --AND (schnavbd.NAV_DATE=(select cur_date-1 from sysparam where rectype='L'))
  GROUP BY SCHNAVBD.SECURITY,
    SECURITY.STK_SEC_ID,
    SECURITY.TICKER,
    SCHNAVBD.NAV_DATE
  ) TRADED,
  HI_NSE NSE
WHERE NSE.NSE_CODE = TRADED.S_STK_ID(+)
AND NSE.NSE_DT     = TRADED.NAV_DATE
UNION ALL
SELECT 'BSE' AS SOURCE,
  TRADED.NAV_DATE,
  TRADED.SECURITY,
  TRADED.STK_SEC_ID,
  TRADED.AMT,
  TRADED.TICKER,
  TRADED.S_STK_ID,
  NULL AS NSE_CODE,
  NULL NSE_CLOSE,
  BSE.BSE_CODE AS BSE_CODE,
  BSE.BSE_CLOSE
FROM
  (SELECT SCHNAVBD.SECURITY,
    SECURITY.STK_SEC_ID,
    -SUM(SCHNAVBD.AMOUNT)/SUM(SCHNAVBD.UNITS) AMT,
    SECURITY.TICKER,
    SCHNAVBD.NAV_DATE,
    SUBSTR(SECURITY.STK_SEC_ID,3,(LENGTH(SECURITY.STK_SEC_ID)-2)) S_STK_ID
  FROM HI_SCHNAVBD_CURR SCHNAVBD,
    HM_SECURITY SECURITY
  WHERE SCHNAVBD.SECURITY     = SECURITY.SECURITY
  AND ( (SCHNAVBD.INVEST_TYPE ='INVEST')
  AND (SCHNAVBD.UNITS        <>'0')
  AND (SECURITY.ASSET_TYPE    ='01')
  AND (SECURITY.SECURITY     <>SECURITY.
------------------------------------------------
--	START changing existing data structure
------------------------------------------------
DELETE FROM StrategyFinancial;
DELETE FROM StrategyModel;
ALTER TABLE Financial ADD
   StrategyGroupID int NULL; 
ALTER TABLE StrategyModel DROP 
  CONSTRAINT FK_StrategyModel_Model;
ALTER TABLE StrategyFinancial DROP 
  CONSTRAINT FK_StrategyFinancial_StrategyModel;
ALTER TABLE FinancialPool
  ALTER COLUMN Amount numeric(15,4) NULL;
ALTER TABLE StrategyFinancial
  ALTER COLUMN Amount numeric(15,4) NULL;
DROP TABLE StrategyModel;
--
--		StrategyGroup (parent to Strategy table AS 0..n)
--
CREATE TABLE StrategyGroup ( 
  StrategyGroupID	int 		NOT NULL,
  StrategyGroupTitle 	varchar(64)	NOT NULL
);
--
--		Strategy (parent to StrategyModel table AS 0..n)
--
CREATE TABLE Strategy ( 
  StrategyID		int IDENTITY (1,1) NOT NULL,
  StrategyTitle 	varchar(64)	NOT NULL,
  StrategyGroupID	int 		NOT NULL
);
--
--		StrategyModel::Model (Strategy extension to Mode

--
CREATE TABLE StrategyModel ( 
  StrategyModelID		int IDENTITY (1,1) NOT NULL,
  StrategyModelTitle 		varchar(64)	NOT NULL,
  StrategyID			int 		NOT NULL,
  ModelTypeID 			int,
  ModelData 			text
);
------------------------------------------------
--	END changing existing data structure
------------------------------------------------
--
--				PRIMARY KEY
--
ALTER TABLE StrategyGroup ADD CONSTRAINT PK_StrategyGroup PRIMARY KEY (StrategyGroupID);
ALTER TABLE Strategy ADD CONSTRAINT PK_Strategy PRIMARY KEY (StrategyID);
ALTER TABLE StrategyModel ADD CONSTRAINT PK_StrategyModel PRIMARY KEY (StrategyModelID);
--
--				FOREIGN KEY
--
ALTER TABLE Financial ADD
  CONSTRAINT FK_Financial_StrategyGroup FOREIGN KEY (StrategyGroupID) REFERENCES StrategyGroup (StrategyGroupID);
ALTER TABLE StrategyGroup ADD
  CONSTRAINT FK_StrategyGroup_Object FOREIGN KEY (StrategyGroupID) REFERENCES Object (ObjectID);
ALTER TABLE Strategy ADD
  CONSTRAINT FK_Strategy_StrategyGroup FOREIGN KEY (StrategyGroupID
﻿create or replace procedure u1.ETLT_RBO_PAYMENT_CARD is
       s_mview_name     varchar2(30) := 'T_RBO_PAYMENT_CARD';
       vStrDate         date := sysdate;
       n_fo_id_max      number;
       e_user_exception exception;
     begin
       --определяем последнюю загруженную проводку
       select max(fo_id)
         into n_fo_id_max
         from T_RBO_PAYMENT_CARD;
       insert /*+ append parallel(20)*/into T_RBO_PAYMENT_CARD
                     (rbo_contract_id,contract_number,oper_payment_code,oper_payment_name,oper_date,amount,
                      fo_id,reverse_fo,is_storno)
      select kpd.id,
             kpd.c_num_dog,
             vod.c_code,
             vod.sys_name,
             fo.c_doc_date,
             fo.c_summa,
             fo.id,
             fo.c_reverse_fo,
             fo.c_is_storno
        from u1.V_RBO_Z#VID_OPER_DOG vod
        join u1.T_RBO_Z#KAS_PC_FO     fo on fo.c_vid_oper_ref = vod.id
        join u1.V_RBO_Z#KAS_PC_DOG   kpd on kpd.c_fo_arr = fo
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
/**************************************************************
 Data navigational stored procedure for bin maintenance keys
 Parameters:
	@table_name - name of bin maintanance tablen to navigate
	@field_name - field to navigate (must be a primary key)
	@nav_type - type of navigation requested
		F - First, P - Previous, N - Next, L - Last
	@current_val - the current key value to reference when 
		performing referential navigation (next/prev)
***************************************************************/
CREATE PROCEDURE [dbo].[tdc_navigate_whse2whse_sp] (
	@field_name varchar(30),
	@nav_type varchar(1),
	@current_val varchar(255)
AS
SET NOCOUNT ON
DECLARE @SQL varchar(255)
IF @field_name = 'tran_id'
  BEGIN
    IF @nav_type = 'F'
      BEGIN
        SELECT MIN(tran_id) FROM tdc_pick_queue WHERE trans = 'MGTW2W'
      END
    IF @nav_type = 'P'
      BEGIN
        IF EXISTS(SELECT tran_id FROM tdc_pick_queue WHERE tran_id < @current_val

            SELECT MAX(tran_id) FROM tdc_pick_queue 
            WHERE tran_id < @current_val AND trans = 'MGTW2W'
        ELSE
            SELECT MIN(tran_id) FROM tdc_pick_queue WHERE trans = 'MGTW2W'
      END
    IF @nav_type = 'N'
      BEGIN
        IF EXISTS(SELECT tran_id FROM tdc_pick_queue WHERE tran_id > @current_val AND trans = 'MGTW2W')
            SELECT MIN(tran_id) FROM tdc_pick_queue 
            WHERE tran_id > @current_val AND trans = 'MGTW2W'
        ELSE
            SELECT MAX(tran_id) FROM tdc_pick_queue WHERE trans = 'MGTW2W'
      END
    IF @nav_type = 'L'
      BEGIN
        SELECT MAX(tran_id) FROM tdc_pick_queue WHERE trans = 'MGTW2W'
      END
    return 0
  END
IF @field_name = 'location'
  BEGIN
    IF @nav_type = 'F'
      BEGIN
        SELECT MIN(location) FROM locations
      END
    IF @nav_type = 'P'
      BEGIN
        IF EXISTS(SELECT location FROM locations WHERE location < @current_val)
            SELECT MAX(location) FROM locations 
          
@inc/input_vars_init;
prompt *** Simplified RTSM report
prompt * Usage: @rtsm/sqlid_manual SQL_ID [px]
prompt * Add "px" to show stats by slaves
prompt ;
def sql_id=&1
col if_parallel new_value _px noprint;
select decode(count(*),0,'--','  ') if_parallel
from dual 
where exists(select null from v$sql_monitor r where r.sql_id='&sql_id' and r.PX_SERVERS_REQUESTED>0)
  and lower('&2') like 'px'
col if_parallel clear;
col sql_id                 for a13;
col ch#                    for 999;
col "***"                  for a3;
col status                 for a13 trunc; 
col id                     for 99;
col operation              for a80;
col io                     for a12;
col read                   for a12;
col write                  for a12;
col wa_mem                  for 999g999d0;
col wa_max                  for 999g999d0;
col wa_temp                 for 999g999d0;
col wa_maxtemp              for 999g999d0;
col per_slave_rows         for a50
col per_slave_io_bytes     for a50
col per_sla

col per_slave_read_bytes   for a50
col per_slave_write_reqs   for a50
col per_slave_write_bytes  for a50
break on sql_id on ch# on plan_hv on exec_id on started on status skip 1
with 
sql_mon_manual
 as (
   select 
     sql_id,sql_exec_start,sql_exec_id, SQL_PLAN_HASH_VALUE, SQL_CHILD_ADDRESS
    ,status
    ,case when dense_rank()over(partition by sql_id,sql_exec_start,sql_exec_id, SQL_PLAN_HASH_VALUE, SQL_CHILD_ADDRESS order by max(LAST_CHANGE_TIME) desc nulls last) = 1
          then '-->'
          else '   '
      end "***"
    ,plan_line_id
    ,plan_operation
    ,plan_options
    ,plan_object_owner||'.'||plan_object_name   as obj_name
    ,count(sid)                                 as proc_cnt
    ,sum(starts                  )              as starts
    ,sum(output_rows             )              as output_rows
    ,sum(IO_INTERCONNECT_BYTES   )              as IO_INTERCONNECT_BYTES
    ,sum(PHYSICAL_READ_REQUESTS  )              as PHYSICAL_READ_REQUESTS 
    ,sum(PHYSICAL_

    ,sum(PHYSICAL_WRITE_REQUESTS )              as PHYSICAL_WRITE_REQUESTS
    ,sum(PHYSICAL_WRITE_BYTES    )              as PHYSICAL_WRITE_BYTES   
    ,sum(WORKAREA_MEM            )              as WORKAREA_MEM           
    ,sum(WORKAREA_MAX_MEM        )              as WORKAREA_MAX_MEM       
    ,sum(WORKAREA_TEMPSEG        )              as WORKAREA_TEMPSEG       
    ,sum(WORKAREA_MAX_TEMPSEG    )              as WORKAREA_MAX_TEMPSEG   
&_px    ,listagg(output_rows              ,'/') within group(order by sid) as per_slave_rows
&_px    ,listagg(IO_INTERCONNECT_BYTES    ,'/') within group(order by sid) as per_slave_io_bytes
&_px    ,listagg(PHYSICAL_READ_REQUESTS   ,'/') within group(order by sid) as per_slave_read_reqs
&_px    ,listagg(PHYSICAL_READ_BYTES      ,'/') within group(order by sid) as per_slave_read_bytes
&_px    ,listagg(PHYSICAL_WRITE_REQUESTS  ,'/') within group(order by sid) as per_slave_write_reqs
&_px    ,listagg(PHYSICAL_WRITE_BYTES     ,'/') within group(or
-- count the features that overlap 5' UTRs
use sReadDB;
--EXPLAIN 
SELECT c.name, r.read_id, ri.machid, r.startmatch,r.endmatch, ri.trim_3,  
       f.feature_id, f.fid,f.fstart, f.fstop,f.fstrand
FROM read_location AS r, read_info ri, feature AS f, chromosome AS c
WHERE f.ftype = 'five_prime_utr' AND
      ri.trim_3 >= 18 AND ri.trim_3 <= 28 AND      
      c.chromosome_id = r.chromosome_id AND
      ri.read_id = r.read_id AND
      r.chromosome_id = f.chromosome_id AND
      MBRIntersects(f.location,r.location)
INTO OUTFILE '/var/tmp/five_prime_utr.dat';
SELECT c.name, r.read_id,ri.machid,r.startmatch,r.endmatch, ri.trim_3,  
       f.feature_id, f.fid, f.fstart, f.fstop,f.fstrand
FROM read_location AS r, read_info ri, feature AS f, chromosome AS c
WHERE f.ftype = 'three_prime_utr' AND
      ri.trim_3 >= 18 AND ri.trim_3 <= 28 AND      
      c.chromosome_id = r.chromosome_id AND
      ri.read_id = r.read_id AND
      r.chromosome_id = f.chromosome_id AND
      MBRIntersects(f.locati
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
SET ANSI_PADDING OFF
GO
CREATE TABLE [Production].[ProductModelIllustration] (
		[ProductModelID]     [int] NOT NULL,
		[IllustrationID]     [int] NOT NULL,
		[ModifiedDate]       [datetime] NOT NULL,
		CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID]
		PRIMARY KEY
		CLUSTERED
		([ProductModelID], [IllustrationID])
	ON [PRIMARY]
) ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'PK_ProductModelIllustration_ProductModelID_IllustrationID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Clustered index created by a primary key constraint.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'INDEX', N'PK_ProductModelIllustration_ProductModelID_IllustrationID'
GO
ALTER TABLE [Production].[ProductModelIllustration]
	ADD
	CONSTRAINT [DF_ProductModelIllustration_ModifiedDate]
	DEFAUL

GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'DF_ProductModelIllustration_ModifiedDate'
GO
ALTER TABLE [Production].[ProductModelIllustration]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID]
	FOREIGN KEY ([IllustrationID]) REFERENCES [Production].[Illustration] ([IllustrationID])
ALTER TABLE [Production].[ProductModelIllustration]
	CHECK CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing Illustration.IllustrationID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'FK_ProductModelIllustration_Illustration_IllustrationID'
GO
ALTER TABLE [Production].[ProductModelIllustration]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID]
	FOREIGN KEY ([ProductModelID]) 

ALTER TABLE [Production].[ProductModelIllustration]
	CHECK CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing ProductModel.ProductModelID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'FK_ProductModelIllustration_ProductModel_ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to Illustration.IllustrationID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'IllustrationID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductModel.ProductModelID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'ProductModelID'
GO
EXEC sp_addextendedprope
﻿CREATE VIEW [dbo].[netsqlazman_AuthorizationAttributesView]
AS
SELECT     dbo.[netsqlazman_AuthorizationView].AuthorizationId, dbo.[netsqlazman_AuthorizationView].ItemId, dbo.[netsqlazman_AuthorizationView].Owner, dbo.[netsqlazman_AuthorizationView].Name, dbo.[netsqlazman_AuthorizationView].objectSid, 
                      dbo.[netsqlazman_AuthorizationView].SidWhereDefined, dbo.[netsqlazman_AuthorizationView].AuthorizationType, dbo.[netsqlazman_AuthorizationView].ValidFrom, dbo.[netsqlazman_AuthorizationView].ValidTo, 
                      [netsqlazman_AuthorizationAttributes].AuthorizationAttributeId, [netsqlazman_AuthorizationAttributes].AttributeKey, [netsqlazman_AuthorizationAttributes].AttributeValue
FROM         dbo.[netsqlazman_AuthorizationView] INNER JOIN
                      dbo.[netsqlazman_AuthorizationAttributes]() [netsqlazman_AuthorizationAttributes] ON dbo.[netsqlazman_AuthorizationView].AuthorizationId = [netsqlazman_AuthorizationAttributes].AuthorizationId
GO
GRA
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE VIEW [dbo].[NotesForward]
AS
	SELECT
			backRef.*,
			forwRef.nextDate
	FROM
					[dbo].[Generic_NoteTransactions_Global]				backRef
			join	[dbo].[Generic_NoteTransactions_Global_ForwardRef]	forwRef		on	forwRef.ID = backRef.ID and forwRef.xDate = backRef.xDate
GO
EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
      

      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfigurati

         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CONTACT_NOTES"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 241
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', 'SCHEMA', N'dbo', 'VIEW', N'NotesForward',
-- Menus
INSERT INTO BLC_CMS_MENU (MENU_ID, NAME) VALUES (1, 'Header Nav');
-- Menu Items
INSERT INTO BLC_CMS_MENU_ITEM (MENU_ITEM_ID, PARENT_MENU_ID, SEQUENCE, MENU_ITEM_TYPE, ACTION_URL, LABEL) VALUES (1, 1, 1, 'CATEGORY', '/', 'Home');
INSERT INTO BLC_CMS_MENU_ITEM (MENU_ITEM_ID, PARENT_MENU_ID, SEQUENCE, MENU_ITEM_TYPE, ACTION_URL, LABEL) VALUES (2, 1, 2, 'CATEGORY', '/hot-sauces', 'Hot Sauces');
INSERT INTO BLC_CMS_MENU_ITEM (MENU_ITEM_ID, PARENT_MENU_ID, SEQUENCE, MENU_ITEM_TYPE, ACTION_URL, LABEL) VALUES (3, 1, 3, 'CATEGORY', '/merchandise', 'Merchandise');
INSERT INTO BLC_CMS_MENU_ITEM (MENU_ITEM_ID, PARENT_MENU_ID, SEQUENCE, MENU_ITEM_TYPE, ACTION_URL, LABEL) VALUES (4, 1, 4, 'CATEGORY', '/clearance', 'Clearance');
INSERT INTO BLC_CMS_MENU_ITEM (MENU_ITEM_ID, PARENT_MENU_ID, SEQUENCE, MENU_ITEM_TYPE, LINKED_PAGE_ID, LABEL) VALUES (5, 1, 5, 'PAGE', 3, 'New to Hot Sauce?');
INSERT INTO BLC_CMS_MENU_ITEM (MENU_ITEM_ID, PARENT_MENU_ID, SEQUENCE, MENU_ITEM_TYPE, LINKED_PAGE_ID, LAB
DROP TABLE IF EXISTS raster_tile;
CREATE TABLE raster_tile AS
	WITH foo AS (
		SELECT ST_AddBand(ST_AddBand(ST_MakeEmptyRaster(3, 3, 0, 0, 1, -1, 0, 0, 0), 1, '8BUI', 1, 0), 2, '8BUI', 10, 0) AS rast UNION ALL
		SELECT ST_AddBand(ST_AddBand(ST_MakeEmptyRaster(3, 3, 3, 0, 1, -1, 0, 0, 0), 1, '8BUI', 2, 0), 2, '8BUI', 20, 0) AS rast UNION ALL
		SELECT ST_AddBand(ST_AddBand(ST_MakeEmptyRaster(3, 3, 6, 0, 1, -1, 0, 0, 0), 1, '8BUI', 3, 0), 2, '8BUI', 30, 0) AS rast UNION ALL
		SELECT ST_AddBand(ST_AddBand(ST_MakeEmptyRaster(3, 3, 0, -3, 1, -1, 0, 0, 0), 1, '8BUI', 4, 0), 2, '8BUI', 40, 0) AS rast UNION ALL
		SELECT ST_AddBand(ST_AddBand(ST_MakeEmptyRaster(3, 3, 3, -3, 1, -1, 0, 0, 0), 1, '8BUI', 5, 0), 2, '8BUI', 50, 0) AS rast UNION ALL
		SELECT ST_AddBand(ST_AddBand(ST_MakeEmptyRaster(3, 3, 6, -3, 1, -1, 0, 0, 0), 1, '8BUI', 6, 0), 2, '8BUI', 60, 0) AS rast UNION ALL
		SELECT ST_AddBand(ST_AddBand(ST_MakeEmptyRaster(3, 3, 0, -6, 1, -1, 0, 0, 0), 1, '8BUI', 7, 0), 2, '8BUI', 70, 0) AS ras

		SELECT ST_AddBand(ST_AddBand(ST_MakeEmptyRaster(3, 3, 3, -6, 1, -1, 0, 0, 0), 1, '8BUI', 8, 0), 2, '8BUI', 80, 0) AS rast UNION ALL
		SELECT ST_AddBand(ST_AddBand(ST_MakeEmptyRaster(3, 3, 6, -6, 1, -1, 0, 0, 0), 1, '8BUI', 9, 0), 2, '8BUI', 90, 0) AS rast
	)
	SELECT ST_Union(rast) AS rast FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 3, 3, TRUE) AS rast FROM raster_tile
SELECT
	1, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, ARRAY[1], 3, 3, TRUE) AS rast FROM raster_tile
SELECT
	2, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, ARRAY[2, 1], 3, 3, TRUE) AS rast FROM raster_tile
SELECT
	3, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 2, 3, 3, TRUE) AS rast FROM raster_tile
SELECT
	4, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 2, 2, TRUE) AS rast FROM raster_tile
SELECT
	5, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 1, 1, TRUE) AS rast FROM raster_tile
SELECT
	6, ST_DumpValues(ras

FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 5, 5, TRUE) AS rast FROM raster_tile
SELECT
	7, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 2, 3, TRUE) AS rast FROM raster_tile
SELECT
	8, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 3, 2, TRUE) AS rast FROM raster_tile
SELECT
	9, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 3, 3) AS rast FROM raster_tile
SELECT
	11, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, ARRAY[1], 3, 3) AS rast FROM raster_tile
SELECT
	12, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, ARRAY[2, 1], 3, 3) AS rast FROM raster_tile
SELECT
	13, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 2, 3, 3) AS rast FROM raster_tile
SELECT
	14, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 2, 2) AS rast FROM raster_tile
SELECT
	15, ST_DumpValues(rast)
FROM foo;
WITH foo AS (
	SELECT ST_Tile(rast, 1, 1) AS rast FROM raster_tile
SELECT
	1
-- <Username,sysname,EXCO\PointCross_DatabaseReadOnly>
-- <Database,sysname,CNS_>
-- <SQLServer,sysname,EX30SQLDV01>
-- <Role,sysname,db_datareader>
DECLARE @mDatabase SYSNAME
USE master
IF @@servername = '<SQLServer,sysname,>' 
    BEGIN
		IF EXISTS ( SELECT
						*
					FROM
						sys.server_principals
					WHERE
						name = N'<Username,sysname,EXCO\BI_DatabaseReadOnly>' ) 
			DROP LOGIN [<Username,sysname,EXCO\BI_DatabaseReadOnly>]
			PRINT 'Dropped login <Username,sysname,EXCO\BI_DatabaseReadOnly>'
		CREATE LOGIN [<Username,sysname,EXCO\BI_DatabaseReadOnly>] FROM WINDOWS
			WITH DEFAULT_DATABASE= [master],
				 DEFAULT_LANGUAGE= [us_english]
		PRINT 'Created login <Username,sysname,EXCO\BI_DatabaseReadOnly>'         
        SELECT
            @mDatabase = '<Database,sysname,>'
        USE <Database,sysname,>
        IF EXISTS ( SELECT
                        *
                    FROM
                        sys.database_principals
                    WHERE
                      
--------------------------------------------------------------------------------
--
-- File name:   measure_io.sql (v0.1)
-- Purpose:     Measure IO reasons and "sizes" from v$iostat_function_detail
--              
-- Author:      Tanel Poder
-- Copyright:   (c) http://blog.tanelpoder.com | @tanelpoder
--              
-- Usage:       @measuire_io "SELECT your query here"
--
--
-- Other:       This script uses the v$iostat_function_detail view that is available
--              from Oracle 11.2 - and it contains instance-wide data.
--
--              The script adds a COUNT(*) around your query, so this may change
--              your query's execution plan.
--              
--------------------------------------------------------------------------------
WITH sq1   AS (SELECT * FROM v$iostat_function_detail)
   , sq2   AS (SELECT * FROM v$iostat_function_detail)
   , mainq AS (SELECT COUNT(*) FROM (&1))
SELECT /*+ LEADING(sq1,mainq) */
    sq1.function_name
  , sq1.filetype_name
  , NU

  , NULLIF(sq2.large_read_reqs       - sq1.large_read_reqs       , 0 ) lg_rd_iops
  , NULLIF(sq2.small_write_reqs      - sq1.small_write_reqs      , 0 ) sm_wr_iops
  , NULLIF(sq2.large_write_reqs      - sq1.large_write_reqs      , 0 ) lg_wr_iops
  , NULLIF(sq2.small_read_megabytes  - sq1.small_read_megabytes  , 0 ) sm_rd_mb
  , NULLIF(sq2.large_read_megabytes  - sq1.large_read_megabytes  , 0 ) lg_rd_mb
  , NULLIF(sq2.small_write_megabytes - sq1.small_write_megabytes , 0 ) sm_wr_mb
  , NULLIF(sq2.large_write_megabytes - sq1.large_write_megabytes , 0 ) lg_wr_mb
  , ROUND ((sq2.small_read_megabytes  - sq1.small_read_megabytes ) / NULLIF(sq2.small_read_reqs  - sq1.small_read_reqs  , 0 ) * 1024 , 1 ) avg_sm_rd_rq_kb
  , ROUND ((sq2.large_read_megabytes  - sq1.large_read_megabytes ) / NULLIF(sq2.large_read_reqs  - sq1.large_read_reqs  , 0 ) * 1024 , 1 ) avg_lg_rd_rq_kb
  , ROUND ((sq2.small_write_megabytes - sq1.small_write_megabytes) / NULLIF(sq2.small_write_reqs - sq1.small_write_reqs , 0
-- Creates a view on top of the results of running a CrowdFlower job by adding a few columns that
-- highlight issues. These include:
--
-- number_inconsistent : the "highest" house number is the same or lower than the "lowest",
--                       ignoring the respective letters
-- letter_inconsistent : the number part of the house numbers is the same but the letter part of \
--                       the"highest" is the same or lower than the "lowest"
-- thanks to https://wiki.postgresql.org/wiki/Aggregate_Median
CREATE OR REPLACE FUNCTION _final_median(NUMERIC[])
   RETURNS NUMERIC AS
$$
   SELECT AVG(val)
   FROM (
     SELECT val
     FROM unnest($1) val
     ORDER BY 1
     LIMIT  2 - MOD(array_upper($1, 1), 2)
     OFFSET CEIL(array_upper($1, 1) / 2.0) - 1
   ) sub;
$$
LANGUAGE 'sql' IMMUTABLE;
DROP AGGREGATE IF EXISTS median(NUMERIC) CASCADE;
CREATE AGGREGATE median(NUMERIC) (
  SFUNC=array_append,
  STYPE=NUMERIC[],
  FINALFUNC=_final_median,
  INITCOND='{}'
);
DROP VIEW I

CREATE VIEW r2 AS
	WITH temp2 AS (
		WITH temp AS
		(
			SELECT
				r.*,
				CAST(substring(r.lowest_house_number from '^(\d+)') AS NUMERIC) AS lowest_house_number_without_letters,
				CAST(substring(r.highest_house_number from '^(\d+)') AS NUMERIC) AS highest_house_number_without_letters,
				UPPER(substring(r.lowest_house_number from '([A-Z]+)$')) AS lowest_house_number_letter,
				UPPER(substring(r.highest_house_number from '([A-Z]+)$')) AS highest_house_number_letter
			FROM r
		)
		SELECT
			temp.*,
			(
				(lowest_house_number_without_letters = 0) OR
				(highest_house_number_without_letters = 0)
			) AS zero_inconsistent,
			(
				(house_numbers_found = 'yes') AND
				(lowest_house_number_without_letters >= highest_house_number_without_letters)
			) AS number_inconsistent,
			(
				(house_numbers_found = 'yes') AND
				(lowest_house_number_without_letters = highest_house_number_without_letters) AND
				(lowest_house_number_letter >= highest_house_number_letter)
			) AS letter_
-- ViewName : PhotoUploadView
start transaction;
# module
SELECT @FKModule := IDModule FROM lkp_module WHERE ModuleName = 'Media';
# delete columns
SELECT @idView := ifnull((SELECT IDListView FROM listview_master WHERE ViewName = 'PhotoUploadView'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((SELECT FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# UPDATE sequence
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListV

UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewCriteria),0) FROM listview_criteria) WHERE seq_name = 'ListCriteria_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewFieldMapping),0) FROM listview_fieldmapping) WHERE seq_name = 'ListFieldMapping_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListView),0) FROM listview_master WHERE IsCustomList = 0) WHERE seq_name = 'ListBox_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewSortby),0) FROM listview_sortoption) WHERE seq_name = 'ListSortby_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListColumn),0) FROM listview_columns) WHERE seq_name = 'ListColumn_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDProductViewMenu),0) FROM cnf_productviewmenu) WHERE seq_name = 'CNF_ProductViewMenu_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListActionItem),0) FROM listview_actionlinks) WHERE seq_name = 'ListAction_SE

UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewFilterBy),0) FROM listview_filteroption) WHERE seq_name = 'ListFilterby_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewGroupby),0) FROM listview_groupbyoption) WHERE seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
SELECT @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) FROM listview_fieldmaster;
SELECT @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) FROM listview_criteria;
SELECT @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) FROM listview_fieldmapping;
SELECT @IDListView := ifnull(max(IDListView), 0) FROM listview_master;
SELECT @IDListViewSortby := ifnull(max(IDListViewSortby), 0) FROM listview_sortoption;
SELECT @IDListColumn := ifnull(max(IDListColumn), 0) FROM listview_columns;
SELECT @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) FROM cnf_productviewmenu;
SELECT @IDListActionItem := ifnull(max(IDListActionItem), 0) FROM li
CREATE OR REPLACE FUNCTION logging.get_record(log_table character varying, log_seq integer)
 RETURNS SETOF log_record
AS $function$
"""
logging.get_record
"""
return_results = []
columns_processed = []
# Base GD key for storing plans for this log_table.
base_key = "logging_%s" % log_table
# Handle log_plan
log_plan_key = "%s_log_plan" % base_key
if GD.has_key(log_plan_key):
    log_plan = GD[log_plan_key]
else:
    log_plan = plpy.prepare("""
        SELECT schema_name, table_name, record_seq, modified_by, client_addr,
            query_id, date_modified, (
                SELECT event
                FROM logging."%s" b
                WHERE a.record_seq = b.record_seq
                ORDER BY seq DESC
                LIMIT 1
                ) as last_event
        FROM logging."%s" a
        WHERE seq = $1
        """ % (log_table, log_table), ["int4"])
    GD[log_plan_key] = log_plan
results = plpy.execute(log_plan, [log_seq])
if len(results) != 1:
    plpy.error("No log entry was f

record_seq = results[0]['record_seq']
schema_name = results[0]['schema_name']
table_name = results[0]['table_name']
modified_by = results[0]['modified_by']
client_addr = results[0]['client_addr']
query_id = results[0]['query_id']
date_modified = results[0]['date_modified']
last_event = results[0]['last_event']
# Handle the last_change_plan
last_change_plan_key = "%s_last_change_plan" % base_key
if GD.has_key(last_change_plan_key):
    last_change_plan = GD[last_change_plan_key]
else:
    last_change_query = """
        SELECT * FROM logging."%s"
        WHERE ROW(query_id, column_name)
            IN (
                SELECT  max(query_id) ,column_name
                FROM logging."%s"
                WHERE query_id <= $4
                GROUP BY schema_name, table_name, record_seq, column_name
                HAVING schema_name = $1 AND table_name = $2 
                    AND record_seq = $3
                ORDER BY column_name, min(query_id)
               )
        ORDER BY column

    """ % (log_table, log_table)
    last_change_plan = plpy.prepare(last_change_query,
        ["text", "text", "int4", "int4"])
    GD[last_change_plan_key] = last_change_plan
last_change = plpy.execute(last_change_plan,
    [schema_name, table_name, record_seq, query_id])
for row in filter(lambda x: x['column_name'] != '', last_change):
    return_results.append({
        'seq': row['seq'],
        'column_name': row['column_name'],
        'column_value': row['new_value'],
        'modified_by': row['modified_by'],
        'client_addr': row['client_addr'],
        'query_id': row['query_id'],
        'date_modified': row['date_modified'],
        'record_seq': row['record_seq'],
        'schema_name': row['schema_name'],
        'table_name': row['table_name'],
        'event': row['event']
    })
    columns_processed.append(row['column_name'])
# Handle is_deleted_plan
#deleted_plan_key = "%s_deleted_plan" % base_key 
#if GD.has_key(deleted_plan_key):
#    is_deleted_plan = GD[d
SELECT DISTINCT p1.maker FROM product p1 
WHERE p1.type = 'Laptop' AND NOT EXISTS (SELECT * from product p2 where p1.maker = p2.maker AND p2.type = 'PC')
MAKER
-----
SELECT pc3.model, pc2.model FROM PC pc2, (SELECT MIN(pc1.model) AS model, pc1.speed, pc1.ram FROM PC pc1 GROUP BY pc1.speed, pc1.ram) pc3 WHERE pc3.speed = pc2.speed AND pc3.ram = pc2.ram AND pc3.model <> pc2.model;
     MODEL	MODEL
---------- ----------
      1004	 1012
SELECT DISTINCT maker FROM product p, PC, Laptop l WHERE p.model = PC.model  AND PC.speed = (SELECT MAX(pc2.speed) FROM PC pc2) OR (p.model = l.model AND l.speed = (SELECT MAX(l2.speed) FROM Laptop l2));
MAKER
-----
(SELECT AVG(price) FROM product p, PC WHERE p.maker = 'D' AND p.model = PC.model) UNION (SELECT AVG(price)  FROM product p, Laptop l WHERE p.maker = 'D' AND p.model = l.model);
AVG(PRICE)
----------
       730
SELECT speed, AVG(price) FROM PC WHERE speed > 2.0 GROUP BY speed;
     SPEED AVG(PRICE)
---------- ----------
       2.2	  640
       2
IF OBJECT_ID('dbo.wsp_newCall') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newCall
    IF OBJECT_ID('dbo.wsp_newCall') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newCall >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newCall >>>'
END
go
/******************************************************************************
**
** CREATION:
**   Author:  Jack Veiga/Yan Liu
**   Date:  July 2003
**   Description:  Insert row into Call
**
** REVISION(S):
**   Author:  Yan Liu
**   Date:  February 9, 2005
**   Description: Add siteId into the call log
**
******************************************************************************/
CREATE PROCEDURE wsp_newCall
    @siteId INT,
    @callId INT,
    @payId  NUMERIC(12, 0)
AS
BEGIN
    DECLARE @return      INT,
            @dateCreated DATETIME
    EXEC @return = wsp_GetDateGMT @dateCreated OUTPUT
    IF @return != 0
        BEGIN
            RETURN @return
        END
    BEGIN TRAN TRAN_newCall
    INSERT INTO Ca
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (4538, "Ultimate SWF Flash Display Widget", "4.1", NULL, "3.0.1", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (79646, 4538, "register_connex_ultimate_swf_flash_display_widget", "/ultimate-swf-flash-display-widget.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (564869, 4538, "ultimate_swf_flash_display_widget", "__construct", "/ultimate-swf-flash-display-widget.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (564870, 4538, "ultimate_swf_flash_display_widget", "form", "/ultimate-swf-flash-display-widget.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (564871, 4538, "ultimate_swf_flash_display_widget", "widget", "/ult
with s AS
(SELECT sum(total_time) AS t,sum(blk_read_time+blk_write_time) as iot, sum(total_time-blk_read_time-blk_write_time) as cput, sum(calls) AS s,sum(rows) as r FROM pg_stat_statements WHERE dbid=(SELECT oid from pg_database where datname=current_database()))
_pg_stat_statements as (
select query,sum(total_time) as total_time, sum(blk_read_time) as blk_read_time, sum(blk_write_time) as blk_write_time, sum(calls) as calls, sum(rows) as rows
from pg_stat_statements
where dbid=(SELECT oid from pg_database where datname=current_database())
group by query
SELECT
(100*total_time/(SELECT t FROM s))::numeric(20,2) AS time_percent,
(100*(blk_read_time+blk_write_time)/(SELECT iot FROM s))::numeric(20,2) AS iotime_percent,
(100*(total_time-blk_read_time-blk_write_time)/(SELECT cput FROM s))::numeric(20,2) AS cputime_percent,
total_time::numeric(20,2) as total_time,
(total_time*1000/calls)::numeric(20,2) AS avg_time,
((blk_read_time+blk_write_time)*1000/calls)::numeric(20,2) AS avg_io_time,
c
--------------------------------------------------------
--  ÆÄÀÏÀÌ »ý¼ºµÊ - ¸ñ¿äÀÏ-2¿ù-02-2017   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ITEM
--------------------------------------------------------
  CREATE TABLE "SCOTT"."ITEM" 
   (	"TYPE" VARCHAR2(20 BYTE), 
	"ID" VARCHAR2(20 BYTE), 
	"PRICE" NUMBER, 
	"ITEMCOLOR" VARCHAR2(20 BYTE), 
	"ITEMSIZE" NUMBER, 
	"ITEMAMOUNT" NUMBER, 
	"ITEMNAME" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ITEM_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "SCOTT"."ITEM_PK" ON "S
--------------------------------------------------------
--  File created - Friday-May-10-2013   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table AVAILABLITY
--------------------------------------------------------
  CREATE TABLE "TABLE_1"."AVAILABLITY" 
   (	"BOOK_ID" NUMBER, 
	"STATUS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into TABLE_1.AVAILABLITY
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index AVAILABLITY_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "TABLE_1"."AVAILABLITY_PK" ON "TABLE_1"."AVAILABLITY" ("BOOK_ID") 
  PCTFREE 10 INITRANS 

  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table AVAILABLITY
--------------------------------------------------------
  ALTER TABLE "TABLE_1"."AVAILABLITY" ADD CONSTRAINT "AVAILABLITY_PK" PRIMARY KEY ("BOOK_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TABLE_1"."AVAILABLITY" MODIFY ("STATUS" NOT NULL ENABLE);
  ALTER TABLE "TABLE_1"."AVAILABLITY" MODIFY ("BOOK_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table AVAILABLITY
------------------------------------
-- To-Do List View
SELECT dropIfExists('VIEW', 'todo', 'api');
CREATE OR REPLACE VIEW api.todo AS
  SELECT
    todoitem_id AS task_number,
    todoitem_owner_username AS owner,
    todoitem_username AS assigned_to,
    todoitem_name AS task_name,
    incdtpriority_name AS priority,
    incdt_number AS incident,
    ophead_name AS opportunity,
    crmacct_number AS account,
    formatdate(todoitem_due_date) AS date_due,
    formatdate(todoitem_assigned_date) AS date_assigned,
    formatdate(todoitem_start_date) AS date_started,
    formatdate(todoitem_completed_date) AS date_completed,
    CASE
      WHEN todoitem_status = 'P' THEN
        'Pending Input'
      WHEN todoitem_status = 'D' THEN
        'Deferred'
      ELSE
        'Neither'
    END AS status,
    todoitem_active AS active,
    todoitem_description AS description,
    todoitem_notes AS notes
    FROM todoitem
       LEFT OUTER JOIN incdt ON (incdt_id=todoitem_incdt_id)
       LEFT OUTER JOIN ophead ON (ophead_id=todoitem_

       LEFT OUTER JOIN crmacct ON (crmacct_id=todoitem_crmacct_id)
       LEFT OUTER JOIN incdtpriority ON (incdtpriority_id=todoitem_priority_id);
GRANT ALL ON TABLE api.todo TO xtrole;
COMMENT ON VIEW api.todo IS 'To-Do List';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.todo DO INSTEAD
  SELECT createTodoItem(
    NULL,
    NEW.assigned_to,
    COALESCE(NEW.task_name, ''),
    COALESCE(NEW.description, ''),
    getIncidentId(NEW.incident),
    COALESCE(getIncdtCrmAcctId(NEW.incident), getCrmAcctId(NEW.account)),
    getOpHeadId(NEW.opportunity),
    CASE
      WHEN (NEW.date_started > '') THEN
        NEW.date_started::DATE
      ELSE
        NULL
    END,
    CASE
      WHEN (NEW.date_due > '') THEN
        NEW.date_due::DATE
      ELSE
        NULL
    END,
    CASE
      WHEN NEW.status = 'Pending Input' THEN
        'P'
      WHEN NEW.status = 'Deferred' THEN
        'D'
      ELSE
        'N'
    END,
    CASE
      WHEN (NEW.date_assigned > '') THEN
      

      ELSE
        NULL
    END,
    CASE
      WHEN (NEW.date_completed > '') THEN
        NEW.date_completed::DATE
      ELSE
        NULL
    END,
    getIncdtPriorityId(NEW.priority),
    COALESCE(NEW.notes, ''),
    NEW.owner
    );
CREATE OR REPLACE RULE "_UPDATE" AS 
    ON UPDATE TO api.todo DO INSTEAD
  SELECT updateTodoItem(
    OLD.task_number,
    OLD.assigned_to,
    NEW.task_name,
    NEW.description,
    getIncidentId(NEW.incident),
    COALESCE(getIncdtCrmAcctId(NEW.incident), getCrmAcctId(NEW.account)),
    getOpHeadId(NEW.opportunity),
    CASE
      WHEN (NEW.date_started > '') THEN
        NEW.date_started::DATE
      ELSE
        NULL
    END,
    CASE
      WHEN (NEW.date_due > '') THEN
        NEW.date_due::DATE
      ELSE
        NULL
    END,
    CASE
      WHEN NEW.status = 'Pending Input' THEN
        'P'
      WHEN NEW.status = 'Deferred' THEN
        'D'
      WHEN NEW.status = 'Neither' THEN
        'N'
      ELSE
        NULL
    END,
    CASE
      WHEN
DELIMITER $$
DROP TRIGGER IF EXISTS `observation_after_insert`$$
CREATE TRIGGER `observation_after_insert` AFTER INSERT
ON `obs`
FOR EACH ROW
BEGIN
   SET @visit = COALESCE((SELECT ID FROM flat_table2 WHERE patient_id = new.person_id AND DATE(visit_date) = DATE(new.obs_datetime) LIMIT 1), 0);
   SET @encounter_type = COALESCE(( SELECT encounter_type FROM encounter
                            WHERE patient_id = new.person_id
                            AND DATE(encounter_datetime) = DATE(new.obs_datetime)
                            AND encounter_id = new.encounter_id
                            AND voided = 0 AND encounter_type NOT IN (6, 7, 9, 25, 51, 52, 53, 54, 68, 119)), 0);
   IF (@encounter_type = 0 ) THEN
     CALL proc_insert_observations(
        new.person_id,
        DATE(new.obs_datetime),
        new.concept_id,
        new.value_coded,
        new.value_coded_name_id,
        new.value_text,
        new.value_numeric,
        new.value_datetime,
        new.value_modifier

        @visit,
        new.voided,
        new.encounter_id
    );
    SET @current_hiv_program_state = (SELECT current_hiv_program_state FROM flat_table2 WHERE id = @visit LIMIT 1);
    SET @current_state = (SELECT IFNULL(current_state_for_program(new.person_id,1,new.obs_datetime), 'Unknown') AS state);
    IF ISNULL(@current_hiv_program_state) THEN
      SET @patient_program_id = ( SELECT patient_program_id FROM patient_program
                                          WHERE patient_id = new.person_id
                                          AND program_id = 1 LIMIT 1);
      SET @latest_patient_hiv_state = ( SELECT state FROM patient_state
                                        WHERE patient_program_id = @patient_program_id
                                        AND start_date <= DATE(new.obs_datetime)
                                        ORDER BY patient_state_id DESC
                                        LIMIT 1);
      SET @current_hiv_state = ( SELECT c.name FROM progr
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `gameobject_respawn`;
CREATE TABLE `gameobject_respawn` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier',
  `respawnTime` int(10) unsigned NOT NULL DEFAULT '0',
  `instanceId` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Instance Identifier',
  PRIMARY KEY (`guid`,`instanceId`),
  KEY `idx_instance` (`instanceId`) USING BTREE
) ENGINE=InnoDB DEFA
-- Add option conditions for mage trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (63,64,4484,4485,4486,4517,4518,4519,4520,4537,4538,4539,4552,4651,4654,4660,4661,4685,4686,6648,7264,9990,9580,7366,4535);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,63,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,63,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,63,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,64,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,64,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,64,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4484,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4484,1,0,15,128,0,0,0,'','Show go

(15,4484,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4485,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4485,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4485,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4486,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4486,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4486,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4517,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4517,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4517,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4518,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4518,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4518,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4519,0,0,15,128,0,0,0,'','Show gossip option if player is a

(15,4519,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4519,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4520,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4520,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4520,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4537,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4537,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4537,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4538,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4538,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4538,2,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4539,0,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4539,1,0,15,128,0,0,0,'','Show gossip option if player is a mage'),
(15,4539,2,0,15,128,0,0,0,'','Show gossip option if player is a
lf	hf	mean	lf_n	hf_n	lf_p	hf_p	state
c	c	c	c	c	c	c	d
							class
428853.865311	82481.0850034	523147.057595	4.6241661843	0.889361796565	0.838694607218	0.161305392782	game
303949.198343	177245.076467	518082.602582	6.6011782559	3.8494141492	0.631655890883	0.368344109117	game
585684.421025	261577.489562	513733.176404	7.5010972609	3.35012870418	0.691267261878	0.308732738122	game
249973.896441	167728.253972	507954.852922	5.62229815714	3.77246691208	0.598450106599	0.401549893401	game
368351.29933	81467.2431044	490978.752004	8.08938103519	1.78910614013	0.818888650825	0.181111349175	read
871321.814489	185764.170823	476273.016575	5.17265092431	1.10279944096	0.824267681717	0.175732318283	read
660133.377704	57997.3800177	465305.800694	3.03674449142	0.266799453314	0.919238412512	0.0807615874882	read
23035262.3609	2854475.3914	541829.060792	4.96625615371	0.615406751442	0.889744909017	0.110255090983	read
613590.658474	91290.3193268	602447.945063	3.71473985498	0.552680818871	0.870488320437	0.12951167

2185008.70285	191301.989591	623016.56887	3.04948206014	0.266988403555	0.919496221517	0.0805037784832	read
1474198.70548	146661.22655	213220.10585	3.3553551677	0.33380880242	0.909516409375	0.090483590625	read
660470.009776	203987.760484	241098.615982	5.73638295415	1.7716957542	0.764028079217	0.235971920783	read
361433.6607	58095.1001102	247949.859388	4.23200431919	0.680231924481	0.861522962101	0.138477037899	read
228366.397106	38905.2478404	250177.165809	2.76058168625	0.470301743375	0.85443555807	0.14556444193	read
239456.480709	73226.8069859	250113.913305	3.09009119512	0.94496298803	0.765811573987	0.234188426013	read
71214.1125821	27350.1983847	249989.602392	4.82525235993	1.85316652157	0.722514182705	0.277485817295	read
433248.965551	73711.4989163	248801.807412	4.7889134652	0.81476937689	0.85460109006	0.14539890994	game
216885.855609	68214.7345083	247483.565726	4.62273806117	1.45393920991	0.760734502583	0.239265497417	game
200098.924813	43096.7291368	246903.045058	6.40407334017	1.3792

71277.9273343	35720.2781515	246464.545934	5.03006749374	2.52077209197	0.666160025868	0.333839974132	game
55974.1487248	22131.7119957	246403.500588	3.4510214052	1.36450510764	0.716644669279	0.283355330721	game
122385.142515	67799.2675318	245951.197561	5.93146886977	3.28593190722	0.643507753789	0.356492246211	game
358069.692239	11022.7951267	62681.2105419	3.33476757497	0.102657277538	0.970135411844	0.0298645881562	read
330763.553359	61776.405575	71071.931982	4.86945990342	0.909464561225	0.842623905748	0.157376094252	read
1003432.33715	292798.217337	73041.2994625	5.93473351717	1.73173549414	0.774115633731	0.225884366269	read
566733.421166	201254.716179	73895.596941	6.682142321	2.37291927043	0.737945540572	0.262054459428	read
75462.8228066	11805.4062649	75759.6377052	4.38355549003	0.685763552432	0.864722747437	0.135277252563	read
691537.671822	149366.218983	76722.8388989	6.17481250383	1.33370665722	0.822374208734	0.177625791266	read
618735.365848	391007.40931	78243.8237244	7.15246226553	4


CREATE VIEW [dbo].[V_PO_DETAILS]
AS
SELECT     PO_NUM, QTY, MAKE, MODEL, VIN_ENGINE, BASE_PRICE, SELLING_PRICE, BASE_AMT, SELLING_AMT, SELLING_AMT - BASE_AMT AS PROFIT
FROM         dbo.TCCG_PO_DTL
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[16] 4[45] 2[10] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 

         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
 

      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "TCCG_PO_DTL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 210
               Right = 194
            End
            DisplayFlags = 280
            TopColumn = 1
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2790
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
   
--alter table imagetable alter column uploadtime type timestamp with time zone;
insert into galleryTable values ('Nature', Null, 'readGalleryCapability', 'uploadImageCapability', 'administerGalleryCapability');
insert into galleryTable values ('Donkey shit', Null, 'forbidden', 'forbidden', 'administerGalleryCapability');
insert into galleryTable values ('Dragonflies', 'Nature', 'readGalleryCapability', 'uploadImageCapability', 'administerGalleryCapability');
insert into galleryTable values ('Black Darter', 'Dragonflies', 'readGalleryCapability', 'uploadImageCapability', 'administerGalleryCapability');
insert into galleryTable values ('Common Darter', 'Dragonflies', 'readGalleryCapability', 'uploadImageCapability', 'administerGalleryCapability');
insert into galleryTable values ('Ruddy Darter', 'Dragonflies', 'readGalleryCapability', 'uploadImageCapability', 'administerGalleryCapability');
insert into galleryTable values ('Thailand dragonflies', 'Dragonflies', 'readGalleryCapability', '
IF OBJECT_ID('dbo.wsp_newAccountFlag') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newAccountFlag
    IF OBJECT_ID('dbo.wsp_newAccountFlag') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newAccountFlag >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newAccountFlag >>>'
END
go
  /******************************************************************************
**
** CREATION:
**   Author:  Slobodan Kandic
**   Date:  Aug 12, 2003
**   Description:  Inserts row into AccountFlag table. Note that there can only be one non-reviewed flag per account.
**
** REVISION(S):
**   Author: Mike Stairs
**   Date:  Oct 2003
**   Description: added dateModified
**
******************************************************************************/
CREATE PROCEDURE  wsp_newAccountFlag
 @userId NUMERIC(12,0)
,@reasonContentId SMALLINT
AS
DECLARE  @dateCreated       DATETIME,
         @return 	     INT  
        
EXEC @return = dbo.wsp_GetDateGMT @dateCreated OUTPUT
     
IF @return
# Tests for PERFORMANCE_SCHEMA
#    Show existing objects and information about their structure
show databases like 'performance_schema';
show create database performance_schema;
use performance_schema;
show tables;
show create table accounts;
show create table cond_instances;
show create table events_stages_current;
show create table events_stages_history;
show create table events_stages_history_long;
show create table events_stages_summary_by_host_by_event_name;
show create table events_stages_summary_by_thread_by_event_name;
show create table events_stages_summary_by_user_by_event_name;
show create table events_stages_summary_by_account_by_event_name;
show create table events_stages_summary_global_by_event_name;
show create table events_statements_current;
show create table events_statements_history;
show create table events_statements_history_long;
show create table events_statements_summary_by_digest;
show create table events_statements_summary_by_host_by_event_name;
show create t

show create table events_statements_summary_by_user_by_event_name;
show create table events_statements_summary_by_account_by_event_name;
show create table events_statements_summary_global_by_event_name;
show create table events_waits_current;
show create table events_waits_history;
show create table events_waits_history_long;
show create table events_waits_summary_by_host_by_event_name;
show create table events_waits_summary_by_instance;
show create table events_waits_summary_by_thread_by_event_name;
show create table events_waits_summary_by_user_by_event_name;
show create table events_waits_summary_by_account_by_event_name;
show create table events_waits_summary_global_by_event_name;
show create table memory_summary_by_host_by_event_name;
show create table memory_summary_by_thread_by_event_name;
show create table memory_summary_by_user_by_event_name;
show create table memory_summary_by_account_by_event_name;
show create table memory_summary_global_by_event_name;
show create table fil
﻿USE [master]
GO
/****** Object:  Database [Multek_SZ_New]    Script Date: 11/06/2014 15:47:39 ******/
CREATE DATABASE [Multek_SZ_New] ON  PRIMARY 
( NAME = N'Multek_SZ_New', FILENAME = N'D:\Multek_Database\Multek_SZ_New.mdf' , SIZE = 5233728KB , MAXSIZE = UNLIMITED, FILEGROWTH = 102400KB )
 LOG ON 
( NAME = N'Multek_SZ_New_log', FILENAME = N'D:\Multek_Database\Multek_SZ_New_log.LDF' , SIZE = 12016128KB , MAXSIZE = UNLIMITED, FILEGROWTH = 10%)
GO
ALTER DATABASE [Multek_SZ_New] SET COMPATIBILITY_LEVEL = 80
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [Multek_SZ_New].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [Multek_SZ_New] SET ANSI_NULL_DEFAULT OFF
GO
ALTER DATABASE [Multek_SZ_New] SET ANSI_NULLS OFF
GO
ALTER DATABASE [Multek_SZ_New] SET ANSI_PADDING OFF
GO
ALTER DATABASE [Multek_SZ_New] SET ANSI_WARNINGS OFF
GO
ALTER DATABASE [Multek_SZ_New] SET ARITHABORT OFF
GO
ALTER DATABASE [Multek_SZ_New] SET AUTO_CLOSE OFF
GO
ALTER DATABASE [Mu

GO
ALTER DATABASE [Multek_SZ_New] SET AUTO_SHRINK OFF
GO
ALTER DATABASE [Multek_SZ_New] SET AUTO_UPDATE_STATISTICS ON
GO
ALTER DATABASE [Multek_SZ_New] SET CURSOR_CLOSE_ON_COMMIT OFF
GO
ALTER DATABASE [Multek_SZ_New] SET CURSOR_DEFAULT  GLOBAL
GO
ALTER DATABASE [Multek_SZ_New] SET CONCAT_NULL_YIELDS_NULL OFF
GO
ALTER DATABASE [Multek_SZ_New] SET NUMERIC_ROUNDABORT OFF
GO
ALTER DATABASE [Multek_SZ_New] SET QUOTED_IDENTIFIER OFF
GO
ALTER DATABASE [Multek_SZ_New] SET RECURSIVE_TRIGGERS OFF
GO
ALTER DATABASE [Multek_SZ_New] SET  DISABLE_BROKER
GO
ALTER DATABASE [Multek_SZ_New] SET AUTO_UPDATE_STATISTICS_ASYNC OFF
GO
ALTER DATABASE [Multek_SZ_New] SET DATE_CORRELATION_OPTIMIZATION OFF
GO
ALTER DATABASE [Multek_SZ_New] SET TRUSTWORTHY OFF
GO
ALTER DATABASE [Multek_SZ_New] SET ALLOW_SNAPSHOT_ISOLATION OFF
GO
ALTER DATABASE [Multek_SZ_New] SET PARAMETERIZATION SIMPLE
GO
ALTER DATABASE [Multek_SZ_New] SET READ_COMMITTED_SNAPSHOT OFF
GO
ALTER DATABASE [Multek_SZ_New] SET HONOR_BROKER_PRIORITY O
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `gm_surveys`;
CREATE TABLE `gm_surveys` (
  `surveyId` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `guid` int(10) unsigned NOT NULL DEFAULT '0',
  `mainSurvey` int(10) unsigned NOT NULL DEFAULT '0',
  `overallComment` longtext NOT NULL,
  `createTime` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`surveyId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Player System';
LOCK 
--------------------------------------------------------
--  File created - Monday-February-29-2016       
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table TRANSPORT_MEDIUM
--------------------------------------------------------
  CREATE TABLE "PRIYA"."TRANSPORT_MEDIUM" 
   (	"TRANSPORT_ID" NUMBER, 
	"CODE" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index TRANSPORT_MEDIUM_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "PRIYA"."TRANSPORT_MEDIUM_PK" ON "PRIYA"."TRANSPORT_MEDIUM" ("TRANSPORT
CREATE TABLE [COM_Customer] (
		[CustomerID]                            [int] IDENTITY(1, 1) NOT NULL,
		[CustomerFirstName]                     [nvarchar](200) NOT NULL,
		[CustomerLastName]                      [nvarchar](200) NOT NULL,
		[CustomerEmail]                         [nvarchar](200) NULL,
		[CustomerPhone]                         [nvarchar](50) NULL,
		[CustomerFax]                           [nvarchar](50) NULL,
		[CustomerCompany]                       [nvarchar](200) NULL,
		[CustomerUserID]                        [int] NULL,
		[CustomerPreferredCurrencyID]           [int] NULL,
		[CustomerPreferredShippingOptionID]     [int] NULL,
		[CustomerCountryID]                     [int] NULL,
		[CustomerEnabled]                       [bit] NOT NULL,
		[CustomerPrefferedPaymentOptionID]      [int] NULL,
		[CustomerStateID]                       [int] NULL,
		[CustomerGUID]                          [uniqueidentifier] NOT NULL,
		[CustomerTaxRegistrationID]             [nvarchar](5

		[CustomerOrganizationID]                [nvarchar](50) NULL,
		[CustomerDiscountLevelID]               [int] NULL,
		[CustomerLastModified]                  [datetime] NOT NULL,
		[CustomerSiteID]                        [int] NULL,
		[CustomerCreated]                       [datetime] NULL
) 
ALTER TABLE [COM_Customer]
	ADD
	CONSTRAINT [PK_COM_Customer]
	PRIMARY KEY
	NONCLUSTERED
	([CustomerID])
	WITH FILLFACTOR=80
ALTER TABLE [COM_Customer]
	ADD
	CONSTRAINT [DEFAULT_COM_Customer_CustomerGUID]
	DEFAULT ('00000000-0000-0000-0000-000000000000') FOR [CustomerGUID]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerCompany]
	ON [COM_Customer] ([CustomerCompany])
	WITH ( FILLFACTOR = 80)
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerCountryID]
	ON [COM_Customer] ([CustomerCountryID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerDiscountLevelID]
	ON [COM_Customer] ([CustomerDiscountLevelID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerEmail]
	ON [COM_Customer] ([CustomerE

	WITH ( FILLFACTOR = 80)
CREATE CLUSTERED INDEX [IX_COM_Customer_CustomerLastName_CustomerFirstName_CustomerEnabled]
	ON [COM_Customer] ([CustomerLastName], [CustomerFirstName], [CustomerEnabled])
	WITH ( FILLFACTOR = 80)
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerPreferredCurrencyID]
	ON [COM_Customer] ([CustomerPreferredCurrencyID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerPreferredShippingOptionID]
	ON [COM_Customer] ([CustomerPreferredShippingOptionID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerPrefferedPaymentOptionID]
	ON [COM_Customer] ([CustomerPrefferedPaymentOptionID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerStateID]
	ON [COM_Customer] ([CustomerStateID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerUserID]
	ON [COM_Customer] ([CustomerUserID])
ALTER TABLE [COM_Customer]
	WITH CHECK
	ADD CONSTRAINT [FK_COM_Customer_CustomerCountryID_CMS_Country]
	FOREIGN KEY ([CustomerCountryID]) REFERENCES [CMS_Country] ([CountryID])
ALTER TABLE [
--liquibase formatted sql
--This is for the sparrow_dss schema
--logicalFilePath: changeLog5AlterTables.sql
--changeset lmurphy:altertablesa
alter table model_reach add partition sparrow_model_37 VALUES (37)
--rollback alter table model_reach drop partition sparrow_model_37;
--changeset lmurphy:altertablesb
alter table model_reach add partition sparrow_model_38 VALUES (38)
--rollback alter table model_reach drop partition sparrow_model_38;
--changeset lmurphy:altertablesc
alter table model_reach_attrib add partition sparrow_model_37 VALUES (37)
--rollback alter table model_reach_attrib drop partition sparrow_model_37;
--changeset lmurphy:altertablesd
alter table model_reach_attrib add partition sparrow_model_38 VALUES (38)
--rollback alter table model_reach_attrib drop partition sparrow_model_38;
--changeset lmurphy:altertablesi
alter table reach_coef add partition sparrow_model_37 VALUES (37)
--rollback alter table reach_coef drop partition sparrow_model_37;
--changeset lmurphy:altert

alter table reach_coef add partition sparrow_model_38 VALUES (38)
--rollback alter table reach_coef drop partition sparrow_model_38;
--changeset lmurphy:altertablesk
alter table source_reach_coef add partition sparrow_model_37 VALUES (37)
--rollback alter table source_reach_coef drop partition sparrow_model_37;
--changeset lmurphy:altertablesl
alter table source_reach_coef add partition sparrow_model_38 VALUES (38)
--rollback alter table source_reach_coef drop partition sparrow_model_38;
--changeset lmurphy:altertablesm
alter table source_value add partition sparrow_model_37 VALUES (37)
--rollback alter table source_value drop partition sparrow_model_37;
--changeset lmurphy:altertablesn
alter table source_value add partition sparrow_model_38 VALUES (38)
--rollback alter table source_value drop partition sparrow_model_38;
--changeset lmurphy:altertableso
alter table model_calib_sites add partition sparrow_model_37 VALUES (37)
--rollback alter table model_calib_sites drop partition spar
  CREATE TABLE "TESTUSERDB"."SHOPPINGUSER" 
   (	"USERID" NUMBER(*,0), 
	"USERNAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"PWD" VARCHAR2(50 BYTE), 
	 CONSTRAINT "SHOPPINGUSERS_PK" PRIMARY KEY ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
  
  
  CREATE TABLE "TESTUSERDB"."PRODUCTDETAIL" 
   (	"PRODUCTNAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(1000 BYTE), 
	"PRICE" VARCHAR2(20 BYTE), 
	"PRODUCTID" VARCHAR2(20 BYTE) NOT 

	 CONSTRAINT "PRODUCTDETAIL_PK" PRIMARY KEY ("PRODUCTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
  
  
  
   CREATE TABLE "TESTUSERDB"."ADMINPRODUCT" 
   (	"USERNAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"TOTALPRICE" VARCHAR2(20 BYTE), 
	"ROW_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "ADMINPRODUCT_PK" PRIMARY KEY ("ROW_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXT
﻿CREATE TABLE [cloudcoremodel].[FlowModel] (
    [FlowModelId]         INT              IDENTITY (1, 1) NOT NULL,
    [FlowGuid]            UNIQUEIDENTIFIER NOT NULL,
    [ProcessRevisionId]   INT              NOT NULL,
    [FromActivityModelId] INT              NOT NULL,
    [Outcome]             VARCHAR (50)     DEFAULT ('-') NOT NULL,
    [ToActivityModelId]   INT              NOT NULL,
    [OptimalFlow]         BIT              DEFAULT ((0)) NOT NULL,
    [NegativeFlow]        BIT              DEFAULT ((0)) NOT NULL,
    [Storyline]           VARCHAR (200)    NOT NULL,
    CONSTRAINT [PK_FlowModel] PRIMARY KEY CLUSTERED ([FlowModelId] ASC),
    CONSTRAINT [FK_FlowModel_ActivityModel_From] FOREIGN KEY ([FromActivityModelId]) REFERENCES [cloudcoremodel].[ActivityModel] ([ActivityModelId]),
    CONSTRAINT [FK_FlowModel_ActivityModel_To] FOREIGN KEY ([ToActivityModelId]) REFERENCES [cloudcoremodel].[ActivityModel] ([ActivityModelId]),
    CONSTRAINT [FK_FlowModel_ProcessModel] FOREIGN 
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_queststatus_rewarded`;
CREATE TABLE `character_queststatus_rewarded` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier',
  `quest` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Quest Identifier',
  PRIMARY KEY (`guid`,`quest`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Player System';
LOCK TABLES `character_queststatus_rewarded` WRITE;
-- Создание базы данных
CREATE DATABASE IF NOT EXISTS module7;
USE module7;
START TRANSACTION;
SELECT id, name FROM teachers;
INSERT INTO teachers (id, name) VALUES (17, 'Новый препад 17');
DELETE FROM teachers WHERE id = 11;
ROLLBACK;
COMMIT;
SET AUTOCOMMIT = 0;
INSERT INTO teachers (id, name) VALUES (18, 'Новый препад 18');
COMMIT;
SET AUTOCOMMIT = 1;
SET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SET GLOBAL TRANSACTION ISOLATION LEVEL READ COMMITTED;
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
SHOW GLOBAL VARIABLES LIKE "%iso%";
SHOW SESSION VARIABLES LIKE "%iso%";
--или
SELECT  @@tx_isolation; -- смотрим сессионный уровень транзакции
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;
SET GLOBAL TRANSACTION ISOLATION LEVEL REPEATABLE READ;
SET GLOBAL TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SET SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE;
START TRANSACTION;
SELECT * FROM teachers;
INSERT INTO
--------------------------------------------------------
--  File creato - giovedì-gennaio-15-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table CC_RILEVAZIONI
--------------------------------------------------------
  CREATE TABLE "SCOTT"."CC_RILEVAZIONI" 
   (	"RIL_ID" NUMBER(19,0), 
	"RIL_DATA_INS" TIMESTAMP (6), 
	"RIL_RIC_ANNO" NUMBER(10,0), 
	"RIL_RIC_CARTELLA" NUMBER(10,0), 
	"RIL_STR_STR" NUMBER(10,0), 
	"RIL_ASS_IPCA" NUMBER(10,0), 
	"RIL_DATA" TIMESTAMP (6), 
	"RIL_NOTE" VARCHAR2(500 CHAR), 
	"RIL_TIPO" VARCHAR2(2 CHAR), 
	"RIL_UTE_INS" VARCHAR2(12 CHAR), 
	"RIL_VAL" VARCHAR2(30 CHAR), 
	"RIL_REPARTO_ASS" VARCHAR2(20 BYTE), 
	"DEG_ID" NUMBER(25,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_C

  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SYS_C007263
--------------------------------------------------------
  CREATE UNIQUE INDEX "SCOTT"."SYS_C007263" ON "SCOTT"."CC_RILEVAZIONI" ("RIL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table CC_RILEVAZIONI
--------------------------------------------------------
  ALTER TABLE "SCOTT"."CC_RILEVAZIONI" ADD PRIMARY KEY ("RIL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLES
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
--
-- Database: `eventslab`
--
CREATE TABLE IF NOT EXISTS `contacts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `friend_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;
CREATE TABLE IF NOT EXISTS `event` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `venue` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `address` text COLLATE utf8_unicode_ci NOT NULL,
  `event_hour` int(11) NOT NULL,
  `event_min` int(11) NOT NULL,
  `period` varchar(3) COLLATE utf8_unicode_ci NOT NULL,
  `description` text COLLATE utf8_unicode_ci NOT NULL,
  `ticketCount` int(11) NOT NULL,
  `ticketCategory` int(11) NOT NULL,
  `publish` int(11) NOT NULL,
  `ticketExpiryDate` date NOT NULL,
  `date` date NOT NULL,
  `organizerId` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8

CREATE TABLE IF NOT EXISTS `feedback` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `participant_id` int(11) NOT NULL,
  `feedback` text COLLATE utf8_unicode_ci NOT NULL,
  `date` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;
CREATE TABLE IF NOT EXISTS `invites` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contact_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;
CREATE TABLE IF NOT EXISTS `participants` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `event_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=236 ;
CREATE TABLE IF NOT EXISTS `rating` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `participant_id` int(11) NOT NULL,
  `rating` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=u

CREATE TABLE IF NOT EXISTS `tickets` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `participant_id` int(11) NOT NULL,
  `number` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=1 ;
CREATE TABLE IF NOT EXISTS `user_info` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `email` varchar(100) COLLATE utf8_unicode_ci NOT NULL,
  `pass` text COLLATE utf8_unicode_ci NOT NULL,
  `address` text COLLATE utf8_unicode_ci,
  `portrait` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `description` text COLLATE utf8_unicode_ci,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=9 ;
--
-- Dumping 
--
INSERT INTO `event` (`id`, `title`, `venue`, `address`, `event_hour`, `event_min`, `period`, `description`, `ticketCount`, `ticketCategory`, `publish`, `ticketExpiryDate`, `date`, `organizerId`) VALUES
(25, 'This is a new event', 'This
--liquibase formatted sql
--This is for the sparrow_dss schema
--logicalFilePath: changeLog2Data.sql
-- changeset drsteini:data2a
insert into model_reach select * from model_reach_old;
--rollback delete from model_reach;
-- changeset drsteini:data2b
insert into model_calib_sites
select mcso.model_reach_id, mcso.station_name, mcso.actual, mcso.site_geom, mcso.latitude, mcso.longitude, mcso.predict, mcso.station_id, mr.sparrow_model_id
  from model_calib_sites_old mcso
       join model_reach mr
         on mcso.model_reach_id = mr.model_reach_id;
--rollback delete from model_calib_sites;
-- changeset drsteini:data2c
insert into model_reach_attrib
select mrao.model_reach_id, mrao.reach_name, mrao.open_water_name, mrao.meanq, mrao.meanv, mrao.catch_area, mrao.cum_catch_area, mrao.reach_length, mrao.huc2,
       mrao.huc4, mrao.huc6, mrao.huc8, mrao.head_reach, mrao.shore_reach, mrao.term_trans, mrao.term_estuary, mrao.term_nonconnect, mrao.edaname, mrao.edacode,
       mrao.huc2_name, mra

  from model_reach_attrib_old mrao
       join model_reach mr
         on mrao.model_reach_id = mr.model_reach_id;
--rollback delete from model_reach_attrib;
-- changeset drsteini:data2d
insert into source_value
select svo.source_value_id, svo.value, svo.source_id, svo.model_reach_id, svo.mean_pload, svo.se_pload, svo.mean_pload_inc, svo.se_pload_inc, mr.sparrow_model_id
  from source_value_old svo
       join model_reach mr
         on svo.model_reach_id = mr.model_reach_id;
--rollback delete from source_value;
-- changeset drsteini:data2e
insert into source_reach_coef
select srco.source_reach_coef_id, srco.iteration, srco.value, srco.source_id, srco.model_reach_id, mr.sparrow_model_id
  from source_reach_coef_old srco
       join model_reach mr
         on srco.model_reach_id = mr.model_reach_id;
--rollback delete from source_reach_coef;
-- changeset drsteini:data2f
insert into reach_coef
select rco.reach_coef_id, rco.iteration, rco.inc_delivery, rco.total_delivery, rco.boot_error, 
CREATE TABLE task_deltas (
    id INT NOT NULL PRIMARY KEY DEFAULT (nextval('deltas')),
    change_id INTEGER NOT NULL,
    task_id INTEGER NOT NULL,
    new INTEGER,
    task_status_id INTEGER,
    title VARCHAR(1024),
    UNIQUE(change_id,task_id), -- one change per change
    FOREIGN KEY(change_id) REFERENCES changes(id) ON DELETE CASCADE,
    FOREIGN KEY(task_id) REFERENCES tasks(id) ON DELETE CASCADE,
    FOREIGN KEY(task_status_id) REFERENCES task_status(id) ON DELETE CASCADE
);
CREATE TRIGGER
    task_deltas_ai_2
AFTER INSERT ON
    task_deltas
FOR EACH ROW WHEN
    NEW.task_status_id IS NOT NULL
BEGIN
    -- This catches the current change project for the task
    INSERT INTO
        project_related_changes(
            project_id,
            real_project_id,
            change_id
        )
    SELECT
        ts.project_id,
        ts.project_id,
        NEW.change_id
    FROM
        task_status ts
    WHERE
        ts.id = NEW.task_status_id
    ;
END;
CREATE TRIGGER
    tas

AFTER INSERT ON
    task_deltas
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_id,
        NEW.task_id,
        NEW.task_status_id,
        NEW.title
    );
    UPDATE
        changes
    SET
        ucount = ucount + 1
    WHERE
        id = NEW.change_id
    ;
    UPDATE
        topics
    SET
        last_change_id = NEW.change_id
    WHERE
        id = NEW.task_id
    ;
    UPDATE
        changes_pending
    SET
        terms = terms || (
            SELECT
                '-' || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    '  _: task' || x'0A'
                ELSE
                    '  _: task_delta' || x'0A'
                END
                || '  task_status_uuid: '
                || COALESCE(status.uuid, '~') || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    ''
                ELSE
                    '  task_uuid: ' || topics.uuid || x'0A'
         

                || CASE WHEN
                    instr(NEW.title, ' ')
                THEN
                    '  title: ''' || NEW.title || '''' || x'0A'
                ELSE
                    '  title: ' 
                    || COALESCE(NEW.title,'~') || x'0A'
                END
                || CASE WHEN
                    NEW.new
                THEN
                    '  topic_uuid: ' || topics.uuid || x'0A'
                ELSE
                    ''
                END
            FROM
                topics
            LEFT JOIN
                topics as status
            ON
                status.id = NEW.task_status_id
            WHERE
                topics.id = NEW.task_id
        )
    WHERE
        change_id = NEW.change_id
    ;
    -- This catches the current project for the task
    INSERT INTO
        project_related_changes(
            project_id,
            real_project_id,
            change_id
        )
    SELECT
        ts.project_id,
        ts.pro
COL group_number        FORMAT 9999     HEADING 'ASM|Disk|Grp#' 
COL group_name          FORMAT A08      HEADING 'Disk|Group|Name' 
COL disk_number         FORMAT 9999     HEADING 'ASM|Disk|#'
COL total_mb            FORMAT 999999   HEADING 'Total|Disk|Space|(MB)'
COL free_mb             FORMAT 999999   HEADING 'Free|Disk|Space|(MB)'
COL mount_date          FORMAT A11      HEADING 'Mounted On' WRAP
COL repair_timer        FORMAT 99999999 HEADING 'Repair|Timer'
COL reads               FORMAT 99999999 HEADING 'Disk|Reads'
COL read_time           FORMAT 999999   HEADING 'Read|Time'
COL read_errs           FORMAT 999999   HEADING 'Read|Errors'
COL mb_read             FORMAT 999999 HEADING 'Bytes|Read|(MB)'
COL writes              FORMAT 99999999 HEADING 'Disk|Writes'
COL write_errs          FORMAT 999999   HEADING 'Write|Errors'
COL write_time          FORMAT 999999   HEADING 'Write|Time'
COL mb_wrtn             FORMAT 999999 HEADING 'Bytes|Written|(MB)'
SELECT
     ADG.name group_name
   

    ,AD.total_mb
    ,AD.free_mb
    ,AD.repair_timer
    ,AD.reads
    ,AD.read_errs
    ,AD.read_time
    ,(AD.bytes_read / (1024*1024)) mb_read
    ,AD.writes
    ,AD.write_errs
    ,AD.write_time
    ,(AD.bytes_written / (1024*1024)) mb_wrtn
  FROM 
     v$asm_disk_stat AD
    ,v$asm_diskgroup ADG
 WHERE AD.group_number = ADG.group_number
 ORDER BY ADG.name, AD.disk_number
-----
-- View:    V$ASM_DISK_IOSTAT
-- Purpose: Describes additional I/O statistics for any ASM disk that's currently
--          mounted within an ASM disk group by the ASM instance
-----
COL instname          	FORMAT A08      HEADING 'Inst|Name' 
COL dbname				FORMAT A08		HEADING 'DB Name'
COL group_name          FORMAT A08      HEADING 'Disk|Group|Name' 
COL disk_number         FORMAT 9999     HEADING 'ASM|Disk|#'
COL reads               FORMAT 99999999 HEADING 'Disk|Reads'
COL read_time           FORMAT 999999   HEADING 'Read|Time|(s)'
COL read_errs           FORMAT 999999   HEADING 'Read|Errors'
COL mb_read
# Tests for the performance schema
# =======================================
# HELPER include/connection_load.inc
# =======================================
call dump_all();
connect (con1a, localhost, user1, , );
select "user1 in con1a" as status;
call dump_all();
connect (con1b, localhost, user1, , );
select "user1 in con1b" as status;
call dump_all();
connect (con1c, localhost, user1, , );
select "user1 in con1c" as status;
call dump_all();
connect (con2a, localhost, user2, , );
select "user2 in con2a" as status;
call dump_all();
connect (con2b, localhost, user2, , );
select "user2 in con2b" as status;
call dump_all();
connect (con2c, localhost, user2, , );
select "user2 in con2c" as status;
call dump_all();
connect (con3a, localhost, user3, , );
select "user3 in con3a" as status;
call dump_all();
connect (con3b, localhost, user3, , );
select "user3 in con3b" as status;
call dump_all();
connect (con3c, localhost, user3, , );
select "user3 in con3c" as status;
call dump_all();
--connec

--disconnect con1a
# Wait for the disconnect to complete
let $wait_condition=
  select count(*) = 8 from performance_schema.threads
  where `TYPE`='FOREGROUND' and PROCESSLIST_USER like 'user%';
--source include/wait_condition.inc
select "con1a disconnected" as status;
call dump_all();
--disconnect con2a
# Wait for the disconnect to complete
let $wait_condition=
  select count(*) = 7 from performance_schema.threads
  where `TYPE`='FOREGROUND' and PROCESSLIST_USER like 'user%';
--source include/wait_condition.inc
select "con2a disconnected" as status;
call dump_all();
--disconnect con3a
# Wait for the disconnect to complete
let $wait_condition=
  select count(*) = 6 from performance_schema.threads
  where `TYPE`='FOREGROUND' and PROCESSLIST_USER like 'user%';
--source include/wait_condition.inc
select "con3a disconnected" as status;
call dump_all();
truncate table performance_schema.accounts;
call dump_all();
truncate table performance_schema.users;
call dump_all();
truncate table perf

call dump_all();
connect (con4a, localhost, user4, , );
select "user4 in con4a" as status;
call dump_all();
connect (con4b, localhost, user4, , );
select "user4 in con4b" as status;
call dump_all();
connect (con4c, localhost, user4, , );
select "user4 in con4c" as status;
call dump_all();
--connection default
--disconnect con1b
# Wait for the disconnect to complete
let $wait_condition=
  select count(*) = 8 from performance_schema.threads
  where `TYPE`='FOREGROUND' and PROCESSLIST_USER like 'user%';
--source include/wait_condition.inc
select "con1b disconnected" as status;
call dump_all();
--disconnect con2b
# Wait for the disconnect to complete
let $wait_condition=
  select count(*) = 7 from performance_schema.threads
  where `TYPE`='FOREGROUND' and PROCESSLIST_USER like 'user%';
--source include/wait_condition.inc
select "con2b disconnected" as status;
call dump_all();
--disconnect con3b
# Wait for the disconnect to complete
let $wait_condition=
  select count(*) = 6 from performan
SELECT
	CUSTOMER.CUSTOMER_ID AS CUSTOMER_ID,
	CUSTOMER.CUSTOMER_NAME AS CUSTOMER_NAME
FROM
	CUSTOMER,
	BURI_PATH_DATA
/*BEGIN*/
WHERE
	/*IF dto.customerId != null*/ CUSTOMER_ID = /*dto.customerId*/0/*END*/
	/*IF dto.customerId_not != null*/AND CUSTOMER_ID != /*dto.customerId_not*/0/*END*/
	/*IF dto.customerId_large != null*/AND  /*dto.customerId_large*/0 < CUSTOMER_ID/*END*/
	/*IF dto.customerId_moreLarge != null*/AND  /*dto.customerId_moreLarge*/0 <= CUSTOMER_ID/*END*/
	/*IF dto.customerId_from != null*/AND  /*dto.customerId_from*/0 <= customerId/*END*/
	/*IF dto.customerId_to != null*/AND CUSTOMER_ID <= /*dto.customerId_to*/0/*END*/
	/*IF dto.customerId_moreSmall != null*/AND CUSTOMER_ID <= /*dto.customerId_moreSmall*/0/*END*/
	/*IF dto.customerId_small != null*/AND CUSTOMER_ID < /*dto.customerId_small*/0/*END*/
	/*IF dto.customerId_isNull != null*/AND CUSTOMER_ID IS NULL/*END*/
	/*IF dto.customerId_isNotNull != null*/AND CUSTOMER_ID IS NOT NULL/*END*/
	/*IF dto.customerId_in != null

	/*IF dto.customerName_matchFull != null*/AND CUSTOMER_NAME LIKE/*dto.customerName_matchFull*/'%TestData%'/*END*/
	/*IF dto.customerName_matchFront != null*/AND CUSTOMER_NAME LIKE/*dto.customerName_matchFront*/'TestData%'/*END*/
	/*IF dto.customerName_matchBack != null*/AND CUSTOMER_NAME LIKE/*dto.customerName_matchBack*/'%TestData'/*END*/
	/*IF dto.customerName != null*/AND CUSTOMER_NAME = /*dto.customerName*/'TestData'/*END*/
	/*IF dto.customerName_not != null*/AND CUSTOMER_NAME != /*dto.customerName_not*/'TestData'/*END*/
	/*IF dto.customerName_large != null*/AND  /*dto.customerName_large*/'TestData' < CUSTOMER_NAME/*END*/
	/*IF dto.customerName_moreLarge != null*/AND  /*dto.customerName_moreLarge*/'TestData' <= CUSTOMER_NAME/*END*/
	/*IF dto.customerName_from != null*/AND  /*dto.customerName_from*/'TestData' <= CUSTOMER_NAME/*END*/
	/*IF dto.customerName_to != null*/AND CUSTOMER_NAME <= /*dto.customerName_to*/'TestData'/*END*/
	/*IF dto.customerName_moreSmall != null*/AND CUSTOMER
select 
trans_nav.Externe_BelegNr
,trans_fiege.AuftragsNr
,trans_fiege.Zahlungsmethode
,trans_fiege.LänderCode
,trans_fiege.Name
,trans_fiege.PLZ
,trans_nav.Betrugsfall
,trans_nav.Warteliste
,trans_nav.Webshop_Auftrag
,trans_nav.Untergrenze
,trans_nav.Obergrenze
--,cast(trans_nav.Webshop_Auftrag as date) as Datum
--,datename(mm,trans_nav.Webshop_Auftrag) as Monat
,trans_nav.Verkaufsbeleg_erstellt
,trans_fiege.Übergabe_Fiege
,trans_fiege.CutOff_Übertragen_am
,rückmeldung_fiege.Rückmeldung_Fiege as Rückmedung_Fiege
,DHL_Kunde.DHL_Eingang
,DHL_Kunde.Auftrag_Kunde
,DHL_Kunde.Geliefert
,cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60 Laufzeit_WIN_Stunden
,case when cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60<'1' then 'bis_1_Stunde'
      when (cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60>='1' and cast(datediff(MINUTE,trans_nav.Webshop_Auftrag

	  when (cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60>='2' and cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60<'3') then 'bis_3_Stunden'
	  when (cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60>='3' and cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60<'4') then 'bis_4_Stunden'
	  when (cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60>='4' and cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60<'5') then 'bis_5_Stunden'
	  when (cast(datediff(MINUTE,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as decimal(10,2))/60>='5') then 'ueber_5_Stunden'
	  end as Laufzeit_WIN_Stunden2
--,cast(datediff(hour,trans_nav.Webshop_Auftrag,trans_fiege.Übergabe_Fiege) as Numeric)/24 Bruttotage_Webshop_Fiege
--,cast(d

--,cast(datediff(hour,DHL_Kunde.DHL_Eingang, DHL_Kunde.Auftrag_Kunde) as Numeric)/24 as Bruttotage_DHL_Kunde
--,cast(datediff(hour,trans_nav.Webshop_Auftrag, DHL_Kunde.Auftrag_Kunde) as Numeric)/24 Bruttotage_Webshop_Kunde
,case when BI_Data.dbo.networkdays_dec(trans_nav.Webshop_Auftrag,DHL_Kunde.Auftrag_Kunde)<='0' then cast(datediff(hour,trans_nav.Webshop_Auftrag,DHL_Kunde.Auftrag_Kunde) as Decimal(10,2))/24 else BI_Data.dbo.networkdays_dec(trans_nav.Webshop_Auftrag,DHL_Kunde.Auftrag_Kunde) end as Laufzeit_Gesamt
,case when BI_Data.dbo.networkdays_dec(trans_nav.Webshop_Auftrag,trans_fiege.CutOff_Übertragen_am)<='0' then cast(datediff(hour,trans_nav.Webshop_Auftrag,trans_fiege.CutOff_Übertragen_am) as decimal(10,2))/24 else BI_Data.dbo.networkdays_dec(trans_nav.Webshop_Auftrag,trans_fiege.CutOff_Übertragen_am) end as Laufzeit_WIN
, case when BI_Data.dbo.networkdays_dec(trans_fiege.CutOff_Übertragen_am,DHL_Kunde.DHL_Eingang)<='0' 
			then 
				case 
					when BI_Data.dbo.networkdays_d
questZone	escortShipType	escortPath	numAttackShipLists	attackShips1	attackShips2	attackShips3	attackShips4	attackShips5	attackShips6	attackShips7	attackShips8	attackPeriod	attackListType	numResponses	damageMultiplier	hateModifier	triggerEvent	triggerSplitCondition	triggerArg	triggerArg2	triggerOn	triggerEndsMission	triggerDelay	noDistancePolling	customDistanceMessages	destroyIsSuccess	autoReward	questDelay	_DESIGNER NOTES_	questSeries
s	s	s	i	s	s	s	s	s	s	s	s	i	e(sequential=0,random=1)[sequential]	i	i	i	e(none=0,splitquest=1,surpriseattack=2)[none]	e(triggerOn=0,success=1,failure=2,both=3)[triggerOn]	s	s	i	i	i	i	i	i	i	i	s	s
space_corellia	freightermedium_tier5	space_corellia:no_rank2_01_03_nav_01	3	blacksun_ace_s04_tier5	blacksun_bomber_ace_s04_tier5	blacksun_ace_s04_tier5						120	sequential	5	0	1000	splitquest	success	escort:no_rank2_01_04		-1	0	0	0	0	0	0	0		nova_orion
		space_corellia:no_rank2_01_03_nav_02		blacksun_bomber_s01_tier5	blacksun_bomber_s02_tier5	blacksun_bomber_s02_tier5
-- Adding an integer value for message position indicating
-- the horizon in a conversation to where the messages were
-- marked as read.
ALTER TABLE conversation_participants ADD marked_as_read_position INTEGER;
ALTER TABLE conversation_participants ADD marked_as_read_seq INTEGER;
-- Adding a trigger that tracks last read message position
-- movement for participants.
CREATE TRIGGER track_moving_last_read_message_position_of_conversation_participants AFTER UPDATE OF marked_as_read_position ON conversation_participants
WHEN NEW.marked_as_read_position IS NOT NULL AND
  (NEW.marked_as_read_position > OLD.marked_as_read_position OR
    (NEW.marked_as_read_position IS NOT NULL and OLD.marked_as_read_position IS NULL)) AND
  (NEW.marked_as_read_seq = OLD.marked_as_read_seq OR
    (NEW.marked_as_read_seq IS NULL AND OLD.marked_as_read_seq IS NULL))
BEGIN
  INSERT INTO syncable_changes(table_name, row_identifier, change_type) VALUES ('conversation_participants_last_read_position', NEW.databa
-- // add read scope to clients
-- Migration SQL that makes the change goes here.
UPDATE oauth_client_details SET scope = 'cloudbreak.blueprints,cloudbreak.credentials,cloudbreak.events,cloudbreak.recipes,cloudbreak.stacks,cloudbreak.templates,cloudbreak.usages.account,cloudbreak.usages.global,cloudbreak.usages.user,openid,password.write,periscope.cluster,cloudbreak.blueprints.read,cloudbreak.templates.read,cloudbreak.credentials.read,cloudbreak.recipes.read,cloudbreak.networks.read,cloudbreak.securitygroups.read,cloudbreak.stacks.read' WHERE client_id='uluwatu';
UPDATE oauth_client_details SET scope = 'cloudbreak.templates,cloudbreak.blueprints,cloudbreak.credentials,cloudbreak.stacks,cloudbreak.events,cloudbreak.usages.global,cloudbreak.usages.account,cloudbreak.usages.user,cloudbreak.recipes,openid,password.write,cloudbreak.blueprints.read,cloudbreak.templates.read,cloudbreak.credentials.read,cloudbreak.recipes.read,cloudbreak.networks.read,cloudbreak.securitygroups.read,cloudbreak.
SET DEFINE OFF;
CREATE TABLE D_ADDRESS
  ADDRESS_ID  VARCHAR2(150 BYTE),
  ADDRESS1    VARCHAR2(150 BYTE),
  ADDRESS2    VARCHAR2(150 BYTE),
  CITY        VARCHAR2(100 BYTE),
  STATE       VARCHAR2(50 BYTE),
  ZIP         VARCHAR2(50 BYTE),
  COUNTRY     VARCHAR2(50 BYTE),
  WHOSTAMP    VARCHAR2(50 BYTE),
  DATESTAMP   DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_ADDRESS_PK ON D_ADDRESS
(ADDRESS_ID)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             
USE [Jenkins]
GO
/****** Object:  View [dbo].[qry_projects]    Script Date: 12/10/2013 5:17:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[qry_projects]
AS
SELECT        dbo.tbl_projects.*
FROM            dbo.tbl_projects
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      En

      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
  

         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tbl_projects"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 135
               Right = 213
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@l
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
/**************************************************************
 Data navigational stored procedure for bin maintenance keys
 Parameters:
	@table_name - name of bin maintanance tablen to navigate
	@field_name - field to navigate (must be a primary key)
	@nav_type - type of navigation requested
		F - First, P - Previous, N - Next, L - Last
	@current_val - the current key value to reference when 
		performing referential navigation (next/prev)
***************************************************************/
CREATE PROCEDURE [dbo].[tdc_navigate_bin2bin_sp] (
	@field_name varchar(30),
	@nav_type varchar(1),
	@current_val varchar(255)
AS
SET NOCOUNT ON
DECLARE @SQL varchar(255)
IF @field_name = 'tran_id'
  BEGIN
    IF @nav_type = 'F'
      BEGIN
        SELECT MIN(tran_id) FROM tdc_pick_queue WHERE trans = 'MGTB2B'
      END
    IF @nav_type = 'P'
      BEGIN
        IF EXISTS(SELECT tran_id FROM tdc_pick_queue WHERE tran_id < @current_val A

            SELECT MAX(tran_id) FROM tdc_pick_queue 
            WHERE tran_id < @current_val AND trans = 'MGTB2B'
        ELSE
            SELECT MIN(tran_id) FROM tdc_pick_queue WHERE trans = 'MGTB2B'
      END
    IF @nav_type = 'N'
      BEGIN
        IF EXISTS(SELECT tran_id FROM tdc_pick_queue WHERE tran_id > @current_val AND trans = 'MGTB2B')
            SELECT MIN(tran_id) FROM tdc_pick_queue 
            WHERE tran_id > @current_val AND trans = 'MGTB2B'
        ELSE
            SELECT MAX(tran_id) FROM tdc_pick_queue WHERE trans = 'MGTB2B'
      END
    IF @nav_type = 'L'
      BEGIN
        SELECT MAX(tran_id) FROM tdc_pick_queue WHERE trans = 'MGTB2B'
      END
    return 0
  END
IF @field_name = 'location'
  BEGIN
    IF @nav_type = 'F'
      BEGIN
        SELECT MIN(location) FROM locations
      END
    IF @nav_type = 'P'
      BEGIN
        IF EXISTS(SELECT location FROM locations WHERE location < @current_val)
            SELECT MAX(location) FROM locations 
          
-- 更新 SYSKEY 表   
ALTER TABLE YKT_CUR.T_PIF_SYSKEY
  ADD KEY_TYPE  CHARACTER(1)    NOT NULL  DEFAULT '0';
#SYNC 10;
COMMENT ON YKT_CUR.T_PIF_SYSKEY
 (KEY_TYPE IS '标志'
 );
#SYNC 20;
REBIND PACKAGE BANK.SYSKEY;
#SYNC 30;
REBIND PACKAGE DB2INST4.SYSKEY;
#SYNC 40;
-- 增加一个 SYSKEY
insert into YKT_CUR.T_PIF_SYSKEY(KEY_CODE,KEY_NAME,KEY_VALUE,MAX_VALUE,KEY_TYPE)
values('T_TIF_CUT_INFO_UPDATE','客户信息更新记录表',0,99999999,'1');
-- 增加 T_TIF_CUT_INFO_UPDATE 表
CREATE TABLE YKT_CUR.T_TIF_CUT_INFO_UPDATE
 (ID            INTEGER         NOT NULL  GENERATED ALWAYS
    AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20, MINVALUE 1, MAXVALUE 2147483647, NO CYCLE, NO ORDER),
  CARD_ID       INTEGER         NOT NULL,
  VOLUME        VARCHAR(12)     NOT NULL,
  FLAG          INTEGER         NOT NULL  DEFAULT 0,
  OPERATE_DATE  CHARACTER(8),
  OPERATE_TIME  CHARACTER(6)
 )
  DATA CAPTURE NONE
  IN USERSPACE1;
ALTER TABLE YKT_CUR.T_TIF_CUT_INFO_UPDATE
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;
COMMENT ON YKT_CUR
#\u5f97\u5230\u72b6\u6001\u4e3a'\u542f\u7528'\u7684\u83dc\u5355
listDisplayMenu=select * from sys_menu t where t.NAV_ID = ? and t.MENU_STATUS = 1 order by t.MENU_PARENT_ID,t.MENU_SEQ
#\u5f97\u5230\u6240\u6709\u83dc\u5355
listAllMenu=select * from sys_menu t where t.NAV_ID = ? order by t.MENU_PARENT_ID,t.MENU_SEQ
#\u67e5\u8be2\u83dc\u5355
getMenu=select * from sys_menu t where t.MENU_ID = ?
#\u4fee\u6539\u83dc\u5355
updateMenu=update sys_menu set MENU_TITLE = ?,MENU_URL = ?,MENU_SEQ = ?,MENU_STATUS = ? where MENU_ID = ?
#\u63d2\u5165\u83dc\u5355
insertMenu=insert into sys_menu(MENU_ID,MENU_TITLE,MENU_CODE,MENU_URL,MENU_SEQ,MENU_STATUS,MENU_PARENT_ID,MENU_NOTE,NAV_ID) values (?,?,?,?,?,?,?,?,?)
#\u5f97\u5230\u5b50\u8282\u70b9\u6700\u5927code
getChildrenMaxCode=select max(MENU_CODE) from sys_menu s where s.MENU_PARENT_ID = ?
#\u6839\u636e\u7236code\u5220\u9664\u6240\u6709\u5b50\u8282\u70b9
deleteMenusByCode=delete from sys_menu where NAV_ID = ? and MENU_CODE like ?
#\u68c0\u67e5\u5e8f\u53
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/****** Object:  StoredProcedure [dbo].[AppendVersionedFields]    Script Date: 05/14/2013 10:15:22 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AppendVersionedFields]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AppendVersionedFields]
GO
/****** Object:  StoredProcedure [dbo].[AppendItems]    Script Date: 05/14/2013 10:15:06 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AppendItems]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[AppendItems]
GO
/****** Object:  UserDefinedTableType [dbo].[ItemsTableType]    Script Date: 05/14/2013 10:14:22 ******/
IF  EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'ItemsTableType' AND ss.name = N'dbo')
DROP TYPE [dbo].[ItemsTableType]
GO
/****** Object:  UserDefinedTableType [dbo].[VersionedFieldsTableType]    Script Date: 05/14/2013 10:14:45 ******/
IF  EXISTS (SEL

DROP TYPE [dbo].[VersionedFieldsTableType]
GO
/****** Object:  UserDefinedTableType [dbo].[ItemsTableType]    Script Date: 05/14/2013 10:14:22 ******/
CREATE TYPE [dbo].[ItemsTableType] AS TABLE(
	[ID] [uniqueidentifier] NOT NULL,
	[Name] [nvarchar](256) NOT NULL,
	[TemplateID] [uniqueidentifier] NOT NULL,
	[MasterID] [uniqueidentifier] NOT NULL,
	[ParentID] [uniqueidentifier] NOT NULL,
	[Created] [datetime] NOT NULL,
	[Updated] [datetime] NOT NULL
GO
/****** Object:  UserDefinedTableType [dbo].[VersionedFieldsTableType]    Script Date: 05/14/2013 10:14:45 ******/
CREATE TYPE [dbo].[VersionedFieldsTableType] AS TABLE(
	[Id] [uniqueidentifier] NOT NULL,
	[ItemId] [uniqueidentifier] NOT NULL,
	[Language] [nvarchar](50) NOT NULL,
	[Version] [int] NOT NULL,
	[FieldId] [uniqueidentifier] NOT NULL,
	[Value] [nvarchar](max) NOT NULL,
	[Created] [datetime] NOT NULL,
	[Updated] [datetime] NOT NULL
GO
/****** Object:  StoredProcedure [dbo].[AppendItems]    Script Date: 05/14/2013 10:15:06 *****
--liquibase formatted sql
--This is for the sparrow_dss schema
  
--logicalFilePath: changeLog2Indexes.sql
--changeset drsteini:indexs2a
create index calib_site_geom_i on model_calib_sites(site_geom) indextype is mdsys.spatial_index;
--rollback drop index calib_site_geom_i;
--changeset drsteini:indexs2b
create index model_reach_enh_reach_fk_i on model_reach(enh_reach_id);
--rollback drop index model_reach_enh_reach_fk_i;
--changeset drsteini:indexs2c
create index model_reach_fnode_i on model_reach(fnode);
--rollback drop index model_reach_fnode_i;
--changeset drsteini:indexs2d
create index model_reach_hydseq_i on model_reach(hydseq);
--rollback drop index model_reach_hydseq_i;
--changeset drsteini:indexs2e
create index model_reach_rsize_i on model_reach(reach_size);
--rollback drop index model_reach_rsize_i;
--changeset drsteini:indexs2f
create index model_reach_tnode_i on model_reach(tnode);
--rollback drop index model_reach_tnode_i;
--changeset drsteini:indexs2g
create index model_re
USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_charity')
BEGIN
DROP PROCEDURE sp_update_charity
Print '' print  ' *** dropping procedure sp_update_charity'
End
GO
Print '' print  ' *** creating procedure sp_update_charity'
GO
Create PROCEDURE sp_update_charity
@old_CHARITY_ID[INT],
@old_USER_ID[INT],
@new_USER_ID[INT],
@old_EMPLOYEE_ID[INT],
@new_EMPLOYEE_ID[INT],
@old_CHARITY_NAME[NVARCHAR](200),
@new_CHARITY_NAME[NVARCHAR](200),
@old_CONTACT_FIRST_NAME[NVARCHAR](150),
@new_CONTACT_FIRST_NAME[NVARCHAR](150),
@old_CONTACT_LAST_NAME[NVARCHAR](150),
@new_CONTACT_LAST_NAME[NVARCHAR](150),
@old_PHONE_NUMBER[NVARCHAR](20),
@new_PHONE_NUMBER[NVARCHAR](20),
@old_EMAIL[NVARCHAR](100),
@new_EMAIL[NVARCHAR](100),
@old_CONTACT_HOURS[NVARCHAR](150),
@new_CONTACT_HOURS[NVARCHAR](150),
@old_STATUS[NVARCHAR](10),
@new_STATUS[NVARCHAR](10)
AS
BEGIN
UPDATE charity
SET USER_ID = @new_USER_ID, EMPLOYEE_ID = @new_EMPLOYEE_ID, CHARITY_NAME = @new_CHARIT
IF OBJECT_ID('dbo.wsp_newAccountingEvent') IS NOT NULL
BEGIN
	DROP PROCEDURE dbo.wsp_newAccountingEvent
	IF OBJECT_ID('dbo.wsp_newAccountingEvent') IS NOT NULL
		PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newAccountingEvent >>>'
	ELSE
		PRINT '<<< DROPPED PROCEDURE dbo.wsp_newAccountingEvent >>>'
END
go
/******************************************************************************
**
** CREATION:
**   Author:      DataAccessGenerator
**   Date:        Oct 03 2003 at 09:13AM
**   Description:
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
******************************************************************************/
CREATE PROCEDURE dbo.wsp_newAccountingEvent
 @userId numeric(12,0)
,@eventType char(1)
,@xactionId numeric(12,0)
,@cardNum varchar(64)
,@encodedCardNum varchar(64)
,@dateCreated datetime
AS
BEGIN
BEGIN TRAN TRAN_newAccountingEvent
INSERT INTO AccountingEvent
 userId
,eventType
,xactionId
,cardNum
,encodedCardNum
,dateCreated
VALUES
 @userId
,@eventType
,
drop view if exists activity_feed_view cascade;
drop view if exists claims_view cascade;
drop view if exists bounties_view cascade;
ALTER TABLE "public"."issues" ALTER COLUMN "payout_receipt" TYPE jsonb USING "payout_receipt"::jsonb;
create view claims_view as
SELECT i.title AS issue_title,
    i.issue_number,
    r.repo AS repo_name,
    r.owner AS repo_owner,
    u.name AS user_name,
    u.avatar_url AS user_avatar_url,
    i.payout_receipt,
    p.updated,
    i.balance,
    p.state AS pr_state
   FROM issues i,
    users u,
    repositories r,
    pull_requests p
  WHERE r.repo_id = i.repo_id AND p.issue_id = i.issue_id AND p.user_id = u.id AND i.contract_address IS NOT NULL AND i.comment_id IS NOT NULL
  ORDER BY p.updated;
create view bounties_view as
SELECT i.title AS issue_title,
    i.issue_number,
    r.repo AS repo_name,
    r.owner AS repo_owner,
    u.name AS user_name,
    u.avatar_url AS user_avatar_url,
    i.payout_receipt,
    i.balance,
    i.updated
   FROM issues i,

    users u,
    repositories r
  WHERE r.repo_id = i.repo_id AND r.user_id = u.id AND i.contract_address IS NOT NULL AND i.comment_id IS NOT NULL
  ORDER BY i.updated;
create view activity_feed_view as
SELECT 'open-claim'::text AS type,
    claims_view.issue_title,
    claims_view.repo_name,
    claims_view.repo_owner,
    claims_view.issue_number,
    claims_view.user_name,
    claims_view.user_avatar_url,
    claims_view.balance,
    claims_view.updated
   FROM claims_view
  WHERE claims_view.pr_state = 0 AND claims_view.payout_receipt IS NULL
UNION
 SELECT 'claim-payout'::text AS type,
    claims_view.issue_title,
    claims_view.repo_name,
    claims_view.repo_owner,
    claims_view.issue_number,
    claims_view.user_name,
    claims_view.user_avatar_url,
    claims_view.balance,
    claims_view.updated
   FROM claims_view
  WHERE claims_view.pr_state = 1 AND claims_view.payout_receipt IS NOT NULL
UNION
 SELECT 'new-bounty'::text AS type,
    bounties_view.issue_title,
    bounti
drop view "V_NB_POSITIONNEMENT_CAP_4";     
drop view "V_NB_POSITIONNEMENT_CAP_5";     
drop view "V_NB_POSITIONNEMENT_CPT_1";      
drop view "V_NB_POSITIONNEMENT_CPT_2";      
drop view "V_NB_POSITIONNEMENT_CPT_3";      
drop view "V_NB_POSITIONNEMENT_CPT_4";      
drop view "V_NB_POSITIONNEMENT_CPT_5";      
drop view "V_NB_POSITIONNEMENT_CPTT_1";     
drop view "V_NB_POSITIONNEMENT_CPTT_2";     
drop view "V_NB_POSITIONNEMENT_CPTT_3";     
drop view "V_NB_POSITIONNEMENT_CPTT_4";     
drop view "V_NB_POSITIONNEMENT_CPTT_5";     
drop view "V_DEMANDERIC_PAR_PROMO";         
drop view "V_RIC_IDENTIFICATION";           
drop view "V_RIC_DC";                       
drop view "V_RIC_CPT_POSITIONNEMENT";       
drop view "V_RIC_CPTT_POSITIONNEMENT";      
drop view "V_RIC_FC_POSITIONNEMENT";        
drop view "V_NB_POSITIONNEMENT_FC_1";       
drop view "V_NB_POSITIONNEMENT_FC_2";       
drop view "V_NB_POSITIONNEMENT_FC_3";       
drop view "V_NB_POSITIONNEMENT_FC_4";       
drop view "V
-- tim-as-software changes
alter table ts_monitors add column ts_port int NOT NULL DEFAULT 80;
alter table ts_monitors add column ts_https_port int NOT NULL DEFAULT 443;
ALTER TABLE ts_defects_interval  DROP CONSTRAINT FK6C189902545ADA6D;
ALTER TABLE ts_defects_interval  DROP CONSTRAINT FK6C189902F081AE66;
-- adding flag to tell if webview port is secure or not
alter table ts_introscope_ems add column ts_web_view_port_secure bool not null default false;
ALTER TABLE ts_usergroup_id_parameters ALTER COLUMN ts_name TYPE VARCHAR(2000);
-- the array accumulate function can be dropped here since we are going to use
-- array_agg which is built in much much much... faster than array_append
-- oracle will have its custom procedure renamed to array_agg so that we dont need
-- to write separate queries for both
drop aggregate if exists array_accumulate(integer);
insert into ts_report_param_keys (ts_id,ts_name,ts_query_string_name,ts_value_type,ts_default_value,ts_soft_delete, version_info) values
﻿CREATE DATABASE [NewUrls2]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'NewUrls2', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\NewUrls2.mdf' , SIZE = 4096KB , FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'NewUrls2_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\NewUrls2_log.ldf' , SIZE = 1024KB , FILEGROWTH = 10%)
GO
ALTER DATABASE [NewUrls2] SET COMPATIBILITY_LEVEL = 110
GO
ALTER DATABASE [NewUrls2] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [NewUrls2] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [NewUrls2] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [NewUrls2] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [NewUrls2] SET ARITHABORT OFF 
GO
ALTER DATABASE [NewUrls2] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [NewUrls2] SET AUTO_CREATE_STATISTICS ON 
GO
ALTER DATABASE [NewUrls2] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [NewUrls2] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [NewUrls2] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABA

GO
ALTER DATABASE [NewUrls2] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [NewUrls2] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [NewUrls2] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [NewUrls2] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [NewUrls2] SET  DISABLE_BROKER 
GO
ALTER DATABASE [NewUrls2] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [NewUrls2] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [NewUrls2] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [NewUrls2] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [NewUrls2] SET  READ_WRITE 
GO
ALTER DATABASE [NewUrls2] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [NewUrls2] SET  MULTI_USER 
GO
ALTER DATABASE [NewUrls2] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [NewUrls2] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
USE [NewUrls2]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [NewUrls2] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO
CREATE LOGIN [NewUrls2_
/** Trigger para replicacion de clientes **/
drop TRIGGER if exists CLIENTES_TRG_BU
create table sx_clientes_credito_log as (select * from sx_clientes_credito where 1=2)
CREATE TRIGGER CLIENTES_TRG_BU 
    BEFORE UPDATE ON SX_CLIENTES
    FOR EACH ROW     
    BEGIN
            DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
            SET  NEW.MODIFICADO=NOW();
            INSERT INTO `sx_clientes_log` (CLIENTE_ID,APELLIDOM,APELLIDOP,CLAVE,CUENTACONTABLE,CURP,CALLE,CIUDAD,COLONIA,CP
,ESTADO,LOCALE,DELMPO,NUMERO,NUMEROINT,PAIS,EMAIL3,EMAIL1,EMAIL2,FRECUENTE,NOMBRE,NOMBRES,PERMITIR_CHEQUE,FISICA,PNETO,RFC,SUSPENDIDO
,CREADO,CREADO_USERID,MODIFICADO,MODIFICADO_USERID,VERSION,WWW,CREDITO_ID,COBRADOR_ID,VENDEDOR_ID,TIPO_ID) 
        values( NEW.CLIENTE_ID
    ,NEW.APELLIDOM
    ,NEW.APELLIDOP
    ,NEW.CLAVE
    ,NEW.CUENTACONTABLE
    ,NEW.CURP
    ,NEW.CALLE
    ,NEW.CIUDAD
    ,NEW.COLONIA
    ,NEW.CP
    ,NEW.ESTADO
    ,NEW.LOCALE
    ,NEW.DELMPO
    ,NEW.NUMERO
    ,NEW.NUMEROINT
    ,NEW.
-- phpMyAdmin SQL Dump
-- version 4.2.6deb1
-- http://www.phpmyadmin.net
--
-- 主機: localhost
-- 產生時間： 2015 年 03 月 03 日 17:25
-- 伺服器版本: 5.5.41-0ubuntu0.14.10.1
-- PHP 版本： 5.5.12-2ubuntu4.2
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- 資料庫： `intelllex`
--
-- --------------------------------------------------------
--
-- 資料表結構 `document_dump`
--
CREATE TABLE IF NOT EXISTS `document_dump` (
`id` int(9) NOT NULL,
  `url` varchar(500) NOT NULL,
  `application_type` varchar(80) NOT NULL,
  `content` mediumtext,
  `createdAt` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
--
-- 已匯出資料表的索引
--
--
-- 資料表索引 `document_dump`
--
ALTER TABLE `document_dump`
 ADD PRIMARY KE
-- =============================================
-- Author:		Eduardo Getassi da Rosa
-- Project:		Clinica
-- Create date: 10/10/2013
-- Description:	Stored Procedure que consulta um registro da tabela Logradouro a partir do id
-- =============================================
IF EXISTS 
	SELECT * 
		FROM INFORMATION_SCHEMA.ROUTINES 
	WHERE 
		SPECIFIC_SCHEMA = 'dbo' AND
		SPECIFIC_NAME = 'LogradouroFindById' 
   DROP PROCEDURE dbo.LogradouroFindById
GO
CREATE PROCEDURE LogradouroFindById
	Campo campo = projeto.Tabelas.Find(p => p.Nome.Equals(projeto.Tabela)).Campos.Find(p => Convert.ToBoolean(p.ChavePrimaria) == true);
	return String.Concat("@", campo.Nome, " ", campo.Tipo);
AS
	SELECT 
	StringBuilder sb = new StringBuilder();
	foreach(Campo campo in projeto.Tabelas.Find(p => p.Nome.Equals(projeto.Tabela)).Campos)
	{
		sb.Append("		");
		sb.Append(campo.Nome);
		sb.AppendLine(",");
	}
	return sb.ToString().Substring(0, sb.ToString().Length - 3);
	FROM Logradouro
	WHERE
	Campo campo = pr
CREATE TABLE klik_navigation (
  nav_id smallint(6) NOT NULL auto_increment,
  kap tinyint(3) unsigned NOT NULL default '0',
  ukap tinyint(3) unsigned NOT NULL default '0',
  bezeichnung varchar(40) NOT NULL default '',
  kuerzel varchar(20) NOT NULL default '',
  aktiv enum('j','n') NOT NULL default 'j',
  PRIMARY KEY  (nav_id)
) TYPE=MyISAM;
# Daten fŸr Tabelle `klik_navigation`
INSERT INTO klik_navigation VALUES (1, 1, 0, 'Home', 'home', 'j');
INSERT INTO klik_navigation VALUES (2, 2, 0, 'Angebot', 'angebot', 'j');
INSERT INTO klik_navigation VALUES (3, 3, 0, 'Referenzen', 'referenzen', 'j');
INSERT INTO klik_navigation VALUES (4, 5, 0, 'Download', 'download', 'j');
INSERT INTO klik_navigation VALUES (5, 6, 0, 'Links', 'links', 'j');
INSERT INTO klik_navigation VALUES (6, 7, 0, 'Kontakt', 'kontakt', 'j');
INSERT INTO klik_navigation VALUES (7, 2, 10, 'Produkte', 'produkte', 'j');
INSERT INTO klik_navigation VALUES (8, 2, 20, 'Dienstleistungen', 'dienstleistungen', 'j');
INSERT INTO
##
## DO NOT MODIFY THIS FILE BY HAND!
##
"Abbreviation"=>"Saîsinâums",
"Are you sure you want to delete this?"=>"Vai Jûs tieðâm vçlaties dzçst ðo?",
"Are you sure?"=>"Vai Jûs esat pârliecinâts?",
"Could not open locales file to save."=>"Nevaru atvçrt lokalizâcijas failu saglabâðanai",
"Currency Format"=>"Valûtas formâts",
"Date and Time"=>"Datums un laiks",
"Default"=>"Noklusçtais",
"Default User Preferences"=>"Noklusçtie lietotâja iestatîjumi",
"Edit User Preferences"=>"Labot lietotâja iestatîjumus",
"Key Type"=>"Atslçgas tips",
"Label"=>"Apzîmçjums",
"Language"=>"Valoda",
"Language Support"=>"Valodu atbalsts",
"Locale"=>"Lokâle",
"Locales file saved"=>"Lokâïu fails saglabâts",
"Menu Icon"=>"Izvçlnes ikona",
"Menu Status"=>"Izvçlnes statuss",
"Menu Text"=>"Izvçlnes teksts",
"Module"=>"Modulis",
"Module configuration failed"=>"Moduïa konfigurâcija neizdevâs",
"Module configured"=>"Modulis nokonfigurçts",
"Module does not have a valid setup class defined"=>"Modulim nav noteikta derîga 

"Module installed"=>"Modulis uzstâdîts",
"Module menu state changed"=>"Moduïa izvçlnes stâvoklis nomainîts",
"Module not upgraded"=>"Modulis nav atjauninâts",
"Module re-ordered"=>"Modulis pârkârtots",
"Module removed"=>"Modulis noòemts",
"Module setup file could not be found"=>"Nav iespçjams atrast moduïa uzstâdîðanas failu",
"Module state changed"=>"Moduïa stâvoklis nomainîts",
"Module upgraded"=>"Modulis atjauninâts",
"Preferences"=>"Iestatîjumi",
"Preferences updated"=>"Iestatîjumi atjauninâti",
"Role Name"=>"Lomas nosaukums",
"Role deleted"=>"Loma izdzçsta",
"Role inserted"=>"Loma pievienota",
"Role updated"=>"Loma atjauninâta",
"Roles"=>"Lomas",
"Short Date Format"=>"Îsais datuma formâts",
"String"=>"Rinda",
"System Administration"=>"Sistçmas administrçðana",
"System Lookup Keys"=>"Sistçmas informâcijas iegûðanas atslçgas",
"System Lookup Values"=>"Sistçmas informâcijas iegûðanas vçrtîbas",
"Tabbed Box View"=>"Tabulçtais skats",
"This will delete all data associated with the mod
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Renewal_Plan_Premium_View_1]'))
DROP VIEW [dbo].[Renewal_Plan_Premium_View_1]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[Renewal_Plan_Premium_View_1]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW dbo.Renewal_Plan_Premium_View_1
AS
SELECT     dbo.Latest_All_Lines_View_1.productcode, dbo.Latest_All_Lines_View_1.Branch_Region, dbo.Latest_All_Lines_View_1.program, 
                      SUM(dbo.Latest_All_Lines_View_1.currentwrittenpremium) AS currentwrittenpremium, dbo.Latest_All_Lines_View_1.Fiscal_AY_Year, 
                      dbo.Latest_All_Lines_View_1.Renew_New_Auto, dbo.Latest_All_Lines_View_1.Primary_Producer, 
                      dbo.Latest_All_Lines_View_1.Primary_Producer_type, dbo.Latest_All_Lines_View_1.Account_Name, dbo.Latest_All_Lines_View_1.DivisionName, 
                      dbo.Latest_All_Lines_View_1.Bu

                      dbo.Latest_All_Lines_View_1.underwriter, dbo.Latest_All_Lines_View_1.Written_Premium_Range_for_Automatics, 
                      dbo.Latest_All_Lines_View_1.statecode, AccessPhlyEom.dbo.MktProductMix.prodMixName, AccessPhlyEom.dbo.MktProductMix.rptMixCode, 
                      dbo.Latest_All_Lines_View_1.ProductType, AccessPhlyEom.dbo.product.productdesc
FROM         dbo.Latest_All_Lines_View_1 INNER JOIN
                      AccessPhlyEom.dbo.product ON dbo.Latest_All_Lines_View_1.productcode = AccessPhlyEom.dbo.product.productcode LEFT OUTER JOIN
                      AccessPhlyEom.dbo.MktProductMix ON dbo.Latest_All_Lines_View_1.productcode = AccessPhlyEom.dbo.MktProductMix.productMix
GROUP BY dbo.Latest_All_Lines_View_1.productcode, dbo.Latest_All_Lines_View_1.Branch_Region, dbo.Latest_All_Lines_View_1.program, 
                      dbo.Latest_All_Lines_View_1.Fiscal_AY_Year, dbo.Latest_All_Lines_View_1.Renew_New_Auto, dbo.Latest_All_Lines_View_1.Primary
  CREATE OR REPLACE  VIEW HV_AUM_MGMTFEES (FF_VC1, SCHEME, ACCENT_AMNT, PORTFOLIO_TYPE, PORTFOLIO_CATEGORY, PORTFOLIO_CATEGORY_NAME, YEAR_MONTH_ID, MONTH_ID, FISC_NUM_IND_QUARTER, YEAR_ID, PORTFOLIO_NAME, TRANS_DATE, NAV_SUM, PORTFOLIO, AVG_NAV_MON, AVG_NAV_YEAR) AS 
  SELECT -- SUM_NAV.NAV_ID,
SUM_NAV.FF_VC1,
ACCENT.SCHEME, 
SUM(ACCENT.AMOUNT) ACCENT_AMNT,
SUM_NAV.PORTFOLIO_TYPE,
SUM_NAV.PORTFOLIO_CATEGORY,
SUM_NAV.PORTFOLIO_CATEGORY_NAME,
DT_TIME_DIM.YEAR_MONTH_ID,
--DT_TIME_DIM.DAY_ID,
--DT_TIME_DIM.WEEK_OF_YEAR,
DT_TIME_DIM.MONTH_ID,
DT_TIME_DIM.FISC_NUM_IND_QUARTER,
DT_TIME_DIM.YEAR_ID,
    SUM_NAV.PORTFOLIO_NAME,
 SUM_NAV.TRANS_DATE,
    ROUND((SUM_NAV.SNAV)/10000000,9) NAV_SUM ,
    SUM_NAV.PORTFOLIO,
-- ROUND(ROUND( AVG(SUM_NAV.SNAV)OVER (PARTITION BY SUM_NAV.PORTFOLIO ORDER BY SUM_NAV.TRANS_DATE),2)/10000000,9) AVG_NAV,
   ROUND(ROUND( AVG(SUM_NAV.SNAV)OVER (PARTITION BY SUM_NAV.PORTFOLIO,DT_TIME_DIM.YEAR_MONTH_ID ORDER BY DT_TIME_DIM.YEAR_MONTH_ID),2)/10000000,9) AVG_NAV_MON,

  ROUND(ROUND( AVG(SUM_NAV.SNAV)OVER (PARTITION BY SUM_NAV.PORTFOLIO,DT_TIME_DIM.YEAR_ID ORDER BY DT_TIME_DIM.YEAR_ID),2)/10000000,9) AVG_NAV_YEAR
FROM  HDIM_TIME_CAL DT_TIME_DIM,
HI_ACCENT_CURR   ACCENT, --hvrep_gl_balance_detail
(SELECT --HREP_NAV_SUMMARY_CURR.NAV_ID,
HREP_NAV_SUMMARY_CURR.FF_VC1,
   HREP_NAV_SUMMARY_CURR.PORTFOLIO_NAME,
   HREP_NAV_SUMMARY_CURR.TRANS_DATE,
 SUM(HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE) SNAV ,
/* count(HREP_NAV_SUMMARY_CURR.TRANS_DATE) AS TRANS_COUNT,
  SUM(HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE)/ count(HREP_NAV_SUMMARY_CURR.TRANS_DATE) AS NAV_AVG,*/
    HREP_NAV_SUMMARY_CURR.PORTFOLIO,
     HREP_NAV_SUMMARY_CURR.PORTFOLIO_TYPE,
  HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY,
  HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY_NAME
 FROM HREP_NAV_SUMMARY_CURR
WHERE
 HREP_NAV_SUMMARY_CURR.UNITS_OUTS  >  0
   AND       HREP_NAV_SUMMARY_CURR.PORTFOLIO_CLASS  <>  'GLOBAL'
-- AND   HREP_NAV_SUMMARY_CURR.PORTFOLIO = 'MAR772D1'
--AND HREP_NAV_SUMMARY_CURR.TRANS_DATE BETWEE

 GROUP BY
 --HREP_NAV_SUMMARY_CURR.NAV_ID,
HREP_NAV_SUMMARY_CURR.FF_VC1,
   HREP_NAV_SUMMARY_CURR.PORTFOLIO_NAME,
   HREP_NAV_SUMMARY_CURR.TRANS_DATE,
   HREP_NAV_SUMMARY_CURR.PORTFOLIO,
   HREP_NAV_SUMMARY_CURR.PORTFOLIO_TYPE,
  HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY,
  HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY_NAME
   ORDER BY HREP_NAV_SUMMARY_CURR.TRANS_DATE) SUM_NAV
   WHERE SUM_NAV.TRANS_DATE = DT_TIME_DIM.DAY_END_DATE
 AND    (ACCENT.LEVEL_1 IN ('810300','810311')) AND 
(ACCENT.NARRATION NOT LIKE '%lumpsum') 
AND ACCENT.SCHEME = SUM_NAV.PORTFOLIO
 --AND (ACCENT.VALUE_DATE BETWEEN '1 Jan 2014' AND '31 jan 2014')
  GROUP BY
 -- SUM_NAV.NAV_ID,
SUM_NAV.FF_VC1,
  ACCENT.SCHEME,
   SUM_NAV.PORTFOLIO_TYPE,
  SUM_NAV.PORTFOLIO_CATEGORY,
  SUM_NAV.PORTFOLIO_CATEGORY_NAME,
DT_TIME_DIM.YEAR_MONTH_ID,
--DT_TIME_DIM.DAY_ID,
--DT_TIME_DIM.WEEK_OF_YEAR,
DT_TIME_DIM.MONTH_ID,
DT_TIME_DIM.FISC_NUM_IND_QUARTER,
DT_TIME_DIM.YEAR_ID, 
 SUM_NAV.PORTFOLIO_NAME,
  SUM_NAV.TRANS_DATE,
 SUM_NAV.SNAV ,
ALTER TABLE `#__pf_settings` CHANGE `value` `content` TEXT NOT NULL;
ALTER TABLE `#__pf_settings` ADD INDEX `idx_parameter` ( `parameter` ( 12 ) );
ALTER TABLE `#__pf_settings` ADD INDEX `idx_scope` ( `scope` ( 12 ) );
ALTER TABLE `#__pf_settings` ADD INDEX `idx_paramscope` ( `parameter` ( 12 ) , `scope` ( 12 ) );
ANALYZE TABLE `#__pf_settings`;
OPTIMIZE TABLE `#__pf_settings`;
UPDATE `#__pf_settings` SET `parameter` = 'installed' WHERE `scope` = 'system' AND `parameter` = 'is_installed';
DELETE FROM `#__pf_settings` WHERE `scope` = 'cp_events';
DELETE FROM `#__pf_settings` WHERE `scope` = 'cp_project';
DELETE FROM `#__pf_settings` WHERE `scope` = 'cp_tasks';
DELETE FROM `#__pf_settings` WHERE `scope` = 'cp_weblinks';
DELETE FROM `#__pf_settings` WHERE `scope` = 'nav_calendar';
DELETE FROM `#__pf_settings` WHERE `scope` = 'system' AND `parameter` = 'tooltip_restricted';
INSERT INTO `#__pf_settings` VALUES(NULL, 'use_score', '1', 'system');
INSERT INTO `#__pf_settings` VALUES(NULL, 'lim
create table MD_Picker
	Id int identity(1,1) primary key,
	Code varchar(50) not null,
	Decs1 varchar(100) not null,
	Location varchar(50) not null,
	UserCode varchar(50) not null,
	UserNm varchar(100) not null,
	IsActive bit not null,
	CreateUser int not null,
	CreateUserNm varchar(100) not null,
	CreateDate datetime not null,
	LastModifyUser int not null,
	LastModifyUserNm varchar(100) not null,
	LastModifyDate datetime not null
go
create table MD_PickRule
	Id int identity(1,1) primary key,
	Item varchar(50) not null,
	ItemDesc varchar(100) null,
	Location varchar(50) not null,
	Picker varchar(50) not null,
	CreateUser int not null,
	CreateUserNm varchar(100) not null,
	CreateDate datetime not null,
	LastModifyUser int not null,
	LastModifyUserNm varchar(100) not null,
	LastModifyDate datetime not null
go
create table MD_Shipper
	Code varchar(50) not null primary key,
	Desc1 varchar(100) not null,
	Location varchar(50) null,
	Address varchar(50) null,
	Contact varchar(50) null,
	Tel v
/*
Date: 2016-06-01 23:44:23
*/
SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `t_module`
-- ----------------------------
DROP TABLE IF EXISTS `t_module`;
CREATE TABLE `t_module` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `module_name` varchar(32) DEFAULT NULL,
  `module_path` varchar(50) DEFAULT NULL,
  `module_type` int(2) DEFAULT NULL COMMENT '1.URL, 2.功能',
  `module_key` varchar(32) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
-- ----------------------------
-- Records of t_module
-- ----------------------------
INSERT INTO `t_module` VALUES ('1', 'Overview', '/index', '1', 'IndexUrl', '2016-06-01 23:41:39');
INSERT INTO `t_module` VALUES ('2', 'Reports', null, '1', 'Reports', '2016-06-02 09:42:17');
INSERT INTO `t_module` VALUES ('3', 'Analytics', null, '1', 'Analytics', '2016-06-03 21:42:17');
INSERT INTO `t_module` VALUES ('4', 'Export', null, '1', 'Export', '20

INSERT INTO `t_module` VALUES ('5', 'Nav item', null, '1', 'Nav_item', '2016-06-03 20:38:04');
INSERT INTO `t_module` VALUES ('6', 'Nav item again', null, '1', 'Nav_item_again', '2016-06-03 20:38:08');
INSERT INTO `t_module` VALUES ('7', 'One more nav', null, '1', 'One_more_nav', '2016-06-21 20:38:11');
INSERT INTO `t_module` VALUES ('8', 'Another nav item', null, '1', 'Another_nav_item', '2016-05-29 20:38:23');
INSERT INTO `t_module` VALUES ('9', 'More navigation', null, '1', 'More_navigation', '2016-06-05 20:38:14');
INSERT INTO `t_module` VALUES ('10', 'Nav item again', null, '1', 'Nav_item_again1', '2016-07-01 20:38:28');
INSERT INTO `t_module` VALUES ('11', 'One more nav', null, '1', 'One_more_nav1', '2016-05-31 20:38:18');
INSERT INTO `t_module` VALUES ('12', 'Another nav item', null, '1', 'Another_nav_item1', '2016-05-29 20:38:31');
-- ----------------------------
-- Table structure for `t_role`
-- ----------------------------
DROP TABLE IF EXISTS `t_role`;
CREATE TABLE `t_role

  `id` int(11) NOT NULL AUTO_INCREMENT,
  `role_name` varchar(32) DEFAULT NULL,
  `description` varchar(200) DEFAULT NULL,
  `create_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
-- ----------------------------
-- Records of t_role
-- ----------------------------
INSERT INTO `t_role` VALUES ('1', '管理员', '系统管理员', '2016-06-01 23:41:11');
-- ----------------------------
-- Table structure for `t_role_module`
-- ----------------------------
DROP TABLE IF EXISTS `t_role_module`;
CREATE TABLE `t_role_module` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `role_id` int(11) DEFAULT NULL,
  `module_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
-- ----------------------------
-- Records of t_role_module
-- ----------------------------
INSERT INTO `t_role_module` VALUES ('1', '1', '1');
INSERT INTO `t_role_module` VALUES ('2', '1', '2');
INSERT INTO `t_role_module` VALUES ('3', '1', '3
--bookID|title|author|series|seriesName|bookInSeries|ISBN|pubYear|catalogingData|read|completedDate
INSERT INTO books (book_id, title, pub_year) VALUES (1, 'Hornblower and the "Hotspur"', 1962);
INSERT INTO authors (author_id, name) VALUES (1, 'C.S. Forester');
INSERT INTO series (series_id, name) VALUES (1, 'The Hornblower Series');
INSERT INTO books_authors (book_id, author_id) VALUES (1, 1);
INSERT INTO book_series (book_id, series_id, book_in_series) VALUES (1, 1, 3);
INSERT INTO books_read (book_id, was_read, date_read) VALUES (1, 'TRUE', null);
INSERT INTO isbns (book_id, isbn, is_main) VALUES (1, '0316288993', 'TRUE');
-- 2|Lieutenant Hornblower|C.S. Forester|1|The Hornblower Saga|2|0-316-29063-7|1951||1|
INSERT INTO books (book_id, title, pub_year) VALUES (2, 'Lieutenant Hornblower', 1951);
INSERT INTO books_authors (book_id, author_id) VALUES (2, 1);
INSERT INTO book_series (book_id, series_id, book_in_series) VALUES (2, 1, 2);
INSERT INTO books_read (book_id, was_read, date_r

INSERT INTO isbns (book_id, isbn, is_main) VALUES (2, '0316290637', 'TRUE');
-- 3|Mr. Midshipman Hornblower|C.S. Forester|1|The Hornblower Saga|1|0-316-29060-02(HC)~0-0316-28912-4 (PB)|1948||1|
INSERT INTO books (book_id, title, pub_year) VALUES (3, 'Mr. Midshipman Hornblower', 1948);
INSERT INTO book_series (book_id, series_id, book_in_series) VALUES (3, 1, 1);
INSERT INTO books_authors (book_id, author_id) VALUES (3, 1);
INSERT INTO books_read (book_id, was_read, date_read) VALUES (3, 'TRUE', null);
INSERT INTO isbns (book_id, isbn, is_main) VALUES (3, '03162906002', 'TRUE');
INSERT INTO isbns (book_id, isbn, is_main) VALUES (3, '00316289124', 'FALSE');
-- 4|Hornblower During the Crisis|C.S. Forester|1|The Hornblower Saga|4|0-316-28915-9 (HC)~0-316-28944-2 (PB)|1950||1|
INSERT INTO books (book_id, title, pub_year) VALUES (4, 'Hornblower During the Crisis', 1950);
INSERT INTO books_authors (book_id, author_id) VALUES (4, 1);
INSERT INTO book_series (book_id, series_id, book_in_series

INSERT INTO books_read (book_id, was_read, date_read) VALUES (4, 'TRUE', null);
INSERT INTO isbns (book_id, isbn, is_main) VALUES (4, '0316289159', 'TRUE');
INSERT INTO isbns (book_id, isbn, is_main) VALUES (4, '0316289442', 'TRUE');
-- 5|Admiral Hornblower in the West Indies|C.S. Forester|1|The Hornblower Saga|11|0-316-28941-8 (PB)|1957||1|
INSERT INTO books (book_id, title, pub_year) VALUES (5, 'Admiral Hornblower in the West Indies', 1957);
INSERT INTO books_authors (book_id, author_id) VALUES (5, 1);
INSERT INTO book_series (book_id, series_id, book_in_series) VALUES (5, 1, 11);
INSERT INTO books_read (book_id, was_read, date_read) VALUES (5, 'TRUE', null);
INSERT INTO isbns (book_id, isbn, is_main) VALUES (5, '0316289418', 'TRUE');
-- 6|Lord Hornblower|C.S. Forester|1|The Hornblower Saga|10|0-316-28943-4 (PB)|1946||1|
INSERT INTO books (book_id, title, pub_year) VALUES (6, 'Lord Hornblower', 1946);
INSERT INTO books_authors (book_id, author_id) VALUES (6, 1);
INSERT INTO book_ser
DELIMITER $$
DROP TRIGGER IF EXISTS `obs_after_update`$$
CREATE TRIGGER `obs_after_update` AFTER UPDATE 
ON `obs`
FOR EACH ROW
BEGIN
  	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "BABY OUTCOME" LIMIT 1) AND new.voided = 1 THEN
		SET @outcome = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND baby_outcome = @outcome AND baby_outcome_date = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "DELIVERY MODE" LIMIT 1) AND new.voided = 1 THEN
		SET @mode = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND delivery_mode = @mode AND delivery_date = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "NUMBER OF BABIES" LIMIT 1) AND 

		SET @mode = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND babies = @mode AND birthdate = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "OUTCOME" LIMIT 1) AND new.voided = 1 THEN
		SET @mode = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND outcome = @mode AND outcome_date = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "ADMISSION TIME" LIMIT 1) AND new.voided = 1 THEN
		SET @ward = (SELECT name FROM location WHERE location_id = new.location_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND admission_ward = @ward AND admission_date = new.value_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (S

		SET @diagnosis = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
		DELETE FROM patient_report WHERE patient_id = new.person_id AND diagnosis = @diagnosis AND diagnosis_date = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "ADMISSION SECTION" LIMIT 1) AND new.voided = 1 THEN
		SET @ward = (SELECT name FROM location WHERE location_id = new.location_id);	
		DELETE FROM patient_report WHERE patient_id = new.person_id AND source_ward = @ward AND destination_ward = new.value_text AND internal_transfer_date = new.obs_datetime AND obs_id = new.obs_id;
	ELSEIF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "ADMISSION SECTION" LIMIT 1) AND COALESCE(new.value_modifier, '') != '' THEN
		SET @ward = (SELECT name FROM location WHERE location_id = new.location_id);	
  		INSERT INTO patient_report (patient_id, source_ward, destination_ward, internal_transfer_date, obs_dat
-- Updates your spell file to allow Soul Abrasion AA to properly function off 'spellgroup 99'
-- If your using an older spell dbase this is required!
UPDATE spells_new SET spellgroup = 99 WHERE id =822	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =1471	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =1966	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =2717	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =2718	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =3228	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =4908	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =4910	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =6037	AND spellgroup = 0 AND targettype = 13 ;
UPDAT

UPDATE spells_new SET spellgroup = 99 WHERE id =6039	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =6102	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =10254	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =10255	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =10256	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =11621	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =11622	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =11623	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =11940	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =11941	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =119

UPDATE spells_new SET spellgroup = 99 WHERE id =12629	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =12630	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =12631	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =12632	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =12633	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =12634	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =15157	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =15158	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =15159	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =15205	AND spellgroup = 0 AND targettype = 13 ;
UPDATE spells_new SET spellgroup = 99 WHERE id =1
IF OBJECT_ID('dbo.wsp_getLocationByZipNew') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_getLocationByZipNew
    IF OBJECT_ID('dbo.wsp_getLocationByZipNew') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_getLocationByZipNew >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_getLocationByZipNew >>>'
END
go
/***********************************************************************
**
** CREATION:
**   Description: getLocationByZip 
**
*************************************************************************/
CREATE PROCEDURE  wsp_getLocationByZipNew
    @postalCode varchar(10)
AS
BEGIN
   BEGIN TRAN TRAN_getLocationByZipNew
   SELECT countryId, jurisdictionId, secondJurisdictionId, cityId 
   FROM PostalZipCode_New 
   WHERE zipcode=@postalCode
   IF @@error = 0
   BEGIN
      COMMIT TRAN TRAN_getLocationByZipNew
   END
   ELSE BEGIN
      ROLLBACK TRAN TRAN_getLocationByZipNew
   END
END
go
IF OBJECT_ID('dbo.wsp_getLocationByZipNew') IS NOT NULL
    PRINT '<<< CR
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE VIEW [dbo].[GalleryNames]
AS
SELECT     Name, ID
FROM         dbo.Gallery
GO
EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6


         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  
CREATE TABLE [Production].[ProductModel]
[ProductModelID] [int] NOT NULL IDENTITY(1, 1),
[Name] [dbo].[Name] NOT NULL,
[CatalogDescription] [xml] (CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,
[Instructions] [xml] (CONTENT [Production].[ManuInstructionsSchemaCollection]) NULL,
[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (newid()),
[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (getdate())
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModel] ADD CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED  ([ProductModelID]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name] ON [Production].[ProductModel] ([Name]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_rowguid] ON [Production].[ProductModel] ([rowguid]) ON [PRIMARY]
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription] ON [Production].[Pro

GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_Instructions] ON [Production].[ProductModel] ([Instructions])
GO
EXEC sp_addextendedproperty N'MS_Description', N'Product model classification.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', NULL, NULL
GO
EXEC sp_addextendedproperty N'MS_Description', N'Detailed product catalog information in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'CatalogDescription'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Manufacturing instructions in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Instructions'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Product model description.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Name'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primar

GO
EXEC sp_addextendedproperty N'MS_Description', N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'rowguid'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of NEWID()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_rowguid'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'PK_ProductModel_ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Unique nonclustered index.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'INDEX', N'AK_ProductModel_Name'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Un
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 18. März 2002 um 10:07
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_gt_vers`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `SubNav`
CREATE TABLE SubNav (
  ID int(11) NOT NULL default '0',
  CreatedBy int(11) NOT NULL default '0',
  CreatedDateTime float(16,4) NOT NULL default '0.0000',
  ChangedBy int(11) NOT NULL default '0',
  ChangedDateTime float(16,4) NOT NULL default '0.0000',
  active int(1) NOT NULL default '0',
  HeadNavID int(11) NOT NULL default '0',
  NameDE varchar(255) NOT NULL default '',
  Name_en varchar(255) NOT NULL default '',
  Name_fr varchar(255) NOT NULL default '',
  Name_es varchar(255) NOT NULL default '0',
  Name_it varchar(255) NOT NULL default '',
  TextID int(11) NOT NULL default '0',
  PRIMARY KEY  (ID)
) TYPE=MyISAM;
# Date
﻿CREATE VIEW dbo.v_GroupRole
AS
SELECT          Id, Code, Name
FROM              dbo.v_GroupRole_ican5
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
       

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  

      End
      Begin Tables = 
         Begin Table = "v_GroupRole_ican5"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 122
               Right = 203
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'v_GroupRole';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'd
-- phpMyAdmin SQL Dump
-- version 3.5.2.2
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Erstellungszeit: 18. Nov 2012 um 23:23
-- Server Version: 5.5.27
-- PHP-Version: 5.4.7
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Datenbank: `sas`
--
-- --------------------------------------------------------
--
-- Tabellenstruktur für Tabelle `sas_main_menu`
--
DROP TABLE IF EXISTS `sas_main_menu`;
CREATE TABLE IF NOT EXISTS `sas_main_menu` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `page` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=11 ;
--
-- Daten für Tabelle `sas_main_menu`
--
INSERT INTO `sas_main_menu` (`id`, `name`, `page`) VALUES
(1, 'START', 'ho

(2, 'APACHE', 'apache'),
(3, 'POSTFIX', 'postfix'),
(4, 'FTP', 'ftp'),
(5, 'MYSQL', 'mysql'),
(6, 'SAMBA', 'samba'),
(7, 'MANAGEMENT', 'management'),
(8, 'WEBUSER', 'webuser'),
(9, 'TOOLS', 'tools'),
(10, 'PLUGINS', 'plugins');
-- --------------------------------------------------------
--
-- Tabellenstruktur für Tabelle `sas_page_content`
--
DROP TABLE IF EXISTS `sas_page_content`;
CREATE TABLE IF NOT EXISTS `sas_page_content` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `page` varchar(255) NOT NULL,
  `spage` varchar(255) NOT NULL,
  `inc_path` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=11 ;
--
-- Daten für Tabelle `sas_page_content`
--
INSERT INTO `sas_page_content` (`id`, `page`, `spage`, `inc_path`) VALUES
(1, 'home', '', 'inc/home/home.inc.php'),
(2, 'tools', 'console', 'inc/tools/console.inc.php'),
(3, 'home', 'overview', 'inc/index/overview.inc.php'),
(4, 'home', 'panel', 'inc/index/panel.inc.php'),
(5, 'home', 'stats', 'i

(6, 'home', 'doku', 'inc/index/doku.inc.php'),
(7, 'home', 'help', 'inc/index/help.inc.php'),
(8, 'home', 'about', 'inc/index/about.inc.php'),
(9, 'mysql', 'console', 'inc/mysql/sqlcmd.inc.php'),
(10, 'mysql', 'overview', 'inc/mysql/overview.inc.php');
-- --------------------------------------------------------
--
-- Tabellenstruktur für Tabelle `sas_side_nav`
--
DROP TABLE IF EXISTS `sas_side_nav`;
CREATE TABLE IF NOT EXISTS `sas_side_nav` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `page` varchar(255) NOT NULL,
  `spage` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=11 ;
--
-- Daten für Tabelle `sas_side_nav`
--
INSERT INTO `sas_side_nav` (`id`, `name`, `page`, `spage`) VALUES
(1, 'Home', 'home', ''),
(2, 'Konsole', 'tools', 'console'),
(3, 'System&uuml;bersicht', 'home', 'overview'),
(4, 'QuickPanel', 'home', 'panel'),
(5, 'Meldungen', 'home', 'notifications'),
(6, 'Serverstatistiken', 'home', 'sta
/*
Navicat MySQL Data Transfer
Source Server         : 127.0.0.1
Source Server Version : 50520
Source Host           : localhost:3306
Source Database       : dishes
Target Server Type    : MYSQL
Target Server Version : 50520
File Encoding         : 65001
Date: 2014-03-14 12:06:06
*/
SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `mx_nav`
-- ----------------------------
DROP TABLE IF EXISTS `mx_nav`;
CREATE TABLE `mx_nav` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '导航id',
  `val` varchar(50) COLLATE utf8_unicode_ci NOT NULL COMMENT '导航Action',
  `name` varchar(50) COLLATE utf8_unicode_ci NOT NULL COMMENT '导航名字',
  `show` tinyint(3) unsigned NOT NULL COMMENT '是否显示,0:需要权限过滤，1:无需过滤,直接显示',
  `tplshow` tinyint(3) unsigned NOT NULL DEFAULT '1' COMMENT '模版中是否显示，0:不现实，1:默认显示',
  `parentid` int(10) unsigned NOT NULL COMMENT '父id',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='导航以及权限控制类

-- ----------------------------
-- Records of mx_nav
-- ----------------------------
INSERT INTO `mx_nav` VALUES ('1', 'Index', '系統首頁', '1', '1', '0');
INSERT INTO `mx_nav` VALUES ('2', 'Menu', '食譜管理', '0', '1', '0');
INSERT INTO `mx_nav` VALUES ('3', 'Stream', '流水帳統計', '0', '1', '0');
INSERT INTO `mx_nav` VALUES ('4', 'Personal', '個人訊息', '1', '1', '0');
INSERT INTO `mx_nav` VALUES ('5', 'System', '系統設定', '0', '1', '0');
INSERT INTO `mx_nav` VALUES ('6', 'Table', '餐桌設定', '0', '1', '0');
INSERT INTO `mx_nav` VALUES ('7', 'tabList', '桌號列表', '1', '1', '1');
INSERT INTO `mx_nav` VALUES ('8', 'free', '空閒中桌位', '1', '1', '1');
INSERT INTO `mx_nav` VALUES ('9', 'employ', '使用中桌位', '1', '1', '1');
INSERT INTO `mx_nav` VALUES ('11', 'invoicing', '已結帳訂單', '1', '1', '1');
INSERT INTO `mx_nav` VALUES ('12', 'typeList', '分類列表', '0', '1', '2');
INSERT INTO `mx_nav` VALUES ('13', 'addType', '增加分類', '0', '1', '2');
INSERT INTO `mx_nav` VALUES ('14', 'menuList', '食譜列表', '0', '1', '2');
INSERT INTO `mx_n

INSERT INTO `mx_nav` VALUES ('16', 'hotMenu', '熱賣菜', '0', '1', '2');
INSERT INTO `mx_nav` VALUES ('17', 'material', '食材列表', '0', '1', '2');
INSERT INTO `mx_nav` VALUES ('18', 'day', '今日流水帳', '0', '1', '3');
INSERT INTO `mx_nav` VALUES ('19', 'week', '周流水帳', '0', '1', '3');
INSERT INTO `mx_nav` VALUES ('20', 'month', '月流水帳', '0', '1', '3');
INSERT INTO `mx_nav` VALUES ('21', 'all', '總流水帳', '0', '1', '3');
INSERT INTO `mx_nav` VALUES ('22', 'password', '修改密碼', '1', '1', '4');
INSERT INTO `mx_nav` VALUES ('23', 'info', '修改個人訊息', '1', '1', '4');
INSERT INTO `mx_nav` VALUES ('24', 'adminList', '操作者', '0', '1', '5');
INSERT INTO `mx_nav` VALUES ('25', 'editAdmin', '增加操作者', '0', '1', '5');
INSERT INTO `mx_nav` VALUES ('26', 'logs', '日誌', '0', '1', '5');
INSERT INTO `mx_nav` VALUES ('27', 'tableList', '餐桌列表', '0', '1', '6');
INSERT INTO `mx_nav` VALUES ('28', 'areaList', '區域列表', '0', '1', '6');
INSERT INTO `mx_nav` VALUES ('29', 'editArea', '增加區域', '0', '1', '6');
INSERT INTO `mx_nav` VALUES 
  CREATE OR REPLACE  VIEW HV_DIVIDEND_COMPUTAION (NAV_WKEND_DT, NAV_SCHEME, NAV_SCHEMECLASS, NAV_SCHCLASS_NAME, NAV_NET_ASSET_AMOUNT, NAV_UNITS, NAV, PREV_NAV_UNITS, UNIT_MOVEMENT, UNREAL_AMOUNT, PREV_UNREAL_AMOUNT, CAMCODE_DIFF, CLOSING_BALANCE, CORPORATE_UNITS, CORPORATE_NET_ASSETS, CORP_DD_DR, CORP_DD_TAX_DR, INDIVIDUAL_UNITS, INDIVIDUAL_NET_ASSETS, INDV_DD_DR, INDV_DD_TAX_DR, CORP_LESS_DD, INDIVIDUAL_LESS_DD, EX_DIVIDEND_NAV, PU_DIVIDEND_NAV) AS 
  SELECT NAV_WKEND_DT,
    NAV_SCHEME,
    NAV_SCHEMECLASS,
    NAV_SCHCLASS_NAME,
    (NAV_NET_ASSET_AMOUNT) NAV_NET_ASSET_AMOUNT,
    ( NAV_UNITS) NAV_UNITS,
    (NAV_NET_ASSET_AMOUNT/ NAV_UNITS) NAV,
    PREV_NAV_UNITS,
    NVL(( NAV_UNITS),0) - NVL(PREV_NAV_UNITS,0) UNIT_MOVEMENT,
    (UNREAL_AMOUNT) UNREAL_AMOUNT,
    prev_unreal_amount ,
    ( nav_units - hupd_capital_control_cams.closing_balance) camcode_diff,
    /* CASE
    WHEN NVL(PREV_NAV_UNITS,0) > 0
    THEN ( AMOUNT + NVL(PREV_UNREAL_AMOUNT,0))/ UNIT_CAPITAL * (NVL(( NAV_UNI

    ELSE TO_NUMBER(0)
    END AS DAILY_UPR_ENTRY,*/
    /* CASE
    WHEN NVL(PREV_NAV_UNITS,0) > 0
    THEN (((NVL(PREV_UNREAL_AMOUNT,0)+ ( -67207167.94) )/ ( NVL(PREV_NAV_UNITS,0)))* (NVL(NVL(( NAV_UNITS),0) - NVL(PREV_NAV_UNITS,0),0)) )
    ELSE TO_NUMBER(0)
    END AS DAILY_UPR_ENTRY, ---OPENING BAL TO BE CONSIDERED...*/
    -- COMMENTED BY RAM TO REMOVE HARDCODING
    HUPD_CAPITAL_CONTROL_CAMS.CLOSING_BALANCE,
    HUPD_CAPITAL_CONTROL_CAMS.OTHERS CORPORATE_UNITS,
    (HUPD_CAPITAL_CONTROL_CAMS.OTHERS        *(NAV_NET_ASSET_AMOUNT/ NAV_UNITS)) CORPORATE_NET_ASSETS,
    (HUPD_CAPITAL_CONTROL_CAMS.OTHERS        * PU_DIVIDEND_NAV) CORP_DD_DR,
    (ROUND((HUPD_CAPITAL_CONTROL_CAMS.OTHERS * PU_DIVIDEND_NAV)*0.3399)-18500-2500) CORP_DD_TAX_DR,
    (NAV_UNITS                               - HUPD_CAPITAL_CONTROL_CAMS.OTHERS) INDIVIDUAL_UNITS,
    ((NAV_UNITS                              - HUPD_CAPITAL_CONTROL_CAMS.OTHERS) *(NAV_NET_ASSET_AMOUNT/ NAV_UNITS)) INDIVIDUAL_NET_ASSETS,
    ((NAV

    ROUND(((NAV_UNITS                        - HUPD_CAPITAL_CONTROL_CAMS.OTHERS)* PU_DIVIDEND_NAV)*0.28325) INDV_DD_TAX_DR,
    ((HUPD_CAPITAL_CONTROL_CAMS.OTHERS       * PU_DIVIDEND_NAV)+((ROUND((HUPD_CAPITAL_CONTROL_CAMS.OTHERS * PU_DIVIDEND_NAV)*0.3399)-18500-2500) ))CORP_LESS_DD,
    ((NAV_UNITS                              - HUPD_CAPITAL_CONTROL_CAMS.OTHERS) + ROUND(((NAV_UNITS - HUPD_CAPITAL_CONTROL_CAMS.OTHERS)* PU_DIVIDEND_NAV)*0.28325))INDIVIDUAL_LESS_DD,
    hupd_dividend.ex_dividend_nav,
    hupd_dividend.pu_dividend_nav
    /*  ((HUPD_CAPITAL_CONTROL_CAMS.OTHERS)        * 0.002) CORP_DD_DR,-- COMMENTED BY RAM TO REMOVE HARDCODING
    (ROUND(((HUPD_CAPITAL_CONTROL_CAMS.OTHERS) * 0.002)*0.3399,0)-18500-2500) CORP_DD_TAX_DR, -- COMMENTED BY RAM TO REMOVE HARDCODING
    ((NAV_UNITS                                - HUPD_CAPITAL_CONTROL_CAMS.OTHERS)* 0.002) INDV_DD_DR,-- COMMENTED BY RAM TO REMOVE HARDCODING
    ROUND(((NAV_UNITS                          - HUPD_CAPITAL_CONTROL_C
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2014-04-16 16:16:35','','farcry_CLIENTUD','','farcry','','','2007-12-17 17:18:21',0,'approved','','E689D726-BC6A-D2E8-987F2D76D6C17597','_self','aObjectIDs','footer,utility','Footer','Footer','','');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2014-04-16 16:16:24','','farcry_CLIENTUD','','farcry','','','2007-12-17 17:18:21',0,'approved','','E689D725-D4BC-D18E-A0EDEBAF479E31DC','_self','aObjectIDs','search','Search','Search','','');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,

INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2014-04-16 16:15:54','','farcry_CLIENTUD','','farcry_CLIENTUD','','','2011-11-14 15:33:59',0,'approved','','DF5D2240-0E79-11E1-9EDD4A60BC869D4C','_self','aObjectIDs','dmNews','News','News','','CDD3B33E-A463-9B75-DC0150D316830765');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2014-04-16 16:15:39','','farcry_CLIENTUD','','farcry_CLIENTUD','','','2011-11-11 16:39:20',0,'approved','','81450EB0-0C27-11E1-8CC5001C42000009','_self','aObjectIDs','','Typography','Typography','','CDD3B33E-A463-9B75-DC0150D316830765');
INSERT INTO dmNavigation (datetimelastupdated,lockedB

INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2014-04-16 16:15:15','','farcry_CLIENTUD','','farcry','','','2007-12-17 17:18:21',0,'approved','','E689D721-B6C9-605B-DE1D813E4CDA3339','_self','aObjectIDs','home','Home','Home','','');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,datetimecreated,locked,status,ExternalLink,ObjectID,target,navType,lNavIDAlias,label,title,externalRedirectURL,ownedby) VALUES ('2011-11-11 11:37:36','','farcry_CLIENTUD','','farcry_CLIENTUD','','','2011-11-11 11:37:36',0,'draft','','5A3BB780-0BFD-11E1-BAE44A60BC869D4C','','aObjectIDs','','(incomplete)','','','CDD3B33E-A463-9B75-DC0150D316830765');
INSERT INTO dmNavigation (datetimelastupdated,lockedBy,lastupdatedby,fu,createdby,options,internalRedirectID,dateti
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (2485, "LH Locked Post Status", "4.1", "0.01", "3.0", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (349308, 2485, "LH_locked_post_status_plugin", "append_post_status_list", "/lh-locked-post-status.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (349309, 2485, "LH_locked_post_status_plugin", "display_locked_state", "/lh-locked-post-status.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (349310, 2485, "LH_locked_post_status_plugin", "protect_locked_posts", "/lh-locked-post-status.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (349311, 2485, "LH_locked_post_status_plugin", "current_user_can_view", "/lh-locked-pos

insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (349312, 2485, "LH_locked_post_status_plugin", "__construct", "/lh-locked-post-status.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (349313, 2485, "LH_locked_post_status_plugin", "create_locked_custom_post_status", "/lh-locked-post-status.php", now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (27012, 2485, "init", "array($this,'create_locked_custom_post_status')", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (27013, 2485, "admin_footer-post.php", "array($this,'append_post_status_list')", 10, now(), now());
insert into filters (id, plugin_id, tag_name, filter_callback, filter_priority, created, modified) values (9038, 2485, "display_post_states", "array($this,'display_locked_s
CREATE TABLE `flash` (
    `id` INT(11) NOT NULL  AUTO_INCREMENT,
    `onlinedate`    DATE        NOT NULL  COMMENT '闪购日期',
    `itemid`        INT(11)     NOT NULL  COMMENT '商品ID',
    `starttime`     DATETIME              COMMENT '开始时间',
    `endtime`       DATETIME              COMMENT '结束时间',
    `status`        TINYINT(4)    DEFAULT 0 COMMENT '状态',
    `croweds`       varchar(255)    COMMENT '适用人群',
    `gender`        tinyint(4)                COMMENT '适用性别',
    `priority`        INT(11)        NOT NULL default 0 comment '优先级',
    `createtime`    DATETIME              COMMENT '创建时间',
  PRIMARY KEY (`id`),
  KEY `idx_itemid` (`itemid`),
  KEY `idx_status` (`status`),
  UNIQUE KEY `uidx_onlinedate_itemid` (`onlinedate`,`itemid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='闪购';
CREATE TABLE `flash_index` (
    `id` int(11) not null primary key auto_increment,
    `status` int(11) not null comment '状态',
    `crowed` int(11) not null comment '适用人群',
    `gender` int(11) not null c
select zsse_DropView ('tsrv_feedback_v');
create or replace view tsrv_feedback_v as
select
 zspm_ptaskfeedbackline_id AS tsrv_feedback_v_id,
 ad_client_id,
 ad_org_id,
 isactive,
 created,
 createdby,
 updated,
 updatedby,
 c_project_id,
 c_projecttask_id,
 c_calendarevent_id,
 ad_user_id as employee_id,
 ma_machine_id,
 description,
 workdate,
 hour_from,
 hour_to,
 actualcostamount,
 c_salary_category_id,
 hours,
 breaktime,
 traveltime,
 specialtime as timeunderhelmet,
 specialtime2 as timeunderhelmet2,
 triggeramt as triggeramt,
 overtimehours,nighthours,issaturday,issunday,isholiday
 from zspm_ptaskfeedbackline;
create or replace rule tsrv_feedback_delete as
on delete to tsrv_feedback_v do instead
delete from zspm_ptaskfeedbackline where
       zspm_ptaskfeedbackline_id = old.tsrv_feedback_v_id;
       
create or replace rule tsrv_feedback_insert as
on insert to tsrv_feedback_v do instead 
    insert into zspm_ptaskfeedbackline(zspm_ptaskfeedbackline_id, ad_client_id, ad_org_id, i

                description, workdate, hour_from, hour_to, c_salary_category_id, hours, breaktime, traveltime, specialtime, specialtime2, triggeramt) 
    values
            (new.tsrv_feedback_v_id,new.ad_client_id, new.ad_org_id, new.isactive, new.created, new.createdby, new.updated, new.updatedby, new.c_project_id, new.c_projecttask_id, new.c_calendarevent_id, new.employee_id, new.ma_machine_id,
             new.description, new.workdate, new.hour_from, new.hour_to, new.c_salary_category_id, new.hours, new.breaktime, new.traveltime,new.timeunderhelmet,new.timeunderhelmet2,new.triggeramt);
             
create or replace rule tsrv_feedback_update as
on update to tsrv_feedback_v do instead 
      update zspm_ptaskfeedbackline set
        ad_org_id=new.ad_org_id,
        isactive=new.isactive,
        updated=new.updated,
        updatedby=new.updatedby,
        c_project_id=new.c_project_id,
        c_projecttask_id=new.c_projecttask_id,
        c_calendarevent_id=new.c_calendarevent_
  CREATE TABLE "SYSTEM"."RESERVATION" 
   (	"RESERVATION_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"USER_ID" VARCHAR2(20 BYTE), 
	"VILLA_ID" VARCHAR2(20 BYTE), 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"COUPON_ID" VARCHAR2(20 BYTE), 
	"DEPOSIT" NUMBER, 
	 CONSTRAINT "RESERVATION_PK" PRIMARY KEY ("RESERVATION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE, 
	 CONSTRAINT "USERID_TOUSERTABLE" FOREIGN KEY ("USER_ID")
	  REFERENCES "SYSTEM"."USEROF" ("USER_ID") ENABLE, 
	 CONSTRAINT "VILLAID_TO_VILLA" FOREIGN KEY ("VILLA_ID")
	  REFERENCES "SYSTEM"."VILLA" ("VILLA_ID") ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GRO
﻿create or replace procedure u1.ETLT_JOURNAL_SALDO is
    v_max_id                number;
    d_max_date_saldo        date;
    d_max_id_saldo          number;
    vStrDate                date := sysdate;
    s_mview_name            varchar2(30) := 'T_RBO_Z#JOURNAL_SALDO';
    d_src_commit_date_last date; --дата последней загруженной строки
    d_src_commit_date_load date; --дата, по которую делаем загрузку
  begin
     select max(src_commit_date)
        into d_src_commit_date_load
        from s02.s$Z#JOURNAL_SALDO@rdwh_exd;
      select last_date-10/24/60/60
        into d_src_commit_date_last
        from T_RDWH_INCREMENT_TABLES_LOAD
       where object_name = 'T_RBO_Z#JOURNAL_SALDO';
     delete from T_RBO_Z#JOURNAL_SALDO
         where id in (select distinct id
                        from s02.s$Z#JOURNAL_SALDO@rdwh_exd
                       where src_commit_date between d_src_commit_date_last and d_src_commit_date_load);
    insert /*+ APPEND */ into T_RBO_Z#JOURNAL_SALDO
    s
IF OBJECT_ID('dbo.wsp_newUserCreditExpiry') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newUserCreditExpiry
    IF OBJECT_ID('dbo.wsp_newUserCreditExpiry') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newUserCreditExpiry >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newUserCreditExpiry >>>'
END
go
  /******************************************************************
**
** CREATION:
**   Author: Yan Liu	 
**   Date:  Mar 15 2004
**   Description: Inserts a row into UserCreditExpiry
**           
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
******************************************************************************/
CREATE PROCEDURE wsp_newUserCreditExpiry
    @userId        NUMERIC(12,0),
    @userLastOn    INT,
    @emailStatus   CHAR(1),
    @dateEmailSent DATETIME,
    @dateModified  DATETIME
AS
     
BEGIN TRAN TRAN_newUserCreditExpiry
    BEGIN
        INSERT INTO UserCreditExpiry (
            userId,
            userLastOn,
   
/*
 * $Id: html-report.sql 4512 2011-10-11 02:29:08Z unsaved $
 *
 * Sample/Template for writing an HTML Report
 */
-- Populate sample data
create table t (i integer, vc varchar(20));
insert into t values(1, 'one');
insert into t values(2, 'two');
insert into t values(3, 'three');
insert into t values(4, 'four');
insert into t values(5, 'five');
commit;
-- IMPORTANT:  \o will append by default.  If you want to write a new file,
-- it's your responsibility to check that a file of the same name does not
-- already exist (or remove it).
-- Follow the following examples to use your own HTML fragment files.
-- * *TOP_HTMLFRAG_FILE = /tmp/top.html
-- * *BOTTOM_HTMLFRAG_FILE = /tmp/bottom.html
-- The default TOP_HTMLFRAG_FILE has a reference to this PL variable.
* REPORT_TITLE = Blaine's Sample Report
-- The default will also override its CSS style settings with your own if you
-- put them in a file named "overrides.css" in same directory alongside your
-- reports ("report.html" in this examp
/*
CORT - Oracle database deployment and continuous integration tool
Copyright (C) 2013-2014  Softcraft Ltd - Rustam Kafarov
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
  Description: Check object privilege is granted
  ----------------------------------------------------------------------------------------------------------------------     
  Release | Author(s)         | Comments
  -----------------------------------------

  14.02   | Rustam Kafarov    | Checks that given object privilege is granted
  ----------------------------------------------------------------------------------------------------------------------  
*/
DEFINE privilege = '&1'
DEFINE object    = '&2'
SET TERM OFF
SPOOL OFF
COLUMN c_check_result NEW_VALUE check_result NOPRINT
COLUMN c_prompt_text NEW_VALUE prompt_text NOPRINT
SELECT * 
  FROM (SELECT 'privilege '||privilege||' ON '||table_name||' found' AS c_prompt_text,
               'dummy.sql' AS c_check_result
           FROM user_tab_privs
          WHERE table_name = '&object'
            AND privilege = '&privilege' 
         UNION ALL
        SELECT 'privilege '||privilege||' is found' AS c_prompt_text,
               'dummy.sql' AS c_check_result
          FROM (SELECT privilege
                  FROM user_role_privs p
                 INNER JOIN role_sys_privs rp
                    ON p.granted_role = rp.role
                 UNION    
                SELECT privilege 
   
create or replace TRIGGER AIR_POSITIONNEMENT AFTER INSERT ON POSITIONNEMENT 
FOR EACH ROW 
DECLARE
 TMP_ID_FC NUMBER;
BEGIN
  IF :NEW.ID_CPTT IS NOT NULL THEN
   INSERT INTO W_SPC_CPTT (ID_SPC, ID_CPTT, NIVEAU_RIC, NIVEAU_SPC) VALUES (:NEW.ID_SPC, :NEW.ID_CPTT, NULL, :NEW.NIVEAU_COMPETENCE);
  ELSIF :NEW.ID_FC IS NOT NULL THEN
   INSERT INTO W_SPC_FC (ID_SPC, ID_FC, NIVEAU_RIC, NIVEAU_SPC) VALUES (:NEW.ID_SPC, :NEW.ID_FC, NULL, :NEW.NIVEAU_MATURITE);
  ELSIF :NEW.ID_CPT IS NOT NULL THEN
    IF :NEW.ID_FC_CAP IS NOT NULL THEN
      SELECT :NEW.ID_FC_CAP INTO TMP_ID_FC FROM DUAL;
    ELSE
      Select ID_FC INTO TMP_ID_FC FROM COMPETENCE WHERE ID_CPT = :NEW.ID_CPT;
    END IF;
   INSERT INTO W_SPC_CPT (ID_SPC, ID_FC, ID_CPT, NIVEAU_RIC, NIVEAU_SPC) VALUES (:NEW.ID_SPC, TMP_ID_FC, :NEW.ID_CPT, NULL, :NEW.NIVEAU_COMPETENCE);
  ELSIF :NEW.ID_CAP IS NOT NULL THEN
    IF :NEW.ID_FC_CAP IS NOT NULL THEN
      SELECT :NEW.ID_FC_CAP INTO TMP_ID_FC FROM DUAL;
    ELSE
      Select ID_FC INTO TMP_
--Display
set linesize 250
column email format a33
column dateDeNaissance format a15
column prenom format a10
column nom format a12
column pseudo format a10
--Joueurs : {pseudo {pk}, nom, prénom, dateDeNaissance, email, nbPartiesJouees}
CREATE TABLE Joueurs (
	pseudo VARCHAR(30),
	nom VARCHAR(50) NOT NULL,
	prenom VARCHAR(50) NOT NULL,
	dateDeNaissance DATE NOT NULL, --DATE - format YYYY-MM-DD
	email VARCHAR(80) NOT NULL,
	nbPartiesJouees INT DEFAULT 0,
	PRIMARY KEY (pseudo),
	CHECK (
		REGEXP_LIKE (pseudo,'^[A-Za-z0-9]+[A-Za-z0-9._%+-]')
		AND (REGEXP_LIKE (nom,'^[A-Za-z][A-Za-z]*$'))
		AND (REGEXP_LIKE (prenom,'^[A-Za-z][A-Za-z]*$'))
		AND (REGEXP_LIKE (email,'^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$'))
		AND (nbPartiesJouees >= 0)
	)
);
--------------------------------------------------------------------------------
--Parties : {iDPartie {pk}, début, finie}
CREATE TABLE Parties (
	iDPartie INT,
	debut DATE DEFAULT CURRENT_DATE,
	finie NUMBER(1) DEFAULT 0,
	PRIMARY KEY (iDPa

	CHECK ((iDPartie >= 0) AND (finie in (0,1)))
);
--Trigger qui vérifie que l'attribut "debut" a pour valeur le jour actuel
CREATE OR REPLACE TRIGGER trg_check_dates
BEFORE INSERT ON Parties
FOR EACH ROW
BEGIN
	IF( to_date(:new.debut, 'YYYY-MM-DD') <> to_date(CURRENT_DATE, 'YYYY-MM-DD') )
	THEN
		RAISE_APPLICATION_ERROR( -20001, 
		'Invalid debut: debut must be set to the current date - value = ' || 
		to_char( to_date(:new.debut, 'YYYY-MM-DD') ) || '. Instead of ' || to_char(to_date(CURRENT_DATE, 'YYYY-MM-DD')));
		END IF;
END;
--------------------------------------------------------------------------------
--Vainqueurs : {iDPartie{fk,pk}, pseudo{fk} }
CREATE TABLE Vainqueurs (
	iDPartie INT,
	pseudo VARCHAR(30),
	PRIMARY KEY (iDPartie),
    FOREIGN KEY (iDPartie) REFERENCES Parties (iDPartie),
    FOREIGN KEY (pseudo) REFERENCES Joueurs (pseudo)
);
--------------------------------------------------------------------------------
--Participants : {joueur1{fk}, joueur2{fk}, iDPartie{pk,

CREATE TABLE Participants (
	iDPartie INT,
	joueur1 VARCHAR(30) NOT NULL,
	joueur2 VARCHAR(30) NOT NULL,
	PRIMARY KEY (iDPartie),
    FOREIGN KEY (iDPartie) REFERENCES Parties (iDPartie),
    FOREIGN KEY (joueur1) REFERENCES Joueurs (pseudo),
    FOREIGN KEY (joueur2) REFERENCES Joueurs (pseudo),
    CHECK (
    		joueur1 <> joueur2
    	)
);
--------------------------------------------------------------------------------
--Actions : {iDPartie {fk, pk}, pseudo{pk, fk}, iDBateau{fk}, nTour {pk}, nAction{pk}, x, y, type (tir, dep), direction (rg, rd, av, ar)}
CREATE TABLE Actions (
	iDPartie INT,
	pseudo VARCHAR(30),
	iDBateau INT,
	nTour INT DEFAULT 0 ,
	nAction INT DEFAULT 0,
	x INT,
	y INT,
	type VARCHAR(3) NOT NULL,
	direction VARCHAR(2),
	PRIMARY KEY (iDPartie, pseudo, nTour, nAction),
    FOREIGN KEY (iDPartie, pseudo, iDBateau) REFERENCES Bateaux (iDPartie, pseudo, iDBateau),
	CHECK (
		nTour >= 0
		AND nAction >= 0
		AND	(x BETWEEN 0 AND 9)
    	AND (y BETWEEN 0 AND 9)
    	AND 
--
-- database_schema_17-18.sql
--
-- Version: $Revision$
--
-- Date:    $Date: 2009-04-23 22:26:59 -0500 (Thu, 23 Apr 2009) $
--
-- The contents of this file are subject to the license and copyright
-- detailed in the LICENSE and NOTICE files at the root of the source
-- tree and available online at
--
-- http://www.dspace.org/license/
--
--
-- SQL commands to upgrade the database schema of a live DSpace 1.7 or 1.7.x
-- to the DSpace 1.8 database schema
--
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
--
-------------------------------------------
-- New column for bitstream order DS-749 --
-------------------------------------------
ALTER TABLE bundle2bitstream ADD bitstream_order INTEGER;
--Place the sequence id'
ALTER TABLE `auto.termi.lv`.`url` ADD COLUMN `last_checked` DATETIME  DEFAULT NULL AFTER `added`;
ALTER TABLE `auto.termi.lv`.`model` ADD COLUMN `total` INT(8)  NOT NULL DEFAULT 0 AFTER `order`;
ALTER TABLE `auto.termi.lv`.`mark` ADD COLUMN `total` INT(8)  NOT NULL DEFAULT 0 AFTER `name`;
ALTER TABLE `auto.termi.lv`.`auto` ADD COLUMN `published` tinyint(1)  NOT NULL DEFAULT 1 AFTER `telephone`;
ALTER TABLE `auto.termi.lv`.`auto` ADD COLUMN `correct` tinyint(1)  NOT NULL DEFAULT 1 AFTER `published`;
CREATE TRIGGER `auto.termi.lv`.`insert_auto`
AFTER INSERT ON `auto` FOR EACH ROW
BEGIN
	UPDATE `model`
	SET `total`=(SELECT COUNT(`id`) FROM `auto` WHERE model_id=NEW.model_id AND `published`=1) WHERE `id`=NEW.model_id;
END
CREATE TRIGGER `auto.termi.lv`.`update_auto`
AFTER UPDATE ON `auto` FOR EACH ROW
BEGIN
	UPDATE `model`
	SET `total`=(SELECT COUNT(`id`) FROM `auto` WHERE model_id=NEW.model_id AND `published`=1) WHERE `id`=NEW.model_id;
	SET `total`=(SELECT COUNT(`id`) FROM `auto` WHERE m
/*L
   Copyright SAIC
   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/cabio/LICENSE.txt for details.
L*/
@$LOAD/indexer_new.sql ar_ec
@$LOAD/indexer_new.sql ar_ensembl
@$LOAD/indexer_new.sql ar_omim_id
@$LOAD/indexer_new.sql ar_rna_probesets_affy
@$LOAD/indexer_new.sql ar_alignments
@$LOAD/indexer_new.sql ar_chromosomal_location
@$LOAD/indexer_new.sql ar_entrez_gene
@$LOAD/indexer_new.sql ar_gene_symbol
@$LOAD/indexer_new.sql ar_gene_title
@$LOAD/indexer_new.sql ar_go_biological_process
@$LOAD/indexer_new.sql ar_go_cellular_component
@$LOAD/indexer_new.sql ar_go_molecular_function
@$LOAD/indexer_new.sql ar_pathway
@$LOAD/indexer_new.sql ar_refseq_protein
@$LOAD/indexer_new.sql ar_refseq_transcripts
@$LOAD/indexer_new.sql ar_representative_public_id
@$LOAD/indexer_new.sql ar_swissprot
@$LOAD/indexer_new.sql ar_unigene_id
@$LOAD/indexer_new.sql zstg_interpro
@$LOAD/indexer_new.sql zstg_rna_probesets
@$LOAD/indexer_new.sql zstg_genetic_map
@$LOAD/

@$LOAD/indexer_new.sql zstg_pop_frequency
@$LOAD/indexer_new.sql zstg_snp_affy
@$LOAD/indexer_new.sql zstg_snp_associated_gene
@$LOAD/indexer_new.sql zstg_exon_affy
@$LOAD/indexer_new.sql zstg_exon_trans_affy
@$LOAD/indexer_new.sql zstg_exon_trans_genes
@$LOAD/indexer_new.sql zstg_rna_agilent
@$LOAD/indexer_new.sql zstg_cgh_accessions
@$LOAD/indexer_new.sql zstg_cgh_agilent
@$LOAD/indexer_new.sql ar_ensembl_tmp
@$LOAD/indexer_new.sql ar_ec_tmp
@$LOAD/indexer_new.sql ar_omim_id_tmp
@$LOAD/indexer_new.sql ar_rna_probesets_affy_tmp
@$LOAD/indexer_new.sql ar_alignments_tmp
@$LOAD/indexer_new.sql ar_chromosomal_location_tmp 
@$LOAD/indexer_new.sql ar_entrez_gene_tmp 
@$LOAD/indexer_new.sql ar_gene_symbol_tmp 
@$LOAD/indexer_new.sql ar_gene_title_tmp 
@$LOAD/indexer_new.sql ar_go_biological_process_tmp 
@$LOAD/indexer_new.sql ar_go_cellular_component_tmp 
@$LOAD/indexer_new.sql ar_go_molecular_function_tmp 
@$LOAD/indexer_new.sql ar_omim_id_tmp 
@$LOAD/indexer_new.sql ar_pathway_tmp 
@$LOAD
/*
 * Update the main fact table with the results from the latest pulls
 */
set @oldMaxRunId = (select max(max_run_id) from fct_ad_month_site_placements_max_run_id);
set @newMaxRunId = (select max(run_id) from fct_run_host_depth_ad);
drop table if exists tmp_update_fct_ad_month_site_placements;
create temporary table tmp_update_fct_ad_month_site_placements (
  `id` char(36) CHARACTER SET latin1 NOT NULL,
  `image_num` int(10) unsigned NOT NULL,
  `month` varchar(10) CHARACTER SET latin1 DEFAULT NULL,
  `hostId` char(36) CHARACTER SET latin1 NOT NULL,
  `path` varchar(255) CHARACTER SET latin1 NOT NULL,
  `month_first` date DEFAULT NULL,
  `month_last` date DEFAULT NULL,
  `depths` text CHARACTER SET latin1,
  `ad_count` bigint(21) NOT NULL DEFAULT '0',
  UNIQUE KEY `id` (`id`,`month`,`path`),
  Unique KEY `image_num` (`image_num`,`month`,`path`)
);
insert into tmp_update_fct_ad_month_site_placements
select
	f.id,
	f.image_num,
	concat(date_format(run.run_date, '%Y-%m'), '-01') as month

	h.id as hostId,
	h.path,
	min(run.run_date) as month_first,
	max(run.run_date) as month_last,
	group_concat(distinct fct.depth order by fct.depth separator ', ') as depths,
	sum(fct.ad_count) as ad_count
from
	imageFile f
inner join
      fct_run_host_depth_ad fct
on
      f.id = fct.imageFileId
           and
      fct.run_id > @oldMaxRunId
inner join
      scraper_run run
on
      run.run_id = fct.run_id
inner join
      hosts h on fct.hostId = h.id
group by 1,2,3,4,5;
/* update existing */
update
fct_ad_month_site_placements agg,
tmp_update_fct_ad_month_site_placements new
set agg.ad_count = agg.ad_count + new.ad_count, agg.month_first = new.month_first, agg.depths = new.depths
where agg.id = new.id
and agg.image_num = new.image_num
and agg.month = new.month
and agg.path = new.path;
/* add any new rows not already in table */
insert into fct_ad_month_site_placements
select new.id, new.image_num, new.month, new.hostId, new.path, new.month_first, new.month_last, new.depths, new.ad_c
--------------------------------------------------------
--  DDL for Table STATION
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."STATION" 
   (	"STATION_NAME" VARCHAR2(20 BYTE), 
	"STATION_LOCALTION" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TPYE_TRAIN
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."TPYE_TRAIN" 
   (	"NO_TRAIN" VARCHAR2(20 BYTE), 
	"TYPE" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAU

  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TIME_TRAIN
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."TIME_TRAIN" 
   (	"NO_TRAIN" VARCHAR2(20 BYTE), 
	"TIME_OUT" VARCHAR2(20 BYTE), 
	"TIME_IN" VARCHAR2(20 BYTE), 
	"TYPE" VARCHAR2(20 BYTE), 
	"STATION_BT" VARCHAR2(20 BYTE), 
	"DAY" VARCHAR2(20 BYTE), 
	"MONTH" VARCHAR2(20 BYTE), 
	"YEAR" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TRAIN
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."TRAIN" 
   (	"NO_TRAIN" VARCHAR2(20 BYTE), 
	"NO_SEAT" VARCHAR2(20 BYTE), 
	"PRODUCT_WEIGHT" VARCHAR2(20 BYTE)

   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table AA_EXPEND
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."AA_EXPEND" 
   (	"MONTH" VARCHAR2(20 BYTE), 
	"YEAR" NUMBER, 
	"CARLINE" NUMBER, 
	"MAINTAIN" NUMBER, 
	"TRAINCOST" NUMBER, 
	"NMONTH" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TICKET_PRODUCT
--------------------------------------------
CREATE TABLE `AIDR_COLLECTION_LOG` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `collectionId` INT(11) NOT NULL,
  `track` longtext NOT NULL,
  `follow` VARCHAR(255) DEFAULT NULL,
  `geo` VARCHAR(255) DEFAULT NULL,
  `langFilters` VARCHAR(255) DEFAULT NULL,  
  `startDate` DATETIME DEFAULT NULL,
  `endDate` DATETIME DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=INNODB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8$$
DELIMITER $$
CREATE
    TRIGGER LOG_COLLECTION_TRIGGER AFTER UPDATE
    ON AIDR_COLLECTION
    FOR EACH ROW 
	BEGIN
           IF(NEW.STATUS != OLD.STATUS)
           THEN
           IF(NEW.STATUS='RUNNING')
            THEN
             INSERT INTO AIDR_COLLECTION_LOG (COLLECTIONID,TRACK,FOLLOW,GEO,LANGFILTERS, STARTDATE,ENDDATE) 
                VALUES (NEW.ID,NEW.TRACK,NEW.FOLLOW,NEW.GEO, NEW.LANGFILTERS, NEW.STARTDATE,NEW.ENDDATE);
             ELSEIF (NEW.STATUS='STOPPED')
             THEN
                UPDATE AIDR_COLLECTION_LOG SET ENDDATE = NEW.ENDDATE WHERE COLLECTIONID =NE
drop table db.bm_tmp;
create table external_table
  (
str  varchar2(255),
id number(10) ,
toomuchdata clob,
genre_id number(10), -- can be null
time_stamp date
  organization external
  (
     type oracle_loader
     default directory slct_work_db_bm
     access parameters
     (
             records delimited by newline
                         CHARACTERSET AL32UTF8
             preprocessor exec_dir:'uncompress.sh'
                         badfile log_dir:'db_bm.bad'
                         logfile log_dir:'db_bm.log'
             fields terminated by '|'
             missing field values are null
             (
                     str,id,toomuchdata char(10000),genre_id,time_stamp char(19) date_format date 'yyyy-mm-dd hh24:mi:ss'))
                     location(
'db049.unl.gz',
'db050.unl.gz',
'db051.unl.gz',
'db052.unl.gz'
))
  parallel
  reject limit unlimited;
--select * from db.bm_tmp where rownum<=5;
truncate table real_table;
  alter session force parallel DML;
insert into /
CREATE OR REPLACE DIRECTORY EXPORT_DIR
AS
  '/u03/app/oracle/flash_recovery_area/backups/AJDF1DB9/exp';
  GRANT read, write ON DIRECTORY EXPORT_DIR TO PUBLIC;
  DECLARE
    doc xmldom.DOMDocument;
    pubidhold NUMBER;
    main_node xmldom.DOMNode;
    root_node xmldom.DOMNode;
    user_node xmldom.DOMNode;
    item_node xmldom.DOMNode;
    root_elmt xmldom.DOMElement;
    item_elmt xmldom.DOMElement;
    item_text xmldom.DOMText;
    v_previous_pubid NUMBER;
    CURSOR get_series
    IS
      SELECT a.pubid ,
        a.doi ,
        a.area,
        c.title
      FROM PUBLICATION a,
        PUB_SERIAL b,
        PUB_TITLE c
      WHERE a.PUBID     = b.PUBID
      AND a.pubid       =c.pubid
      AND a.PUBAGENTTYPE=106;
    CURSOR get_books
    IS
      SELECT PUBLICATION.pubid,
        PUBLICATION.doi,
        PUBLICATION.area,
        pub_title.title
      FROM PUBLICATION ,
        BOOK_META ,
        pub_title
      WHERE PUBLICATION.pubid            = pub_title.pubid(+)
      AND p

      AND publication.PUBAGENTTYPE      IN (105,112)
      AND BITAND(PUBLICATION.AREA,16400) = 0
      AND (BOOK_META.bookParentId        = pubidhold
      OR EXISTS
        (SELECT *
        FROM book_meta parents
        WHERE parents.pubId      = BOOK_META.bookParentId
        AND parents.bookParentId = pubidhold
        ))
      ORDER BY PUBLICATION.DOI;
    BEGIN
      -- get document
      doc := xmldom.newDOMDocument;
      -- create root element
      main_node          := xmldom.makeNode(doc);
      root_elmt          := xmldom.createElement( doc , 'bookseriesdata' );
      root_node          := xmldom.appendChild( main_node , xmldom.makeNode(root_elmt) );
      FOR get_series_rec IN get_series
      LOOP
        item_elmt := xmldom.createElement( doc , 'bookseries' );
        xmldom.setAttribute( item_elmt , 'pubid' , get_series_rec.pubid );
        user_node := xmldom.appendChild( root_node , xmldom.makeNode(item_elmt) );
        --
        item_elmt := xmldom.createElemen

        item_node := xmldom.appendChild( user_node , xmldom.makeNode(item_elmt) );
        item_text := xmldom.createTextNode( doc , get_series_rec.doi );
        item_node := xmldom.appendChild( item_node , xmldom.makeNode(item_text) );
        --
        item_elmt        := xmldom.createElement( doc , 'area' );
        item_node        := xmldom.appendChild( user_node , xmldom.makeNode(item_elmt) );
        item_text        := xmldom.createTextNode( doc , get_series_rec.area );
        item_node        := xmldom.appendChild( item_node , xmldom.makeNode(item_text) );
        item_elmt        := xmldom.createElement( doc , 'title' );
        item_node        := xmldom.appendChild( user_node , xmldom.makeNode(item_elmt) );
        item_text        := xmldom.createTextNode( doc , get_series_rec.title );
        item_node        := xmldom.appendChild( item_node , xmldom.makeNode(item_text) );
        pubidhold        := get_series_rec.pubid;
        v_previous_pubid :=0;
        --get bo
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_HeaderInsert]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_HeaderInsert]
	 @param_strPortfolioID	NVARCHAR(50)
	,@param_strClientID		NVARCHAR(50)
	,@param_intStatus		SMALLINT
	,@param_strCreated_By	NVARCHAR(50)
	,@param_intSwitchID		INT				= NULL
	,@param_strDescription	NVARCHAR(MAX)
	,@param_strModelGroupID	NVARCHAR(50) = NULL
	,@param_strModelPortfolioID	NVARCHAR(50) = NULL
AS
BEGIN
SET NOCOUNT ON;
--IF NOT EXISTS (SELECT PortfolioID FROM [NavIntegrationDB].[dbo].[SwitchHeader] WHERE PortfolioID=@param_strPortfolioID AND [Status] = 0)
--IF @param_intSwitchID = NULL
IF NOT EXISTS (SELECT PortfolioID FROM [NavIntegrationDB].[dbo].[SwitchHeader] WHERE [SwitchID] = @param_intSwitchID)
BEGIN
	--RAISERROR('Switch details already exists!', 16, 1) 
	INSERT INTO [NavIntegrationDB].[dbo].[SwitchHeader]
		   ([PortfolioID]
		   ,[ClientID]
		   

		   ,[Date_Created]
		   ,[Created_By]
		   ,[Description] 
		   ,[ModelGroupID]
		   ,[ModelPortfolioID] 
		   )
	 VALUES
		   (@param_strPortfolioID
		   ,@param_strClientID
		   ,@param_intStatus
		   ,CURRENT_TIMESTAMP
		   ,@param_strCreated_By
		   ,@param_strDescription
		   ,@param_strModelGroupID
		   ,@param_strModelPortfolioID
		   );
		   
	SELECT @@IDENTITY 
END
ELSE
BEGIN
	IF(LEN(@param_strDescription) = 0)
		BEGIN
			UPDATE [NavIntegrationDB].[dbo].[SwitchHeader]
			SET [Status] = @param_intStatus, Date_Updated = CURRENT_TIMESTAMP, Updated_By = @param_strCreated_By, [SecurityCodeAttempt] = 0, [ModelGroupID] = @param_strModelGroupID, [ModelPortfolioID] = @param_strModelPortfolioID
			WHERE [SwitchID] = @param_intSwitchID;		
		END
	ELSE
		BEGIN
			UPDATE [NavIntegrationDB].[dbo].[SwitchHeader]
			SET [Status] = @param_intStatus, Date_Updated = CURRENT_TIMESTAMP, Updated_By = @param_strCreated_By, [SecurityCodeAttempt] = 0, [ModelGroupID] = @param_strModelGroupID, [ModelP
CREATE TABLE dmNavigation(
bannerImage varchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL DEFAULT '2214-05-29 04:10:36' ,
lockedBy varchar(250) NULL DEFAULT NULL ,
lastupdatedby varchar(250) NOT NULL DEFAULT '' ,
fu varchar(250) NULL DEFAULT NULL ,
options varchar(250) NULL DEFAULT NULL ,
createdby varchar(250) NOT NULL DEFAULT '' ,
bannerTagLine varchar(250) NULL DEFAULT NULL ,
internalRedirectID varchar(50) NULL DEFAULT NULL ,
datetimecreated datetime NOT NULL DEFAULT '2214-05-29 04:10:36' ,
bBannerBack tinyint(1) NOT NULL DEFAULT 0 ,
status varchar(250) NOT NULL DEFAULT 'draft' ,
locked tinyint(1) NOT NULL DEFAULT 0 ,
ExternalLink varchar(50) NULL DEFAULT NULL ,
ObjectID varchar(50) NOT NULL DEFAULT '' ,
target varchar(250) NULL DEFAULT NULL ,
navType varchar(250) NOT NULL DEFAULT 'aObjectIDs' ,
bannerTitle varchar(250) NULL DEFAULT NULL ,
lNavIDAlias varchar(250) NULL DEFAULT NULL ,
sourceImageID varchar(50) NULL DEFAULT NULL ,
externalRedirectURL varchar(250) N
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AustinClients]
AS
SELECT        FirstName, LastName, City
FROM            dbo.Client
WHERE        (City = 'austin')
GO
EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Client"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 227
            End
            DisplayFlags = 280
            TopColumn = 12
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', 'SCHEMA', N'dbo', 'VIEW', N'AustinClients', NULL, NULL
GO
EXEC sp_addextendedproperty N'MS_DiagramPaneCount', 1, 'SCHEMA', N'dbo', 'VIEW', N'AustinCl
﻿create or replace procedure u1.ETLT_DWH_DM_SPGU_HD_T is
      s_mview_name     varchar2(30) := 'DWH_DM_SPGU_HD_T';
      vStrDate         date := sysdate;
      v_max_date       timestamp;
      v_sql            varchar2(1024);
    begin
      select max(t.rep_date)
        into v_max_date
        from DWH_PORT t;
      v_sql := 'truncate table DWH_DM_SPGU_HD_T';
      execute immediate v_sql;
        insert /*+ append enable_parallel_dml parallel(10)*/ into DWH_DM_SPGU_HD_T
        select  /*+ parallel(30)*/
                t.exhd_rep_date,
                t.exhd_deal_number,
                t.exhd_begin_date,
                t.exhd_prod_type,
                t.exhd_old_ovd_scheme,
                t.exhd_fgu_cred,
                t.exhd_fgu_prc,
                t.exhd_fgu_ovrd_cred,
                t.exhd_fgu_ovrd_prc,
                t.exhd_ovrd_days,
                t.exhd_vnb_ovrd_cred,
                t.exhd_vnb_ovrd_prc,
                t.exhd_vnb_comm,
                t.exhd_fg
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `item_insert`;
CREATE TABLE `item_insert` (
  `index` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ownerguid` bigint(20) unsigned NOT NULL DEFAULT '0',
  `entry` int(10) unsigned NOT NULL DEFAULT '0',
  `count` int(10) unsigned NOT NULL DEFAULT '0',
  `isBound` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`index`),
  KEY `ownerguid` (`ownerguid`) USING BTREE
) ENGINE=MyI
-- This avoids subselects when updating columns when you want to ADD to what is already there.
-- update tblmaster set industry = concat(`industry`, " stock trader, home owner, invest, stocks, bonds, mutual funds, real estate, donor, credit worthy, over $200000 per year, mail order buyer") where custid = 100000 ;
INSERT DELAYED INTO tblmaster (custid,email,firstname, middlename,lastname,address,address2,city,county,region,zipcode,gender,companyname,jobtitle,industry,phonearea,phonenum,born,source,dtTimeStamp,dateadded,ip,domain,exclude,Confirmed,ConfirmedIP,ConfirmedTS,Opener,OpenerIP,OpenerTS,Clicker,ClickerIP,ClickerTS,country_short,keywords) SELECT tblmaster_old.custid,tblmaster_old.email,tblmaster_old.firstname, tblmaster_old.middlename, tblmaster_old.lastname, tblmaster_old.address, tblmaster_old.address2, tblmaster_old.city, tblmaster_old.county, tblmaster_old.region, tblmaster_old.zipcode, tblmaster_old.gender, tblmaster_old.companyname, tblmaster_old.jobtitle, tblmaster_old.ind

ON DUPLICATE KEY UPDATE 
tblmaster.firstname = IF(tblmaster.firstname = '', tblmaster_old.firstname,  IF(tblmaster_old.firstname <> '', tblmaster_old.firstname, tblmaster.firstname)), 
tblmaster.lastname = IF(tblmaster.lastname = '', tblmaster_old.lastname, IF(tblmaster_old.lastname <>'', tblmaster_old.lastname, tblmaster.lastname)), 
tblmaster.address = IF(tblmaster.address = '', tblmaster_old.address, IF(tblmaster_old.address <> '', tblmaster_old.address, tblmaster.address)), 
tblmaster.address2 = IF(tblmaster.address2 = '', tblmaster_old.address2, IF(tblmaster_old.address2 <> '', tblmaster_old.address2, tblmaster.address2)), 
tblmaster.city = IF(tblmaster.city = '', tblmaster_old.city, IF(tblmaster_old.city <> '', tblmaster_old.city, tblmaster.city)), 
tblmaster.county = IF(tblmaster.county = '', tblmaster_old.county, IF(tblmaster_old.county <> '', tblmaster_old.county, tblmaster.county)), 
tblmaster.region = IF(tblmaster.region = '' , tblmaster_old.region, IF(tblmaster_old.region 

tblmaster.zipcode = IF(tblmaster.zipcode = '', tblmaster_old.zipcode, IF(tblmaster_old.zipcode <> '', tblmaster_old.zipcode, tblmaster.zipcode)), 
tblmaster.gender = IF(tblmaster.gender = '', tblmaster_old.gender,  tblmaster.gender), 
tblmaster.companyname = IF(tblmaster.companyname = '', tblmaster_old.companyname, IF(tblmaster_old.companyname <> '', CONCAT(tblmaster_old.companyname,' ', tblmaster.companyname), tblmaster.companyname)), 
tblmaster.jobtitle = IF(tblmaster.jobtitle = '', tblmaster_old.jobtitle, IF(tblmaster_old.jobtitle <> '',  CONCAT(tblmaster.jobtitle, ' ', tblmaster_old.jobtitle), tblmaster.jobtitle)), 
tblmaster.industry = IF(tblmaster.industry = '',  tblmaster_old.industry, IF(tblmaster_old.industry <> '', CONCAT(tblmaster.industry,' ', tblmaster_old.industry), tblmaster.industry)), 
tblmaster.phonearea = IF(tblmaster.phonearea = '', tblmaster_old.phonearea, tblmaster.phonearea ), 
tblmaster.phonenum = IF(tblmaster.phonenum = '', tblmaster_old.phonenum, tblmaster.ph
﻿drop table new_properties_detailes_fixed;
create table new_properties_detailes_fixed as
select * from 
new_properties_dup_id
left join property_details
using (dup_id)
);
update new_properties_detailes_fixed
	set new_legal_type = legal_type
	where new_legal_type is null and legal_type is not null;
update new_properties_detailes_fixed
	set new_strata_fee = strata_fee
	where new_strata_fee is null and strata_fee is not null;
update new_properties_detailes_fixed
	set new_property_tax = property_tax
	where new_property_tax is null and property_tax is not null;
update new_properties_detailes_fixed
	set new_year_built = year_built
	where new_year_built is null and year_built is not null;
update new_properties_detailes_fixed
	set new_floor_area = floor_area
	where new_floor_area is null and floor_area is not null;
update new_properties_detailes_fixed
	set new_bedroom = bedroom
	where new_bedroom is null and bedroom is not null;
update new_properties_detailes_fixed
	set new_bathroom = bathroom
--------------------------------------------------------
--  Constraints for Table DM_NAMES
--------------------------------------------------------
  ALTER TABLE "DM_NAMES" ADD CONSTRAINT "PK_DM_NAMES" PRIMARY KEY ("NAMES_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "DM_NAMES" MODIFY ("STATUS_ID" NOT NULL ENABLE);
  ALTER TABLE "DM_NAMES" MODIFY ("NAMES_ID" NOT NULL ENABLE);
  ALTER TABLE "DM_NAMES" MODIFY ("PNAMES" NOT NULL ENABLE);
  ALTER TABLE "DM_NAMES" ADD CONSTRAINT "UK_DMNA" UNIQUE ("PNAMES")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLAS
-- ViewName : ProjectBidList-Right
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'BQM';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'ProjectBidList-Right'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1)
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq_count = (select ifnull(max(

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[User_SetPrimaryDiningCity]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[User_SetPrimaryDiningCity]
GO
CREATE PROCEDURE [dbo].User_SetPrimaryDiningCity
	@UserID int,  
	@IsCallerOrAdmin BIT,
	@OldPrimaryMetroID INT,
	@NewPrimaryMetroID INT
AS
SET NOCOUNT ON
DECLARE @ProcName nvarchar(1000)
DECLARE @Action nvarchar(3000)
DECLARE @DBError INT
DECLARE @OldSL BIT, @OldIn BIT, @OldDC BIT, @OldNH BIT, @OldRW BIT, @OldPM BIT, @OldPD BIT
SET @ProcName = 'User_SetPrimaryDiningCity'
SET @OldSL=0
SET @OldIn=0
set @OldDC=0
SET @OldNH=0
SET @OldRW =0 
SET @OldPM = 0
SET @OldPD = 0
BEGIN TRAN
	IF (@IsCallerOrAdmin = 1)  -- Must set CallerID
	BEGIN		
		SELECT @OldSL=Spotlight, @OldIn=Insider, @OldDC=DinersChoice, @OldNH=NewHot, 
		@OldRW=RestaurantWeek,@OldPM=Promotional, @OldPD=Product
		FROM dbo.UserOptIn
		WHERE CallerID = @UserID AND MetroAreaID = @OldPrimaryMetroID
		
		-- Check if new primary metro alrea

		IF EXISTS (SELECT * FROM UserOptIn WHERE CallerID = @UserID AND MetroAreaID = @NewPrimaryMetroID)
		BEGIN 
			SET @Action = 'Unsubscribe all email preferences of old primary metro for admin/caller'
			UPDATE UserOptIn SET Spotlight=0, Insider=0, DinersChoice=0, 
			NewHot=0, RestaurantWeek=0, Promotional=0, Product=0,
			UpdatedDtUTC = GETUTCDATE()
			WHERE CallerID = @UserID AND MetroAreaID = @OldPrimaryMetroID 			
			
			SET @Action = 'Relocate email preference from old to new primary metro for admin/caller'
			UPDATE UserOptIn SET 			
			SpotLight = CASE WHEN @OldSL = 1 THEN @OldSL ELSE Spotlight END,
			Insider = CASE WHEN @OldIn = 1 THEN @OldIn ELSE Insider END,
			DinersChoice = CASE WHEN @OldDC = 1 THEN @OldDC ELSE DinersChoice END,
			NewHot = CASE WHEN @OldNH = 1 THEN @OldNH ELSE NewHot END,
			RestaurantWeek = CASE WHEN @OldRW = 1 THEN @OldRW ELSE RestaurantWeek END,
			Promotional = CASE WHEN @OldPM = 1 THEN @OldPM ELSE Promotional END,
			Product = CASE WHEN @OldPD = 1 T

			UpdatedDtUTC = GETUTCDATE()
			WHERE CallerID = @UserID AND MetroAreaID = @NewPrimaryMetroID 
		END 	
		ELSE
		BEGIN				
			SET @Action = 'Update old to new primary metro for admin/caller'
			UPDATE UserOptIn SET 		
			MetroAreaID = @NewPrimaryMetroID,
			UpdatedDtUTC = GETUTCDATE()				
			WHERE CallerID = @UserID AND MetroAreaID = @OldPrimaryMetroID 
		END						
	END
	ELSE	-- Must set CustID
	BEGIN		
		SELECT @OldSL=Spotlight, @OldIn=Insider, @OldDC=DinersChoice, @OldNH=NewHot, 
		@OldRW=RestaurantWeek,@OldPM=Promotional, @OldPD=Product
		FROM dbo.UserOptIn
		WHERE CustID = @UserID AND MetroAreaID = @OldPrimaryMetroID		
		
		-- Check if new primary metro already exists for customer
		IF EXISTS (SELECT * FROM UserOptIn WHERE CustID = @UserID AND MetroAreaID = @NewPrimaryMetroID)
		BEGIN 
			SET @Action = 'Unsubscribe all email preferences of old primary metro for customer'
			UPDATE UserOptIn SET Spotlight=0, Insider=0, DinersChoice=0, 
			NewHot=0, RestaurantWeek=0, Promotional=0,
ALTER TABLE batch
    ADD processType VARCHAR(20) NOT NULL
ALTER TABLE batch_audit
    ADD processType VARCHAR(20) NOT NULL
DROP TRIGGER trg_batch_insert;
CREATE TRIGGER trg_batch_insert AFTER INSERT ON batch
    FOR EACH ROW
    BEGIN
        INSERT INTO batch_audit(audit_action, audit_datetime, batchId, robot, temperature, datetime, userId, version_id, plateName, halfPlate, humidity, primerBatch, enzymeBatch, rotorGene, operatorUserId, batchFailureReason, processType)
        VALUES ('INSERT NEW',NOW(),NEW.id, NEW.robot, NEW.temperature, NEW.datetime, NEW.userId, NEW.version_id, NEW.plateName, NEW.halfPlate, NEW.humidity, NEW.primerBatch, NEW.enzymeBatch, NEW.rotorGene, NEW.operatorUserId, NEW.batchFailureReason, NEW.processType);
    END
DROP TRIGGER trg_batch_update;
CREATE TRIGGER trg_batch_update AFTER UPDATE ON batch
    FOR EACH ROW
    BEGIN
        INSERT INTO batch_audit(audit_action, audit_datetime, batchId, robot, temperature, datetime, userId, version_id, plateName, halfP

        VALUES ('UPDATE OLD',NOW(),OLD.id, OLD.robot, OLD.temperature, OLD.datetime, OLD.userId, OLD.version_id, OLD.plateName, OLD.halfPlate, OLD.humidity, OLD.primerBatch, OLD.enzymeBatch, OLD.rotorGene, OLD.operatorUserId, OLD.batchFailureReason, OLD.processType);
        INSERT INTO batch_audit(audit_action, audit_datetime, batchId, robot, temperature, datetime, userId, version_id, plateName, halfPlate, humidity, primerBatch, enzymeBatch, rotorGene, operatorUserId, batchFailureReason, processType)
        VALUES ('UPDATE NEW',NOW(),NEW.id, NEW.robot, NEW.temperature, NEW.datetime, NEW.userId, NEW.version_id, NEW.plateName, NEW.halfPlate, NEW.humidity, NEW.primerBatch, NEW.enzymeBatch, NEW.rotorGene, NEW.operatorUserId, NEW.batchFailureReason, NEW.processType);
    END
DROP TRIGGER trg_batch_delete;
CREATE TRIGGER trg_batch_delete AFTER DELETE ON batch
    FOR EACH ROW
    BEGIN
        INSERT INTO batch_audit(audit_action, audit_datetime, batchId, robot, temperature, datetime, use
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `game_event_save`;
CREATE TABLE `game_event_save` (
  `event_id` mediumint(8) unsigned NOT NULL,
  `state` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `next_start` bigint(11) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`event_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `game_event_save` WRITE;
/*!40000 ALTER TABLE `game_event_save` DISABLE KEYS */;
INSERT INTO `game_eve
CREATE TABLE news (id INTEGER PRIMARY KEY AUTOINCREMENT, nid INTEGER, node_created NUMERIC, node_title TEXT, field_thumbnails TEXT, field_channel TEXT, field_newsfrom TEXT, field_summary TEXT, body_1 TEXT, body_2 TEXT);
CREATE TABLE "update_log" (id INTEGER PRIMARY KEY AUTOINCREMENT, channel_id INTEGER, channel_name TEXT, update_time NUMERIC);
CREATE TABLE nav_id_map (nav_id_mapid INTEGER PRIMARY KEY AUTOINCREMENT, nav_name TEXT, nav_id INTEGER);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (1,'头条',15);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (2,'要闻',16);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (3,'生产经营',17);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (4,'东风党建',18);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (5,'和谐东风',19);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (6,'东风人',20);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (7,'东风文艺',21);
INSERT INTO nav_id_map

INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (9,'四城视点',23);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (10,'专题',24);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (11,'企业',25);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (12,'对话',26);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (13,'观点',27);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (14,'旅游资讯',28);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (15,'“驾”临天下',29);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (16,'名车靓影',30);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (17,'城市约会',31);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (18,'乐途影像',32);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (19,'名家专栏',33);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (20,'微博•贴士邦',34);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (21,'播报',35);
INSER

INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (23,'新车评测',37);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (24,'政能量',38);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (25,'创新观察',39);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (26,'人物专访',40);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (27,'特别关注',41);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (28,'特稿',42);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (29,'设计•研究',43);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (30,'试验•测试',44);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (31,'工艺•材料',45);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (32,'公告牌',46);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (33,'行业资讯',47);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (34,'工作研究',48);
INSERT INTO nav_id_map (nav_id_mapid,nav_name,nav_id) VALUES (35,'故障维修',49);
-- // add new write scopes
-- Migration SQL that makes the change goes here.
INSERT INTO groups (id, displayname) SELECT '1e0696ea-9250-405a-aaac-7596a8c15076', 'cloudbreak.sssdconfigs'
    WHERE NOT EXISTS (SELECT 1 FROM groups WHERE displayName = 'cloudbreak.sssdconfigs' AND identity_zone_id = 'uaa');
INSERT INTO groups (id, displayname) SELECT 'a1eb419b-0a1b-4bb7-b900-218a641ddac6', 'cloudbreak.sssdconfigs.read'
    WHERE NOT EXISTS (SELECT 1 FROM groups WHERE displayName = 'cloudbreak.sssdconfigs.read' AND identity_zone_id = 'uaa');
INSERT INTO group_membership SELECT gr.id AS group_id, usr.id AS member_id, 'USER', 'MEMBER' FROM users usr, groups gr WHERE gr.displayname='cloudbreak.sssdconfigs'
    AND NOT EXISTS (SELECT 1 FROM group_membership WHERE group_ID = gr.id AND member_id = usr.id);
INSERT INTO group_membership SELECT gr.id AS group_id, usr.id AS member_id, 'USER', 'MEMBER' FROM users usr, groups gr WHERE gr.displayname='cloudbreak.sssdconfigs.read'
        AND NOT EXISTS 

--UPDATE oauth_client_details SET scope = CONCAT(scope, ',cloudbreak.sssdconfigs,cloudbreak.sssdconfigs.read') WHERE client_id='uluwatu';
--UPDATE oauth_client_details SET scope = CONCAT(scope, ',cloudbreak.sssdconfigs,cloudbreak.sssdconfigs.read') WHERE client_id='cloudbreak_shell';
-- //@UNDO
-- SQL to undo the change goes here.
DELETE FROM group_membership WHERE group_id = (SELECT id FROM groups where displayName = 'cloudbreak.sssdconfigs' AND identity_zone_id = 'uaa');
DELETE FROM group_membership WHERE group_id = (SELECT id FROM groups where displayName = 'cloudbreak.sssdconfigs.read' AND identity_zone_id = 'uaa');
DELETE FROM groups WHERE displayName = 'cloudbreak.sssdconfigs' AND identity_zone_id = 'uaa';
DELETE FROM groups WHERE displayName = 'cloudbreak.sssdconfigs.read' AND identity_zone_id = 'uaa';
--UPDATE oauth_client_details SET scope = REPLACE(scope, ',cloudbreak.sssdconfigs,cloudbreak.sssdconfigs.read', '') WHERE client_id='uluwatu';
--UPDATE oauth_client_details SET s
# Tests for the performance schema
# See comments in include/table_aggregate_setup.inc
--disable_query_log
revoke all privileges, grant option from user1@localhost;
revoke all privileges, grant option from user2@localhost;
revoke all privileges, grant option from user3@localhost;
revoke all privileges, grant option from user4@localhost;
drop user user1@localhost;
drop user user2@localhost;
drop user user3@localhost;
drop user user4@localhost;
flush privileges;
drop procedure dump_thread;
drop procedure dump_one_thread;
drop prepare dump_waits_account;
drop prepare dump_waits_user;
drop prepare dump_waits_host;
drop prepare dump_waits_global;
drop prepare dump_waits_history;
drop prepare dump_waits_index_io;
drop prepare dump_waits_table_io;
drop prepare dump_waits_table_lock;
drop prepare dump_objects_summary;
truncate table performance_schema.accounts;
truncate table performance_schema.users;
truncate table performance_schema.hosts;
truncate table performance_schema.setup_actors;
inse
{Photoshop version 1.0.1, file: USelect.p.inc
  Computer History Museum, www.computerhistory.org
  This material is (C)Copyright 1990 Adobe Systems Inc.
  It may not be distributed to third parties.
  It is licensed for non-commercial use according to 
  www.computerhistory.org/softwarelicense/photoshop/ }
PROCEDURE InitSelections; EXTERNAL;
FUNCTION DoSelectAll (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoSelectNone (view: TImageView): TCommand; EXTERNAL;
FUNCTION DropSelection (view: TImageView): TCommand; EXTERNAL;
PROCEDURE InterpolatePoints (pt1, pt2: Point;
							 PROCEDURE EachPoint (pt: Point)); EXTERNAL;
FUNCTION DoLassoTool (view: TImageView;
					  downPoint: Point;
					  add: BOOLEAN;
					  remove: BOOLEAN;
					  refine: BOOLEAN;
					  drop: BOOLEAN): TCommand; EXTERNAL;
PROCEDURE DoLassoOptions; EXTERNAL;
FUNCTION DoWandTool (view: TImageView;
					 add: BOOLEAN;
					 remove: BOOLEAN;
					 refine: BOOLEAN): TCommand; EXTERNAL;
PROCEDURE DoWandOptions; EXTERNAL
CREATE TABLE "WRKCRD"."CC_WRKCRD_LEGACY_TYPE"
  (
    "CODE" VARCHAR2(5 BYTE) NOT NULL ENABLE,
    CONSTRAINT "CC_WRKCRD_LEGACY_TYPE_PK" PRIMARY KEY ("CODE") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) TABLESPACE "CC_DEVELOPMENT" ENABLE
  )
  SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING STORAGE
  (
    INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT
  )
  TABLESPACE "CC_DEVELOPMENT" ;
  
INSERT INTO "WRKCRD"."CC_WRKCRD_LEGACY_TYPE" (CODE) VALUES ('M');
INSERT INTO "WRKCRD"."CC_WRKCRD_LEGACY_TYPE" (CODE) VALUES ('F');
INSERT INTO "WRKCRD"."CC_WRKCRD_LEGACY_TYPE" (CODE) VALUES ('R');
INSERT INTO "WRKCRD"."CC_WRKCRD_LEGACY_
drop table if exists entries;
create table entries (
  id integer primary key autoincrement,
  title text not null,
  text text not null
);
drop table if exists nav;
create table nav (
  id integer primary key autoincrement,
  name text not null,
  url text not null
);
INSERT INTO nav ('name', 'url') VALUES ('帮助', '/');
INSERT INTO nav ('name', 'url') VALUES ('自动发布', '/public');
INSERT INTO nav ('name', 'url') VALUES ('百度', 'http://www.baidu.com');
INSERT INTO nav ('name', 'url') VALUES ('文档svn', 'svn://192.168.1.2/doc');
INSERT INTO nav ('name', 'url') VALUES ('资源svn', 'svn://192.168.1.2/element');
INSERT INTO nav ('name', 'url') VALUES ('数据分析', '/analysis');
drop table if exists analysis_menu;
create table analysis_menu (
  id integer primary key autoincrement,
  name text not null,
  url text not null,
  group_id integer not null,
  sort_id integer not null
);
INSERT INTO analysis_menu ('name', 'url', 'group_id', 'sort_id') VALUES ('货币和积分', '/analysis', '2', '0');
INSERT INTO analys
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 10. März 2002 um 18:32
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_gt_immo2`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `HeadNav`
CREATE TABLE HeadNav (
  ID int(11) NOT NULL default '0',
  CreatedBy int(11) NOT NULL default '0',
  CreatedDateTime float(16,4) NOT NULL default '0.0000',
  ChangedBy int(11) NOT NULL default '0',
  ChangedDateTime float(16,4) NOT NULL default '0.0000',
  active int(1) NOT NULL default '1',
  WordlistID int(11) NOT NULL default '0',
  TextID int(11) NOT NULL default '0',
  NameDE varchar(255) NOT NULL default '',
  Name_en varchar(255) NOT NULL default '',
  Name_es varchar(255) NOT NULL default '',
  Name_fr varchar(255) NOT NULL default '',
  Name_it varchar(255) NOT NULL default '',
  GruppenID int(11) NOT NULL default '
CREATE TABLE provider_deltas (
    id INT NOT NULL PRIMARY KEY DEFAULT (nextval('deltas')),
    change_id INTEGER NOT NULL,
    provider_id INTEGER NOT NULL,
    name VARCHAR,
    new INTEGER,
    FOREIGN KEY(change_id) REFERENCES changes(id) ON DELETE CASCADE,
    FOREIGN KEY(provider_id) REFERENCES providers(id) ON DELETE CASCADE
);
CREATE TRIGGER
    provider_deltas_ai_1
AFTER INSERT ON
    provider_deltas
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_id,
        NEW.provider_id,
        NEW.name
    );
    UPDATE
        changes
    SET
        ucount = ucount + 1
    WHERE
        id = NEW.change_id
    ;
    UPDATE
        topics
    SET
        last_change_id = NEW.change_id
    WHERE
        id = NEW.provider_id
    ;
    UPDATE
        changes_pending
    SET
        terms = terms || (
            SELECT
                '-' || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    '  _: provider' || x'0A'
             
-- estructura de la tabla bitacora
CREATE TABLE IF NOT EXISTS `bitacora` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `operacion` varchar(10) DEFAULT NULL,
  `host` varchar(30) NOT NULL,
  `modificado` datetime DEFAULT NULL,
  `tabla` varchar(40) NOT NULL,
  `tupla_antes` varchar(1000) DEFAULT NULL,
  `tupla_despues` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;
DROP TRIGGER IF EXISTS `biusernew`;
CREATE TRIGGER `biusernew` AFTER INSERT ON `usuario`
FOR EACH ROW INSERT INTO bitacora(host, operacion, modificado, tabla, tupla_antes, tupla_despues) 
VALUES (SUBSTRING(USER(), (INSTR(USER(),"@")+1)),"INSERTAR", NOW(), "USUARIO","",CONCAT(NEW.ID,' ', NEW.nombre,' ',NEW.apellido_paterno,' ',NEW.apellido_materno,' ',NEW.telefono, ' ', NEW.email,' ',NEW.fecha_nacimiento,' ',NEW.login));
DROP TRIGGER IF EXISTS `biuserdelete`;
CREATE TRIGGER `biuserdelete` AFTER DELETE ON `usuario`
FOR EACH ROW INSERT INTO bitacora(host, operacion, modi

VALUES (SUBSTRING(USER(), (INSTR(USER(),"@")+1)),"ELIMINAR", NOW(), "USUARIO",CONCAT(OlD.ID,' ', OlD.nombre,' ',OlD.apellido_paterno,' ',OlD.apellido_materno,' ',OlD.telefono, ' ', OlD.email,' ',OlD.fecha_nacimiento,' ',OlD.login),' ');
DROP TRIGGER IF EXISTS `biuserupdate`;
CREATE TRIGGER `biuserupdate` AFTER UPDATE ON `usuario`
FOR EACH ROW INSERT INTO bitacora(host, operacion, modificado, tabla, tupla_antes, tupla_despues) 
VALUES (SUBSTRING(USER(), (INSTR(USER(),"@")+1)),"MODIFICAR", NOW(), "USUARIO",CONCAT(OlD.ID,' ', OlD.nombre,' ',OlD.apellido_paterno,' ',OlD.apellido_materno,' ',OlD.telefono, ' ', OlD.email,' ',OlD.fecha_nacimiento,' ',OlD.login),CONCAT(NEW.ID,' ', NEW.nombre,' ',NEW.apellido_paterno,' ',NEW.apellido_materno,' ',NEW.telefono, ' ', NEW.email,' ',NEW.fecha_nacimiento,' ',NEW.login));
DROP TRIGGER IF EXISTS `biproyecinsert`;
CREATE TRIGGER `biproyecinsert` AFTER INSERT ON `proyecto`
FOR EACH ROW INSERT INTO bitacora(host, operacion, modificado, tabla, tupla_antes

VALUES (SUBSTRING(USER(), (INSTR(USER(),"@")+1)),"INSERTAR", NOW(), "PROYECTO","",CONCAT(NEW.ID,' ', NEW.nombre,' ',NEW.objetivo_general,' ',NEW.descripcion,' ',NEW.fecha_registro,' ',NEW.tipo_proyecto,' ',NEW.estado_proyecto));
DROP TRIGGER IF EXISTS `biproydelet`;
CREATE TRIGGER `biproydelet` AFTER DELETE ON `proyecto`
FOR EACH ROW INSERT INTO bitacora(host, operacion, modificado, tabla, tupla_antes, tupla_despues) 
VALUES (SUBSTRING(USER(), (INSTR(USER(),"@")+1)),"ELIMINAR", NOW(), "PROYECTO",CONCAT(OlD.ID,' ',OlD.nombre,' ',OlD.objetivo_general,' ',OlD.descripcion,' ',OlD.fecha_registro,' ',OlD.tipo_proyecto,' ',OlD.estado_proyecto),' ');
DROP TRIGGER IF EXISTS `biproyeupdate`;
CREATE TRIGGER `biproyeupdate` AFTER UPDATE ON `proyecto`
FOR EACH ROW INSERT INTO bitacora(host, operacion, modificado, tabla, tupla_antes, tupla_despues) 
VALUES (SUBSTRING(USER(), (INSTR(USER(),"@")+1)),"MODIFICAR", NOW(), "PROYECTO",CONCAT(OlD.ID,' ',OlD.nombre,' ',OlD.objetivo_general,' ',OlD.descripci
-- Adminer 3.6.1 MySQL dump
SET NAMES utf8;
DELIMITER ;;
CREATE TRIGGER `addons_downloads_bi` BEFORE INSERT ON `addons_downloads` FOR EACH ROW
BEGIN
	SET NEW.fake = (
		SELECT LEAST(COUNT(*), 1)
		FROM `addons_downloads`
		WHERE
			`type` = NEW.type AND
			`versionId` = NEW.versionId AND
			`ipAddress` = NEW.ipAddress AND
			`fake` = 0 AND
			TIMESTAMPDIFF(HOUR, `time`, NEW.`time`) = 0
	);
	IF NEW.fake = 0 THEN
		IF NEW.type = 'download' THEN
			UPDATE `addons_versions`
			SET `downloadsCount` = `downloadsCount` + 1
			WHERE `id` = NEW.versionId;
			UPDATE `addons`
			SET `totalDownloadsCount` = `totalDownloadsCount` + 1
			WHERE `id` = (SELECT `addonId` FROM `addons_versions` WHERE `id` = NEW.versionId);
		ELSEIF NEW.type = 'install' THEN
			UPDATE `addons_versions`
			SET `installsCount` = `installsCount` + 1
			WHERE `id` = NEW.versionId;
			UPDATE `addons`
			SET `totalInstallsCount` = `totalInstallsCount` + 1
			WHERE `id` = (SELECT `addonId` FROM `addons_versions` WHERE `id` = NE
print '%Creating view% vwWorkingModel'
GO
IF object_id(N'dbo.vwWorkingModel', 'V') IS NOT NULL
	DROP VIEW dbo.vwWorkingModel
GO
CREATE VIEW dbo.vwWorkingModel AS
	select wm.WorkingModelID, CountryID, Data, ConditionType, MultiplyValue, AddValue ,BeginTime, EndTime, AddCharges, wmn.LanguageID, [Name], [Message], UseInRecording, WorkingModelType
	from dbo.WorkingModel wm
	left outer join dbo.WorkingModelName wmn
	on
		wm.WorkingModelID = wmn.WorkingModelID
	left outer join dbo.WorkingModelMessage m
	on
		m.WorkingModelID = wm.WorkingModelID
		and m.LanguageID = wmn.LanguageID
GO
IF OBJECT_ID ('dbo.vwWorkingModel_delete','TR') IS NOT NULL
   DROP TRIGGER dbo.vwWorkingModel_delete
GO
create trigger dbo.vwWorkingModel_delete on dbo.vwWorkingModel instead of delete as
  set nocount on
  delete from
    dbo.WorkingModelName
  where
    (WorkingModelID in (select WorkingModelID from deleted))
  delete from
    dbo.WorkingModelMessage
  where
    (WorkingModelID in (select WorkingModelID from d

  delete from
    dbo.WorkingModel
  where
    (WorkingModelID in (select WorkingModelID from deleted))
GO
IF OBJECT_ID ('dbo.vwWorkingModel_insert','TR') IS NOT NULL
   DROP TRIGGER dbo.vwWorkingModel_insert
GO
create trigger dbo.vwWorkingModel_insert on dbo.vwWorkingModel instead of insert as
  set nocount on
	declare @newID bigint
	set @newID = -1
	insert into dbo.WorkingModel(WorkingModelID, CountryID, Data, ConditionType, MultiplyValue, AddValue, BeginTime, EndTime, AddCharges, UseInRecording, WorkingModelType)
	select WorkingModelID, CountryID, Data, ConditionType, MultiplyValue, AddValue, BeginTime, EndTime, AddCharges, UseInRecording, WorkingModelType from inserted
	--WorkingModelName
	select @newID = wmn.Id from dbo.WorkingModelName wmn 
	inner join inserted i
	on
		wmn.WorkingModelID = i.WorkingModelID 
		and wmn.LanguageID = i.LanguageID
	if @newID = -1
	begin 
		exec getNewID @newID output
		insert into dbo.WorkingModelName (Id, WorkingModelID, LanguageID, [Name])
		select

		where not exists(select * from dbo.WorkingModelName wmn where wmn.WorkingModelID = inserted.WorkingModelID and wmn.LanguageID = inserted.LanguageID)
	end
	else begin
		update dbo.WorkingModelName	
		set
			[Name] = i.[Name]
		from WorkingModelName wmn 
		inner join inserted i
		on
			wmn.WorkingModelID = i.WorkingModelID 
			and wmn.LanguageID = i.LanguageID
	end
	--WorkingModelMessage
	if not exists (select * from dbo.WorkingModelMessage wmn 
				inner join inserted i
				on
					wmn.WorkingModelID = i.WorkingModelID 
					and wmn.LanguageID = i.LanguageID
	)
	begin
		insert into dbo.WorkingModelMessage (WorkingModelID, LanguageID, [Message])
		select WorkingModelID, LanguageID, [Message] from inserted 
	end
	else begin
		update dbo.WorkingModelMessage	
		set
			[Message] = i.[Message]
		from WorkingModelMessage m 
		inner join inserted i
		on
			m.WorkingModelID = i.WorkingModelID 
			and m.LanguageID = i.LanguageID
	end
GO
IF OBJECT_ID ('dbo.vwWorkingModel_update','TR') IS NOT NU
DELIMITER $$
DROP TRIGGER IF EXISTS `orders_after_update`$$
CREATE TRIGGER `orders_after_update` AFTER UPDATE 
ON `orders`
FOR EACH ROW
BEGIN
    SET @patient_id = (SELECT patient_id FROM encounter WHERE encounter_id = new.encounter_id);
    SET @visit = (SELECT COALESCE((SELECT id FROM flat_table2 WHERE patient_id = @patient_id AND DATE(visit_date) = DATE(new.start_date)), 0));
    
    SET @drug_set1 = (SELECT COALESCE(drug_order_id1, '') FROM flat_table2 WHERE ID = @visit);
    
    SET @drug_set2 = (SELECT COALESCE(drug_order_id2, '') FROM flat_table2 WHERE ID = @visit);
    
    SET @drug_set3 = (SELECT COALESCE(drug_order_id3, '') FROM flat_table2 WHERE ID = @visit);
    
    SET @drug_set4 = (SELECT COALESCE(drug_order_id4, '') FROM flat_table2 WHERE ID = @visit);
    
    SET @drug_set5 = (SELECT COALESCE(drug_order_id5, '') FROM flat_table2 WHERE ID = @visit);
    CASE 
        WHEN @drug_set1 = "" THEN
            IF new.voided = 0 THEN
              IF @visit = 0 THEN
      

                  INSERT INTO flat_table2 (patient_id, visit_date, drug_order_id1, 
                      drug_encounter_id1, drug_start_date1, drug_auto_expire_date1, drug_order_id1_enc_id, 
                      drug_encounter_id1_enc_id, drug_start_date1_enc_id, drug_auto_expire_date1_enc_id) 
                  VALUES (@patient_id, in_visit_date, new.order_id, new.encounter_id, 
                      new.start_date, new.auto_expire_date, new.encounter_id, new.encounter_id, new.encounter_id, new.encounter_id);
              
              ELSE 
                  UPDATE flat_table2 SET drug_order_id1 = new.order_id, drug_encounter_id1 = new.encounter_id, 
                      drug_start_date1 = new.start_date, drug_auto_expire_date1 = new.auto_expire_date,
                      drug_order_id1_enc_id = new.encounter_id, drug_encounter_id1_enc_id = new.encounter_id, 
                      drug_start_date1_enc_id = new.encounter_id, drug_auto_expire_date1_enc_id = new.encounter_id 
   

             END IF;
           ELSE
             UPDATE flat_table2 SET drug_order_id1 = NULL, drug_encounter_id1 = NULL, 
                      drug_start_date1 = NULL, drug_auto_expire_date1 = NULL,
                      drug_order_id1_enc_id = NULL, drug_encounter_id1_enc_id = NULL, 
                      drug_start_date1_enc_id = NULL, drug_auto_expire_date1_enc_id = NULL 
                  WHERE flat_table2.id = @visit;
            END IF;                       
    
        WHEN @drug_set2 = "" THEN        
            IF new.voided = 0 THEN
              IF @visit = 0 THEN
              
                  INSERT INTO flat_table2 (patient_id, visit_date, drug_order_id2, 
                      drug_encounter_id2, drug_start_date2, drug_auto_expire_date2, drug_order_id2_enc_id, 
                      drug_encounter_id2_enc_id, drug_start_date2_enc_id, drug_auto_expire_date2_enc_id) 
                  VALUES (@patient_id, in_visit_date, new.order_id, new.encounter_id, 
           
﻿CREATE TABLE [Production].[ProductModelProductDescriptionCulture] (
  [added] [int] NULL,
  [CultureID] [nchar](6) NOT NULL,
  [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate] DEFAULT (getdate()),
  [ProductDescriptionID] [int] NOT NULL,
  [ProductModelID] [int] NOT NULL,
  CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY CLUSTERED ([ProductModelID], [ProductDescriptionID], [CultureID]),
  CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY ([cultureid]) REFERENCES [Production].[Culture] ([cultureid]),
  CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIGN KEY ([productdescriptionid]) REFERENCES [Production].[ProductDescription] ([productdescriptionid]),
  CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY ([productmodelid]) REFERENCES [Production].

ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Cross-reference table mapping product descriptions and the language the description is written in.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture'
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Clustered index created by a primary key constraint.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'INDEX', N'PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID'
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID'
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'DF_Prod
/****** Object:  Table [dbo].[RSSChannelItem]    Script Date: 06/24/2013 20:01:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RSSChannelItem](
	[RCItemId] [int] IDENTITY(1,1) NOT NULL,
	[RCId] [int] NULL,
	[RCItemTitle] [varchar](200) NULL,
	[RCItemLink] [varchar](100) NULL,
	[RCItemCategory] [varchar](10) NULL,
	[RCItemAuthor] [varchar](10) NULL,
	[RCItemPubDate] [datetime] NULL,
	[RCItemDescription] [varchar](max) NULL,
	[RCItemComments] [varchar](20) NULL,
	[NavCreateAt] [datetime] NULL,
	[NavCreateBy] [varchar](10) NULL,
	[NavUpdateDT] [datetime] NULL,
	[NavUpdateBy] [varchar](10) NULL,
 CONSTRAINT [PK_RSSCHANNELITEM] PRIMARY KEY CLUSTERED 
	[RCItemId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
ALTER TABLE [dbo].[RSSChannelItem] ADD  CONSTRAINT [DF__RSSChanne__NavCr__7D439ABD]  DEFAULT (g
/*
 Navicat Premium Data Transfer
 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 50527
 Source Host           : localhost
 Source Database       : mifan
 Target Server Type    : MySQL
 Target Server Version : 50527
 File Encoding         : utf-8
 Date: 01/02/2013 18:26:36 PM
*/
SET NAMES utf8;
SET FOREIGN_KEY_CHECKS = 0;
-- ----------------------------
--  Table structure for `user`
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `uid` int(11) NOT NULL AUTO_INCREMENT,
  `email` text,
  `password` text,
  `username` text,
  `intro` text,
  `avatar` text,
  `cover` text,
  `posts` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `updated` datetime DEFAULT NULL,
  `last_login` datetime DEFAULT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
delimiter ;;
CREATE TRIGGER `user_delete_trigger` BEFORE DELETE ON `user` FOR EACH ROW BEGIN
        DELETE FROM topic WHERE t

        DELETE FROM reply WHERE reply.author_id = OLD.uid;
        DELETE FROM notification WHERE notification.trigger_user_id = OLD.uid;
        DELETE FROM notification WHERE notification.involved_user_id = OLD.uid;
    END;
 ;;
delimiter ;
-- ----------------------------
--  Table structure for `post`
-- ----------------------------
DROP TABLE IF EXISTS `post`;
CREATE TABLE `post` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` text,
  `cover` text,
  `intro` text,
  `content` text,
  `author_id` int(11) DEFAULT NULL,
  `channel_id` int(11) DEFAULT NULL,
  `comment_count` int(11) DEFAULT 0,   
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
delimiter ;;
CREATE TRIGGER `post_delete_trigger` BEFORE DELETE ON `post` FOR EACH ROW BEGIN
        DELETE FROM comment WHERE comment.post_id = OLD.id;
    END;
 ;;
delimiter ;
-- ----------------------------
--  Table structure for `head1`
-- ----------------------------
DROP T

CREATE TABLE `head1` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `post_id` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `head2`
-- ----------------------------
DROP TABLE IF EXISTS `head2`;
CREATE TABLE `head2` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `post_id` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `std`
-- ----------------------------
DROP TABLE IF EXISTS `std`;
CREATE TABLE `std` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `post_id` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `hot`
-- ----------------------------
DROP TABLE IF EXISTS `hot`;
CREATE 
CREATE TABLE project_status_deltas (
    id INT NOT NULL PRIMARY KEY DEFAULT (nextval('deltas')),
    change_id INTEGER NOT NULL,
    project_status_id INTEGER NOT NULL,
    new INTEGER,
    status VARCHAR,
    rank INTEGER,
    UNIQUE(change_id,project_status_id), -- one change per change
    FOREIGN KEY(change_id) REFERENCES changes(id) ON DELETE CASCADE
    FOREIGN KEY(project_status_id) REFERENCES project_status(id)
        ON DELETE CASCADE
);
CREATE TRIGGER
    project_status_deltas_ai_1
AFTER INSERT ON
    project_status_deltas
FOR EACH ROW
BEGIN
    SELECT debug(
        'TRIGGER project_status_deltas_ai_1',
        NEW.id,
        NEW.change_id,
        NEW.project_status_id,
        NEW.status,
        NEW.rank
    );
    UPDATE
        changes
    SET
        ucount = ucount + 1
    WHERE
        id = NEW.change_id
    ;
    UPDATE
        topics
    SET
        last_change_id = NEW.change_id
    WHERE
        id = NEW.project_status_id
    ;
    UPDATE
        changes_pendi

    SET
        terms = terms || (
            SELECT
                '-' || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    '  _: project_status' || x'0A'
                    || '  project_uuid: ' || p.uuid || x'0A'
                ELSE
                    '  _: project_status_delta' || x'0A'
                    || '  project_status_uuid: ' || topics.uuid || x'0A'
                END
                || '  rank: ' || COALESCE(NEW.rank, '~') || x'0A'
                || CASE WHEN
                    NEW.status = '-'
                THEN
                    '  status: ''-''' || x'0A'
                ELSE
                    '  status: ' || COALESCE(NEW.status, '~') || x'0A'
                END
                || CASE WHEN
                    NEW.new
                THEN
                    '  topic_uuid: ' || topics.uuid || x'0A'
                ELSE
                    ''
                END
            FROM
                topics


                project_status ps
            ON
                ps.id = NEW.project_status_id
            INNER JOIN
                topics p
            ON
                p.id = ps.project_id
            WHERE
                topics.id = NEW.project_status_id
        )
    WHERE
        change_id = NEW.change_id
    ;
    INSERT OR IGNORE INTO
        project_status_tomerge(project_status_id)
    VALUES
        (NEW.project_status_id)
    ;
    INSERT INTO
        project_changes(
            change_id,
            project_id
        )
    SELECT
        NEW.change_id,
        project_id
    FROM
        project_status
    WHERE
        id = NEW.project_status_id
    ;
    UPDATE
        project_status_tomerge
    SET
        status = status + (NEW.status IS NOT NULL),
        rank   = rank + (NEW.rank IS NOT NULL)
    WHERE
        project_status_id = NEW.project_status_id
    ;
END;
CREATE TRIGGER
    project_status_deltas_ad_1
AFTER DELETE ON
    project_status_deltas
FOR EACH R
SET DEFINE OFF;
CREATE TABLE F_WEB_ANALYTICS
  DATAID         NUMBER,
  BRAND          VARCHAR2(50 BYTE),
  AD_SOURCE      VARCHAR2(50 BYTE),
  AD_MEDIUM      VARCHAR2(50 BYTE),
  PAGEVIEWS      NUMBER,
  UNIQUE_VISITS  NUMBER,
  NEW_VISITS     NUMBER,
  VISITS         NUMBER,
  BOUNCES        NUMBER,
  TIME_ON_SITE   NUMBER,
  RUNDATE        DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX F_WEB_ANALYTICS_PK ON F_WEB_ANALYTICS
(DATAID)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          6
﻿select model.id, model.urldocument FROM "поручениеобработкиотчетности" as model 
	            inner join reportpackage report on
		            model.reportpackageid = report.id 
	            inner join информацияопакете info on
		            model.packageinfoid = info.id
	            where
		            model.актуальныйСтатус = 'IncomingNumberAssotiated' and
		            info.rootname like 'ПакетСООУРЦБ1408%' and
		            info.modelname = 'PURCB' 
		            and
		            info.reportyear = '2012' and 
		            info.quarter = '3';
select model.id, model.urldocument, info.reportmonth, info.reportday, report.creationDate FROM "поручениеобработкиотчетности" as model 
	            inner join reportpackage report on
		            model.reportpackageid = report.id 
	            inner join информацияопакете info on
		            model.packageinfoid = info.id
	            where
		            model.актуальныйСтатус = 'IncomingNumberAssotiated' and
		            info.rootname l
-- ViewName : vm_company_ByProject
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'VM';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'vm_company_ByProject'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq_count = (select ifnull(max(

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
select top 4 * from crawlerDb.dbo.crawlLog
order by timestamp desc
select * from crawlStats
order by crawlID desc
select crawlid, count(1) as missingImages from missingImageDump
group by crawlID
order by crawlid desc
select crawlid, count(1) as missingImages from missingImageDump
group by crawlID
order by crawlid desc
select crawlid, count(1) as missingImages from missingImageManifest
group by crawlID
order by crawlid desc
--delete from missingImageManifest
SELECT Url, ProductId, Dept, Type, ImageName, Nav_From, Color FROM crawlerDB.dbo.missingImageManifest WHERE crawlID = 12"SELECT Url, ProductId, Dept, Type, ImageName, Nav_From, Color FROM crawlerDB.dbo.missingImageManifest WHERE crawlID = 12"
select * from missingImageManifest order by crawlID desc
--select * from missingImageDump where crawlid = (select max(crawlid) from crawlids)
SELECT Url, ProductId, Dept, Type, ImageName, Nav_From, Color FROM crawlerDB.dbo.missingImageManifest 
SELECT Url, ProductId, Dept, Type, ImageName, Nav_
﻿CREATE VIEW [dbo].[ViewCommissionPaymentParents]
AS
SELECT     dbo.ViewCommissions.InquiryNumber, dbo.ViewCommissions.ShotecNo, dbo.Orders.OrderNumber, dbo.Orders.CustomerOrderNumber, 
                      dbo.Orders.SupplierOrderNumber, dbo.Orders.OrderDate, dbo.Orders.RateToEuro, SUM(dbo.ViewCommissions.CommissionAmountInEuro) 
                      AS CommissionAmountInEuro, dbo.ViewCommissions.SupplierID, dbo.ViewCommissions.BranchID, dbo.ViewCommissions.CountryID, 
                      dbo.ViewCommissions.CompanyName AS ClientName, dbo.Currencies.CurrencyCode, dbo.ViewCommissions.Paid
FROM         dbo.ViewCommissions INNER JOIN
                      dbo.Orders ON dbo.ViewCommissions.InquiryNumber = dbo.Orders.InquiryNumber INNER JOIN
                      dbo.Currencies ON dbo.ViewCommissions.OrderCurrency = dbo.Currencies.ID
GROUP BY dbo.ViewCommissions.InquiryNumber, dbo.ViewCommissions.ShotecNo, dbo.Orders.OrderNumber, dbo.Orders.CustomerOrderNumber, 
                      d
USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_product_order')
BEGIN
DROP PROCEDURE sp_update_product_order
Print '' print  ' *** dropping procedure sp_update_product_order'
End
GO
Print '' print  ' *** creating procedure sp_update_product_order'
GO
Create PROCEDURE sp_update_product_order
@old_ORDER_ID[INT],
@old_CUSTOMER_ID[INT],
@new_CUSTOMER_ID[INT],
@old_ORDER_TYPE_ID[NVARCHAR](250),
@new_ORDER_TYPE_ID[NVARCHAR](250),
@old_ADDRESS_TYPE[NVARCHAR],
@new_ADDRESS_TYPE[NVARCHAR],
@old_DELIVERY_TYPE_ID[NVARCHAR](50),
@new_DELIVERY_TYPE_ID[NVARCHAR](50),
@old_AMOUNT[DECIMAL](6,2),
@new_AMOUNT[DECIMAL](6,2),
@old_ORDER_DATE[DATETIME],
@new_ORDER_DATE[DATETIME],
@old_DATE_EXPECTED[DATETIME],
@new_DATE_EXPECTED[DATETIME],
@old_DISCOUNT[DECIMAL](5,2),
@new_DISCOUNT[DECIMAL](5,2),
@old_ORDER_STATUS_ID[NVARCHAR](50),
@new_ORDER_STATUS_ID[NVARCHAR](50),
@old_USER_ADDRESS_ID[INT],
@new_USER_ADDRESS_ID[INT],
@old_HAS_ARRIVED[BIT],
@new_HAS_ARR
SET AUTOCOMMIT = 0;
START TRANSACTION;
LOCK TABLES Reservation WRITE;
CALL create_reservation(1, 2, @res);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES Passenger WRITE, Ticket WRITE, Reservation READ;
CALL add_passenger(@res ,9407021337,"Heriku","Sneitz", @pass);
CALL add_passenger(@res,9205221337,"Mac","Sneitz", @pass);
CALL add_passenger(@res,9205221338,"Fail","Failure", @pass);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES Reservation WRITE;
CALL create_reservation(1, 2, @res);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES 
Passenger WRITE,
Ticket WRITE,
Reservation WRITE,
PaymentInfo WRITE,
Contact WRITE;
CALL add_passenger(@res ,9407020016,"Erik","Sneitz", @pass);
CALL add_passenger(@res,9205221337,"Mac","Sneitz", @pass);
CALL add_contact(@res, @pass, "lol@lol.com", 1337);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES
PaymentInfo WRITE,
ProfitFactor READ,
Route AS route1 READ,
Route AS route2 READ,
Reservation WRITE,
Reservation AS r1 WRITE,
Reserv

Reservation AS r3 WRITE,
Reservation AS r4 WRITE,
WeeklyFlight READ,
WeeklyFlight AS wf1 READ,
WeeklyFlight AS wf2 READ,
WeeklyFlight AS wf3 READ,
Flight AS f1 READ,
Flight AS f2 READ,
Flight AS f3 READ,
Ticket WRITE;
CALL add_payment(@res, 1337127688103333, "Erik Sneitz", 5, 12);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES 
Reservation WRITE;
CALL create_reservation(1, 2, @res);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES 
Passenger WRITE,
Ticket WRITE,
Reservation WRITE,
PaymentInfo WRITE,
Contact WRITE;
CALL add_passenger(@res ,94070201116,"Test","Sneitz", @pass);
CALL add_passenger(@res,920522123,"Test2","Sneitz", @pass);
CALL add_contact(@res, @pass, "lol@lol.com", 1337);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES
PaymentInfo WRITE,
ProfitFactor READ,
Route AS route1 READ,
Route AS route2 READ,
Reservation WRITE,
Reservation AS r1 WRITE,
Reservation AS r2 WRITE,
Reservation AS r3 WRITE,
Reservation AS r4 WRITE,
WeeklyFlight READ,
WeeklyFlight AS wf1

WeeklyFlight AS wf2 READ,
WeeklyFlight AS wf3 READ,
Flight AS f1 READ,
Flight AS f2 READ,
Flight AS f3 READ,
Ticket WRITE;
CALL add_payment(@res, 1337127688103333, "Erik Sneitz", 5, 12);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES
Reservation WRITE;
CALL create_reservation(1, 30, @res);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES
Reservation WRITE;
CALL create_reservation(1, 30, @res);
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES
SearchView READ,
ProfitFactor READ,
Reservation READ,
Reservation AS r4 WRITE,
WeeklyFlight AS wf1 READ,
WeeklyFlight AS wf2 READ,
WeeklyFlight AS wf3 READ,
Flight AS f1 READ,
Flight AS f2 READ,
Flight AS f3 READ,
Route AS route1 READ,
Route AS route2 READ;
CALL search(5,31,5,"Jönköping","Linköping");
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES Reservation READ;
SET @available_seats = check_available_seats(1);
SELECT @available_seats;
UNLOCK TABLES;
COMMIT;
START TRANSACTION;
LOCK TABLES
Reservation AS r4 READ,
Ticket RE
insert into SYS_Menu values('Url_Supplier_IpMater_ShipConfirm','发货确认','Url_Supplier_Deliveryorder',500,'发货确认','~/SupplierIpMaster/ShipConfirmIndex','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_Supplier_IpMater_ShipConfirm','送货单-发货确认','SupplierMenu')
go
insert into SYS_Menu values('Url_Supplier_IpMater_CancelShipConfirm','发货冲销','Url_Supplier_Deliveryorder',510,'发货冲销','~/SupplierIpMaster/CancelShipConfirmIndex','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_Supplier_IpMater_CancelShipConfirm','送货单-发货冲销','SupplierMenu')
go
update sys_menu set isactive=0 where exists(select 1 from acc_permission a where a.code=sys_menu.code and a.category='SQSupplierMenu')
go
insert into SYS_Menu values('Url_SAP_CreateDN_View','创建DN交货单报表','Url_SI_SAP',530,'创建DN交货单报表','~/CreateDN/Index','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_SAP_CreateDN_View','创建DN交货单报表','SI_SAP')
go
update SYS_SNRule set prefixed='
update ir_cron set active = False;
update ir_module_module set state = 'uninstalled' where state = 'to upgrade';
update ir_module_module set state = 'to upgrade' where name = 'account_followup';
delete from ir_model_data where id in (select d.id from ir_model_data d left join ir_model_fields f on (f.id = d.res_id and d.model='ir.model.fields') where d.model='ir.model.fields' and f.id is null);
delete from ir_ui_view where id in 
select res_id 
from ir_model_data 
left join ir_module_module on ir_module_module.name = ir_model_data.module
where ir_module_module.state = 'uninstalled'
and ir_model_data.model = 'ir.ui.view'
);
delete from ir_model_fields where id in 
select res_id 
from ir_model_data 
left join ir_module_module on ir_module_module.name = ir_model_data.module
where ir_module_module.state = 'uninstalled'
and ir_model_data.model = 'ir.model.fields'
);
delete from ir_ui_menu where id in 
select res_id 
from ir_model_data 
left join ir_module_module on ir_module_module.name = ir

where ir_module_module.state = 'uninstalled'
and ir_model_data.model = 'ir.ui.menu'
);
delete from ir_model_constraint where model in 
select res_id 
from ir_model_data 
left join ir_module_module on ir_module_module.name = ir_model_data.module
where ir_module_module.state = 'uninstalled'
and ir_model_data.model = 'ir.model'
);
delete from ir_model_relation where model in 
select res_id 
from ir_model_data 
left join ir_module_module on ir_module_module.name = ir_model_data.module
where ir_module_module.state = 'uninstalled'
and ir_model_data.model = 'ir.model'
);
delete from jasper_document where model_id in 
select res_id 
from ir_model_data 
left join ir_module_module on ir_module_module.name = ir_model_data.module
where ir_module_module.state = 'uninstalled'
and ir_model_data.model = 'ir.model'
);
delete from base_action_rule where model_id in 
select res_id 
from ir_model_data 
left join ir_module_module on ir_module_module.name = ir_model_data.module
where ir_module_module.state
-- Help information.
--
-- $Id: chanfix.help.sql,v 1.5 2006/12/26 14:36:08 buzlip01 Exp $
DELETE FROM help;
COPY "help" FROM stdin;
ADDFLAG	1	Adds the specified flag to the specified user. Possible flags:\na - Can manage users for local server/group\nb - Can block/unblock channels\nc - Can add/delete notes for channels\nf - Can perform manual chanfix\no - Can do anything\nu - Can manage users globally\nNote: You can only add one flag at a time.
ADDHOST	1	Adds the specified hostmask to the user's list of hostmasks.
ADDNOTE	1	Adds a note to the specified channel.
ADDUSER	1	Adds a new user, without flags, and optionally with the specified hostmask.
ALERT	1	Puts a channel on ALERT status\nChannels in alert status have information contained in notes that should be considered before fixing the channel. These channels also require the OVERRIDE flag to manually fix them.
BLOCK	1	Blocks a channel from being fixed, both automatically and manually.\nThe reason will be shown when doing INFO <chann

CANFIX	1	Lists the ops that can fix the specified channel without requiring oper assistance.
CHECK	1	Shows the number of ops and total clients in the specified channel.
CSCORE	1	Shows the same as SCORE, but in a compact output. See /msg C HELP SCORE.
CHANFIX	1	Performs a manual fix on the specified channel. Append OVERRIDE, YES, or an exclamation mark (!) to force a manual fix. Append CONTACT if you wish that the top 10 ops for the channel be noticed about the fix before the fix happens.
DELFLAG	1	Removes the specified flag from a user. See /msg C HELP ADDFLAG.
DELHOST	1	Deletes the specified hostmask from a user's list of hostmasks.
DELNOTE	1	Deletes a note matching the specified id from the specified channel. You can only delete the notes you have added.
DELUSER	1	Deletes the specified user.
QUOTE	1	This command should never be used.\nUsing it would be bad.\nHow bad?\nTry to imagine all life stopping instantaneously, and every molecule in your body exploding at the speed of light.
H

HISTORY	1	Shows the times that the specified channel has been manually fixed.
INFO	1	Shows all notes of the specified channel and whether the channel is actively blocked.
LASTCOM	1	Shows all the last commands which where issued to the bot.
LISTBLOCKED	1	Lists all of the channels that chanfix will not score.
LISTHOSTS	1	With no username specified, it lists the hostmasks chanfix recognizes you by. Otherwise, it views the specified username's host list.\nNOTE: Server admins (+a) can only view host lists of users within their own server group. Users lower than server admin status can only view their own host lists.
LISTTEMPBLOCKED	1	Lists all of the channels that chanfix will not score temporarly.
OPLIST	1	Shows the top 10 op accounts and their scores for the specified channel. Possible flags\n-all (or ALL or !) - Lists all scores.\n-days - Displays a small bar of the 2 week scoring period showing when a person was opped (. means never opped, 0 means 0-10%, 9 means 91-100%)
OPNICKS	1	Show
SET DEFINE OFF;
CREATE TABLE DREF_SERVICE_GRP
  SERVICE_TYPE  VARCHAR2(15 BYTE),
  DESCRIPTION   VARCHAR2(50 BYTE),
  GROUPING      VARCHAR2(50 BYTE)
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_SERVICE_TYPE$PK ON DREF_SERVICE_GRP
(SERVICE_TYPE)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CAC
CREATE TABLE dmNavigation(
bannerImage nvarchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL ,
lockedBy nvarchar(250) NULL DEFAULT NULL ,
lastupdatedby nvarchar(250) NOT NULL DEFAULT '' ,
fu nvarchar(250) NULL DEFAULT NULL ,
options nvarchar(250) NULL DEFAULT NULL ,
createdby nvarchar(250) NOT NULL DEFAULT '' ,
bannerTagLine nvarchar(250) NULL DEFAULT NULL ,
internalRedirectID nvarchar(50) NULL DEFAULT NULL ,
datetimecreated datetime NOT NULL ,
bBannerBack bit NOT NULL DEFAULT 0 ,
status nvarchar(250) NOT NULL DEFAULT 'draft' ,
locked bit NOT NULL DEFAULT 0 ,
ExternalLink nvarchar(50) NULL DEFAULT NULL ,
ObjectID nvarchar(50) NOT NULL DEFAULT '' ,
target nvarchar(250) NULL DEFAULT NULL ,
navType nvarchar(250) NOT NULL DEFAULT 'aObjectIDs' ,
bannerTitle nvarchar(250) NULL DEFAULT NULL ,
lNavIDAlias nvarchar(250) NULL DEFAULT NULL ,
sourceImageID nvarchar(50) NULL DEFAULT NULL ,
externalRedirectURL nvarchar(250) NULL DEFAULT NULL ,
title nvarchar(250) NULL DEFAULT NULL 
create or replace procedure PP_TRANSF_AVB
/*
   * Âûãðóçêà ïåðå÷èñëåíèé â "ÀâòîÂàçÁàíê" äëÿ Ìýðèè ã.î. Òîëüÿòòè
   * Ãîí÷àðåíêî Ïàâåë, 17.09.2012 ã.
  **/
(nCOMPANY   in number,
 nIDENT     in number,
 nTYPE      in number, -- 1 - ÀÂÁ, 2 - ÃÁ
 sBANK      in varchar2,
 sEXECUTIVE in varchar2,
 nMODE      in number, -- Ðåæèì ïå÷àòè
 nOUTIDENT  out number -- Èäåíòèôèêàòîð ôàéëîâ âûãðóçêè
 ) is
  i           number;
  sSUMM       VARCHAR2(250);
  cCLOB       CLOB;
  sFILENAME   VARCHAR2(100);
  sREESTR_NUM number;
  sTYPE       varchar2(3);
  sDM         varchar2(2) := chr(9);
  /**
   * Êóðñîð îñíîâíîãî çàïðîñà:
  **/
  cursor a(nIDEnT in number) is
    select a.*, --
           rownum,
           sum(a.transfsumm) over() nallsumm
      from (select aa.agnacc, --
                   ar.agnfamilyname,
                   ar.agnfirstname,
                   ar.agnlastname,
                   ar.agnfamilyname || ' ' || ar.agnfirstname || ' ' || ar.agnlastname sFIO,
                   st.transf

              from sltransfers st, --
                   agnacc      aa,
                   agnlist     ar
             where aa.rn = st.bankattrs
               and ar.rn = st.recipient
               and st.rn in (select document from selectlist where ident = nIDENT)
             order by 2, 3, 4) a;
  /**
   * Èíèöèàëèçàöèÿ Excel
  **/
  procedure init is
    i number;
  begin
    if nTYPE = 1 then
      prsg_excel.PREPARE;
      prsg_excel.SHEET_SELECT('Ëèñò1');
      prsg_excel.LINE_DESCRIBE('Ñòðîêà');
      for i in 1 .. 6 loop
        prsg_excel.LINE_CELL_DESCRIBE('Ñòðîêà', 'Ä' || i);
      end loop;
      prsg_excel.CELL_DESCRIBE('Ðååñòð');
      prsg_excel.CELL_DESCRIBE('ÊÂûäà÷å');
      prsg_excel.CELL_DESCRIBE('Èñïîëíèòåëü');
    end if;
    if nType = 2 then
      prsg_excel.SHEET_SELECT('Ëèñò2');
      prsg_excel.LINE_DESCRIBE('Ñòðîêà2');
      for i in 1 .. 4 loop
        prsg_excel.LINE_CELL_DESCRIBE('Ñòðîêà2', 'Å' || i);
      end loop;
      prsg_excel.CELL_DESCRIBE('

      prsg_excel.CELL_DESCRIBE('ÐååñòðÄàòà');
      prsg_excel.CELL_DESCRIBE('Ñóììà2');
      prsg_excel.CELL_DESCRIBE('Èñïîëíèòåëü2');
    end if;
  end;
  /**
   * Äåèíèöèàëèçàöèÿ Excel
  **/
  procedure fini is
  begin
    if nTYPE = 1 then
      prsg_excel.LINE_DELETE('Ñòðîêà');
      prsg_excel.SHEET_DELETE('Ëèñò2');
    end if;
    if nTYPE = 2 then
      prsg_excel.LINE_DELETE('Ñòðîêà2');
      prsg_excel.SHEET_DELETE('Ëèñò1');
    end if;
  end;
  /**
   * Ïîðÿäêîâûé íîìåð ðååñòðà
  **/
  function reestr_number
  --
  (nTYPE in number) return number is
    Result number;
  begin
    update TP_TRANSF_NUM t
       set t.reestr_number = t.reestr_number + 1
     where t.reestr_type = nTYPE
       and t.reestr_year = to_char(sysdate, 'yyyy')
    returning reestr_number into Result;
    if sql%notfound then
      Result := 1;
      insert into TP_TRANSF_NUM (reestr_number, reestr_type, reestr_year) values (1, nTYPE, to_char(sysdate, 'yyyy'));
    end if;
    return Result;
  end;
  
CREATE TABLE [Production].[ProductModelIllustration] (
		[ProductModelID]     [int] NOT NULL,
		[IllustrationID]     [int] NOT NULL,
		[ModifiedDate]       [datetime] NOT NULL,
		CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID]
		PRIMARY KEY
		CLUSTERED
		([ProductModelID], [IllustrationID])
	ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModelIllustration]
	ADD
	CONSTRAINT [DF_ProductModelIllustration_ModifiedDate]
	DEFAULT (getdate()) FOR [ModifiedDate]
GO
ALTER TABLE [Production].[ProductModelIllustration]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID]
	FOREIGN KEY ([IllustrationID]) REFERENCES [Production].[Illustration] ([IllustrationID])
ALTER TABLE [Production].[ProductModelIllustration]
	CHECK CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID]
GO
ALTER TABLE [Production].[ProductModelIllustration]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID]
	
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_FundGetAll]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_FundGetAll]
	@param_strFundName		NVARCHAR(50) = NULL
AS
BEGIN
	SET NOCOUNT ON;
	IF @param_strFundName is null BEGIN
		SELECT	FundNameID
				,FundName
				,FundManager
				,Sector
				,SubSector
				,Currency
				,Price
				,DatePriceUpdated
				,Renewalsperannum
				,SEDOL
				,FundCreatedDate
				,FundUpdatedDate
				,FundUpdatedBy
				,CompanyID
				,FeedSource
				,FeedListID
				,FundStatus
				,ParentFundNameID
				,ExpiryDate
				,CITICODE
				,ISINCODE
				,TYPECODE
				,FundTypeID
				,SecurityTypeID
				,Checked
		FROM NavGlobalDBwwwGUID.dbo.Fund
		ORDER BY FundName
	END
	ELSE BEGIN
		SELECT	FundNameID
				,FundName
				,FundManager
				,Sector
				,SubSector
				,Currency
				,Price
				,DatePriceUpdated
				,Renewalsperannum
				,SEDOL
				,FundCreatedDate
				,FundUpd
create table big as select * from all_objects;
insert /*+ append */ into big select * from big;
commit;
insert /*+ append */ into big select * from big;
commit;
insert /*+ append */ into big select * from big;
commit;
insert /*+ append */ into big select * from big;
commit;
create index big_idx on big(object_id);
create table small as select * from all_objects where rownum < 100;
create index small_idx on small(object_id);
insert into big select * from small;
commit;
@gen_stats
@gen_stats
rem analyze table big compute statistics
rem for table
rem for all indexes
rem for all indexed columns
rem /
rem analyze table small compute statistics
rem for table
rem for all indexes
rem for all indexed columns
rem /
/*
so, small has 99 rows, big has 133,000+
select count(subobject_name)
  from big
 where object_id in ( select object_id from small )
call     count       cpu    elapsed       disk      query    current        rows
------- ------  -------- ---------- ---------- ---------- ----------  

Parse        1      0.01       0.01          0          0          0           0
Execute      1      0.00       0.00          0          0          0           0
Fetch        2      0.02       0.02          0        993          0           1
------- ------  -------- ---------- ---------- ---------- ----------  ----------
total        4      0.03       0.03          0        993          0           1
Rows     Execution Plan
-------  ---------------------------------------------------
      0  SELECT STATEMENT   GOAL: CHOOSE
      1   SORT (AGGREGATE)
    792    MERGE JOIN
    100     SORT (JOIN)
    100      VIEW OF 'VW_NSO_1'
     99       SORT (UNIQUE)
    792        INDEX   GOAL: ANALYZED (FULL SCAN) OF 'SMALL_IDX'
                   (NON-UNIQUE)
    891     SORT (JOIN)
      0      TABLE ACCESS   GOAL: ANALYZED (FULL) OF 'BIG'
versus:
select count(subobject_name)
  from big
 where exists ( select null from small where small.object_id = big.object_id )
call     count       cpu    

------- ------  -------- ---------- ---------- ---------- ----------  ----------
Parse        1      0.00       0.00          0          0          0           0
Execute      1      0.00       0.00          0          0          0           0
Fetch        2      4.12       4.12          0     135356         15           1
------- ------  -------- ---------- ---------- ---------- ----------  ----------
total        4      4.12       4.12          0     135356         15           1
Rows     Execution Plan
-------  ---------------------------------------------------
      0  SELECT STATEMENT   GOAL: CHOOSE
      1   SORT (AGGREGATE)
    792    FILTER
 135297     TABLE ACCESS   GOAL: ANALYZED (FULL) OF 'BIG'
 133504     INDEX   GOAL: ANALYZED (RANGE SCAN) OF 'SMALL_IDX'
                (NON-UNIQUE)
That shows if the outer query is "big" and the inner query is "small", in is generally more 
efficient then NOT EXISTS.
Now:
select count(subobject_name)
  from small
 where object_id in ( sel
INSERT INTO `#__extensions` (`extension_id`, `name`, `type`, `element`, `folder`, `client_id`, `enabled`, `access`, `protected`, `manifest_cache`, `params`, `custom_data`, `system_data`, `checked_out`, `checked_out_time`, `ordering`, `state`) VALUES
(28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2012 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '0000-00-00 00:00:00', 0, 0);
INSERT INTO `#__menu` (`id`, `menutype`, `title`, `alias`, `note`, `path`, `link`, `type`, `published`, `parent_id`, `level`, `component_id`, `ordering`, `checked_out`, `checked_out_time`, `browserNav`, `access`, `img`, `template_style_id`, `params`, `lft`, `rgt`, `home`, `language`, `client_i
# -*- coding: utf-8 -*- This line is just for your information, the python plugin will not use the first line
CREATE TRIGGER IF NOT EXISTS "after_insert_obs_points_geom_fr_coords" AFTER INSERT ON "obs_points" WHEN (0 < (select count() from obs_points where ((NEW.east is not null) AND (NEW.north is not null) AND (NEW.geometry IS NULL)))) BEGIN UPDATE obs_points SET  geometry = MakePoint(NEW.east, NEW.north, (select srid from geometry_columns where f_table_name = 'obs_points')) WHERE (NEW.east is not null) AND (NEW.north is not null) AND (NEW.geometry IS NULL) AND (NEW.obsid = obsid); END;
CREATE TRIGGER IF NOT EXISTS "after_insert_obs_points_coords_fr_geom" AFTER INSERT ON "obs_points" WHEN (0 < (select count() from obs_points where ((NEW.east is null) AND (NEW.north is null) AND (NEW.geometry is not NULL)))) BEGIN UPDATE obs_points SET  east = X(geometry), north = Y(geometry) WHERE (NEW.east is null) AND (NEW.north is null) AND (NEW.geometry is not NULL) AND (NEW.obsid = obsid); END;
C
----
-- Copyright (c) 2012-2014 Apple Inc. All rights reserved.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
----
---------------------------------------------------
-- Upgrade database schema from VERSION 34 to 35 --
---------------------------------------------------
----------------------
-- Group membership --
----------------------
create table GROUP_REFRESH_WORK (
  WORK_ID                       integer      primary key default nextval('WORKITEM_SEQ') not null, -- implicit index
 

  GROUP_UID                    varchar(255) not null
);
create table GROUP_ATTENDEE_RECONCILIATION_WORK (
  WORK_ID                       integer      primary key default nextval('WORKITEM_SEQ') not null, -- implicit index
  NOT_BEFORE                    timestamp    default timezone('UTC', CURRENT_TIMESTAMP),
  RESOURCE_ID                   integer,
  GROUP_ID                      integer
);
create table GROUPS (
  GROUP_ID                      integer      primary key default nextval('RESOURCE_ID_SEQ'),    -- implicit index
  NAME                          varchar(255) not null,
  GROUP_UID                     varchar(255) not null,
  MEMBERSHIP_HASH               varchar(255) not null,
  EXTANT                        integer default 1,
  CREATED                       timestamp default timezone('UTC', CURRENT_TIMESTAMP),
  MODIFIED                      timestamp default timezone('UTC', CURRENT_TIMESTAMP)
);
create index GROUPS_GROUP_UID on GROUPS(GROUP_UID);
create table GROUP_MEMBER

  GROUP_ID                      integer,
  MEMBER_UID                    varchar(255) not null
);
create index GROUP_MEMBERSHIP_GROUP on GROUP_MEMBERSHIP(GROUP_ID);
create index GROUP_MEMBERSHIP_MEMBER on GROUP_MEMBERSHIP(MEMBER_UID);
create table GROUP_ATTENDEE (
  GROUP_ID                      integer,
  RESOURCE_ID                   integer,
  MEMBERSHIP_HASH               varchar(255) not null
);
---------------
-- Delegates --
---------------
create table DELEGATES (
  DELEGATOR                     varchar(255) not null,
  DELEGATE                      varchar(255) not null,
  READ_WRITE                    integer      not null, -- 1 = ReadWrite, 0 = ReadOnly
  primary key (DELEGATOR, READ_WRITE, DELEGATE)
);
create index DELEGATE_TO_DELEGATOR on
  DELEGATES(DELEGATE, READ_WRITE, DELEGATOR);
create table DELEGATE_GROUPS (
  DELEGATOR                     varchar(255) not null,
  GROUP_ID                      integer      not null,
  READ_WRITE                    integer      not n
create trigger commentInsertTS before insert on Comment for each row set new.createDate = unix_timestamp(), new.modDate = unix_timestamp();
create trigger commentUpdateTS before update on Comment for each row set new.modDate = unix_timestamp();
create trigger cookieInsertTS before insert on Cookie for each row set new.createDate = unix_timestamp();
create trigger definitionInsertTS before insert on Definition for each row set new.createDate = unix_timestamp(), new.modDate = unix_timestamp();
create trigger definitionUpdateTS before update on Definition for each row set new.modDate = unix_timestamp();
create trigger lexemInsertTS before insert on Lexem for each row set new.createDate = unix_timestamp(), new.modDate = unix_timestamp();
create trigger lexemUpdateTS before update on Lexem for each row set new.modDate = unix_timestamp();
create trigger lexemDefinitionMapInsertTS before insert on LexemDefinitionMap for each row set new.createDate = unix_timestamp(), new.modDate = unix_timest

create trigger lexemDefinitionMapUpdateTS before update on LexemDefinitionMap for each row set new.modDate = unix_timestamp();
create trigger passwordTokenInsertTS before insert on PasswordToken for each row set new.createDate = unix_timestamp();
create trigger userWordBookmarkInsertTS before insert on UserWordBookmark for each row set new.createDate = unix_timestamp(), new.modDate = unix_timestamp();
create trigger userWordBookmarkUpdateTS before update on UserWordBookmark for each row set new.modDate = unix_timestamp();
create trigger wikiArticleInsertTS before insert on WikiArticle for each row set new.createDate = unix_timestamp(), new.modDate = unix_timestamp();
create trigger wikiArticleUpdateTS before update on WikiArticle for each row set new.modDate = unix_timestamp();
-- note: creationDate, not createDate
create trigger wordOfTheDayInsertTS before insert on WordOfTheDay for each row set new.creationDate = unix_timestamp();
create trigger divertaBookInsertTS before insert on 
# Routine to be called by t/view.inc
# The variable $after_select must be set before calling this routine.
eval CREATE VIEW v1 AS SELECT $after_select;
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME = 'v1';
# Extract the VIEW's SELECT from INFORMATION_SCHEMA.VIEWS
let $query1 = `SELECT VIEW_DEFINITION FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME = 'v1'`;
# Extract the VIEW's SELECT from SHOW CREATE VIEW
# SHOW CREATE VIEW v1
# View    Create View     character_set_client    collation_connection
# v1      CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v1` AS select '<--- .....
let $value= query_get_value(SHOW CREATE VIEW v1, Create View, 1);
let $query2 = `SELECT SUBSTR("$value",INSTR("$value",' as select ') + CHAR_LENGTH(' as '))`;
DROP VIEW v1;
# Recreate the view based on SELECT from INFORMATION_SCHEMA.VIEWS
eval CREATE VIEW v1 AS $query1;
DROP VIEW v1;
# Recreate the view bas
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `group_instance`;
CREATE TABLE `group_instance` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0',
  `instance` int(10) unsigned NOT NULL DEFAULT '0',
  `permanent` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guid`,`instance`),
  KEY `instance` (`instance`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `group_instance` WRITE;
/*!40000 ALTER TABLE `group_instance` DI
-- count(columnX) is slower than count(*) or count(1)
drop table t;
create table t cache as select * from v$session;
insert into t select * from t;
insert into t select * from t;
insert into t select * from t;
insert into t select * from t;
insert into t select * from t;
insert into t select * from t;
insert into t select * from t;
insert into t select * from t;
insert into t select * from t;
insert /*+ append */ into t select * from t;
commit;
insert /*+ append */ into t select * from t;
commit;
insert /*+ append */ into t select * from t;
commit;
insert /*+ append */ into t select * from t;
commit;
insert /*+ append */ into t select * from t;
commit;
insert /*+ append */ into t select * from t;
commit;
exec dbms_stats.gather_table_stats(user, 'T');
-- to get better rowsource level timing accuracy
alter session set "_rowsource_statistics_sampfreq"=1;
select /*+ gather_plan_statistics */ count(*) from t;
set timing on
select /*+ gather_plan_statistics */ count(*) from t;
select * from 
set timing on
set echo on
set linesize 300
column table_name format a30
column segment_name format a30
column plan_table_output format a150
column partition_name format a30
set pagesize 1000
set trims on
spool 07_insz
--
-- This will ensure that we are not using AutoDOP
-- Auto DOP is not a "problem", but using manual
-- DOP will mean that the script will work
-- as intended in this test case.
--
alter session set parallel_degree_policy = 'MANUAL';
--
-- Enable parallel DML so that the write into the
-- staging table will be in parallel for maximum
-- performance.
--
alter session enable parallel dml;
--
-- Read the data files via the gzip external table
-- and insert the rows into the staging table.
-- We can read the gzip files at DOP 2 because there are
-- two files - we can't read just part of a gzip file so if we
-- want to read at DOP 4, then we will need 4 gzip files.
--
INSERT /*+ APPEND PARALLEL(itab,2) */ INTO sales_stage itab
SELECT /*+ PARALLEL(tab,2) */ *
FROM   salesz_ext
CREATE TABLE "shows"
 ("id" serial8 primary key, "created_at" date, "name" varchar(255), "price" decimal);
INSERT INTO "shows" VALUES (1, '2015-08-23 20:09:41.969902', 'Le Haggis', 12.99);
INSERT INTO "shows" VALUES (2, '2015-08-23 20:09:41.972179', 'Shitfaced Shakespeare', 16.50);
INSERT INTO "shows" VALUES (3, '2015-08-23 20:09:41.972999', 'Camille O''Sullivan', 17.99);
INSERT INTO "shows" VALUES (4, '2015-08-23 20:09:41.971545', 'Game of Thrones - The Musical', 16.50);
INSERT INTO "shows" VALUES (5, '2015-08-23 20:09:41.975610', 'Paul Dabek Mischief ', 12.99);
INSERT INTO "shows" VALUES (6, '2015-08-23 20:09:41.979784', 'Joe Stilgoe: Songs on Film â€“ The Sequel', 16.50);
INSERT INTO "shows" VALUES (7, '2015-08-23 20:09:41.981653', 'Aaabeduation â€“ A Magic Show', 17.99);
INSERT INTO "shows" VALUES (8, '2015-08-23 20:09:41.983556', 'Edinburgh Royal Tattoo', 32.99);
INSERT INTO "shows" VALUES (9, '2015-08-23 20:09:41.987003', 'Best of Burlesque', 7.99);
INSERT INTO "shows" VALUES (10

INSERT INTO "shows" VALUES (11, '2015-08-23 20:09:41.991271', 'Urinetown', 8.50);
INSERT INTO "shows" VALUES (12, '2015-08-23 20:09:41.992358', 'Two girls, one cup of comedy', 6.00);
INSERT INTO "shows" VALUES (13, '2015-08-23 20:09:41.996721', 'Balletronics', 32.00);
CREATE TABLE "times" ("id" serial8 primary key, "time" varchar(255), "show_id" int2);
INSERT INTO "times" (time, show_id) VALUES ('13:30', 1);
INSERT INTO "times" (time, show_id) VALUES ('19:30', 2);
INSERT INTO "times" (time, show_id) VALUES ('17:15', 3);
INSERT INTO "times" (time, show_id) VALUES ('19:30', 4);
INSERT INTO "times" (time, show_id) VALUES ('12:45', 5);
INSERT INTO "times" (time, show_id) VALUES ('17:15', 6);
INSERT INTO "times" (time, show_id) VALUES ('12:45', 7);
INSERT INTO "times" (time, show_id) VALUES ('22:00', 8);
INSERT INTO "times" (time, show_id) VALUES ('19:30', 9);
INSERT INTO "times" (time, show_id) VALUES ('14:15', 10);
INSERT INTO "times" (time, show_id) VALUES ('20:00', 11);
INSERT INTO "ti

INSERT INTO "times" (time, show_id) VALUES ('20:00', 13);
CREATE TABLE "users" ("id" serial8 primary key, "name" varchar(255));
INSERT INTO "users" (name) VALUES ('Rick Henri'), ('Jay Chetty'), ('Keith Douglas');
INSERT INTO "users" (name) VALUES
('Callum Dougan'),
('Andrew Insley'),
('Daniel Gillespie'),
('Bethany Fraser'),
('Nick Ridell'),
('Evelyn Utterson'),
('Sky Su'),
('Nicholas Hill'),
('Michael McLeod'),
('Callum Hogg'),
('Chris Sloan'),
('Gary Carmichael'),
('Oscar Brooks'),
('Ross Galloway'),
('Paul MacLean'),
('Stuart Ramsay'),
('Peter Forbes'),
('Euan Walls'),
('Aine Dunphy');
CREATE TABLE "shows_users" ("id" serial8 primary key, "show_id" int8, "user_id" int8);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 1);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 2);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 5);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 7);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 8);
INSERT INTO "sho
ALTER TABLE Definition ADD COLUMN ModUserId INT NOT NULL DEFAULT 0;
CREATE TABLE history_Definition like Definition;
ALTER TABLE history_Definition DROP COLUMN Id;
ALTER TABLE history_Definition ADD COLUMN Id INT NOT NULL FIRST, ADD COLUMN NewDate INT NOT NULL AFTER ModDate;
ALTER TABLE history_Definition ADD COLUMN Version INT NOT NULL auto_increment AFTER Id, ADD INDEX Id_Version(Id, Version);
ALTER TABLE history_Definition ADD COLUMN Action ENUM('UPDATE','INSERT','DELETE') AFTER Version, ADD COLUMN User VARCHAR(25) AFTER Action;
DELIMITER |
CREATE TRIGGER updateDef AFTER UPDATE ON Definition
FOR EACH ROW BEGIN
INSERT INTO history_Definition SET 
Id = OLD.Id,
Action = 'UPDATE',
User = USER(),
UserId = OLD.UserId, 
SourceId = OLD.SourceId,
Lexicon = OLD.Lexicon,
Displayed = OLD.Displayed,
InternalRep = OLD.InternalRep,
HtmlRep = OLD.HtmlRep,
Status = OLD.Status,
CreateDate = OLD.CreateDate,
ModDate = OLD.ModDate,
NewDate = NEW.ModDate,
ModUserId = OLD.ModUserId;
END;
DELIMITER ;
DELIM
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (3362, "Privilege Menu", "4.1", "1.5", "3.8", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (446712, 3362, "Priv_Menu_Walker", "start_el", "/customWalker.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (446713, 3362, "privMenu", "edit_priv_menu_walker", "/privMenu.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (446714, 3362, "privMenu", "_action_init", "/privMenu.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (446715, 3362, "Priv_Menu_Walker", "start_lvl", "/customWalker.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (446716, 3362, "privM

insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (446717, 3362, "Priv_Menu_Walker", "end_lvl", "/customWalker.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (446718, 3362, "privMenu", "remove_menu_items", "/privMenu.php", now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (36969, 3362, "wp_update_nav_menu_item", "array($myprivMenuClass,'save_extra_menu_opts')", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (36970, 3362, "plugins_loaded", "array($myprivMenuClass,'_action_init')", 10, now(), now());
insert into filters (id, plugin_id, tag_name, filter_callback, filter_priority, created, modified) values (12612, 3362, "wp_edit_nav_menu_walker", "array($myprivMenuClass,'edit_priv_menu_walker')", 10, now(), now());
insert into filte
insert into acc_permissioncategory values('Application','应用管理',1)
go
insert into acc_permissioncategory values('MasterData','基础数据',1)
go
insert into ACC_PermissionCategory values('Supplier','供应商',4)
go
insert into acc_user values('su','E10ADC3949BA59ABBE56E057F20F883E','超级','用户',0,null,null,null,'zh-CN',1,0,0,0,1,'用户 超级',GETDATE(),1,'用户 超级',getdate())
go
insert into sys_menu values('Menu_MasterData','基础数据',null,10,'基础数据',null,'~/Content/Images/Nav/MasterData.png',1)
go
insert into sys_menu values('Url_Supplier_View','供应商','Menu_MasterData',20,'供应商','~/Supplier/Index','~/Content/Images/Nav/Default.png',1)
go
insert into sys_menu values('Menu_Application','应用管理',null,1,'应用管理',null,'~/Content/Images/Nav/MasterData.png',1)
go
insert into sys_menu values('Url_UserFav_View','用户偏好','Menu_Application',10,'用户偏好','~/UserFavorite/Index','~/Content/Images/Nav/Default.png',1)
go
insert into SYS_CodeMstr values('Language','语言',0)
go
insert into SYS_CodeDet values('Language','zh-CN','CodeDetail_Langu

go
insert into SYS_CodeDet values('Language','en-US','CodeDetail_Language_en_US',0,2)
go
insert into SYS_EntityPreference values('10001',1,'20','DefaultPageSize',1,'用户 超级',getdate(),1,'用户 超级',getdate())
go
insert into SYS_EntityPreference values('10002',2,'5','SessionCachedSearchStatementCount',1,'用户 超级',getdate(),1,'用户 超级',getdate())
go
insert into SYS_EntityPreference values('10003',3,'0','测试系统标识',1,'用户 超级',getdate(),1,'用户 超级',getdate())
go
insert into SYS_EntityPreference values('10004',4,'1000','MaxRowSizeOnPage',1,'用户 超级',getdate(),1,'用户 超级',getdate())
go
insert into sys_menu values('Menu_Application_Permission','访问控制','Menu_Application',20,'访问控制',NULL,'~/Content/Images/Nav/Default.png',1)
go
insert into sys_menu values('Url_PermissionGroup_View','权限组','Menu_Application_Permission',10,'权限组','~/PermissionGroup/Index','~/Content/Images/Nav/Default.png',1)
go
insert into acc_permission values('Url_PermissionGroup_View','权限组','Application')
go
insert into sys_menu values('Url_Role_Vi

go
insert into acc_permission values('Url_Role_View','角色','Application')
go
insert into sys_menu values('Url_User_View','用户','Menu_Application_Permission',30,'用户','~/User/Index','~/Content/Images/Nav/Default.png',1)
go
insert into acc_permission values('Url_User_Delete','用户删除','Application')
go
insert into acc_permission values('Url_User_Edit','用户编辑','Application')
go 
insert into acc_permission values('Url_User_View','用户查看','Application')
go
insert into acc_permission values('Url_UserFav_Delete','用户偏好删除','Application')
go
insert into acc_permission values('Url_UserFav_Edit','用户偏好编辑','Application')
go
insert into acc_permission values('Url_UserFav_View','用户偏好查看','Application')
go
insert into acc_permission values('Url_Supplier_New','供应商新建','MasterData')
go
insert into acc_permission values('Url_Supplier_Delete','供应商删除','MasterData')
go
insert into acc_permission values('Url_Supplier_Edit','供应商编辑','MasterData')
go
insert into acc_permission values('Url_Supplier_View','供应商查看','MasterDat
USE Member
go
IF OBJECT_ID('dbo.wsp_newPreRegInfo') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newPreRegInfo
    IF OBJECT_ID('dbo.wsp_newPreRegInfo') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newPreRegInfo >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newPreRegInfo >>>'  
END
go
CREATE PROCEDURE wsp_newPreRegInfo
 @email              VARCHAR(129)
AS
DECLARE 
 @dateNow DATETIME
,@return INT
EXEC @return = dbo.wsp_GetDateGMT @dateNow OUTPUT
IF @return != 0
	BEGIN
		RETURN @return
	END
BEGIN TRAN TRAN_newPreRegInfo
IF NOT EXISTS (SELECT 1  FROM PreRegInfo WHERE email = @email) 
BEGIN
    INSERT INTO dbo.PreRegInfo ( email ,dateCreated)
    VALUES ( @email ,@dateNow)
END
IF @@error = 0
  BEGIN
    COMMIT TRAN TRAN_newPreRegInfo
    RETURN 0
  END
ELSE
  BEGIN
		ROLLBACK TRAN TRAN_newPreRegInfo
		RETURN 99
  END
go
IF OBJECT_ID('dbo.wsp_newPreRegInfo') IS NOT NULL
    PRINT '<<< CREATED PROCEDURE dbo.wsp_newPreRegInfo >>>'
ELSE
    PRINT '<<< FAILED CR
insert into sys_menu values
('Url_OrderMstr_Production_ItemView','整车生产单查询','Url_OrderMstr_Production',102,'整车生产单查询','~/ProductionOrder/ItemIndex','~/Content/Images/Nav/Default.png',1)
if not exists(select * from acc_permission where code='Url_OrderMstr_Production_ItemView')
insert into acc_permission values('Url_OrderMstr_Production_ItemView','整车生产单查询','Production')
-- 月结
update sys_menu set isactive =1  where  code='Url_FinanceCalendar_Close'
--会计区间（财政月）
update sys_menu set isactive =1  where  code='Url_FinanceCalendar_View'
-- 去掉电子看板超合约报表
update sys_menu set isactive =0  where  code='Url_OrderMstr_Procurement_ElecKBOverSA'
insert into sys_menu values
('Url_OrderOverFlow_View','超合约报表','Menu.Procurement.Info',3,'超合约报表','~/OrderOverFlow/Index','~/Content/Images/Nav/Default.png',1)
if not exists(select * from acc_permission where code='Url_OrderOverFlow_View')
	insert into acc_permission values ('Url_OrderOverFlow_View','超合约报表','Procurement')
insert into sys_menu values
('KanbanCard_Proc
CREATE TABLE dbo.Customer
    (
      [CustomerId] INT NOT NULL
                       IDENTITY(10000, 1) ,
      [CustomerNumber] VARCHAR(15) NOT NULL ,
      [CustomerName] NVARCHAR(100) NOT NULL ,
      [CreateDate] DATETIME NOT NULL ,
      [PasswordHash] VARBINARY(40) NULL ,
      [LastLoginDate] DATETIME NULL ,
      CONSTRAINT PK_CustomerId PRIMARY KEY CLUSTERED ( CustomerId )
    )
GO
CREATE TABLE dbo.Visitor
    (
      [VisitorId] UNIQUEIDENTIFIER NOT NULL ,
      [ZipCode] VARCHAR(20) NULL ,
      [CustomerNumber] VARCHAR(20) NULL ,
      [LastBasketId] INT NULL ,
      [CountryCode] VARCHAR(5) ,
      [CreateDate] DATETIME NOT NULL ,
      CONSTRAINT PK_VisitorId PRIMARY KEY CLUSTERED ( VisitorId )
    )
GO	
CREATE TABLE dbo.Category
    (
      CategoryId INT IDENTITY(1, 1) ,
      CategoryName NVARCHAR(50) NOT NULL ,
      CreateDate DATETIME NOT NULL ,
      ImageUrl VARCHAR(200) NULL ,
      LinkUrl VARCHAR(500) NULL ,
      DisplayTitle VARCHAR(500) NULL ,
      CONSTR

    )
GO
CREATE TABLE dbo.Product
    (
      [ProductId] INT IDENTITY(1, 1)
                      NOT NULL ,
      [Status] CHAR(1) NULL ,
      [TemplateId] INT NULL ,
      [CategoryId] INT NULL ,
      [ProductName] VARCHAR(100) NULL ,
      [ShortName] VARCHAR(75) NULL ,
      [BrandCode] VARCHAR(50) NULL ,
      [BrandName] VARCHAR(50) NULL ,
      [CreateDate] DATETIME NOT NULL ,
      CONSTRAINT PK_ProductId PRIMARY KEY CLUSTERED ( ProductId ) ,
      CONSTRAINT FK_Category_Product_CategoryId FOREIGN KEY ( CategoryId ) REFERENCES dbo.Category ( CategoryId )
    )
GO
CREATE TABLE dbo.Sku
    (
      [SkuCode] VARCHAR(30) NOT NULL ,
      [ProductId] INT NULL ,
      [Status] CHAR(1) NULL ,
      [ImageUrl] INT NULL ,
      [ItemDesc] VARCHAR(500) NULL ,
      [RetailPrice] DECIMAL(18, 2) NULL ,
      [CreateDate] DATETIME NOT NULL ,
      [OptionAttrName1] VARCHAR(30) NULL ,
      [OptionAttrValue1] VARCHAR(300) NULL ,
      [OptionAttrName2] VARCHAR(30) NULL ,
      [OptionAtt

      CONSTRAINT PK_SkuCode PRIMARY KEY CLUSTERED ( SkuCode ) ,
      CONSTRAINT FK_Product_Sku_ProductId FOREIGN KEY ( ProductId ) REFERENCES dbo.Product ( ProductId )
    )
GO
CREATE TABLE dbo.Basket
    (
      [BasketId] INT NOT NULL
                     IDENTITY(100000, 1) ,
      [CustomerNumber] VARCHAR(15) NULL ,
      [TotalAmount] DECIMAL(18, 2) NULL ,
      [Discount] DECIMAL(18, 2) NULL ,
      [CreateDate] DATETIME NOT NULL ,
      [UpdateDate] DATETIME NULL ,
      [Notes] VARCHAR(255) NULL ,
      [IsPlaced] CHAR(1) NULL
                         DEFAULT ( 'N' ) ,
      CONSTRAINT PK_BasketId PRIMARY KEY CLUSTERED ( BasketId )
    )
	GO
CREATE TABLE dbo.BasketItem
    (
      [BasketItemId] INT NOT NULL
                         IDENTITY(1, 1) ,
      [BasketId] INT NOT NULL ,
      [Sku] VARCHAR(30) NOT NULL ,
      [ProductId] INT NOT NULL ,
      [Quantity] INT NOT NULL ,
      [Discount] DECIMAL(18, 3) NULL ,
      [SubTotal] DECIMAL(18, 3) NOT NULL ,
      [CreateDat
insert into SYS_Menu values('Url_OpReferenceBalance','工位余量','Menu.Quality.Trans',800,'工位余量',null,'~/Content/Images/Nav/Default.png',1)
go
insert into SYS_Menu values('Url_OpReferenceBalance_View','查询','Url_OpReferenceBalance',10,'查询','~/OpReferenceBalance/Index','~/Content/Images/Nav/Default.png',1)
go
insert into SYS_Menu values('Url_OpReferenceBalance_Adjust','调整','Url_OpReferenceBalance',20,'调整','~/OpReferenceBalance/Adjust','~/Content/Images/Nav/Default.png',1)
go
insert into SYS_Menu values('Url_OpReferenceBalance_Stock','盘点','Url_OpReferenceBalance',30,'盘点','~/OpReferenceBalance/Stock','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_OpReferenceBalance_View','工位余量-查询','Quality')
go
insert into ACC_Permission values('Url_OpReferenceBalance_Adjust','工位余量-调整','Quality')
go
insert into ACC_Permission values('Url_OpReferenceBalance_Stock','工位余量-盘点','Quality')
go
insert into SYS_Menu values('Url_SnapshotFlowDet4LeanEngine_View','路线缺失报表','Menu.Procurement.
CREATE USER read_20140401
 IDENTIFIED by 123
 DEFAULT TABLESPACE USERS
 TEMPORARY TABLESPACE TEMP
 PROFILE DEFAULT
 ACCOUNT UNLOCK;
 -- 1 Role for MULTUM_20120131
 GRANT CONNECT TO read_20140401;
 ALTER USER read_20140401 DEFAULT ROLE ALL;
 -- 5 System Privileges for MULTUM_20120131
 GRANT CREATE PROCEDURE TO read_20140401;
 GRANT CREATE SEQUENCE TO read_20140401;
 GRANT CREATE ANY INDEX TO read_20140401;
 GRANT CREATE DATABASE LINK TO read_20140401;
 GRANT CREATE TABLE TO read_20140401;
 -- 1 Tablespace Quotas for MULTUM_20120131
 ALTER USER read_20140401 QUOTA UNLIMITED ON USERS;
 -- 6 Dev Privileges for MULTUM_20120131
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.CONCEPT TO read_20140401;            
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.CONCEPT_RELATIONSHIP TO read_20140401;
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.CONCEPT_ANCESTOR TO read_20140401;
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.RELATIONSHIP TO read_20140401;
 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.SO

 GRANT SELECT, INSERT, UPDATE, DELETE ON DEV.VOCABULARY TO read_20140401;
 GRANT SELECT ON DEV.SEQ_CONCEPT  TO read_20140401;
--DROP TABLE read_20140401.CONCEPT_STAGE;
CREATE TABLE read_20140401.CONCEPT_STAGE(
CONCEPT_ID      INTEGER     NULL,
CONCEPT_NAME        VARCHAR2(256)   NOT NULL,
VOCABULARY_ID INTEGER NOT NULL,
CONCEPT_LEVEL       NUMBER(3)   NULL,
CONCEPT_CODE        VARCHAR2(20)    NOT NULL,
CONCEPT_CLASS       VARCHAR2(60)    NULL);
--DROP TABLE read_20140401.CONCEPT_ANCESTOR_STAGE;
CREATE TABLE read_20140401.CONCEPT_ANCESTOR_STAGE(
CONCEPT_ANCESTOR_MAP_ID     INTEGER     NULL,
ANCESTOR_CONCEPT_ID     INTEGER     NOT NULL,
DESCENDANT_CONCEPT_ID       INTEGER     NOT NULL,
MAX_LEVELS_OF_SEPARATION    NUMBER(3)   NULL,
MIN_LEVELS_OF_SEPARATION    NUMBER(3)   NULL);
--DROP TABLE read_20140401.CONCEPT_RELATIONSHIP_STAGE;
CREATE TABLE read_20140401.CONCEPT_RELATIONSHIP_STAGE(
REL_ID     INTEGER     NULL,
CONCEPT_ID_1        INTEGER     NOT NULL,
CONCEPT_ID_2        INTEGER     

RELATIONSHIP_ID     INTEGER NOT NULL);
--DROP TABLE read_20140401.CONCEPT_SYNONYM_STAGE;
CREATE TABLE read_20140401.CONCEPT_SYNONYM_STAGE(
CONCEPT_SYNONYM_ID  INTEGER     NULL,
CONCEPT_ID      INTEGER     NOT NULL,
CONCEPT_SYNONYM_NAME    VARCHAR2(1000)  NOT NULL);
--DROP TABLE read_20140401.RELATIONSHIP_TYPE_STAGE;
CREATE TABLE read_20140401.RELATIONSHIP_TYPE_STAGE(
RELATIONSHIP_ID       INTEGER NOT NULL,
RELATIONSHIP_DESCRIPTION    VARCHAR2(256)   NULL);
--DROP TABLE read_20140401.SOURCE_TO_CONCEPT_MAP_STAGE;
CREATE TABLE read_20140401.SOURCE_TO_CONCEPT_MAP_STAGE(
SOURCE_TO_CONCEPT_MAP_ID    NUMBER(9)   NULL,
SOURCE_CODE         VARCHAR2(20)    NOT NULL,
SOURCE_CODE_DESCRIPTION     VARCHAR2(256)   NULL,
MAPPING_TYPE            VARCHAR2(20)    NOT NULL,
TARGET_CONCEPT_ID       INTEGER    NOT NULL,
TARGET_VOCABULARY_ID      INTEGER NOT NULL,
SOURCE_VOCABULARY_ID      INTEGER NOT NULL,
 PRIMARY_MAP              CHAR(1 BYTE));
--DROP TABLE read_20140401.VOCABULARY_REF_STAGE;
CREATE TABL
-- ---------------------------------------------------------------------------
-- Table t_model
--
-- Each repository model represents a manipulatable user-defined data model
-- most commonly reflected in programmed code as a standard Class or Object.
-- ---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `t_model` (
    `uuid` BINARY(16) NOT NULL DEFAULT 0,
    `version_uuid` BINARY(16) NOT NULL DEFAULT 0,
    PRIMARY KEY (`uuid`, `version_uuid`),
    CONSTRAINT `fk_model_version`
        FOREIGN KEY (`version_uuid` )
        REFERENCES `t_version` (`uuid`)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION)
ENGINE = InnoDB;
CREATE INDEX `fk_model_version` ON `t_model` (`version_uuid` ASC);
CREATE UNIQUE INDEX `model_version_uuid_unique` ON `t_model` (`version_uuid` ASC);
delimiter ;;
CREATE TRIGGER tr_before_model_insert BEFORE INSERT ON t_model
FOR EACH ROW 
    BEGIN
        DECLARE new_uuid BINARY(16);
        IF (NEW.uuid = 
$fsdbVersion check=plicompileNoArgs call=plitaskVersion
$fsdbSubstituteHier check=plicompileSubstituteHier call=plitaskSubstituteHier
$fsdbDumpfile check=plicompileDumpfile call=plitaskDumpfile 
$fsdbDumpvars check=plicompileDumpvars call=plitaskDumpvars misc=plimiscFSDB acc=read,callback_all:*
$fsdbDumpSC   check=plicompileDumpSC   call=plitaskDumpSC   misc=plimiscFSDB acc=read,callback_all:*
$fsdbDumpPattern check=plicompileDumpPattern call=plitaskDumpPattern misc=plimiscFSDB acc=read,callback_all:*
$fsdbDumpvarsES  check=plicompileDumpvarsES call=plitaskDumpvarsES misc=plimiscFSDB acc=read,callback_all:*
$fsdbDumpvarsToFile check=plicompileDumpvarsToFile call=plitaskDumpvarsToFile  misc=plimiscFSDB acc=read,callback_all:*
$fsdbSwitchDumpfile check=plicompileSwitchFile call=plitaskSwitchFile 
$fsdbAutoSwitchDumpfile check=plicompileAutoSwitchFile call=plitaskAutoSwitchFile 
$fsdbDumpon check=plicompileNoArgs call=plitaskDumpon misc=plimiscDumpon 
$fsdbDumpoff check=plicompileNoArgs c

$fsdbDumpflush check=plicompileNoArgs call=plitaskDumpflush
$fsdbDumplimit check=plicompileDumplimit call=plitaskDumplimit
$fsdbDumpStrength check=plicompileDumpStrength call=plitaskDumpStrength
$fsdbDumpMem check=plicompileDumpMem call=plitaskDumpMem misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMemNow check=plicompileDumpMem call=plitaskDumpMemNow misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMemInFile check=plicompileDumpMemInFile call=plitaskDumpMemInFile misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMemInScope check=plicompileDumpMemInScope call=plitaskDumpMemInScope misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMDA check=plicompileDumpMDA call=plitaskDumpMDA misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMDANow check=plicompileDumpMDA call=plitaskDumpMDANow misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMDAInScope check=plicompileDumpMDAInScope call=plitaskDumpMDAInScope misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpFinish check=pli

$fsdbInteractive check=plicompileNoArgs call=plitaskInteractive misc=plimiscInteractive 
$fsdbDisplay check=plicompileDisplay call=plitaskDisplay misc=plimiscFSDB acc=read,callback_all:*
$fsdbSuppress check=plicompileSuppress call=plitaskSuppress
$fsdbTest call=plitaskTest
$fsdbDebug check=plicompileDebug call=plitaskDebug
$debussy check=plicompileDebussy call=plitaskDebussyVCS 
$vericom check=plicompileVericom call=plitaskVericom
$db_breakatline check=plicompileLineBreak call=plitaskLineBreak
$db_breakonceatline check=plicompileLineBreak call=plitaskOnceLineBreak
$db_deletelinebreak check=plicompileDeleteLineBreak call=plitaskDeleteLineBreak
$db_showlinebreak check=plicompileNoArgs call=plitaskShowLineBreak
$db_setfocus check=plicompileSetFocus call=plitaskSetFocus
$db_deletefocus check=plicompileDeleteFocus call=plitaskDeleteFocus
$db_enablefocus check=plicompileEnableFocus call=plitaskEnableFocus
$db_disablefocus check=plicompileDisableFocus call=plitaskDisableFocus
$db_stopatfocus
$fsdbVersion check=plicompileNoArgs call=plitaskVersion
$fsdbSubstituteHier check=plicompileSubstituteHier call=plitaskSubstituteHier
$fsdbDumpfile check=plicompileDumpfile call=plitaskDumpfile 
$fsdbDumpvars check=plicompileDumpvars call=plitaskDumpvars misc=plimiscFSDB acc=read,callback_all:*
$fsdbDumpSC   check=plicompileDumpSC   call=plitaskDumpSC   misc=plimiscFSDB acc=read,callback_all:*
$fsdbDumpPattern check=plicompileDumpPattern call=plitaskDumpPattern misc=plimiscFSDB acc=read,callback_all:*
$fsdbDumpvarsES  check=plicompileDumpvarsES call=plitaskDumpvarsES misc=plimiscFSDB acc=read,callback_all:*
$fsdbDumpvarsToFile check=plicompileDumpvarsToFile call=plitaskDumpvarsToFile  misc=plimiscFSDB acc=read,callback_all:*
$fsdbSwitchDumpfile check=plicompileSwitchFile call=plitaskSwitchFile 
$fsdbAutoSwitchDumpfile check=plicompileAutoSwitchFile call=plitaskAutoSwitchFile 
$fsdbDumpon check=plicompileNoArgs call=plitaskDumpon misc=plimiscDumpon 
$fsdbDumpoff check=plicompileNoArgs c

$fsdbDumpflush check=plicompileNoArgs call=plitaskDumpflush
$fsdbDumplimit check=plicompileDumplimit call=plitaskDumplimit
$fsdbDumpStrength check=plicompileDumpStrength call=plitaskDumpStrength
$fsdbDumpMem check=plicompileDumpMem call=plitaskDumpMem misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMemNow check=plicompileDumpMem call=plitaskDumpMemNow misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMemInFile check=plicompileDumpMemInFile call=plitaskDumpMemInFile misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMemInScope check=plicompileDumpMemInScope call=plitaskDumpMemInScope misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMDA check=plicompileDumpMDA call=plitaskDumpMDA misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMDANow check=plicompileDumpMDA call=plitaskDumpMDANow misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpMDAInScope check=plicompileDumpMDAInScope call=plitaskDumpMDAInScope misc=plimiscDumpMem acc=read,callback_all:*
$fsdbDumpFinish check=pli

$fsdbInteractive check=plicompileNoArgs call=plitaskInteractive misc=plimiscInteractive 
$fsdbDisplay check=plicompileDisplay call=plitaskDisplay misc=plimiscFSDB acc=read,callback_all:*
$fsdbSuppress check=plicompileSuppress call=plitaskSuppress
$fsdbTest call=plitaskTest
$fsdbDebug check=plicompileDebug call=plitaskDebug
$debussy check=plicompileDebussy call=plitaskDebussyVCS 
$vericom check=plicompileVericom call=plitaskVericom
$db_breakatline check=plicompileLineBreak call=plitaskLineBreak
$db_breakonceatline check=plicompileLineBreak call=plitaskOnceLineBreak
$db_deletelinebreak check=plicompileDeleteLineBreak call=plitaskDeleteLineBreak
$db_showlinebreak check=plicompileNoArgs call=plitaskShowLineBreak
$db_setfocus check=plicompileSetFocus call=plitaskSetFocus
$db_deletefocus check=plicompileDeleteFocus call=plitaskDeleteFocus
$db_enablefocus check=plicompileEnableFocus call=plitaskEnableFocus
$db_disablefocus check=plicompileDisableFocus call=plitaskDisableFocus
$db_stopatfocus
CREATE TABLE dmNavigation(
bannerImage varchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL ,
lockedBy varchar(250) NULL DEFAULT NULL ,
lastupdatedby varchar(250) NOT NULL DEFAULT '' ,
fu varchar(250) NULL DEFAULT NULL ,
options varchar(250) NULL DEFAULT NULL ,
createdby varchar(250) NOT NULL DEFAULT '' ,
bannerTagLine varchar(250) NULL DEFAULT NULL ,
internalRedirectID varchar(50) NULL DEFAULT NULL ,
datetimecreated datetime NOT NULL ,
bBannerBack tinyint(1) NOT NULL DEFAULT 0 ,
status varchar(250) NOT NULL DEFAULT 'draft' ,
locked tinyint(1) NOT NULL DEFAULT 0 ,
ExternalLink varchar(50) NULL DEFAULT NULL ,
ObjectID varchar(50) NOT NULL DEFAULT '' ,
target varchar(250) NULL DEFAULT NULL ,
navType varchar(250) NOT NULL DEFAULT 'aObjectIDs' ,
bannerTitle varchar(250) NULL DEFAULT NULL ,
lNavIDAlias varchar(250) NULL DEFAULT NULL ,
sourceImageID varchar(50) NULL DEFAULT NULL ,
externalRedirectURL varchar(250) NULL DEFAULT NULL ,
title varchar(250) NULL DEFAULT NULL ,
la
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE format A19
column CLOSE_DATE format A19
column TERM_COMMENT format A120
column ARTIST_NAME format A160
column ARTIST_KANA format A60
column DATA_FLAG format 99
set linesize 878
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE
-- Drop foreign key constraints from table `outIterationByHerd`.
alter table `outIterationByHerd`
	drop constraint `readApparentStateCodes_outIterationByHerd_FK1`;
-- Drop foreign key constraints from table `dynHerd`.
alter table `dynHerd`
	drop constraint `readApparentStateCodes_dynHerd_FK1`;
-- Drop primary key, unique and non-unique index constraints from table `readApparentStateCodes`.
alter table `readApparentStateCodes` drop constraint `readApparentStateCodes_PK`; 
-- Update existing table `outIterationByHerd`.
create table `outIterationByHerd_IM0` ( 
	`iteration` INTEGER,
	`herdID` INTEGER,
	`lastStatusCode` CHAR(1),
	`lastStatusDay` INTEGER,
	`lastApparentStateCode` CHAR(1),
	`lastApparentStateDay` INTEGER); 
insert into `outIterationByHerd_IM0` (`iteration`, `herdID`, `lastStatusCode`, `lastStatusDay`, `lastApparentStateCode`, `lastApparentStateDay`) 
    select `outIterationByHerd`.`iteration`, 
           `outIterationByHerd`.`herdID`, 
           `outIterationByHerd`.`lastS

           `outIterationByHerd`.`lastStatusDay`, 
           `outIterationByHerd`.`lastApparentStateCode`, 
           `outIterationByHerd`.`lastApparentStateDay`  
    from `outIterationByHerd`;
alter table `outIterationByHerd`
	drop constraint `dynHerd_outIterationByHerd_FK1`;
alter table `outIterationByHerd`
	drop constraint `readStatusCodes_outIterationByHerd_FK1`;
drop table `outIterationByHerd`; 
create table `outIterationByHerd` ( 
	`iteration` INTEGER,
	`herdID` INTEGER,
	`lastStatusCode` CHAR(1),
	`lastStatusDay` INTEGER,
	`lastControlStateCode` CHAR(1),
	`lastControlStateDay` INTEGER); 
insert into `outIterationByHerd` (`iteration`, `herdID`, `lastStatusCode`, `lastStatusDay`, `lastControlStateCode`, `lastControlStateDay`) 
    select `outIterationByHerd_IM0`.`iteration`, 
           `outIterationByHerd_IM0`.`herdID`, 
           `outIterationByHerd_IM0`.`lastStatusCode`, 
           `outIterationByHerd_IM0`.`lastStatusDay`, 
           `outIterationByHerd_IM0`.`lastApparent

           `outIterationByHerd_IM0`.`lastApparentStateDay`  
    from `outIterationByHerd_IM0`;
drop table `outIterationByHerd_IM0`; 
alter table `outIterationByHerd`
	add constraint `outIterationByHerd_PK` primary key (`herdID`, `iteration`) ; 
-- Create new table `readDetectionStateCodes`.
create table `readDetectionStateCodes` ( 
	`detectionStateCode` CHAR(1),
	`definition` VARCHAR(255), constraint `readDetectionStateCodes_PK` primary key (`detectionStateCode`) ); 
-- Update existing table `dynHerd`.
create table `dynHerd_IM0` ( 
	`herdID` COUNTER,
	`productionTypeID` INTEGER,
	`latitude` DOUBLE,
	`longitude` DOUBLE,
	`initialStateCode` CHAR(1),
	`daysInInitialState` INTEGER,
	`daysLeftInInitialState` INTEGER,
	`initialSize` INTEGER,
	`finalStateCode` CHAR(1),
	`finalApparentStateCode` CHAR(1),
	`cumInfected` INTEGER,
	`cumDetected` INTEGER,
	`cumDestroyed` INTEGER,
	`cumVaccinated` INTEGER); 
insert into `dynHerd_IM0` ( `herdID`, `productionTypeID`, `latitude`, `longitude`, `daysI
SET DEFINE OFF;
CREATE TABLE L_ACCMONTHEND
  TRANSDATE   DATE,
  RECTYPE     VARCHAR2(20 BYTE),
  RESNUMBER   NUMBER(18),
  COMPANYID   VARCHAR2(10 BYTE),
  MARKETCODE  VARCHAR2(20 BYTE),
  BRANDID     VARCHAR2(10 BYTE),
  SELLMETHOD  VARCHAR2(10 BYTE),
  CUSTOMERID  VARCHAR2(15 BYTE),
  DEPDATE     DATE,
  REVDATE     DATE,
  PRODTYPE    VARCHAR2(20 BYTE),
  SALE        NUMBER(18,2),
  COMM        NUMBER(18,2),
  COST        NUMBER(18,2),
  RECEIVED    NUMBER(18,2),
  COSTCURR    VARCHAR2(3 BYTE),
  COSTEXCH    NUMBER(18,6),
  PAYEXCH     NUMBER(18,6),
  DATESTAMP   DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 

-- phpMyAdmin SQL Dump
-- version 3.4.10.1deb1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Mar 08, 2013 at 11:17 AM
-- Server version: 5.5.29
-- PHP Version: 5.3.10-1ubuntu3.5
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `taunts`
--
-- --------------------------------------------------------
--
-- Table structure for table `append`
--
CREATE TABLE IF NOT EXISTS `append` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `text` mediumtext NOT NULL,
  `status` int(1) NOT NULL DEFAULT '1',
  `rank` int(6) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=11 ;
-- --------------------------------------------------------
--
-- Table structure for table `game`
--
CREA

  `id` int(6) NOT NULL AUTO_INCREMENT,
  `title` longtext NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4 ;
-- --------------------------------------------------------
--
-- Table structure for table `noun`
--
CREATE TABLE IF NOT EXISTS `noun` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `noun` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
-- --------------------------------------------------------
--
-- Table structure for table `polarity`
--
CREATE TABLE IF NOT EXISTS `polarity` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `polarity` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;
-- --------------------------------------------------------
--
-- Table structure for table `taunt`
--
CREATE TABLE IF NOT EXISTS `taunt` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `taunt` longtext NOT NULL,
  `polarity` int(6) NOT NULL,
  `type` int(6) NOT NULL

  `length` int(6) NOT NULL,
  `game` varchar(2048) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `polarity` (`polarity`),
  KEY `game` (`game`(767)),
  KEY `type` (`type`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=45 ;
-- --------------------------------------------------------
--
-- Table structure for table `tense`
--
CREATE TABLE IF NOT EXISTS `tense` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tense` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;
-- --------------------------------------------------------
--
-- Table structure for table `type`
--
CREATE TABLE IF NOT EXISTS `type` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `type` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;
-- --------------------------------------------------------
--
-- Table structure for table `verb`
--
CREATE TABLE IF NOT EXISTS `verb` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `verb` varchar(
select xt.create_view('xt.coheadinfo', $$
select cohead.*, 
  xt.co_schedule_date(cohead) as schedule_date,
  xt.co_freight_weight(cohead) as freight_weight,
  xt.co_subtotal(cohead) as subtotal,
  xt.co_tax_total(cohead) as tax_total,
  xt.co_total(cohead) as total,
  xt.co_margin(cohead) as margin,
  xt.co_allocated_credit(cohead)::numeric as allocated_credit,
  xt.co_authorized_credit(cohead_number) as authorized_credit,
  xt.cust_outstanding_credit(cohead_cust_id, cohead_curr_id, cohead_orderdate) as outstanding_credit,
  greatest(0.0, (
    xt.co_total(cohead)
    - COALESCE(xt.co_allocated_credit(cohead), 0)
    - COALESCE(xt.co_authorized_credit(cohead_number), 0)
    - COALESCE(xt.cust_outstanding_credit(cohead_cust_id, cohead_curr_id, cohead_orderdate), 0))
  ) as balance,
  ophead_number,
  cust_number 
  from cohead
    left join cust on cust_id = cohead_cust_id
    left join ophead on ophead_id = cohead_ophead_id;
$$, false);
create or replace rule "_INSERT" as on insert to

insert into cohead (
  cohead_id,
  cohead_number,
  cohead_cust_id,
  cohead_orderdate,
  cohead_shipto_id,
  cohead_shiptoname,
  cohead_shiptoaddress1,
  cohead_shiptoaddress2,
  cohead_shiptoaddress3,
  cohead_shiptoaddress4,
  cohead_shiptoaddress5,
  cohead_shiptocity,
  cohead_shiptostate,
  cohead_shiptozipcode,
  cohead_shiptophone,
  cohead_shipchrg_id,
  cohead_shipform_id,
  cohead_salesrep_id,
  cohead_terms_id,
  cohead_freight,
  cohead_ordercomments,
  cohead_shipcomments,
  cohead_billtoname,
  cohead_billtoaddress1,
  cohead_billtoaddress2,
  cohead_billtoaddress3,
  cohead_billtocity,
  cohead_billtostate,
  cohead_billtozipcode,
  cohead_commission,
  cohead_miscdate,
  cohead_holdtype,
  cohead_custponumber,
  cohead_type,
  cohead_fob,
  cohead_shipvia,
  cohead_warehous_id,
  cohead_packdate,
  cohead_prj_id,
  cohead_wasquote,
  cohead_lastupdated,
  cohead_shipcomplete,
  cohead_created,
  cohead_creator,
  cohead_quote_number,
  cohead_misc,
  cohead_misc_acc

  cohead_misc_descrip,
  cohead_billtocountry,
  cohead_shiptocountry,
  cohead_curr_id,
  cohead_imported,
  cohead_calcfreight,
  cohead_shipto_cntct_id,
  cohead_shipto_cntct_honorific,
  cohead_shipto_cntct_first_name,
  cohead_shipto_cntct_middle,
  cohead_shipto_cntct_last_name,
  cohead_shipto_cntct_suffix,
  cohead_shipto_cntct_phone,
  cohead_shipto_cntct_title,
  cohead_shipto_cntct_fax,
  cohead_shipto_cntct_email,
  cohead_billto_cntct_id,
  cohead_billto_cntct_honorific,
  cohead_billto_cntct_first_name,
  cohead_billto_cntct_middle,
  cohead_billto_cntct_last_name,
  cohead_billto_cntct_suffix,
  cohead_billto_cntct_phone,
  cohead_billto_cntct_title,
  cohead_billto_cntct_fax,
  cohead_billto_cntct_email,
  cohead_taxzone_id,
  cohead_taxtype_id,
  cohead_ophead_id,
  cohead_status,
  cohead_saletype_id,
  cohead_shipzone_id
) values (
  new.cohead_id,
  new.cohead_number,
  new.cohead_cust_id,
  new.cohead_orderdate,
  new.cohead_shipto_id,
  new.cohead_shiptoname,
  n
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/_tables.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/chest.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/chest_service.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/createSP.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/createPhantomTriggers.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/createTable.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/createView.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/defineEntity.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/defineProperties.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/entityData.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/entityMaxTS.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/entitySql.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/entityStats.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/entityStorage.sql;
read /Users/%YourUserNameHere%/Sites/ASA.ches

read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/fillEntityProperty.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/fillEntityRole.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/fkList.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/get.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/makeAnswer.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/mergeXml.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/metadata.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/parentId.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/parseVariables.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/persistData.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/persistData_event.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/setPersistData.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/processEmptyRequest.sql;
read /Users/%YourUserNameHere%/Sites/ASA.chest/sql/readData.sql;
read /Users/%YourUserNameHere%/Sites/ASA.ch
  --Contact View
SELECT dropIfExists('VIEW', 'contact', 'api');
  CREATE OR REPLACE VIEW api.contact AS
  SELECT 
    cntct_number::varchar AS contact_number,
    cntct_honorific AS honorific,
    cntct_first_name AS first,
    cntct_middle AS middle,
    cntct_last_name AS last,
    cntct_suffix AS suffix,
    cntct_initials AS initials,
    crmacct_number AS crm_account,
    cntct_active AS active,
    cntct_title AS job_title,
    cntct_phone AS voice,
    cntct_phone2 AS alternate,
    cntct_fax AS fax,
    cntct_email AS email,
    cntct_webaddr AS web,
    ''::TEXT AS contact_change, 
    addr_number AS address_number,
    addr_line1 AS address1,
    addr_line2 AS address2,
    addr_line3 AS address3,
    addr_city AS city,
    addr_state AS state,
    addr_postalcode AS postal_code,
    addr_country AS country,
    cntct_notes AS notes, 
    ''::TEXT AS address_change
  FROM
    cntct
      LEFT OUTER JOIN addr ON (cntct_addr_id=addr_id)
      LEFT OUTER JOIN crmacct ON (cntct_c

GRANT ALL ON TABLE api.contact TO xtrole;
COMMENT ON VIEW api.contact IS 'Contact';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.contact DO INSTEAD
SELECT saveCntct(
	  NULL,
          NEW.contact_number,
          getCrmAcctid(NEW.crm_account),
          saveAddr(
            getAddrId(NEW.address_number),
            NEW.address_number,
            NEW.address1,
            NEW.address2,
            NEW.address3,
            NEW.city,
            NEW.state,
            NEW.postal_code,
            NEW.country,
            NEW.address_change),
          NEW.honorific,
          NEW.first,
          NEW.middle,
          NEW.last,
          NEW.suffix,
          NEW.initials,
          COALESCE(NEW.active,TRUE),
          NEW.voice,
          NEW.alternate,
          NEW.fax,
          NEW.email,
          NEW.web,
          NEW.notes,
          NEW.job_title,
          NEW.contact_change
          );
CREATE OR REPLACE RULE "_UPDATE" AS
    ON UPDATE TO api.contact
rename table model_description to ModelDescription;
alter table ModelDescription
  change md_id id int not null auto_increment,
  change md_model modelId int not null,
  change md_infl inflectionId int not null,
  change md_variant variant int not null,
  change md_order applOrder int not null,
  change md_transf transformId int not null,
  change md_accent_shift accentShift int not null,
  change md_vowel vowel char(2) not null;
rename table LOC_4_1.model_description to LOC_4_1.ModelDescription;
alter table LOC_4_1.ModelDescription
  change md_id id int not null auto_increment,
  change md_model modelId int not null,
  change md_infl inflectionId int not null,
  change md_variant variant int not null,
  change md_order applOrder int not null,
  change md_transf transformId int not null,
  change md_accent_shift accentShift int not null,
  change md_vowel vowel char(2) not null;
rename table LOC_4_0.model_description to LOC_4_0.ModelDescription;
alter table LOC_4_0.ModelDescription
  c
-- ViewName : InvoicesByAreaView_Right_Top
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'Purchase Orders Invoices';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'InvoicesByAreaView_Right_Top'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_tab

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
/*1.Write a query to get all the users whole belong to a Role Teacher for a given schoolId  */
SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;
select distinct tp.ProfileId ,up.LastName  from teacher_profiles  as tp 
join user_profiles up
	on tp.ProfileId=up.ProfileId
join user_profiles_school ups
	on  tp.ProfileId = ups.ProfileId
join schools scls
	on ups.SchoolId=scls.SchoolId
where tp.active='on' ;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ ;
/*2.Write a query to get all Students and teachers for a given schoolId  */
SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;
select up.FirstName,up.ProfileId from user_profiles as up
join user_profiles_school ups
	on up.ProfileId=ups.ProfileId
join schools scls
	on ups.SchoolId=scls.SchoolId
where ((teacher_profiles.active='on') AND (student_profiles.Active='on'));
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ ;
/*3.Write a query to get all classes for a given teacherId  */
SET SESSION TRANSACTION ISOL

select distinct cls.ClassName from class as cls
join class_teachers ct
	on cls.ClassId=ct.ClassId
join user_profiles_school ups
	on ct.TeacherId=ups.ProfileId;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ ;
/* 4.Write a query to get all the students for a given groupId  */
SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;
select distinct sg.ProfileId,up.FirstName from student_group as sg
join user_profiles up
	on sg.profileId=up.ProfileId
join waggle_latest.group grp
	on sg.GroupId=grp.GroupId;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ ;
/* 5.Write a query to get all the assignments assigned to a student for a given studentId  */
/* for students*/
SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;
select distinct a1.assignmentName,sa.ProfileId from assignments as a1
join assignment_assigned aa
	on a1.AssignmentId=aa.AssignmentId
join student_assignments sa
	on aa.AssignedToId=sa.ProfileId;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE REA
-- admin
INSERT INTO admin (id,name,password,true_name,state,create_time,version) VALUES (1,'root','$2a$10$lKjlSxG9E3QDUmJNcQHUceYe6JtjfGc46vqbg9UYgnqMEcSRgYz4C','Root',0,'2012-01-01 01:00:00',0);
-- admin_role
insert into role(id,name,permissions,create_time,version) values (1,'ROOT','admin:read,admin:change,role:read,role:change,user:read,user:change,contract:read,contract:change,house:read,house:change','2012-01-01 01:00:00',0);
-- admin_x_role
insert into admin_x_role(admin_id, role_id) values (1, 1);
-- admin_permission
insert into permission(id,name,permit) values (1,'管理员访问','admin:read');
insert into permission(id,name,permit) values (2,'管理员修改','admin:change');
insert into permission(id,name,permit) values (3,'管理员权限访问','role:read');
insert into permission(id,name,permit) values (4,'管理员权限修改','role:change');
insert into permission(id,name,permit) values (5,'用户访问','user:read');
insert into permission(id,name,permit) values (6,'用户修改','user:change');
insert into permission(id,name,pe
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `reserved_name`;
CREATE TABLE `reserved_name` (
  `name` varchar(12) NOT NULL DEFAULT '',
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Player Reserved Names';
LOCK TABLES `reserved_name` WRITE;
/*!40000 ALTER TABLE `reserved_name` DISABLE KEYS */;
/*!40000 ALTER TABLE `reserved_name` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!
/****** Object:  Table [dbo].[Navigation]    Script Date: 06/24/2013 20:03:12 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Navigation](
	[NavId] [int] IDENTITY(1,1) NOT NULL,
	[NavName] [varchar](10) NULL,
	[NavLink] [varchar](50) NULL,
	[NavParantId] [int] NULL,
	[NavClass] [varchar](5) NULL,
	[NavOrder] [int] NULL,
	[NavDesc] [varchar](20) NULL,
	[NavStatus] [char](1) NULL,
	[NavCreateAt] [datetime] NULL,
	[NavCreateBy] [varchar](10) NULL,
	[NavUpdateDT] [datetime] NULL,
	[NavUpdateBy] [varchar](10) NULL,
 CONSTRAINT [PK_NAVIGATION] PRIMARY KEY NONCLUSTERED 
	[NavId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'首页导航栏' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Navigation'
GO
ALTER TABLE [dbo].
/* Formatted on 8/23/2012 1:52:11 PM (QP5 v5.215.12089.38647) */
CREATE TABLE PROTECT.CUSTOMATTRIBUTESRECORD_LOG
AS
   SELECT *
     FROM PROTECT.CUSTOMATTRIBUTESRECORD
    WHERE 1 = 2;
ALTER TABLE PROTECT.CUSTOMATTRIBUTESRECORD_LOG ADD (LOGTIME TIMESTAMP(6));
CREATE OR REPLACE TRIGGER PROTECT.CUSTOMATTRIBUTESRECORD_UPDATE
   AFTER UPDATE
   ON PROTECT.CUSTOMATTRIBUTESRECORD
   REFERENCING NEW AS NEW OLD AS OLD
   FOR EACH ROW
DECLARE
BEGIN
   INSERT INTO PROTECT.CUSTOMATTRIBUTESRECORD_LOG
      (SELECT :NEW.CUSTOMATTRIBUTESRECORDID,
              :NEW.VALUE1,
              :NEW.VALUE2,
              :NEW.VALUE3,
              :NEW.VALUE4,
              :NEW.VALUE5,
              :NEW.VALUE6,
              :NEW.VALUE7,
              :NEW.VALUE8,
              :NEW.VALUE9,
              :NEW.VALUE10,
              :NEW.VALUE11,
              :NEW.VALUE12,
              :NEW.VALUE13,
              :NEW.VALUE14,
              :NEW.VALUE15,
              :NEW.VALUE16,
              :NEW.VA

              :NEW.VALUE18,
              :NEW.VALUE19,
              :NEW.VALUE20,
              :NEW.VALUE21,
              :NEW.VALUE22,
              :NEW.VALUE23,
              :NEW.VALUE24,
              :NEW.VALUE25,
              :NEW.VALUE26,
              :NEW.VALUE27,
              :NEW.VALUE28,
              :NEW.VALUE29,
              :NEW.VALUE30,
              :NEW.VALUE31,
              :NEW.VALUE32,
              :NEW.VALUE33,
              :NEW.VALUE34,
              :NEW.VALUE35,
              :NEW.VALUE36,
              :NEW.VALUE37,
              :NEW.VALUE38,
              :NEW.VALUE39,
              :NEW.VALUE40,
              :NEW.VALUE41,
              :NEW.VALUE42,
              :NEW.VALUE43,
              :NEW.VALUE44,
              :NEW.VALUE45,
              :NEW.VALUE46,
              :NEW.VALUE47,
              :NEW.VALUE48,
              :NEW.VALUE49,
              :NEW.VALUE50,
              CURRENT_TIMESTAMP
         FROM DUAL);
EXCEPTION
   WHEN OTHE
USE VIVALDI;
SELECT	P.PositionDate
		, P.PositionId
		, P.SecurityType
		, P.Units
		, A.Description
		, A.CCYIso
		, A.Multiplier
		, O.Underlying
		, O.UnderPrice
		, O.Delta
		, O.UnderMult
		, BFx.LastQuote AS GBPfx
		, BFx.IsInverse AS GBPfxInv
		, Fx.LastQuote AS AssetFx
		, Fx.IsInverse AS AssetFxInv
		, N.CostNaV AS NAV
		, dbo.fn_GetBaseCCYPrice(
			O.UnderPrice
			, Fx.LastQuote
			, Fx.IsInverse
			, BFx.LastQuote
			, BFx.IsInverse
			, P.SecurityType
			, 1) AS BaseUnderPrice
		, dbo.fn_GetBaseCCYPrice(
			O.UnderPrice
			, Fx.LastQuote
			, Fx.IsInverse
			, BFx.LastQuote
			, BFx.IsInverse
			, P.SecurityType
			, 1) * P.Units * A.Multiplier AS NotionalExposure
INTO	#BaseData
FROM	tbl_Positions AS P LEFT JOIN
		tbl_AssetPrices AS A ON 
			(P.PositionDate = A.PriceDate
			AND P.SecurityType = A.SecurityType
			AND P.PositionId = A.SecurityId) LEFT JOIN
		tbl_OptionsData AS O ON 
			(P.PositionId = O.SecurityId
			AND P.PositionDate = O.PriceDate) LEFT JOIN
		vw_FxQuotes A
CREATE TABLE orders_range (
    order_id                                 NUMBER(12)   NOT NULL
  , order_date                               TIMESTAMP(6) NOT NULL
  , order_mode                               VARCHAR2(8)
  , customer_id                              NUMBER(12) NOT NULL
  , order_status                             NUMBER(2)
  , order_total                              NUMBER(8,2)
  , sales_rep_id                             NUMBER(6)
  , promotion_id                             NUMBER(6)
  , warehouse_id                             NUMBER(6)
PARTITION BY RANGE (order_id) (
    PARTITION id_00m VALUES LESS THAN (1000000)
  , PARTITION id_01m VALUES LESS THAN (2000000)
  , PARTITION id_02m VALUES LESS THAN (3000000)
  , PARTITION id_03m VALUES LESS THAN (4000000)
  , PARTITION id_04m VALUES LESS THAN (5000000)
  , PARTITION id_05m VALUES LESS THAN (6000000)
  , PARTITION id_06m VALUES LESS THAN (7000000)
  , PARTITION id_07m VALUES LESS THAN (8000000)
  , PARTITION id_08m VA
# Tests for the performance schema
# ===========================================
# HELPER include/memory_aggregate_cleanup.inc
# ===========================================
--disable_query_log
revoke all privileges, grant option from user1@localhost;
revoke all privileges, grant option from user2@localhost;
revoke all privileges, grant option from user3@localhost;
revoke all privileges, grant option from user4@localhost;
drop user user1@localhost;
drop user user2@localhost;
drop user user3@localhost;
drop user user4@localhost;
flush privileges;
drop procedure dump_thread;
drop procedure dump_one_thread;
drop prepare dump_memory_account;
drop prepare dump_memory_user;
drop prepare dump_memory_host;
drop prepare dump_memory_global;
drop prepare dump_users;
drop prepare dump_hosts;
drop prepare dump_accounts;
truncate table performance_schema.accounts;
truncate table performance_schema.users;
truncate table performance_schema.hosts;
truncate table performance_schema.setup_actors;
insert i
ALTER TABLE `#__pf_settings` CHANGE `value` `content` TEXT NOT NULL;
ALTER TABLE `#__pf_settings` ADD INDEX `idx_parameter` ( `parameter` ( 12 ) );
ALTER TABLE `#__pf_settings` ADD INDEX `idx_scope` ( `scope` ( 12 ) );
ALTER TABLE `#__pf_settings` ADD INDEX `idx_paramscope` ( `parameter` ( 12 ) , `scope` ( 12 ) );
ANALYZE TABLE `#__pf_settings`;
OPTIMIZE TABLE `#__pf_settings`;
UPDATE `#__pf_settings` SET `parameter` = 'installed' WHERE `scope` = 'system' AND `parameter` = 'is_installed';
DELETE FROM `#__pf_settings` WHERE `scope` = 'cp_events';
DELETE FROM `#__pf_settings` WHERE `scope` = 'cp_project';
DELETE FROM `#__pf_settings` WHERE `scope` = 'cp_tasks';
DELETE FROM `#__pf_settings` WHERE `scope` = 'cp_weblinks';
DELETE FROM `#__pf_settings` WHERE `scope` = 'nav_calendar';
DELETE FROM `#__pf_settings` WHERE `scope` = 'system' AND `parameter` = 'tooltip_restricted';
INSERT INTO `#__pf_settings` VALUES(NULL, 'use_score', '1', 'system');
INSERT INTO `#__pf_settings` VALUES(NULL, 'lim
--GL Account View
SELECT dropIfExists('VIEW', 'glaccount', 'api');
CREATE OR REPLACE VIEW api.glaccount AS
SELECT 
  accnt_company::varchar AS company,
  accnt_profit::varchar AS profit_center,
  accnt_number::varchar AS account_number,
  accnt_sub::varchar AS sub_account,
  accnt_descrip AS description,
  accnt_extref AS ext_reference,
  CASE
    WHEN accnt_type='A' THEN 'Asset'
    WHEN accnt_type='L' THEN 'Liability'
    WHEN accnt_type='E' THEN 'Expense'
    WHEN accnt_type='R' THEN 'Revenue'
    WHEN accnt_type='Q' THEN 'Equity'
    ELSE '?'
  END AS type,
  accnt_subaccnttype_code AS sub_type,
  accnt_forwardupdate AS forward_update_trial_balances,
  accnt_comments AS notes
FROM
  accnt
ORDER BY accnt_company, accnt_profit, accnt_number, accnt_sub;
GRANT ALL ON TABLE api.glaccount TO xtrole;
COMMENT ON VIEW api.glaccount IS 'GL Account';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.glaccount DO INSTEAD
INSERT INTO accnt (
  accnt_number,
  accnt_descrip,
  acc

  accnt_profit,
  accnt_sub,
  accnt_type,
  accnt_extref,
  accnt_company,
  accnt_forwardupdate,
  accnt_subaccnttype_code )
VALUES (
  COALESCE(NEW.account_number, ''),
  COALESCE(NEW.description, ''),
  COALESCE(NEW.notes, ''),
  NEW.profit_center,
  NEW.sub_account,
  CASE
    WHEN NEW.type='Asset' THEN 'A'
    WHEN NEW.type='Liability' THEN 'L'
    WHEN NEW.type='Expense' THEN 'E'
    WHEN NEW.type='Revenue' THEN 'R'
    WHEN NEW.type='Equity' THEN 'Q'
    ELSE NULL
  END,
  COALESCE(NEW.ext_reference, ''),
  NEW.company,
  COALESCE(NEW.forward_update_trial_balances, false),
  COALESCE(NEW.sub_type, '') );
CREATE OR REPLACE RULE "_UPDATE" AS
    ON UPDATE TO api.glaccount DO INSTEAD
UPDATE accnt SET
  accnt_number=NEW.account_number,
  accnt_descrip=NEW.description,
  accnt_comments=NEW.notes,
  accnt_profit=NEW.profit_center,
  accnt_sub=NEW.sub_account,
  accnt_type=CASE
               WHEN NEW.type='Asset' THEN 'A'
               WHEN NEW.type='Liability' THEN 'L'
           
﻿create or replace procedure u1.ETLT_DWH_DM_CARDSDAILY_HD_H is
      s_mview_name     varchar2(30) := 'DWH_DM_CARDSDAILY_HD_H';
      vStrDate         date := sysdate;
      v_max_date2      timestamp;
    begin
      select max(t.cdhd_rep_date)
        into v_max_date2
        from DWH_DM_CARDSDAILY_HD_H t;
      insert /*+ APPEND */ into DWH_DM_CARDSDAILY_HD_H
      select  t.cdhd_rep_date,
              substr(t.cdhd_deal_number,1,250) as cdhd_deal_number,
              t.cdhd_begin_date,
              t.cdhd_set_revolving_date,
              substr(t.cdhd_prod_type,1,255) as cdhd_prod_type,
              t.cdhd_pc_cred,
              t.cdhd_pc_overlimit,
              t.cdhd_pc_overdraft,
              t.cdhd_pc_prc,
              t.cdhd_pc_ovrd_cred,
              t.cdhd_pc_ovrd_overlimit,
              t.cdhd_pc_ovrd_overdraft,
              t.cdhd_pc_ovrd_prc,
              t.cdhd_ovrd_days,
              trunc(sysdate),
              t.cdhd_pc_vnb_ovrd_cred,
              t.cdh
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table book (
  id                        bigint not null,
  isbn                      varchar(255),
  title                     varchar(255),
  authors                   varchar(255),
  description               TEXT,
  isbn_10                   varchar(255),
  page_count                integer,
  average_rating            integer,
  ratings_count             integer,
  publisher                 varchar(255),
  published_date            timestamp,
  thumbnail                 varchar(255),
  constraint pk_book primary key (id))
create table current_read (
  id                        bigint not null,
  start_date                timestamp,
  current_thoughts          varchar(255),
  rmember_id                bigint,
  book_id                   bigint,
  constraint pk_current_read primary key (id))
create table desired_read (
  id                        bigint not nul

  start_date                timestamp,
  current_thoughts          varchar(255),
  rmember_id                bigint,
  book_id                   bigint,
  constraint pk_desired_read primary key (id))
create table finished_read (
  id                        bigint not null,
  start_date                timestamp,
  current_thoughts          varchar(255),
  rmember_id                bigint,
  book_id                   bigint,
  finish_date               timestamp,
  constraint pk_finished_read primary key (id))
create table rmember (
  id                        bigint not null,
  username                  varchar(255),
  email_address             varchar(255),
  facebook_token            varchar(255),
  constraint pk_rmember primary key (id))
create table read (
  id                        bigint not null,
  start_date                timestamp,
  current_thoughts          varchar(255),
  rmember_id                bigint,
  book_id                   bigint,
  constraint pk_read primary ke

create table friends (
  rmember_my                     bigint not null,
  rmember_of                     bigint not null,
  constraint pk_friends primary key (rmember_my, rmember_of))
create sequence book_seq;
create sequence current_read_seq;
create sequence desired_read_seq;
create sequence finished_read_seq;
create sequence rmember_seq;
create sequence read_seq;
alter table current_read add constraint fk_current_read_rmember_1 foreign key (rmember_id) references rmember (id);
create index ix_current_read_rmember_1 on current_read (rmember_id);
alter table current_read add constraint fk_current_read_book_2 foreign key (book_id) references book (id);
create index ix_current_read_book_2 on current_read (book_id);
alter table desired_read add constraint fk_desired_read_rmember_3 foreign key (rmember_id) references rmember (id);
create index ix_desired_read_rmember_3 on desired_read (rmember_id);
alter table desired_read add constraint fk_desired_read_book_4 foreign key (book_id) refer
﻿create or replace procedure u1.ETLT_OUT_DWH_QUESTION is
      s_mview_name     varchar2(30) := 'T_OUT_DWH_QUESTION';
      vStrDate         date := sysdate;
      n_max_question_id number;
    begin
      select max(id)
        into n_max_question_id
        from T_OUT_DWH_QUESTION;
      execute immediate 'truncate table T_OUT_DWH_QUESTION_VERIFICATOR';
      execute immediate
      'insert into T_OUT_DWH_QUESTION_VERIFICATOR
      Select id,
             code,
             name,
             text,
             schema_id,
             portition_date
        from verificator.OUT_DWH_QUESTION@verifais
       where id > '||n_max_question_id;
      commit;
      execute immediate 'truncate table T_OUT_DWH_QUESTION_PRE';
      insert /*+ append */into T_OUT_DWH_QUESTION_PRE
      select /*+ parallel(20)*/
             q.id,
             q.code,
             q.name,
             dbms_lob.substr(q.text, 4000, 1),
             q.schema_id,
             q.portition_date
        from T_OUT_DWH
-- MySQL dump 10.13  Distrib 5.6.10, for osx10.7 (x86_64)
--
-- Host: localhost    Database: 
-- ------------------------------------------------------
-- Server version	5.6.10
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Current Database: `test`
--
CREATE DATABASE /*!32312 IF NOT EXISTS*/ `test` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `test`;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SE
delimiter //
-- --------------------------------------------------------------------------------
-- Routine DDL
-- Note: comments before and after the routine body will not be stored by the server
-- --------------------------------------------------------------------------------
CREATE DEFINER=`root`@`%`
TRIGGER ai_ia AFTER INSERT ON investment_account2
FOR EACH ROW
BEGIN
  INSERT INTO ia_log (action,ts,ia_id,inv_num,inv_type, contract_type, inv_length,inv_doc,inv_amount,support_type,support_amount, support_value,support_doc,revenue_type, revenue_value,inv_start_date,inv_end_date, inv_state,investor_id,executive_id, creation_date,creation_user, comm_schema_id, comm_schema_r_id, ref_inv_num, monthly_revenue, lastmod_user, lastmod_date)
  VALUES('create',NOW(),NEW.id, NEW.inv_num, NEW.inv_type, NEW.contract_type, NEW.inv_length, NEW.inv_doc, NEW.inv_amount, NEW.support_type, NEW.support_amount, NEW.support_value, NEW.support_doc, NEW.revenue_type, NEW.revenue_value, NEW.inv_start_date,i
/*TABLA Y TRIGGERS PARA PERSONAS*/
CREATE TABLE IF NOT EXISTS `aud_personas_log` (
  `id` int(11) NOT NULL,
  `apellido` varchar(100) COLLATE utf8_spanish_ci DEFAULT NULL,
  `nombre` varchar(100) COLLATE utf8_spanish_ci DEFAULT NULL,
  `nrodocumento` varchar(300) COLLATE utf8_spanish_ci DEFAULT NULL,
  `sexo` varchar(10) COLLATE utf8_spanish_ci DEFAULT NULL,
  `fechanacimiento` timestamp NULL DEFAULT NULL,
  `pais_id` int(11) DEFAULT NULL,
  `provincia_id` int(11) DEFAULT NULL,
  `partido_id` int(11) DEFAULT NULL,
  `localidad_id` int(11) DEFAULT NULL,
  `domicilio` varchar(1000) COLLATE utf8_spanish_ci DEFAULT NULL,
  `usuario` varchar(50) COLLATE utf8_spanish_ci DEFAULT NULL,
  `fecha` timestamp NULL DEFAULT NULL,
  `modi` tinyint(1) DEFAULT NULL,
  `baja` tinyint(1) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_spanish_ci;
    /*update*/
CREATE TRIGGER `tr_personas_modi_log` AFTER UPDATE ON `personas`
FOR EACH ROW insert into aud_personas_log (id,apellido,nombre,nro
SET STATISTICS IO ON
SELECT U.DisplayName, Title, MostRecentPost.CreationDate FROM Users U JOIN (
	SELECT Id, OwnerUserId, Title, CreationDate FROM Posts P WHERE P.Id IN 
		(SELECT MAX(Id) FROM Posts GROUP BY OwnerUserId)
	) AS MostRecentPost
ON U.Id = MostRecentPost.OwnerUserId;
/*
(1348330 row(s) affected)
Table 'Worktable'. Scan count 0, logical reads 0, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Workfile'. Scan count 24, logical reads 1344, physical reads 96, read-ahead reads 1248, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Posts'. Scan count 18, logical reads 343214, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Users'. Scan count 0, logical reads 4130015, physical reads 15, read-ahead reads 108, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Worktable'. Scan count 0, logical reads 0, physic

*/
CREATE VIEW vwPostsByUser WITH SCHEMABINDING AS
SELECT U.DisplayName, Title, MostRecentPost.CreationDate FROM dbo.Users U JOIN (
	SELECT Id, OwnerUserId, Title, CreationDate FROM dbo.Posts P WHERE P.Id IN 
		(SELECT MAX(Id) FROM dbo.Posts GROUP BY OwnerUserId)
	) AS MostRecentPost
ON U.Id = MostRecentPost.OwnerUserId;
SELECT * FROM vwPostsByUser ;
/*
(1348330 row(s) affected)
Table 'Worktable'. Scan count 0, logical reads 0, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Workfile'. Scan count 24, logical reads 1344, physical reads 96, read-ahead reads 1248, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Posts'. Scan count 18, logical reads 343246, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Users'. Scan count 0, logical reads 4129343, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-a

Table 'Worktable'. Scan count 0, logical reads 0, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
*/
CREATE UNIQUE CLUSTERED INDEX IX_vwPostsByUser
	ON vwPostsByUser(DisplayName, Title, CreationDate)
/*
Table 'Users'. Scan count 9, logical reads 31713, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Posts'. Scan count 9, logical reads 171164, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Workfile'. Scan count 0, logical reads 0, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'Worktable'. Scan count 0, logical reads 0, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
*/
SELECT * FROM vwPostsByUser;
/*
(5578880 row(s) affected)
Table 'vwPostsByUser'. Scan count 1, logical reads 100745,
if exists(select * from sys.objects where type='U' AND name='LOG_DistributionRequisition') 
drop table LOG_DistributionRequisition
go
create table LOG_DistributionRequisition
	[Id] [int] NOT NULL identity(1,1),
	[OrderDetId] [int] not null ,
	[OrderNo] [varchar](50) NOT NULL,
	[Priority] [tinyint] NOT NULL,
	[ExtNo] [varchar](50) NULL,
	[ExtSeq] [varchar](50) NULL,
	[Item] [varchar](50) NOT NULL,
	[ItemDesc] [varchar](100) NOT NULL,
	[RefItemCode] [varchar](50) NULL,
	[Uom] [varchar](5) NOT NULL,
	[BaseUom] [varchar](5) NOT NULL,
	[UC] [decimal](18, 8) NOT NULL,
	[UCDesc] [varchar](50) NULL,
	[MinUC] [decimal](18, 8) NOT NULL,
	[Container] [varchar](50) NULL,
	[ContainerDesc] [varchar](50) NULL,
	[OrderQty] [decimal](18, 8) NOT NULL,
	[RecQty] [decimal](18, 8) NOT NULL,
	PartyFrom  [varchar](50) NULL,
	PartyFromNm  [varchar](50) NULL,
	PartyTo  [varchar](50) NULL,
	PartyToNm  [varchar](50) NULL,
	[LocFrom] [varchar](50) NULL,
	[LocFromNm] [varchar](100) NULL,
	[LocTo] [varchar](50) NUL

	[LocToNm] [varchar](100) NULL,
	Flow  [varchar](50) NULL,
	FlowDesc  [varchar](50) NULL,
	[CreateUser] [int] NOT NULL,
	[CreateUserNm] [varchar](100) NOT NULL,
	[CreateDate] [datetime] NOT NULL,
	[LastModifyUser] [int] NOT NULL,
	[LastModifyUserNm] [varchar](100) NOT NULL,
	[LastModifyDate] [datetime] NOT NULL,
	[Version] [int] NOT NULL,
	[BinTo] [varchar](50) NULL,
go
insert into SYS_Menu values('Url_Distribution_Requisition','销售单手工拉料','Menu.Distribution.Trans',80,'销售单手工拉料',null,'~/Content/Images/Nav/Default.png',1)
go
insert into SYS_Menu values('Url_DistributionRequisition_NewIndex','新增','Url_Distribution_Requisition',10,'新增手工拉料','~/DistributionRequisition/NewIndex','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_DistributionRequisition_NewIndex','新增手工拉料','Distribution')
insert into SYS_Menu values('Url_DistributionRequisition_Log','手工拉料日志','Url_Distribution_Requisition',20,'手工拉料日志','~/DistributionRequisition/LogIndex','~/Content/Images/Nav/Default.
CREATE TABLE "COUNTERS"."QLIST" 
   (	"QLISTID" NUMBER(18,0) NOT NULL ENABLE, 
	"ID_BD" NUMBER(5,0) NOT NULL ENABLE, 
	"PROCESSED" NUMBER(1,0) DEFAULT 0, 
	"QDATE" DATE, 
	"ID_PTYPE" Number(2), 
	 CONSTRAINT "QLIST_PK" PRIMARY KEY ("QLISTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "QLIST_BDEV" FOREIGN KEY ("ID_BD")
	  REFERENCES "COUNTERS"."BDEVICES" ("ID_BD") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
  CREATE UNIQUE INDEX "COUNTERS"."QLIST_PK" ON "COUNTERS"."QLIST"

  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
  ALTER TABLE "COUNTERS"."QLIST" ADD CONSTRAINT "QLIST_PK" PRIMARY KEY ("QLISTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "COUNTERS"."QLIST" MODIFY ("ID_BD" NOT NULL ENABLE);
  ALTER TABLE "COUNTERS"."QLIST" MODIFY ("QLISTID" NOT NULL ENABLE);
   COMMENT ON COLUMN "COUNTERS"."QLIST"."ID_BD" IS '->BDEVICES';
      COMMENT ON COLUMN "COUNTERS"."QLIST"."ID_PTYPE" IS '->PARAMTYPE';
   COMMENT ON COLUMN "COUNTERS"."QLIST"."PROCESSED" IS '0 - â î÷åðåäè  1 - èäåò îïðîñ 2 - îòðàáî
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'POINT (0 9)'::geometry AS geom
    ) AS g
  ) j;
  
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'LINESTRING (
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            )'::geometry AS geom
    ) AS g
  ) j;
  
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'POLYGON ((
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'POLYGON ((
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            ), (
                1 1, 
                1 3, 
                3 

                1 1
            ), (
                7 6, 
                6 8, 
                8 8, 
                7 6
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'MULTIPOLYGON (((
                0 0, 
                0 3, 
                4 3, 
                4 0, 
                0 0
            )), ((
                2 4, 
                1 6, 
                4 5, 
                2 4
            ), (
                7 6, 
                6 8, 
                8 8, 
                7 6
            )))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'GEOMETRYCOLLECTION(
          POINT(99 98), 
          LINESTRING(1 1, 3 3),
          POLYGON((0 0, 0 1, 1 1, 0 0)),
          POLYGON((0 0, 0 9, 9 9, 9 0, 0 0), (5 5, 5 6, 6 6, 5 5)),
          MULTIPOLYGON(((0 0, 0 9, 9 9, 9 0, 0 0),
CREATE VIEW delivery_items_basic_view AS SELECT
  ordered_items.item_id,
  SUM(ordered_items.amount) as amount,
  orders.delivery_man_id as delivery_man_id,
  orders.deliver_at::date as scheduled_for
  FROM ordered_items
    LEFT JOIN orders ON orders.id = ordered_items.order_id
    WHERE orders.delivery_man_id IS NOT NULL AND orders.state IN ('order', 'expedited')
    GROUP BY ordered_items.item_id, orders.delivery_man_id, orders.deliver_at::date;
CREATE VIEW delivery_items_basic_with_trunk_view AS SELECT
  COALESCE(delivery_items_basic_view.item_id, items_in_trunk.item_id) as item_id,
  COALESCE(delivery_items_basic_view.amount,0) + COALESCE(items_in_trunk.amount,0) AS amount,
  COALESCE(delivery_items_basic_view.amount,0) AS in_orders,
  COALESCE(items_in_trunk.amount,0) AS additional,
  COALESCE(delivery_items_basic_view.delivery_man_id, items_in_trunk.delivery_man_id) AS delivery_man_id,
  COALESCE(delivery_items_basic_view.scheduled_for,items_in_trunk.deliver_at) AS scheduled_for

    FROM delivery_items_basic_view
    FULL JOIN items_in_trunk ON delivery_items_basic_view.item_id = items_in_trunk.item_id AND delivery_items_basic_view.delivery_man_id = items_in_trunk.delivery_man_id AND delivery_items_basic_view.scheduled_for = items_in_trunk.deliver_at;
CREATE VIEW delivery_items_view AS SELECT
  delivery_items_basic_with_trunk_view.*,
  scheduled_items_view.amount AS scheduled_amount,
  scheduled_meals_left_view.ordered_amount AS ordered_amount,
  scheduled_meals_left_view.amount_left_without_trunk AS amount_left_without_trunk,
  scheduled_meals_left_view.lost_amount AS lost_amount,
  scheduled_meals_left_view.sold_amount AS sold_amount,
  scheduled_meals_left_view.amount_left AS amount_left,
  (scheduled_meals_left_view.amount_left IS NOT NULL) AS meal_flag
     FROM delivery_items_basic_with_trunk_view
     LEFT JOIN scheduled_items_view ON delivery_items_basic_with_trunk_view.item_id = scheduled_items_view.item_id AND delivery_items_basic_with_trunk_view.sc
-- ViewName : PhotoListView
start transaction;
# module
SELECT @FKModule := IDModule FROM lkp_module WHERE ModuleName = 'Media';
# delete columns
SELECT @idView := ifnull((SELECT IDListView FROM listview_master WHERE ViewName = 'PhotoThumbnailView'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((SELECT FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# UPDATE sequence
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDList

UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewCriteria),0) FROM listview_criteria) WHERE seq_name = 'ListCriteria_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewFieldMapping),0) FROM listview_fieldmapping) WHERE seq_name = 'ListFieldMapping_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListView),0) FROM listview_master WHERE IsCustomList = 0) WHERE seq_name = 'ListBox_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewSortby),0) FROM listview_sortoption) WHERE seq_name = 'ListSortby_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListColumn),0) FROM listview_columns) WHERE seq_name = 'ListColumn_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDProductViewMenu),0) FROM cnf_productviewmenu) WHERE seq_name = 'CNF_ProductViewMenu_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListActionItem),0) FROM listview_actionlinks) WHERE seq_name = 'ListAction_SE

UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewFilterBy),0) FROM listview_filteroption) WHERE seq_name = 'ListFilterby_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewGroupby),0) FROM listview_groupbyoption) WHERE seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
SELECT @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) FROM listview_fieldmaster;
SELECT @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) FROM listview_criteria;
SELECT @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) FROM listview_fieldmapping;
SELECT @IDListView := ifnull(max(IDListView), 0) FROM listview_master;
SELECT @IDListViewSortby := ifnull(max(IDListViewSortby), 0) FROM listview_sortoption;
SELECT @IDListColumn := ifnull(max(IDListColumn), 0) FROM listview_columns;
SELECT @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) FROM cnf_productviewmenu;
SELECT @IDListActionItem := ifnull(max(IDListActionItem), 0) FROM li
USE Vivaldi
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF  EXISTS (
	SELECT * FROM dbo.sysobjects 
	WHERE 	id = OBJECT_ID(N'[dbo].[spS_CTAExposure]') AND 
		OBJECTPROPERTY(id,N'IsProcedure') = 1
	)
DROP PROCEDURE [dbo].[spS_CTAExposure]
GO
CREATE PROCEDURE [dbo].[spS_CTAExposure]
	@RefDate datetime,
	@FundId int 
AS
SET NOCOUNT ON;
SELECT	Sum(FutPos.MarginBase) AS TM
	, Sum(FutPos.PointsValueBase) AS TNP
	, SUM(FutPos.NotionalBase) AS TNN
	, SUM(ABS(FutPos.PointsValueBase)) AS TGP
	, SUM(ABS(FutPos.NotionalBase)) AS TGN
	, NaVs.MktNaVPrices AS NaV
INTO	#Totals
FROM	vw_FuturesPositions AS FutPos LEFT JOIN
	tbl_FundsNavsAndPLs AS NaVs ON
		(FutPos.FundId = NaVs.FundId
		AND FutPos.PositionDate = NaVs.NaVPLDate)
WHERE	FutPos.FundId = @FundId
	AND FutPos.PositionDate = @RefDate
GROUP BY	NaVs.MktNaVPrices
----------------------------------------------------------------------------------------------------------------------
SELECT	FutPos.SecurityGroup
	, FutPos.SecurityType
	, Sum(Fu

 	, Sum(FutPos.PointsValueBase) AS NetPoints
	, SUM(FutPos.NotionalBase) AS NetNotionals
	, SUM(ABS(FutPos.PointsValueBase)) AS GrossPoints
	, SUM(ABS(FutPos.NotionalBase)) AS GrossNotionals
	, Sum(FutPos.MarginBase)/Totals.TM AS TotalMarginPerc
 	, Sum(FutPos.PointsValueBase)/Totals.TNP AS NetPointsPerc
	, SUM(FutPos.NotionalBase)/Totals.TNN AS NetNotionalsPerc
	, SUM(ABS(FutPos.PointsValueBase))/Totals.TGP AS GrossPointsPerc
	, SUM(ABS(FutPos.NotionalBase))/Totals.TGN AS GrossNotionalsPerc
	, Sum(FutPos.MarginBase)/Totals.NaV AS TotalMarginOnNaV
	, Totals.NaV
INTO #AllExp
FROM vw_FuturesPositions AS FutPos, #Totals AS Totals
WHERE	FutPos.FundId = @FundId
	AND FutPos.PositionDate = @RefDate
GROUP BY FutPos.SecurityType
	, FutPos.SecurityGroup
	, Totals.TM
	, Totals.TNP
	, Totals.TNN
	, Totals.TGP
	, Totals.TGN
	, Totals.NaV
----------------------------------------------------------------------------------------------------------------------
SELECT * FROM #AllExp
UNION
SELECT 	'Totals
-- *
-- * データ登録スクリプト「サーバ管理」
-- *
-- * PHP versions 5
-- *
-- * LICENSE: This source file is licensed under the terms of the GNU General Public License.
-- *
-- * @package    Magic3 Framework
-- * @author     平田直毅(Naoki Hirata) <naoki@aplo.co.jp>
-- * @copyright  Copyright 2006-2015 Magic3 Project.
-- * @license    http://www.gnu.org/copyleft/gpl.html  GPL License
-- * @version    SVN: $Id$
-- * @link       http://www.magic3.org
-- *
-- [サーバ管理]
-- サーバ管理を行う。
-- システム設定マスター(PCサイト非公開)
UPDATE _system_config SET sc_value = '0' WHERE sc_id = 'site_pc_in_public';
UPDATE _system_config SET sc_value = 'serveradmin' WHERE sc_id = 'system_type';
-- 管理画面をSSL対応
UPDATE _system_config SET sc_value = '1' WHERE sc_id = 'use_ssl_admin';
-- サイト定義マスター
DELETE FROM _site_def WHERE sd_id = 'site_name';
INSERT INTO _site_def
(sd_id,                  sd_language_id, sd_value,         sd_name) VALUES
('site_name',            'ja',           'サーバ管理',               'サイト名');
-- ページIDマスター
-- スマートフォン,携帯のアクセスポイントを隠す
UP

UPDATE _page_id SET pg_active = false WHERE pg_id = 's_index' AND pg_type = 0;
UPDATE _page_id SET pg_active = false WHERE pg_id = 'm_index' AND pg_type = 0;
-- 管理画面メニューデータ
DELETE FROM _nav_item WHERE ni_nav_id = 'admin_menu';
DELETE FROM _nav_item WHERE ni_nav_id = 'admin_menu.en';
INSERT INTO _nav_item
(ni_id, ni_parent_id, ni_index, ni_nav_id,    ni_task_id,        ni_view_control, ni_param, ni_name,                ni_help_title,          ni_help_body) VALUES
(200,   0,            2,        'admin_menu', '_adminserver',    0,               '',       'サーバ管理',         '',                     ''),
(201,   200,          0,        'admin_menu', 'serverinfo',      0,               '',       'サーバ情報',           'サーバ情報',           'このサーバについての情報を表示します。'),
(202,   200,          1,        'admin_menu', 'sitelist',        0,               '',       'サイト一覧',           'サイト一覧',           '運営中のサイトの情報を表示します。'),
(203,   200,          2,        'admin_menu', 'servertool',      0,               '',   
use wigi_log;
drop view if exists view_active_wigi_codes;
CREATE VIEW view_active_wigi_codes AS
SELECT wigi_code_id, from_mobile_id,amount,date_expires,date_added from
wigi_code where status = '0' order by date_added desc;
drop view if exists view_history;
CREATE VIEW view_history AS
SELECT `transaction_id`,`direction`,`amount`,`from`,`to`,`description`,`stamp`,`from_description`,`to_description`,`viewed` from 
transaction order by stamp desc limit 50;
drop view if exists view_expired_codes;
CREATE VIEW view_expired_codes AS
SELECT wigi_code_id,from_mobile_id,amount from wigi_code where status = '0' and date_expires < now();
use wigi;
drop view if exists view_mobile_prefs;
CREATE VIEW view_mobile_prefs AS
SELECT * from user_mobile_ext where `category` = '1';
drop view if exists view_linked_credit_cards;
CREATE VIEW view_linked_credit_cards AS
select cc.last4 as last4,cc.description as description,cc.user_credit_card_id as id, 1 as type, mc.mobile_id as mobile_id from user_mobile_credit
--Vendor Address View
SELECT dropIfExists('VIEW', 'vendoraddress', 'api');
CREATE OR REPLACE VIEW api.vendoraddress AS
SELECT 
  vend_number::VARCHAR AS vendor_number,
  vend_name AS vendor_name,
  vendaddr_code::VARCHAR AS vendor_address_number,
  vendaddr_name AS vendor_address_name,
  addr_number AS address_number,
  addr_line1 AS address1,
  addr_line2 AS address2,
  addr_line3 AS address3,
  addr_city AS city,
  addr_state AS state,
  addr_postalcode AS postalcode,
  addr_country AS country,
  (''::TEXT) AS address_change,
  cntct_number AS contact_number,
  cntct_honorific AS contact_honorific,
  cntct_first_name AS contact_first,
  cntct_middle AS contact_middle,   
  cntct_last_name AS contact_last,
  cntct_suffix AS contact_suffix,
  cntct_title AS contact_job_title,
  cntct_phone AS contact_voice,
  cntct_phone2 AS contact_alternate,
  cntct_fax AS contact_fax,
  cntct_email AS contact_email,
  cntct_webaddr AS contact_web,
  (''::TEXT) AS contact_change,
  vendaddr_comments 

FROM
  vendaddrinfo
    LEFT OUTER JOIN vendinfo ON (vend_id=vendaddr_vend_id)
    LEFT OUTER JOIN addr ON (vendaddr_addr_id=addr_id)
    LEFT OUTER JOIN cntct ON (vendaddr_cntct_id=cntct_id)
ORDER BY vendaddr_code;
GRANT ALL ON TABLE api.vendoraddress TO xtrole;
COMMENT ON VIEW api.vendoraddress IS 'vendor address';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.vendoraddress DO INSTEAD
INSERT INTO vendaddrinfo (
  vendaddr_vend_id,
  vendaddr_code,
  vendaddr_name,
  vendaddr_comments,
  vendaddr_cntct_id,
  vendaddr_addr_id )
VALUES (
  getVendId(NEW.vendor_number),
  COALESCE(NEW.vendor_address_number, ''),
  COALESCE(NEW.vendor_address_name, ''),
  COALESCE(NEW.notes, ''),
  saveCntct( getCntctId(NEW.contact_number),
             NEW.contact_number,
             saveAddr( getAddrId(NEW.address_number),
                       NEW.address_number,
                       NEW.address1,
                       NEW.address2,
                       NEW.address3,
        

                       NEW.state,
                       NEW.postalcode,
                       NEW.country,
                       NEW.address_change ),
             NEW.contact_honorific,
             NEW.contact_first,
             NEW.contact_middle,
             NEW.contact_last,
             NEW.contact_suffix,
             NEW.contact_voice,
             NEW.contact_alternate,
             NEW.contact_fax,
             NEW.contact_email,
             NEW.contact_web,
             NEW.contact_job_title,
             NEW.contact_change ),
  saveAddr( getAddrId(NEW.address_number),
            NEW.address_number,
            NEW.address1,
            NEW.address2,
            NEW.address3,
            NEW.city,
            NEW.state,
            NEW.postalcode,
            NEW.country,
            NEW.address_change ) );
CREATE OR REPLACE RULE "_UPDATE" AS
    ON UPDATE TO api.vendoraddress DO INSTEAD
UPDATE vendaddrinfo SET
  vendaddr_vend_id=getVendId(NEW.vendor_number),
  venda
.read MSTT01_LINE_CREATE.sql
.read MSTT02_STATION_CREATE.sql
--.read MSTT03_LINE_STATION_CREATE.sql
.read MSTT04_LANDMARK_CREATE.sql
.read LINT01_TRAIN_SCHEDULE_CREATE.sql
--.read LINT03_TRAIN_MOVING_CREATE.sql
.read LINT04_ROUTE_CREATE.sql
.read LINT05_ROUTE_DETAIL_CREATE.sql
.read LINT06_FARE_CREATE.sql
.read STAT01_STATION_EXIT_CREATE.sql
--.read STAT02_COMERCIAL_NEARBY_CREATE.sql
.read STAT03_COMERCIAL_INSIDE_CREATE.sql
.read STAT04_FACILITY_CREATE.sql
--.read INFT01_STRATEGY_CREATE.sql
.read INFT02_TIPS_CREATE.sql
.read INFT03_RESCURE_CREATE.sql
--.read INFT04_STAT_KNOWLEDGE_CREATE.sql
--.read INFT05_LINE_KNOWLEDGE_CREATE.sql
.read USRT01_ARRIVAL_ALARM_CREATE.sql
.read USRT02_TRAIN_ALARM_CREATE.sql
.read USRT03_FAVORITE_CREATE.sql
.read CMNT03_STATION_GRID_CREATE.sql
--.read CMNT04_IMAGE_CREATE.sql
.read MSTT01_LINE_INSERT.sql
.read MSTT02_STATION_INSERT.sql
--.read MSTT03_LINE_STATION_INSERT.sql
.read MSTT04_LANDMARK_INSERT.sql
.read LINT01_TRAIN_SCHEDULE_INSERT.sql
--.read LINT0
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `workers`
--
DROP TABLE IF EXISTS `workers`;
CREATE TABLE `workers` (
  `id` int(11) NOT NULL auto_increment,
  `user_id` int(11) NOT NULL default '0',
  `number` varchar(20) NOT NULL default '',
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `disabled` tinyint(1) NOT NULL default '0',
  `voided` tinyint(1) NOT NULL default '0',
  `voided_by` int(11
INSERT INTO pre_common_setting VALUES ('attachdir', '', './data/attachment');
INSERT INTO pre_common_setting VALUES ('attachurl', '', 'data/attachment');
INSERT INTO pre_common_setting VALUES ('autoactivationuser', '', '1');
INSERT INTO pre_common_module (mid, name, displayorder, available, identifier, type) VALUES(1, '全局', 1, 1, 'global', 1);
INSERT INTO pre_common_module (mid, name, displayorder, available, identifier, type) VALUES(2, '界面', 2, 1, 'template', 1);
INSERT INTO pre_common_module (mid, name, displayorder, available, identifier, type) VALUES(3, '投票', 3, 1, 'poll', 0);
INSERT INTO pre_common_nav (title, url, target, available, displayorder, highlight, type) VALUES('广告服务', '', 0, 1, 0, 0, 2);
INSERT INTO pre_common_nav (title, url, target, available, displayorder, highlight, type) VALUES('联系我们', '', 0, 1, 0, 0, 2);
INSERT INTO pre_common_nav (title, url, target, available, displayorder, highlight, type) VALUES('服务条款 ', '', 0, 1, 0, 0, 2);
INSERT INTO pre_common_nav (title, u
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [internal].[append_event_message]
        @operation_id       bigint,                             
        @message_type       int,                                
        @message_time         datetimeoffset,                     
        @message_source       smallint,                           
        @message              nvarchar(max),                      
        @extended_info_id     bigint = NULL,
        @package_name         nvarchar(260),
        @package_location_type nvarchar(128),
	@package_path_full    nvarchar(4000),
        @event_name           nvarchar(1024),
        @message_source_name  nvarchar(4000),
        @message_source_id    nvarchar(38),
        @subcomponent_name    nvarchar(4000),
        @package_path         nvarchar(MAX),
        @execution_path       nvarchar(MAX),
        @thread_id            int,
        @message_code         int,
        @event_message_id     bigint output
AS
SET N

    DECLARE @operation_message_id   bigint    
    IF [internal].[check_permission] 
    (
        4,
        @operation_id,
        2
    ) = 0
    BEGIN
        RAISERROR(27143, 16, 5, @operation_id) WITH NOWAIT;
        RETURN 1;      
    END
    
    INSERT INTO [internal].[operation_messages] 
           ([operation_id], 
            [message_type], 
            [message_time],
            [message_source_type], 
            [message], 
            [extended_info_id])
        VALUES(
            @operation_id,  
            @message_type,
            @message_time,
            @message_source,
            @message,
            @extended_info_id)
            
    SET @operation_message_id = SCOPE_IDENTITY()
    INSERT INTO [internal].[event_messages]
           ([operation_id],
           [event_message_id],
           [package_name],
	   [package_location_type],
	   [package_path_full],
           [event_name],
           [message_source_name],
           [message_source_id],
  
DELETE FROM `mangos_string` WHERE `entry` IN (11600, 11601, 11602, 11603, 11604, 11605, 11606, 11607, 11608);
INSERT INTO `mangos_string` (`entry`, `content_default`, `content_loc1`, `content_loc2`, `content_loc3`, `content_loc4`, `content_loc5`, `content_loc6`, `content_loc7`, `content_loc8`) VALUES
(11600, 'ChatSpy appended to player |cffff0000%s|r(%u)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'ChatSpy присоединён к игроку |cffff0000%s|r(%u)'),
(11601, 'ChatSpy for player |cffff0000%s|r(%u) cancelled by massive ChatSpy cancel.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'ChatSpy для игрока |cffff0000%s|r(%u) отменён массовым сбросом системы ChatSpy.'),
(11602, 'All ChatSpys reset.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'ChatSpy для всех игроков сброшен.'),
(11603, 'Player %s(%u) has no ChatSpy.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'К игроку %s(%u) не прикреплён ChatSpy.'),
(11604, 'You were ChatSpying player, cancelled.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'ChatS
CREATE TABLE "MGCCOP"."NURSE_APPLICANTS" 
 (	"PIDM" NUMBER NOT NULL ENABLE, 
"TERM" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
"ORIENTATION_COMPLETE" CHAR(1 CHAR) DEFAULT 'N' NOT NULL ENABLE, 
"CLEARED" CHAR(1 CHAR) DEFAULT 'N' NOT NULL ENABLE, 
 CONSTRAINT "CLEARED_Y_OR_N" CHECK (CLEARED IN ('Y', 'N')) ENABLE, 
 CONSTRAINT "PIDM_UNIQUE" UNIQUE ("PIDM")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
STORAGE(INITIAL 131072 NEXT 131072 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "MGCCC"  ENABLE, 
 CONSTRAINT "ORIENTATION_COMPLETE_Y_OR_N" CHECK (ORIENTATION_COMPLETE IN ('Y', 'N')) ENABLE
 ) SEGMENT CREATION IMMEDIATE 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
NOCOMPRESS LOGGING
STORAGE(INITIAL 131072 NEXT 131072 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLES
--------------------------------------------------------
--  File created - Âòîðíèê-Àïðèë-15-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ARTICLE
--------------------------------------------------------
  CREATE TABLE "ELSYS"."ARTICLE" 
   (	"ID" NUMBER, 
	"PRICE" BLOB, 
	"PUBLISHED_ON" DATE, 
	"NAME" VARCHAR2(204 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 LOB ("PRICE") STORE AS BASICFILE (
  TABLESPACE "SYSTEM" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAU

--------------------------------------------------------
--  DDL for Table CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."CATEGORY" 
   (	"ID" NUMBER, 
	"CREATED_BY" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FR

  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG_ARTICLE
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG_ARTICLE" 
   (	"T_ID" NUMBER, 
	"A_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USERS
--------------------------------------------------------
  CREATE TABLE "ELSYS"."USERS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20 BYTE), 
	"CATEGORY_ID" NUMBER, 
	"PICTURE_URL" VARCHAR2(20 BYTE), 
	"PASSWORD" VARCHAR2(200 BYTE), 
	"TAG_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536
INSERT INTO site VALUES (1, 'My Wiki', 'powered by wikidot software', 'www', '', 'en', NULL, NULL, true, 'start', false, false);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO site_settings VALUES (1, false, false, '', 314572800, false, 'system:join', 50, 20, true, NULL, false, false, 10485760, true);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO site_super_settings VALUES (1, true);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO admin VALUES(1, 1, 1, true);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO member VALUES(1, 1, 1, NOW());;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (1,
    1, '_default',
    false, 20,
    false, 'e:rm;c:rm;m:rm;d:rm;a:rm;r:rm;z:rm;o:rm',
    true, 1, NULL,
    false, 'nav:top', 'nav:side',
    NULL, false, true, NULL, NULL, NULL, true, false, false, NULL
);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (2,
    1, 'system',
    true, 20,
    false, 'e:;c:;m:;d:;a:;r:;z:;o:',
    true, 1, NULL,
    true, 'nav:top', 'nav:side',

    NULL, NULL, true, NULL, NULL, NULL, true, false, false, NULL
);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (3,
    1, 'search',
    true, 20,
    false, 'e:;c:;m:;d:;a:;r:;z:;o:',
    true, 1, NULL,
    true, 'nav:top', 'nav:side',
    NULL, NULL, true, NULL, NULL, NULL, true, false, false, NULL
);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (4,
    1, 'admin',
    false, 21,
    false, 'e:;c:;m:;d:;a:;r:;z:;o:',
    true, 1, NULL,
    false, 'nav:top', NULL,
    NULL, NULL, true, NULL, NULL, NULL, true, false, false, NULL
);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (5,
    1, 'auth',
    true, 20,
    false, 'e:;c:;m:;d:;a:;r:;z:;o:',
    true, 1, NULL,
    true, 'nav:top', 'nav:side',
    NULL, false, true, NULL, NULL, NULL, true, false, false, NULL
);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (6,
    1, 'account',
    false, 21,
    false, 'e:;c:;m:;d:;a:;r:;z:;o:',
    true, 1, NULL,
    false, 'nav:
﻿CREATE VIEW dbo.CategoryProducts
AS
SELECT        dbo.Categories.CategoryName, dbo.Products.ProductName, dbo.Products.UnitPrice
FROM            dbo.Categories INNER JOIN
                         dbo.Products ON dbo.Categories.CategoryID = dbo.Products.CategoryID
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))

      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfigurati

         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Categories"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 208
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Products"
            Begin Extent = 
               Top = 6
               Left = 246
               Bottom = 136
               Right = 420
            End
            DisplayFlags = 280
            TopColumn = 2
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 14
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('about_noa', 0, 'NoaNavBar', NULL, NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('about_noa', 12, 'Recapiti', NULL, NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('case_history', 0, 'NoaNavBar', NULL, NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('case_history', 6, 'content_viewer_list', '<?xml version="1.0" encoding="UTF-8"?>
<properties>
<property key="contentType">CHY</property>
</properties>
', NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('case_history_otf', 0, 'NoaNavBar', NULL, NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('case_history_otf', 2, 'content_viewer', NULL, NULL);
INSERT INTO showletconfig (pagecode, frame

INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('homepage', 0, 'NoaNavBar', NULL, NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('homepage', 2, 'content_viewer_list', '<?xml version="1.0" encoding="UTF-8"?>
<properties>
<property key="maxElemForItem">1</property>
<property key="maxElements">5</property>
<property key="contentType">NWS</property>
<property key="modelId">4005</property>
</properties>
', NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('homepage', 4, 'content_viewer_list', '<?xml version="1.0" encoding="UTF-8"?>
<properties>
<property key="contentType">CHY</property>
<property key="modelId">3001</property>
</properties>
', NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('homepage', 5, 'content_viewer_list', '<?xml version="1.0" encoding="UTF-8"?>
<properties>
<property 

<property key="modelId">4004</property>
</properties>
', NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('homepage', 6, 'content_viewer', '<?xml version="1.0" encoding="UTF-8"?>
<properties>
<property key="contentId">NGC48</property>
</properties>
', 'NGC48');
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('homepage', 8, 'content_viewer_list', '<?xml version="1.0" encoding="UTF-8"?>
<properties>
<property key="categories">tecnologie</property>
<property key="contentType">OFF</property>
<property key="modelId">5001</property>
</properties>
', NULL);
INSERT INTO showletconfig (pagecode, framepos, showletcode, config, publishedcontent) VALUES ('homepage', 9, 'content_viewer_list', '<?xml version="1.0" encoding="UTF-8"?>
<properties>
<property key="categories">consulenza</property>
<property key="contentType">OFF</property>
<property key="modelId">5001</property>
</properties>
', NULL);
INS
-- Call of the Elements/Ancestors/Spirits trainer entries
CREATE TEMPORARY TABLE new_spells (
    spell MEDIUMINT(8) UNSIGNED NOT NULL,
    spellcost INT(10) UNSIGNED NOT NULL DEFAULT 7000, /* 70 silver */
    reqskill SMALLINT(5) UNSIGNED NOT NULL DEFAULT 0,
    reqskillvalue SMALLINT(5) UNSIGNED NOT NULL DEFAULT 0,
    reqlevel TINYINT(3) UNSIGNED NOT NULL,
    PRIMARY KEY (spell)
);
INSERT INTO new_spells (spell, reqlevel) VALUES
(66842, 30), /* Call of the Elements */
(66843, 40), /* Call of the Ancestors */
(66844, 50); /* Call of the Spirits */
REPLACE INTO npc_trainer SELECT 986 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 3030 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 3031 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 3032 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlev

REPLACE INTO npc_trainer SELECT 3066 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 3173 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 3344 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 3403 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 13417 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 17204 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 17212 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 17219 AS entry, spell, spellcost, reqskill, reqskillvalue, reqlevel FROM new_spells;
REPLACE INTO npc_trainer SELECT 17519 AS entry, spell, spellcost, r
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 06. März 2002 um 10:03
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_shop2`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `Article`
CREATE TABLE Article (
  ID int(11) NOT NULL default '0',
  CreatedDateTime double(16,6) NOT NULL default '0.000000',
  ChangedDateTime double(16,6) NOT NULL default '0.000000',
  CreatedBy int(11) NOT NULL default '0',
  ChangedBy int(11) NOT NULL default '0',
  active int(11) NOT NULL default '1',
  HeadNavID int(11) NOT NULL default '0',
  SubNavID int(11) NOT NULL default '0',
  ArtNo varchar(200) NOT NULL default '',
  Name text NOT NULL,
  ShortDescription text NOT NULL,
  DetailDescription text NOT NULL,
  PriceNet float(10,2) NOT NULL default '0.00',
  TaxRate float(10,2) NOT NULL default '0.00',
  PriceGross float(10,2)
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[GO_All_Lines_View_Summary]'))
DROP VIEW [dbo].[GO_All_Lines_View_Summary]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[GO_All_Lines_View_Summary]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW dbo.GO_All_Lines_View_Summary
AS
SELECT     dbo.Latest_All_Lines_View_1.statecode, dbo.Latest_All_Lines_View_1.Coverage_Reporting_group, dbo.Latest_All_Lines_View_1.productcode, 
                      dbo.Latest_All_Lines_View_1.Fiscal_AY_Year, dbo.Latest_All_Lines_View_1.currentwrittenpremium, dbo.Latest_All_Lines_View_1.currentearnedpremium, 
                      dbo.Latest_All_Lines_View_1.Policy_count_Reporting_Coverage, dbo.Latest_All_Lines_View_1.Incurred_Loss_ALAE_with_SS_NonCat, 
                      dbo.Latest_All_Lines_View_1.Capped_Incurred_Loss_ALAE_with_SS_wo_cat, dbo.Latest_All_Lines_View_1.Ult_LDF_Incurred_Loss_ALAE_with

                      dbo.Latest_All_Lines_View_1.Ult_LDF_Capped_Incurred_Loss_ALAE_with_SS_wo_cat, dbo.Latest_All_Lines_View_1.Reported_Claims, 
                      dbo.Latest_All_Lines_View_1.Incurred_Claims, dbo.Latest_All_Lines_View_1.Price_Monitor_Standard_CovGrp_GL_Monitored_range, 
                      dbo.Latest_All_Lines_View_1.program, dbo.Latest_All_Lines_View_1.Written_Premium_Range, dbo.Latest_All_Lines_View_1.Coverage_Group, 
                      dbo.Latest_All_Lines_View_1.Product_group, dbo.Latest_All_Lines_View_1.Policy_count_All_Cov_Combined, 
                      dbo.Latest_All_Lines_View_1.Policy_count_Coverage_Group, dbo.Latest_All_Lines_View_1.accountnumber, 
                      dbo.Latest_All_Lines_View_1.Incurred_Loss_ALAE_with_SS, dbo.Latest_All_Lines_View_1.Capped_Incurred_Loss_ALAE_with_SS, 
                      dbo.Latest_All_Lines_View_1.Ult_LDF_Incurred_Loss_ALAE_with_SS, dbo.Latest_All_Lines_View_1.Ult_LDF_Capped_Inc_Loss_ALAE_with_SS, 
         

                      dbo.Latest_All_Lines_View_1.policynumber, dbo.Latest_All_Lines_View_1.Account_Name, dbo.Latest_All_Lines_View_1.Incurred_Loss_ALAE_with_SS_CatOnly, 
                      dbo.Latest_All_Lines_View_1.BusinessClassDesc, dbo.Latest_All_Lines_View_1.Fiscal_AY_Month_Ending, dbo.Latest_All_Lines_View_1.Last_Reporting_Year, 
                      dbo.Latest_All_Lines_View_1.Last_Reporting_Month, dbo.Latest_All_Lines_View_1.Price_Monitor_Standard_Cov_Grp_Monitored_range, 
                      dbo.Latest_All_Lines_View_1.CompanyCode, dbo.Latest_All_Lines_View_1.programdesc, dbo.Latest_All_Lines_View_1.Primary_Umbrella, 
                      dbo.Latest_All_Lines_View_1.Account_Premium_Range, dbo.Latest_All_Lines_View_1.producttype, 
                      dbo.Policy_Information_GL_AVG_RATES_October.Guides_Outfitters_Class_Group, dbo.Policy_Information_GL_AVG_RATES_October.Guides_Outfitters_Premium, 
                      dbo.Policy_Information_GL_AVG_RATES_October.Guides_
-- USER table, replace userid, password hash is for 'invenio' --
insert into invenio_user (userid, password)
values ('invenio','b39f1a8983b9f8ecb20a5a256174463f');
-- VOL_DUMP --
insert into VOL_DUMP values (1,'AC-SUG-1', 1,100, 5, 'Y', 50, 'AA-101', '','','2020-01-01');
insert into VOL_DUMP values (2,'AC-COP-1', 1,1000, 50, 'Y', 50, 'AA-102', '','','2020-01-02');
insert into VOL_DUMP values (3,'AC-SUG-2', 1,1000, 15, 'Y', 50, 'AA-103', '','','2020-01-03');
insert into VOL_DUMP values (4,'AC-IRN-1', 1,100, 5, 'Y', 50, 'AA-104', '','','2020-01-04');
insert into VOL_DUMP values (5,'AC-ZIN-1', 1,100, 5, 'Y', 50, 'AA-105', '','','2020-01-05');
insert into instrument values (1,'Instrument-1', 'INS-1', 'Portfolio-1', 'M1', 10, 30, 200);
insert into instrument values (2,'Instrument-2', 'INS-2', 'Portfolio-2', 'M2', 20, 20, 500);
insert into instrument values (3,'Instrument-3', 'INS-3', 'Portfolio-3', 'M3', 30, 10, 700);
-- FUT_DUMP --
insert into FUT_DUMP values (1, 1, 10, 100, 900, 'Basic', 

insert into FUT_DUMP values (2, 2, 20, 200, 1900, 'Adavanced', 550, 20, 10, 1,0.2);
insert into FUT_DUMP values (3, 3, 30, 300, 2900, 'Priority', 900, 20, 10, 1,0.3);
insert into FUT_DUMP values (4, 1, 40, 400, 3900, 'Basic', 10, 20, 10, 1,0.4);
insert into FUT_DUMP values (5, 1, 50, 500, 5000, 'Basic', 55, 20, 10, 1, 0.5);
-- OPT_DUMP --
insert into OPT_DUMP values (1, 1, 10, 1, 10.1, 1.1, 2.0, 100, 'Customer-1', 2.2, 3.1, 'ABC', 'Y', 'N', 'Y', '2020-01-01', 'BUY', 500, 'CONTRACT-1', 'Y', 10.2, 'L-1', 10);
insert into OPT_DUMP values (2, 2, 20, 2, 10.2, 1.2, 1.9, 200, 'Customer-2', 2.2, 3.2, 'MNO', 'N', 'Y', 'N', '2020-01-02', 'BUY', 1500, 'CONTRACT-2', 'N', 10.8, 'L-2', 20);
insert into OPT_DUMP values (3, 3, 30, 3, 10.3, 1.3, 1.8, 300, 'Customer-3', 2.3, 3.3, 'XYZ', 'Y', 'N', 'Y', '2020-01-03', 'BUY', 2500, 'CONTRACT-3', 'Y', 10.2, 'L-3', 30);
insert into OPT_DUMP values (4, 1, 40, 4, 10.4, 1.4, 1.7, 400, 'Customer-4', 2.4, 3.4, 'ABC', 'N', 'N', 'Y', '2020-01-04', 'BUY', 4500, 'CON

insert into OPT_DUMP values (5, 2, 50, 5, 10.5, 1.5, 1.6, 500, 'Customer-5', 2.5, 3.5, 'MNO', 'Y', 'N', 'N', '2020-01-05', 'BUY', 5500, 'CONTRACT-5', 'Y', 10.9, 'L-5', 50);
insert into OPT_DUMP values (6, 3, 60, 6, 10.6, 1.6, 1.5, 600, 'Customer-6', 2.6, 3.6, 'XYZ', 'N', 'N', 'Y', '2020-01-06', 'SELL', 7500, 'CONTRACT-6', 'Y', 10.2, 'L-6', 60);
insert into OPT_DUMP values (7, 1, 70, 7, 10.7, 1.7, 1.4, 700, 'Customer-7', 2.7, 3.7, 'ABC', 'N', 'Y', 'Y', '2020-01-07', 'SELL', 50, 'CONTRACT-7', 'N', 10.2, 'L-7', 70);
insert into OPT_DUMP values (8, 2, 80, 8, 10.8, 1.8, 1.3, 800, 'Customer-8', 2.8, 3.8, 'MNO', 'N', 'Y', 'Y', '2020-01-08', 'SELL', 5, 'CONTRACT-8', 'Y', 10.2, 'L-8', 80);
insert into OPT_DUMP values (9, 3, 90, 9, 10.9, 1.9, 1.2, 900, 'Customer-9', 2.9, 3.9, 'XYZ', 'Y', 'N', 'Y', '2020-01-09', 'SELL', 500, 'CONTRACT-9', 'Y', 10.2, 'L-9', 90);
insert into OPT_DUMP values (10, 1, 100, 18, 20, 2.0, 1.1, 1000, 'Customer-10', 3.0, 3.0, 'ABC', 'Y', 'N', 'N', '2020-01-10', 'SELL', 50
  CREATE OR REPLACE  VIEW HV_PRICE_CHECK (SECURITY, STK_SEC_ID, AMT, TICKER, NSE_CODE, NSE_CLOSE, BSE_CLOSE, NAV_DATE, S_STK_ID) AS 
  SELECT SCHNAVBD.SECURITY,
SECURITY.STK_SEC_ID,
-SUM(SCHNAVBD.AMOUNT)/SUM(SCHNAVBD.UNITS) AMT,
SECURITY.TICKER,
NSE.SYMBOL AS NSE_CODE,
NSE.CLOSE AS NSE_CLOSE,
BSE.CLOSE AS BSE_CLOSE,
SCHNAVBD.NAV_DATE,
substr(SECURITY.STK_SEC_ID,3,(length(SECURITY.STK_SEC_ID)-2)) S_STK_ID
FROM HI_SCHNAVBD_CURR SCHNAVBD,
HM_SECURITY SECURITY,
HTMP_BSE_EXT BSE,
HTMP_NSE_EXT NSE
WHERE TRIM(NSE.SYMBOL) = substr(SECURITY.STK_SEC_ID,3,(length(SECURITY.STK_SEC_ID)-2)) --SCHNAVBD.SECURITY
--AND NSE.UPD_DT = SCHNAVBD.NAV_DATE
AND TRIM(BSE.SC_CODE) = SECURITY.TICKER
--AND BSE.UPD_DT = SCHNAVBD.NAV_DATE
AND SCHNAVBD.SECURITY = SECURITY.SECURITY
AND (
/*(SCHNAVBD.NAV_DATE =
(SELECT CUR_DATE-1 FROM SYSPARAM WHERE RECTYPE='L'
))
AND*/
(SCHNAVBD.INVEST_TYPE ='INVEST')
AND (SCHNAVBD.UNITS <>'0')
AND (SECURITY.ASSET_TYPE ='01')
AND (SECURITY.SECURITY <>SECURITY.STK_SEC_ID)
AND (SCHNAVBD
USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_charity')
BEGIN
DROP PROCEDURE sp_update_charity
Print '' print  ' *** dropping procedure sp_update_charity'
End
GO
Print '' print  ' *** creating procedure sp_update_charity'
GO
Create PROCEDURE sp_update_charity
@old_CHARITY_ID[INT],
@old_USER_ID[INT],
@new_USER_ID[INT],
@old_EMPLOYEE_ID[INT],
@new_EMPLOYEE_ID[INT],
@old_CHARITY_NAME[NVARCHAR](200),
@new_CHARITY_NAME[NVARCHAR](200),
@old_CONTACT_FIRST_NAME[NVARCHAR](150),
@new_CONTACT_FIRST_NAME[NVARCHAR](150),
@old_CONTACT_LAST_NAME[NVARCHAR](150),
@new_CONTACT_LAST_NAME[NVARCHAR](150),
@old_PHONE_NUMBER[NVARCHAR](20),
@new_PHONE_NUMBER[NVARCHAR](20),
@old_EMAIL[NVARCHAR](100),
@new_EMAIL[NVARCHAR](100),
@old_CONTACT_HOURS[NVARCHAR](150),
@new_CONTACT_HOURS[NVARCHAR](150),
@old_STATUS[NVARCHAR](10),
@new_STATUS[NVARCHAR](10)
AS
BEGIN
UPDATE charity
SET USER_ID = @new_USER_ID, EMPLOYEE_ID = @new_EMPLOYEE_ID, CHARITY_NAME = @new_CHARIT
﻿CREATE VIEW dbo.vContacts
AS
SELECT     contactID, fName, lName, FullName, CUID, initials, phone, email, ipager, grp, state, OU, RCCode, GLC, attID, isDisabled
FROM         dbo._Contacts
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
        

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "_Contacts (dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 295
               Right = 190
            End
            DisplayFlags = 280
            TopColumn = 1
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vContacts';
GO
EXECUTE sp_addextendedproperty @name = N
-- Quote
SELECT dropIfExists('VIEW', 'quote', 'api');
CREATE VIEW api.quote
AS
   SELECT 
     quhead_number::varchar AS quote_number,
     warehous_code AS site,
     quhead_quotedate AS quote_date,
     quhead_packdate AS pack_date,
     saletype_code AS sale_type,
     salesrep_number AS sales_rep,
     quhead_commission AS commission,
     taxzone_code AS tax_zone,
     taxtype_name AS tax_type,
     terms_code AS terms,
     prj_number AS project_number,
     COALESCE(cust_number,prospect_number) AS customer_number,
     quhead_billtoname AS billto_name,
     quhead_billtoaddress1 AS billto_address1,
     quhead_billtoaddress2 AS billto_address2,
     quhead_billtoaddress3 AS billto_address3,
     quhead_billtocity AS billto_city,
     quhead_billtostate AS billto_state,
     quhead_billtozip AS billto_postal_code,
     quhead_billtocountry AS billto_country,
     shipto_num AS shipto_number,
     quhead_shiptoname AS shipto_name,
     quhead_shiptophone AS shipto_phone,
     quhe

     quhead_shiptoaddress2 AS shipto_address2,
     quhead_shiptoaddress3 AS shipto_address3,
     quhead_shiptocity AS shipto_city,
     quhead_shiptostate AS shipto_state,
     quhead_shiptozipcode AS shipto_postal_code,
     quhead_shiptocountry AS shipto_country,
     shipzone_name AS shipto_shipzone,
     quhead_custponumber AS cust_po_number,
     quhead_fob AS fob,
     quhead_shipvia AS ship_via,
     curr_abbr AS currency,
     quhead_misc_descrip AS misc_charge_description,
     CASE
       WHEN (quhead_misc_accnt_id IS NULL) THEN
         NULL
       ELSE
         formatglaccount(quhead_misc_accnt_id) 
     END AS misc_account_number,
     quhead_misc AS misc_charge,
     quhead_freight AS freight,
     quhead_ordercomments AS order_notes,
     quhead_shipcomments AS shipping_notes,
     false AS add_to_packing_list_batch,
     quhead_expire AS expire_date,
     CASE
       WHEN quhead_status='C' THEN
         'Converted'
       ELSE
         'Open'
     END AS status
   FR

     LEFT OUTER JOIN whsinfo ON (quhead_warehous_id=warehous_id)
     LEFT OUTER JOIN prj ON (quhead_prj_id=prj_id)
     LEFT OUTER JOIN shiptoinfo ON (quhead_shipto_id=shipto_id)
     LEFT OUTER JOIN taxzone ON (quhead_taxzone_id=taxzone_id)
     LEFT OUTER JOIN taxtype ON (quhead_taxtype_id=taxtype_id)
     LEFT OUTER JOIN custinfo ON (quhead_cust_id=cust_id)
     LEFT OUTER JOIN prospect ON (quhead_cust_id=prospect_id)
     LEFT OUTER JOIN salesrep ON (quhead_salesrep_id=salesrep_id)
     LEFT OUTER JOIN terms ON (quhead_terms_id=terms_id)
     LEFT OUTER JOIN saletype ON (quhead_saletype_id=saletype_id)
     LEFT OUTER JOIN shipzone ON (quhead_shipzone_id=shipzone_id)
   WHERE (quhead_curr_id=curr_id);
GRANT ALL ON TABLE api.quote TO xtrole;
COMMENT ON VIEW api.quote IS 'Quote';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.quote DO INSTEAD
  INSERT INTO quhead (
    quhead_number,
    quhead_cust_id,
    quhead_custponumber,
    quhead_quotedate,
    quhead_war
CREATE TABLE WorkHours (
        EmployeeID INT IDENTITY,
        OnDate DATETIME,
        Task NVARCHAR(50),
        HoursWorked INT,
        Comments text
        CONSTRAINT PK_EmployeeID PRIMARY KEY (EmployeeID)
        CONSTRAINT FK_EmployeeID FOREIGN KEY (EmployeeID)
                REFERENCES Employees(EmployeeID)
INSERT INTO WorkHours
SELECT
        GETDATE() AS OnDate,
        'sometask1' AS Task,
        6 AS HoursWorked,
        'no comment' AS Comments
UPDATE WorkHours
        SET Task = 'no current task'
        WHERE Task = 'sometask1'
CREATE TRIGGER tr_Update ON dbo.WorkHours FOR UPDATE
AS
        BEGIN
                INSERT INTO dbo.WorkHoursLogs
                SELECT  i.EmployeeID AS NewEmployeeID,
                        i.OnDate AS NewOnDate,
                        i.Task AS NewTask,
                        i.HoursWorked AS NewHoursWorked,
                        i.Comments AS NewComments,
                        'UPDATE' AS Command
                FROM inserted i

CREATE TABLE "WRKCRD"."CC_WRKCRD_CONTACT_TYPE"
  (
    "CODE"        VARCHAR2(20 BYTE) NOT NULL ENABLE,
    "DESCRIPTION" VARCHAR2(20 BYTE) NOT NULL ENABLE,
    CONSTRAINT "CC_WRKCRD_CONTACT_TYPE_PK" PRIMARY KEY ("CODE") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) TABLESPACE "CC_DEVELOPMENT" ENABLE
  )
  SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING STORAGE
  (
    INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT
  )
  TABLESPACE "CC_DEVELOPMENT" ;
  
INSERT INTO "WRKCRD"."CC_WRKCRD_CONTACT_TYPE" (CODE, DESCRIPTION) VALUES('FIRST', 'First Contact');
INSERT INTO "WRKCRD"."CC_WRKCRD_CONTACT_TYPE" (CODE, DESCRIPTION) VALUES('
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 10. März 2002 um 17:04
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_gt_immo`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `SubNav`
CREATE TABLE SubNav (
  ID int(11) NOT NULL default '0',
  CreatedBy int(11) NOT NULL default '0',
  CreatedDateTime float(16,4) NOT NULL default '0.0000',
  ChangedBy int(11) NOT NULL default '0',
  ChangedDateTime float(16,4) NOT NULL default '0.0000',
  active int(1) NOT NULL default '0',
  HeadNavID int(11) NOT NULL default '0',
  NameDE varchar(255) NOT NULL default '',
  Name_en varchar(255) NOT NULL default '',
  Name_fr varchar(255) NOT NULL default '',
  Name_es varchar(255) NOT NULL default '0',
  Name_it varchar(255) NOT NULL default '',
  TextID int(11) NOT NULL default '0',
  PRIMARY KEY  (ID)
) TYPE=MyISAM;
# Date
--
-- database_schema_14-15.sql
--
-- Version: $$
--
-- Date:    $Date:$
--
-- Copyright (c) 2002-2007, Hewlett-Packard Company and Massachusetts
-- Institute of Technology.  All rights reserved.
-- 
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions are
-- met:
-- 
-- - Redistributions of source code must retain the above copyright
-- notice, this list of conditions and the following disclaimer.
-- 
-- - Redistributions in binary form must reproduce the above copyright
-- notice, this list of conditions and the following disclaimer in the
-- documentation and/or other materials provided with the distribution.
-- 
-- - Neither the name of the Hewlett-Packard Company nor the name of the
-- Massachusetts Institute of Technology nor the names of their
-- contributors may be used to endorse or promote products derived from
-- this software without specific prior written permission.
-- 
-- THIS SOFTWARE

-- ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-- HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-- INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-- BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
-- OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
-- ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-- TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
-- USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
-- DAMAGE.
--
-- SQL commands to upgrade the database schema of a live DSpace 1.3 or 1.3.x
-- to the DSpace 1.4 database schema
-- 
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. 
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABAS
-- connect to server
-- 		mysql -u root -p test
--		mysql -h host -u user -p < batch_file.sql
-- disconnect
--		quit
--		exit
-- ignore current statement
--		\c
-- create a user account
USE mysql;
INSERT INTO user (host, user, password, select_priv, insert_priv, update_priv) 
           VALUES ('localhost', 'guest', PASSWORD('guest123'), 'Y', 'Y', 'Y');
FLUSH PRIVILEGES;
SELECT host, user, password FROM user WHERE user = 'guest';
GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP ON TUTORIALS.* TO 'guest'@'localhost' IDENTIFIED BY 'guest123';
-- investigate
USE my_database_name;
SHOW DATABASES;
SHOW TABLES;
SHOW COLUMNS FROM my_table_name;
SHOW INDEX FROM my_table_name;
SHOW CREATE TABLE my_table_name;
SHOW TABLE STATUS LIKE 'my_table_name';
DESCRIBE my_table_name;
-- current database
SELECT DATABASE();
-- data export
SELECT * FROM tutorials_tbl INTO OUTFILE './tutorials.txt';
SELECT * FROM animals INTO OUTFILE './animals.txt' FIELDS TERMINATED BY ',' ENCLOSED BY '"' LINES TERMINATED BY '\r
--
--	SourceForge: Breaking Down the Barriers to Open Source Development
--	Copyright 1999-2001 (c) VA Linux Systems
--	http://sourceforge.net
--
--	$Id$	
--
COPY stats_site WITH OIDS TO '/home/tperdue/dumpfiles/stats_site.dump';
COPY stats_project WITH OIDS TO '/home/tperdue/dumpfiles/stats_project.dump';
COPY stats_project_developers WITH OIDS TO '/home/tperdue/dumpfiles/stats_project_developers.dump';
COPY stats_project_metric WITH OIDS TO '/home/tperdue/dumpfiles/stats_project_metric.dump';
COPY frs_dlstats_file_agg WITH OIDS TO '/home/tperdue/dumpfiles/frs_dlstats_file_agg.dump';
COPY stats_subd_pages WITH OIDS TO '/home/tperdue/dumpfiles/stats_subd_pages.dump';
COPY stats_agg_logo_by_group WITH OIDS TO '/home/tperdue/dumpfiles/stats_agg_logo_by_group.dump';
COPY stats_cvs_group WITH OIDS TO '/home/tperdue/dumpfiles/stats_cvs_group.dump';
COPY stats_agg_site_by_group WITH OIDS TO '/home/tperdue/dumpfiles/stats_agg_site_by_group.dump';
COPY stats_site_pages_by_day WITH OIDS TO '/ho

COPY frs_package WITH OIDS TO '/home/tperdue/dumpfiles/frs_package.dump';
COPY frs_release WITH OIDS TO '/home/tperdue/dumpfiles/frs_release.dump';
COPY frs_processor WITH OIDS TO '/home/tperdue/dumpfiles/frs_processor.dump';
COPY frs_filetype WITH OIDS TO '/home/tperdue/dumpfiles/frs_filetype.dump';
COPY frs_file WITH OIDS TO '/home/tperdue/dumpfiles/frs_file.dump';
COPY project_weekly_metric WITH OIDS TO '/home/tperdue/dumpfiles/project_weekly_metric.dump';
COPY trove_cat WITH OIDS TO '/home/tperdue/dumpfiles/trove_cat.dump';
COPY trove_group_link WITH OIDS TO '/home/tperdue/dumpfiles/trove_group_link.dump';
COPY users WITH OIDS TO '/home/tperdue/dumpfiles/users.dump';
COPY groups WITH OIDS TO '/home/tperdue/dumpfiles/groups.dump';
COPY foundry_projects WITH oids to '/home/tperdue/dumpfiles/foundry_projects.dump';
DROP INDEX frs_release_date;
DROP INDEX frs_file_name;
DROP INDEX frs_file_processor;
DROP INDEX frs_file_type;
DROP INDEX frs_release_by;
CREATE UNIQUE INDEX statssite_oi

CREATE UNIQUE INDEX statsproject_oid ON stats_project(oid);
CREATE UNIQUE INDEX statsprojectdevelop_oid ON stats_project_developers(oid);
CREATE UNIQUE INDEX statsprojectmetric_oid ON stats_project_metric(oid);
CREATE UNIQUE INDEX frsdlfileagg_oid ON frs_dlstats_file_agg(oid);
CREATE UNIQUE INDEX statssubdpages_oid ON stats_subd_pages(oid);
CREATE UNIQUE INDEX statsagglogobygrp_oid ON stats_agg_site_by_group(oid);
CREATE UNIQUE INDEX statscvsgrp_oid ON stats_cvs_group(oid);
CREATE UNIQUE INDEX statsaggsitebygrp_oid ON stats_agg_site_by_group(oid);
CREATE UNIQUE INDEX statssitepgsbyday_oid ON stats_site_pages_by_day(oid);
DROP TABLE frs_dlstats_filetotal_agg;
DROP TABLE frs_dlstats_grouptotal_agg;
DROP TABLE frs_dlstats_group_agg;
DROP TABLE stats_project_months;
DROP TABLE stats_project_all;
DROP TABLE stats_project_last_30;
DROP TABLE stats_project_developers_last30;
DROP TABLE stats_site_pages_by_month;
DROP TABLE stats_site_last_30;
DROP TABLE stats_site_months;
DROP TABLE stats_si
﻿CREATE VIEW [dbo].[V_PR_NumberOutcome]
AS
SELECT     s_NumberID, SUM(ISNULL(m_Total, 0)) AS m_SumPayed
FROM         dbo.Pr_NumberOutcome
GROUP BY s_NumberID
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Pr_NumberOutcome"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 157
               Right = 192
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_PR_NumberOutcome';
GO
EXECUTE sp_addextendedproperty 
-- --------------------------------------------------
-- Entity Designer DDL Script for SQL Server 2005, 2008, 2012 and Azure
-- --------------------------------------------------
-- Date Created: 04/06/2017 20:45:57
-- Generated from EDMX file: C:\Users\lubimovru\Dropbox\PrintStat\Core\EF\Model.edmx
-- --------------------------------------------------
SET QUOTED_IDENTIFIER OFF;
GO
USE [PrintStat];
GO
IF SCHEMA_ID(N'dbo') IS NULL EXECUTE(N'CREATE SCHEMA [dbo]');
GO
-- --------------------------------------------------
-- Dropping existing FOREIGN KEY constraints
-- --------------------------------------------------
IF OBJECT_ID(N'[dbo].[FK_PrinterModelPrinter]', 'F') IS NOT NULL
    ALTER TABLE [dbo].[PrinterSet] DROP CONSTRAINT [FK_PrinterModelPrinter];
GO
IF OBJECT_ID(N'[dbo].[FK_PrinterSupplySlot]', 'F') IS NOT NULL
    ALTER TABLE [dbo].[SupplySlotSet] DROP CONSTRAINT [FK_PrinterSupplySlot];
GO
IF OBJECT_ID(N'[dbo].[FK_SupplyModelSupply]', 'F') IS NOT NULL
    ALTER TABLE [dbo].[S

GO
IF OBJECT_ID(N'[dbo].[FK_PrinterModelSupplyModel_PrinterModel]', 'F') IS NOT NULL
    ALTER TABLE [dbo].[PrinterModelSupplyModel] DROP CONSTRAINT [FK_PrinterModelSupplyModel_PrinterModel];
GO
IF OBJECT_ID(N'[dbo].[FK_PrinterModelSupplyModel_SupplyModel]', 'F') IS NOT NULL
    ALTER TABLE [dbo].[PrinterModelSupplyModel] DROP CONSTRAINT [FK_PrinterModelSupplyModel_SupplyModel];
GO
IF OBJECT_ID(N'[dbo].[FK_SupplySlotSupply]', 'F') IS NOT NULL
    ALTER TABLE [dbo].[SupplySlotSet] DROP CONSTRAINT [FK_SupplySlotSupply];
GO
-- --------------------------------------------------
-- Dropping existing tables
-- --------------------------------------------------
IF OBJECT_ID(N'[dbo].[PrinterSet]', 'U') IS NOT NULL
    DROP TABLE [dbo].[PrinterSet];
GO
IF OBJECT_ID(N'[dbo].[SupplyModelSet]', 'U') IS NOT NULL
    DROP TABLE [dbo].[SupplyModelSet];
GO
IF OBJECT_ID(N'[dbo].[PrinterModelSet]', 'U') IS NOT NULL
    DROP TABLE [dbo].[PrinterModelSet];
GO
IF OBJECT_ID(N'[dbo].[HistorySet]', 'U') IS N

    DROP TABLE [dbo].[HistorySet];
GO
IF OBJECT_ID(N'[dbo].[SupplySlotSet]', 'U') IS NOT NULL
    DROP TABLE [dbo].[SupplySlotSet];
GO
IF OBJECT_ID(N'[dbo].[SupplySet]', 'U') IS NOT NULL
    DROP TABLE [dbo].[SupplySet];
GO
IF OBJECT_ID(N'[dbo].[PrinterModelSupplyModel]', 'U') IS NOT NULL
    DROP TABLE [dbo].[PrinterModelSupplyModel];
GO
-- --------------------------------------------------
-- Creating all tables
-- --------------------------------------------------
-- Creating table 'PrinterSet'
CREATE TABLE [dbo].[PrinterSet] (
    [Id] int IDENTITY(1,1) NOT NULL,
    [ModelId] int  NOT NULL,
    [Name] nvarchar(max)  NOT NULL,
    [Location] nvarchar(max)  NOT NULL,
    [Owner] nvarchar(max)  NOT NULL,
    [Comment] nvarchar(max)  NULL
);
GO
-- Creating table 'SupplyModelSet'
CREATE TABLE [dbo].[SupplyModelSet] (
    [Id] int IDENTITY(1,1) NOT NULL,
    [PartNumber] nvarchar(max)  NOT NULL,
    [Name] nvarchar(max)  NOT NULL,
    [Comment] nvarchar(max)  NULL
);
GO
-- Creating tab
﻿CREATE VIEW dbo.v_CurrentYearSeme_ican5
AS
SELECT          para_phsiname AS CurrentYearSeme, LEFT(para_phsiname, LEN(para_phsiname) - 1) AS CurrentYear, 
                            RIGHT(para_phsiname, 1) AS CurrentSeme, para_dispname AS Name
FROM              iCAN5.dbo.ican_para
WHERE          (para_code = 'p_semenow')
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
  

         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (

      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ican_para (iCAN5.dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 140
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   
USE VipPay
IF EXISTS ( SELECT  1
            FROM    SYSOBJECTS
            WHERE   ID = OBJECT_ID('CustomerFindByParentAgent', 'P') ) 
    DROP PROCEDURE dbo.CustomerFindByParentAgent
GO
/*
 * Designer:     Mort	
 * Description:  
 * Created:      06/21/2014
 * History:
 * =============================================================================
 * Author      DateTime        Alter Description
 * =============================================================================
 */
CREATE PROCEDURE dbo.CustomerFindByParentAgent
    (
      @ParentCustomerId UNIQUEIDENTIFIER ,
      @RealName NVARCHAR(50) ,
      @CustomerType VARCHAR(5) ,
      @StartDate DATETIME ,
      @EndDate DATETIME ,
      @Status INT 
    )
AS 
    BEGIN
        CREATE TABLE #finalCustomer
            (
              CustomerId UNIQUEIDENTIFIER
            )
        CREATE TABLE #ChildCustomer
            (
              CustomerId UNIQUEIDENTIFIER
            )
        CREATE TABLE #TempCustomer
            (

              CustomerId UNIQUEIDENTIFIER
            )
		
        INSERT  INTO #ChildCustomer
                SELECT  CustomerId
                FROM    dbo.T_Customer c ( NOLOCK )
                WHERE   c.ParentAgent = @ParentCustomerId
		        
        DECLARE @childCount INT
        SELECT  @childCount = COUNT(1)
        FROM    #ChildCustomer 
        WHILE ( @childCount > 0 ) 
            BEGIN
                INSERT  INTO #finalCustomer
                        SELECT  CustomerId
                        FROM    #ChildCustomer
			
                INSERT  INTO #TempCustomer
                        SELECT  CustomerId
                        FROM    #ChildCustomer
				
				--reset #ChildCustomer
                DELETE  #ChildCustomer
                INSERT  INTO #ChildCustomer
                        SELECT  c.CustomerId
                        FROM    dbo.T_Customer c ( NOLOCK )
                                INNER JOIN #TempCustomer t ON c.ParentAgent = t.CustomerId
          

                DELETE  #TempCustomer
                --reset @childCount
                SELECT  @childCount = COUNT(1)
                FROM    #ChildCustomer  
            END
		
        SELECT  c.* ,
                p.CustomerName AS ParentCustomer ,
                p.RealName AS ParentCustomerName ,
                p.CustomerType AS ParentCustomerType
        FROM    dbo.T_Customer c ( NOLOCK )
				INNER JOIN #finalCustomer f ON c.CustomerId = f.CustomerId
                INNER JOIN dbo.T_Customer p ( NOLOCK ) ON c.ParentAgent = p.CustomerId
        WHERE   ( ISNULL(@RealName, '') = ''
                  OR c.RealName LIKE +'%' + @RealName + '%'
                )
                AND ( ISNULL(@CustomerType, '') = ''
                      OR c.CustomerType = @CustomerType
                    )
                AND ( ISNULL(@StartDate, '') = ''
                      OR c.CreateDate >= @StartDate
                    )
                AND ( ISNULL(@EndDate, '') = ''
                     
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('MAN','Z83',3.0547207136572,7.5381536910517);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('WV','Z55',2.8474507100537,8.0088785949209);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('WV','S93',3.6506222838631,8.3610543838417);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('MAN','M94',3.0577960359751,7.4500523592128);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SKODA','O94',3.1398074137714,7.1782399349336);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SEAT','S66',2.5628018825637,7.8622890831019);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('AUDI','U87',3.1980315975598,8.7755273321371);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SEAT','Y65',2.8923466169775,9.2884138529885);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('MERCEDES','K61',2.2910903009376,7.6752205113648);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('AUDI','E23',2.915

INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SKODA','N82',3.3844196049112,8.9836506626111);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('WV','F99',2.6117129831782,8.0432259996571);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SEAT','R29',2.7051727315669,6.7275721877744);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SEAT','E75',2.7859446031099,7.1518401936457);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('WV','N67',2.7102387418422,7.7491058997991);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('MAN','E63',3.4634153830731,6.8660191579342);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('MAN','A23',2.4425034012455,9.0848022096038);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('VOLVO','L73',2.3543209389358,7.9778615421035);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SKODA','K84',3.1966819609321,6.6374676217038);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('WV','W33',2.816459

INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('AUDI','T91',2.957352772693,8.0303635130606);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('WV','W98',2.5741148736153,8.3674846152836);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('MAN','Z98',3.776225443144,7.7223831963213);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('MAN','Q53',2.5616577688262,8.4551174546884);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SKODA','V36',3.1059627292327,7.0949525004077);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('MAN','I24',2.7804767176859,8.8578547606551);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SKODA','U31',3.2727003754865,9.0825304228673);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('VOLVO','O42',2.9559357695142,6.5625131346608);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('MAN','T87',3.051568421132,7.4674258621266);
INSERT INTO model (znacka,model,obsah,spotreba) VALUES ('SEAT','J35',2.5018627
DROP TRIGGER IF EXISTS subscription_after_insert;
DROP TRIGGER IF EXISTS subscription_update;
DROP TRIGGER IF EXISTS subscription_delete;
DELIMITER //
CREATE TRIGGER subscription_after_insert
    AFTER INSERT ON `subscription`
    FOR EACH ROW
BEGIN
 INSERT INTO `subsmanager`.`subscription_archive`
	(`id`,
	`owner_id`,
	`date_start_date`,
	`date_due_date`,
	`extensions_count`,
	`attendance_count`,
	`price`,
	`date_updated`,
	`date_created`,
	`operation`)
	VALUES
	(
		NEW.id,
		NEW.owner_id,
		NEW.date_start_date,
		NEW.date_due_date,
		NEW.extensions_count,
		NEW.attendance_count,
		NEW.price,
		NEW.date_updated,
		NEW.date_created,
		'INSERT'
    );
END //
CREATE TRIGGER subscription_update
    BEFORE UPDATE ON `subscription`
    FOR EACH ROW
BEGIN
 INSERT INTO `subsmanager`.`subscription_archive`
	(`id`,
	`owner_id`,
	`date_start_date`,
	`date_due_date`,
	`extensions_count`,
	`attendance_count`,
	`price`,
	`date_updated`,
	`date_created`,
	`operation`)
	VALUES
	(
		NEW.id,
		NEW.owne
#!/usr/bin/sq
// Euler1 in Squirrel
// Generic recursive Map, Filter, Reduce using Tail Call Optimization
// Map - transform each item to something else
function map (ls, f, acc=null) {
    if (acc == null) acc = [];
    if (ls.len() == 0) {
        return acc;
    } else {
        return map( ls.slice(1,ls.len()), f, [f(ls[0])].extend(acc) );
    }
};
// Filter - remove selected items
function filter (ls, f, acc=null) {
    if (acc == null) acc = [];
    if (ls.len() == 0) {
        return acc;
    } else if (f(ls[0]) == true) {
        return filter( ls.slice(1,ls.len()), f, [f(ls[0])].extend(acc) );
    } else {
        return filter( ls.slice(1,ls.len()), f, acc );
    }
};
// Reduce - calculate a value based on all items
function reduce (ls, f, acc=null) {
    if (ls.len() == 0) {
        return acc;
    } else {
        return reduce( ls.slice(1,ls.len()), f, f(ls[0], acc) );
    }
};
// generate a list of ints
function genInts (i, acc=null) {
    if (acc == null) acc = [];
	prin
import studio
program test [TestWorks TestFails TestEq TestNotEq TestSummary FailedTestSummary Failures Successes Timing ResetCounters]
[[ResetCounters]
	[TRY [has_machine Successes] [Successes]]
	[TRY [has_machine Failures] [Failures]]
	[TRY [has_machine Timing] [Timing]]
	[ACCUMULATOR Successes] [ACCUMULATOR Failures] [VARIABLE Timing] [wait *time] [Timing *time]
auto := [[ResetCounters]]
[[TestEq *name *x *y : *action]
	[ONE : *action]
	[SELECT
		[[eq *x *y] [Successes *name] [foreground 0xff00] [write "OK: "] [foreground 0xffff00] [write *name " = " ] [foreground 0xff00] [pp *y] [nl]]
		[[Failures *name] [exit 1] [foreground 0xff0000] [write "FAILED: "] [foreground 0xffff00] [write *name " expected "] [foreground 0xff00] [pp *x] [foreground 0xffff00] [write " but was "] [foreground 0xff0000] [pp *y] [nl]]
	]
[[TestEq *name : *] [Failures *name] [exit 1] [foreground 0xff0000] [write "EQ FAILED: "] [foreground 0xffff00] [write *name] [nl]]
[[TestWorks *name : *action]
	[SELECT
		[[re

		[[Failures *name] [exit 1] [foreground 0xff0000] [write "FAILED: "] [foreground 0xffff00] [write *name] [foreground 0xff0000] [write " failed."] [nl]]
	]
[[TestFails *name : *action]
	[SELECT
		[[res : *action] [Failures *name] [exit 1] [foreground 0xff0000] [write "FAILED: "] [foreground 0xffff00] [write *name] [foreground 0xff0000] [write " worked."] [nl]]
		[[Successes *name] [foreground 0xff00] [write "OK: "] [foreground 0xffff00] [write *name] [foreground 0xff00] [write " failed."] [nl]]
	]
[[TestSummary]
	[foreground 0xffff00]
	[show "Test Summary:"]
	[Successes : *s] [LENGTH *s *length_s] [Failures : *f] [LENGTH *f *length_f]
	[foreground 0xff00] [show *length_s " passed"] [show *s]
	[foreground 0xff0000] [show *length_f " failed"] [show *f]
	[foreground 0xffff00]
	[Timing : *from] [wait *to] [sum *from *time *to] [div *time 1000.0 *timed] [show "TIME = " *timed " seconds."]
	[ResetCounters]
[[FailedTestSummary]
	[Failures : *f] [LENGTH *f *length_f]
	[foreground 0xff0000] [s
# Setting up V prototype database in OrientDB
DROP DATABASE remote:localhost/ruby_driver_test root "8F6FB3168FAF265896A3532C83C5E33F8B6A47996229184582D1499D5B3E8C75";
CREATE DATABASE remote:localhost/ruby_driver_test root "8F6FB3168FAF265896A3532C83C5E33F8B6A47996229184582D1499D5B3E8C75" local;
CONNECT remote:localhost/ruby_driver_test admin admin;
CREATE CLUSTER ographvertex PHYSICAL APPEND;
CREATE CLUSTER ographedge PHYSICAL APPEND;
CREATE CLASS OGraphVertex CLUSTER ographvertex;
ALTER CLASS ographvertex SHORTNAME V;
CREATE CLASS OGraphEdge CLUSTER ographedge;
ALTER CLASS ographedge SHORTNAME E;
CREATE PROPERTY OGraphVertex.in LINKSET OGraphEdge;
CREATE PROPERTY OGraphVertex.out LINKSET OGraphEdge;
CREATE PROPERTY OGraphEdge.in LINK OGraphVertex;
CREATE PROPERTY OGraphEdge.out LINK OGraphVertex;
# ----------------------------------------------------------------------
# DATA
# ----------------------------------------------------------------------
INSERT INTO V (label, in, out) VALUES 
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `petition_sign`;
CREATE TABLE `petition_sign` (
  `ownerguid` int(10) unsigned NOT NULL,
  `petitionguid` int(10) unsigned NOT NULL DEFAULT '0',
  `playerguid` int(10) unsigned NOT NULL DEFAULT '0',
  `player_account` int(10) unsigned NOT NULL DEFAULT '0',
  `type` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`petitionguid`,`playerguid`),
  KEY `Idx_playerguid` (`playerg
--Script to populate our new sku table
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (1, TRUE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (2, TRUE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (3, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (4, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (5, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (6, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (7, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (8, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (9, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (10, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (11, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (12, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (13, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (14, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VA

INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (16, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (17, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (18, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (19, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (100, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (200, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (300, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (400, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (500, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (600, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (114, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (124, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (134, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (214, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (224, FALSE)

INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (234, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (314, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (324, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (334, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (414, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (424, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (434, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (514, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (524, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (534, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (614, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (624, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (634, FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (111,FALSE);
INSERT INTO DEMO_SKU (SKU_ID, FLASH_SELLABLE) VALUES (112,FALS
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `item_refund_instance`;
CREATE TABLE `item_refund_instance` (
  `item_guid` int(10) unsigned NOT NULL COMMENT 'Item GUID',
  `player_guid` int(10) unsigned NOT NULL COMMENT 'Player GUID',
  `paidMoney` int(10) unsigned NOT NULL DEFAULT '0',
  `paidExtendedCost` smallint(5) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`item_guid`,`player_guid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 C
-- phpMyAdmin SQL Dump
-- version 4.1.14
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: Nov 02, 2014 at 11:52 PM
-- Server version: 5.6.17
-- PHP Version: 5.5.12
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `noteclone`
--
-- --------------------------------------------------------
--
-- Table structure for table `images`
--
CREATE TABLE IF NOT EXISTS `images` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `email` varchar(40) NOT NULL,
  `image` blob NOT NULL,
  `filename` varchar(256) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=22 ;
-- --------------------------------------------------------
--
-- Table structure for table `notes`
--
CREATE TABLE IF NOT EXISTS `no

  `email` varchar(40) NOT NULL,
  `note` text,
  PRIMARY KEY (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
--
-- Dumping data for table `notes`
--
INSERT INTO `notes` (`email`, `note`) VALUES
('bhatti.nav@gmail.com', '');
-- --------------------------------------------------------
--
-- Table structure for table `sites`
--
CREATE TABLE IF NOT EXISTS `sites` (
  `email` varchar(40) NOT NULL,
  `site` varchar(2048) NOT NULL,
  `id` tinyint(3) unsigned NOT NULL,
  PRIMARY KEY (`email`,`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
-- --------------------------------------------------------
--
-- Table structure for table `tbd`
--
CREATE TABLE IF NOT EXISTS `tbd` (
  `email` varchar(40) NOT NULL,
  `tbd` text,
  PRIMARY KEY (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
--
-- Dumping data for table `tbd`
--
INSERT INTO `tbd` (`email`, `tbd`) VALUES
('bhatti.nav@gmail.com', '');
-- --------------------------------------------------------
--
-- Table structure for table `users`
--
CRE
lock tables association_qualifier write, association write, db write, dbxref write, evidence_dbxref write, evidence write, gene_product_synonym write, gene_product write, term write;
load data local infile 'association_qualifier.txt' into table association_qualifier fields terminated by '\t';
load data local infile 'association.txt' into table association fields terminated by '\t';
load data local infile 'db.txt' into table  db fields terminated by '\t';
load data local infile 'dbxref.txt' into table dbxref fields terminated by '\t';
load data local infile 'evidence_dbxref.txt' into table evidence_dbxref fields terminated by '\t';
load data local infile 'evidence.txt' into table evidence fields terminated by '\t';
load data local infile 'gene_product_synonym.txt' into table gene_product_synonym fields terminated by '\t';
load data local infile 'gene_product.txt' into table gene_product fields terminated by '\t';
load data local infile 'term.txt' into table  term fields terminated by '\
drop table plz_roads;
create table plz_roads (
  id bigint,
  street  text,
  zipcode  text,
  way geometry(LineString,900913)
);
insert into plz_roads (id,street,zipcode,way)
SELECT
  d3.id,
  d3.strasse,
  d3.zipcode,
  d3.simple_geom
FROM (
  select
    d.*,
    (d.geom_dump).geom as simple_geom,
    (d.geom_dump).path as path
  from (
    SELECT
      *,
      ST_Dump(rway) AS geom_dump
    from (
      select
        roads.osm_id as id,
        roads.name as strasse,
        plz.zipcode,
        ST_Intersection(roads.simple_geom,plz.way) as rway
      from
        (select way,tags::hstore->'postal_code' as zipcode from planet_osm_polygon
        where boundary = 'postal_code'
        ) as plz
        INNER JOIN
        (
          SELECT
            dumped.*,
            (dumped.geom_dump).geom as simple_geom,
            (dumped.geom_dump).path as path
          FROM (
            SELECT *, ST_Dump(way) AS geom_dump FROM planet_osm_line where highway in (
              'secondary

              'primary',
              'service',
              'steps',
              'residential',
              'living_street',
              'footway'
            ) and name <> ''
          ) as dumped
        ) as roads
        ON ST_Intersects(plz.way,roads.way)
    ) d2
  ) d
) d3
where ST_GeometryType(simple_geom)='ST_LineString'
insert into plz_roads (id,street,zipcode,way)
SELECT
  d3.id,
  d3.strasse,
  d3.zipcode,
  d3.simple_geom
FROM (
  select
    d.*,
    (d.geom_dump).geom as simple_geom,
    (d.geom_dump).path as path
  from (
    SELECT
      *,
      ST_Dump(rway) AS geom_dump
    from (
      select
        roads.osm_id as id,
        roads.name as strasse,
        plz.zipcode,
        ST_Intersection(roads.simple_geom,plz.way) as rway
      from
        (select way,tags::hstore->'postal_code' as zipcode from planet_osm_polygon
        where boundary = 'postal_code'
        ) as plz
        INNER JOIN
        (
          SELECT
            dumped.*,
            
/****** Object:  StoredProcedure [dbo].[GetManagerParameters] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.GetManagerParameters
/****************************************************
** 
**	Desc:	Gets the parameters for the given analysis manager
**			Uses MgrSettingGroupName to lookup parameters from the parent group, if any
**
**	Return values: 0: success, otherwise, error code
**
**	Auth:	mem
**	Date:	05/07/2015 mem - Initial version
**			08/10/2015 mem - Added @SortMode=3
**			09/02/2016 MEM - Increase the default for parameter @MaxRecursion from 5 to 50
**    
*****************************************************/
	@ManagerNameList varchar(4000) = '',
	@SortMode tinyint = 0,					-- 0 means sort by ParamTypeID then MgrName, 1 means ParamName, then MgrName, 2 means MgrName, then ParamName, 3 means Value then ParamName
	@MaxRecursion tinyint = 50,
	@message varchar(512)='' output
As
	Set NoCount On
	declare @myRowCount int
	declare @myError int
	set @m

	set @myError = 0
	-----------------------------------------------
	-- Validate the inputs
	-----------------------------------------------
	--
	Set @ManagerNameList = IsNull(@ManagerNameList, '')
	Set @SortMode = IsNull(@SortMode, 0)
	If @MaxRecursion > 10
		Set @MaxRecursion = 10
		
	-----------------------------------------------
	-- Create the Temp Tables
	-----------------------------------------------
	--
	/*
	If Exists (Select * From sys.tables where Name = '#Tmp_Mgr_Params')
	Begin
		Drop Table #Tmp_Mgr_Params
	End
	If Exists (Select * From sys.tables where Name = '#Tmp_Manager_Group_Info')
	Begin
		Drop Table #Tmp_Manager_Group_Info
	End
	*/
	CREATE TABLE #Tmp_Mgr_Params (
		M_Name varchar(50) NOT NULL,
		ParamName varchar(50) NOT NULL,
		Entry_ID int NOT NULL,
		TypeID int NOT NULL,
		Value varchar(128) NOT NULL,
		MgrID int NOT NULL,
		Comment varchar(255) NULL,
		Last_Affected datetime NULL,
		Entered_By varchar(128) NULL,
		M_TypeID int NOT NULL,
		ParentParamPointerState

		Source varchar(50) NOT NULL
	) 
	CREATE TABLE #Tmp_Manager_Group_Info (
		M_Name varchar(50) NOT NULL,
		Group_Name varchar(128) NOT NULL
	) 
	-----------------------------------------------
	-- Lookup the initial manager parameters
	-----------------------------------------------
	--
	INSERT INTO #Tmp_Mgr_Params( M_Name,
	                             ParamName,
	                             Entry_ID,
	                             TypeID,
	                             Value,
	                             MgrID,
	                             Comment,
	                             Last_Affected,
	                             Entered_By,
	                             M_TypeID,
	                             ParentParamPointerState,
	                             Source )
	SELECT M_Name,
	       ParamName,
	       Entry_ID,
	       TypeID,
	       Value,
	       MgrID,
	       Comment,
	       Last_Affected,
	       Entered_By,
	       M_TypeID,
	       CASE
	           WHEN TypeID = 162 
USE MDS;
BEGIN TRY
  
BEGIN TRANSACTION LoadPifUK;
select DISTINCT
  F.SELF_ID EMITENT_ID,
  F2.SELF_ID UKPIF_ID
into #FansyPIFtoManagementCompanyMapping
from [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_SHARES S
left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_FACES F 
    ON F.SELF_ID=S.ISSUER and F.LAST_FLAG=1  --òàê â ÔÝÍÑÈ âûòàñêèâàåòñÿ ïîñëåäíÿÿ (àêòóàëüíàÿ) èñòîðè÷åñêàÿ çàïèñü 
left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_TRUSTS TR 
    ON TR.U_FACE=F.SELF_ID
left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_FACES F2 
    ON F2.SELF_ID=TR.COMPANY and F2.LAST_FLAG=1
DECLARE @EntityId int;
DECLARE @EntityTable nvarchar(max);
DECLARE @LegalEntityTable nvarchar(max);
DECLARE @ManagementCompany nvarchar(max);
DECLARE @UpdateCmd nvarchar(max);
SELECT @EntityId =ID, @EntityTable = EntityTable
FROM MDS.mdm.tblEntity
WHERE Name = 'PIF'
SELECT @LegalEntityTable = EntityTable
FROM MDS.mdm.tblEntity
WHERE Name = 'LegalEntity'
SELECT @ManagementCompany = TableColumn  
FROM MDS.mdm.tblAttribute
WHERE [Entity_ID] = @Ent

AND Name = 'ManagementCompany'
SET @UpdateCmd = '
UPDATE mdsPIF
SET mdsPIF.'+@ManagementCompany+' = mdsUKLeg.ID
FROM [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_FACES pif
JOIN #FansyPIFtoManagementCompanyMapping mapp
ON pif.SELF_ID = mapp.EMITENT_ID
JOIN NaviconMDM.dbo.CodesMappingDetails cdFan
ON cdFan.ClientId = pif.SELF_ID
AND cdFan.EntityName = ''PIF''
AND cdFan.ClientName = ''Fansy''
JOIN NaviconMDM.dbo.CodesMappingDetails cdNsi
ON cdNsi.MasterCode = cdFan.MasterCode
AND cdNsi.EntityName = ''PIF''
AND cdNsi.ClientName = ''NSI''
JOIN MDS.mdm.'+@EntityTable+' mdsPIF
ON mdsPIF.Code COLLATE Cyrillic_General_CI_AS = cdNsi.ClientId
LEFT JOIN [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_FACES UKface
    ON mapp.UKPIF_ID = UKface.SELF_ID
LEFT JOIN NaviconMDM.dbo.CodesMappingDetails cdUKFansy
    ON cdUKFansy.ClientId = UKface.SELF_ID
    AND cdUKFansy.EntityName = ''LegalEntity''
    AND cdUKFansy.ClientName = ''Fansy''
LEFT JOIN NaviconMDM.dbo.CodesMappingDetails cdUKNSI
    ON cdUKNSI.MasterCode = cdUKFansy.

    AND cdUKNSI.EntityName = ''LegalEntity''
    AND cdUKNSI.ClientName = ''NSI''
LEFT JOIN MDS.mdm.'+@LegalEntityTable+' mdsUKLeg
ON mdsUKLeg.Code COLLATE Cyrillic_General_CI_AS = cdUKNSI.ClientId';
EXEC sp_executesql @UpdateCmd;
INSERT INTO NaviconMDM.dbo.CodesMappingLinks
(ChildId,ParentId)
SELECT cdPifFan.DetailsId,cdLegFan.DetailsId FROM MDS.mdm.Infinitum_PIF pif
JOIN MDS.mdm.Infinitum_LegalEntity leg
ON pif.ManagementCompany_Code = leg.Code
JOIN NaviconMDM.dbo.CodesMappingDetails cdPifNsi
ON cdPifNsi.ClientId = pif.Code COLLATE Cyrillic_General_CI_AS AND cdPifNsi.EntityName = 'PIF' AND cdPifNsi.ClientName = 'NSI'
JOIN NaviconMDM.dbo.CodesMappingDetails cdPifFan
ON cdPifFan.MasterCode = cdPifNsi.MasterCode AND cdPifFan.ClientName = 'Fansy'
JOIN NaviconMDM.dbo.CodesMappingDetails cdLegNsi
ON cdLegNsi.ClientId = pif.ManagementCompany_Code COLLATE Cyrillic_General_CI_AS AND cdLegNsi.EntityName = 'LegalEntity' AND cdLegNsi.ClientName = 'NSI'
JOIN NaviconMDM.dbo.CodesMappingDetails cd
DROP function if exists navigation_breadcrumbs;
DELIMITER $$
CREATE FUNCTION navigation_breadcrumbs(nav_id INT(11) UNSIGNED) RETURNS VARCHAR(255) 
BEGIN
DECLARE var_name VARCHAR(255);
DECLARE id INT(11);
IF nav_id IS NULL THEN 
  SET id = 1;
ELSE
  SET id = nav_id;
END IF;
SELECT      
  CONCAT( 
    if(t6.label is not null and t6.lvl>0, CONCAT(t6.label, ' > '),''),  
    if(t5.label is not null and t5.lvl>0, CONCAT(t5.label, ' > '),''),
    if(t4.label is not null and t4.lvl>0, CONCAT(t4.label, ' > '),''),
    if(t3.label is not null and t3.lvl>0, CONCAT(t3.label, ' > '),''),
    if(t2.label is not null and t2.lvl>0, CONCAT(t2.label, ' > '),''),                
    if(nav.label is not null and nav.lvl>0, nav.label,''))                
    INTO var_name
 FROM navigation AS nav
LEFT JOIN navigation AS t2 ON t2.id = nav.parent_id
LEFT JOIN navigation AS t3 ON t3.id = t2.parent_id
LEFT JOIN navigation AS t4 ON t4.id = t3.parent_id
LEFT JOIN navigation AS t5 ON t5.id = t4.parent_id
LEFT JO
--------------------------------------------------------
--  File created - Friday-December-11-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table EMPLOYEES
--------------------------------------------------------
  CREATE TABLE "SYS"."EMPLOYEES" 
   (	"EMP_NO" VARCHAR2(20 BYTE), 
	"F_NAME" VARCHAR2(255 BYTE), 
	"L_NAME" VARCHAR2(255 BYTE), 
	"DEPT" VARCHAR2(255 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into SYS.EMPLOYEES
SET DEFINE OFF;
Insert into SYS.EMPLOYEES (EMP_NO,F_NAME,L_NAME,DEPT) values ('101','John','Wright','Engineering');
Insert into SYS.EMPLOYEES (EMP_NO,F_NAME,L_NAME,DEPT) values ('102','Utkarsh','Singh','Accounting');
-------------

--  DDL for Index EMPLOYEE_DETAILS_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "SYS"."EMPLOYEE_DETAILS_PK" ON "SYS"."EMPLOYEES" ("EMP_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table EMPLOYEES
--------------------------------------------------------
  ALTER TABLE "SYS"."EMPLOYEES" ADD CONSTRAINT "EMPLOYEE_DETAILS_PK" PRIMARY KEY ("EMP_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYS"."EMPLOYEES
﻿CREATE VIEW dbo.ReadingSetView
AS
SELECT        dbo.ReadingSet.*
FROM            dbo.ReadingSet
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumP

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  

      End
      Begin Tables = 
         Begin Table = "ReadingSet"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 208
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'ReadingSetView';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo',
USE [AUTOMATION 2]
DROP VIEW OPTIONOFCARPACKAGE
DROP TABLE CAR_PACKAGE
DROP TABLE CAR_OPTION
DROP TABLE P_OPTION
DROP TABLE MODEL_PACKAGE
DROP TABLE SALE
DROP TABLE SALESPERSON
DROP TABLE CUSTOMER
DROP TABLE M_OPTIONS
DROP TABLE OPTIONS
DROP TABLE CAR
DROP TABLE MODEL
IF OBJECT_ID('ModelNoControlCarPackage') IS NOT NULL
    DROP FUNCTION ModelNoControlCarPackage
IF OBJECT_ID('ModelNoContrlCarOption') IS NOT NULL
    DROP FUNCTION dbo.ModelNoContrlCarOption
IF OBJECT_ID('numberOfOption') IS NOT NULL
    DROP FUNCTION dbo.numberOfOption
IF OBJECT_ID('AddPackageForUnSoldCar') IS NOT NULL
    DROP FUNCTION dbo.AddPackageForUnSoldCar
IF OBJECT_ID('AddOptionForUnSoldCar') IS NOT NULL
    DROP FUNCTION dbo.AddOptionForUnSoldCar
IF OBJECT_ID('PaketInceleme') IS NOT NULL
    DROP FUNCTION PaketInceleme
IF OBJECT_ID('modelNoAl') IS NOT NULL
    DROP FUNCTION dbo.modelNoAl
CREATE TABLE MODEL
	ModelNO INT PRIMARY KEY,
	ModelName VARCHAR(15) UNIQUE NOT NULL,
	Manufacture VARCHAR(15),
	Price FLOAT N

	CHECK (Price>0)
);
CREATE TABLE CAR
	SerialNO VARCHAR(9) PRIMARY KEY,
	ModelNO INT FOREIGN KEY REFERENCES MODEL(ModelNO)
);
CREATE TABLE OPTIONS
	OptionNO INT PRIMARY KEY,
	OptionName VARCHAR(15) NOT NULL,
	OptionPrice FLOAT NOT NULL,
	CHECK(OptionPrice>0)
);
CREATE TABLE M_OPTIONS
	ModelNO INT,
	OptionNO INT UNIQUE,
	PRIMARY KEY(ModelNO,OptionNO),
	FOREIGN KEY(ModelNO) REFERENCES MODEL(ModelNO),
	FOREIGN KEY(OptionNO) REFERENCES OPTIONS(OptionNO)
);
CREATE TABLE CUSTOMER
	CustomerID VARCHAR(4) PRIMARY KEY,
	CustomerFName VARCHAR(16) NOT NULL,
	CustomerLName VARCHAR(16) NOT NULL
);
CREATE TABLE SALESPERSON
	SPID VARCHAR(3) PRIMARY KEY,
	SPFName VARCHAR(15) NOT NULL,
	SPLName VARCHAR(15) NOT NULL,
	SPAddress VARCHAR(39),
	SPPhone VARCHAR(11)
);
CREATE TABLE SALE
	SPID VARCHAR(3) ,
	SerialNO VARCHAR(9) unique,
	CustomerID VARCHAR(4),
	SDate DATE,
	SPrice FLOAT,
	PRIMARY KEY (SPID,SerialNO,CustomerID),
	FOREIGN KEY(SPID) REFERENCES SALESPERSON(SPID),
	FOREIGN KEY(SerialNO) REFERENCES CA

	FOREIGN KEY(CustomerID) REFERENCES CUSTOMER(CustomerID)
);
CREATE TABLE MODEL_PACKAGE
	ModelNO INT,
	PackageNO INT UNIQUE,
	PackagePrice FLOAT,
	PRIMARY KEY(ModelNO,PackageNO),
	FOREIGN KEY(ModelNO) REFERENCES MODEL(ModelNO)
);
CREATE TABLE P_OPTION
	ModelNO INT,
	PackageNO INT,
	OptNO INT,
	PRIMARY KEY (ModelNO,PackageNO,OptNO),
	FOREIGN KEY(ModelNO,PackageNO) REFERENCES MODEL_PACKAGE(ModelNO,PackageNO),
	FOREIGN KEY(ModelNO,OptNO) REFERENCES M_OPTIONS(ModelNO,OptionNO)
);
CREATE TABLE CAR_OPTION
	SerialNO VARCHAR(9),
	OptNO INT,
	ModelNO INT,
	FOREIGN KEY(ModelNO,OptNO) REFERENCES M_OPTIONS(ModelNO,OptionNO),
	FOREIGN KEY(SerialNO) REFERENCES CAR(SerialNO) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(SerialNO,OptNO)
);
CREATE TABLE CAR_PACKAGE
	SerialNO VARCHAR(9) ,
	PackageNO INT,
	ModelNO INT,
	PRIMARY KEY(SerialNO,PackageNO),
	FOREIGN KEY(ModelNO,PackageNO) REFERENCES MODEL_PACKAGE(ModelNO,PackageNO),
	FOREIGN KEY(SerialNO) REFERENCES CAR(SerialNO) ON DELETE CASCADE ON UPDA
  CREATE OR REPLACE  VIEW HV_NAV_VALIDATION (PORTFOLIO, SCHCLASS, LAST_NAV, NAV_MOV, PER_MGMT_RECUR_EXP, MISSED_VALUE, AUM_CR, UNITS_CR, PLANWISE_INCOME, MGMT_RECURRING_EXPENSE, NET_ADDITION_PLANWISE, TOTAL_INCOME, NAV_DATE, MANUAL_CURRENT_NAV, FINAL_MANUAL_CURRENT_NAV, DIVIDEND, SYSTEM_NAV) AS 
  SELECT nlc.portfolio,
  nlc.SCHCLASS,
  nlc.last_nav,
  --nlc.nav,
  nlc.nav_mov,
  nlc.PER_MGMT_RECUR_EXP,
  nlc.MISSED_VALUE,
  NLC.AUM_CR,
  nlc.UNITS_CR,
  nlc.PLANWISE_INCOME,
  nlc.MGMT_RECURRING_EXPENSE,
  nlc.NET_ADDITION_PLANWISE,
  nlc.TOTAL_INCOME,
  nlc.NAV_DATE,
  (nlc.nav+nlc.nav_mov) MANUAL_CURRENT_NAV,
  ROUND(((nlc.nav+nlc.nav_mov)-NVL(nlc.DIVIDEND,0)),4) FINAL_MANUAL_CURRENT_NAV,
  nlc.DIVIDEND,
  wc.nav system_nav
FROM HREP_NAVCONTROL_LIVE_CURR nlc,
  HI_WEEKNAV_CURR wc
WHERE nlc.portfolio=wc.scheme
AND nlc.NAV_DATE   =wc.WEEKEND_DT
AND nlc.SCHCLASS   =wc.SCHCLASS
--AND nlc.NAV_DATE   ='26 Nov 2013'--FOR VALIDATION AND TESTING PURPOSE
AND wc.SCHCLASS   <>'GLOBAL'
--and nlc.
select count(*) as ROWS from(select row_number() over(
ORDER BY b.xn,b.xq, b.kh
)as row,b.* from(SELECT DISTINCT L_VIEW_CLASS_FX.YEAR AS xn,L_VIEW_CLASS_FX.TERM AS xq,
      L_view_class_fx.courseno + L_view_class_fx.[group] kh, ls_km.km AS km,
      ls_xkrs.xkrs AS xkrs, ls.yxrs yxrs, ls_lhrs.lhrs AS lhrs,
      ls_zdrs.zdrs AS zdrs, ls_jgrs.jgrs AS jgrs, ls_bjgrs.bjgrs AS bjg,
      ls_qkrs.qkrs AS qkrs
FROM L_view_class_fx
LEFT OUTER JOIN
          (SELECT courses.courseno AS kh, courses.coursename km
         FROM courses) AS ls_km ON L_view_class_fx.courseno = ls_km.kh
LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_class_fx.courseno)
               AS xkrs
         FROM L_view_class_fx
	WHERE L_view_class_fx.classno=:CONE and L_view_class_fx.year=:YONE AND
L_view_class_fx.TERM=:TONE
         GROUP BY L_view_class_fx.classno, L_view_class_fx.YEAR,L_view_class_fx.TERM,  L_view_class_fx.

ON L_view_class_fx.YEAR=ls_xkrs.year and L_view_class_fx.term=ls_xkrs.term and L_view_class_fx.courseno + L_view_class_fx.[group] = ls_xkrs.xx
LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_class_fx.courseno)
               AS yxrs
         FROM L_view_class_fx
         WHERE L_view_class_fx.classno=:CTWO   and L_view_class_fx.year=:YTWO AND
L_view_class_fx.TERM=:TTWO  and
               (L_view_class_fx.testscore = '优秀' OR
               L_view_class_fx.examscore >= 90)
         GROUP BY L_view_class_fx.classno,L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group]) AS ls
ON  L_view_class_fx.YEAR=ls.year and L_view_class_fx.term=ls.term and
      L_view_class_fx.courseno + L_view_class_fx.[group] = ls.xx
 LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_c

               AS lhrs
         FROM L_view_class_fx
         WHERE L_view_class_fx.classno=:CTHREE  and L_view_class_fx.year=:YTHREE AND
L_view_class_fx.TERM=:TTHREE  and (L_view_class_fx.testscore = '良好' OR
               (L_view_class_fx.examscore >= 80 AND L_view_class_fx.examscore < 90))
         GROUP BY L_view_class_fx.classno,L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group]) AS ls_lhrs ON
      L_view_class_fx.courseno + L_view_class_fx.[group] = ls_lhrs.xx
LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_class_fx.courseno)
               AS zdrs
         FROM L_view_class_fx
         WHERE L_view_class_fx.classno=:CFOUR  and L_view_class_fx.year=:YFOUR AND
L_view_class_fx.TERM=:TFOUR  and  (L_view_class_fx.testscore = '中等' OR
               (L_view_class_fx.examscore >= 70 AND L_view_class_fx.examscore < 80))
         GROUP BY L_view_cla
-- ----------------------------------------------------------------------------------------------
-- ----------------------------------------------------------------------------------------------
-- ----------------------------------------------------------------------------------------------
-- ----------------------------------------------------------------------------------------------
-- REQUERIDO 0018
ALTER TABLE `versao_db` CHANGE `requerido_0018` `requerido_0019` BIT(1) NULL DEFAULT NULL;
-- remove o campo nome
ALTER TABLE `jos_edesktop_mailing_emails` DROP `nome`;
-- remove o campo html
ALTER TABLE `jos_edesktop_mailing_emails` DROP `html`;
-- adiciona um menu
INSERT INTO `jos_menu_types` (`id`, `menutype`, `title`, `description`) VALUES ('200', 'edesktop', 'eDesktop', 'Menu para uso interno do sistema');
-- adiciona um item de menu "mailing"
INSERT INTO `jos_menu` (`id`, `menutype`, `name`, `alias`, `link`, `type`, `published`, `parent`, `componentid`, `sublevel`, `ordering`, 
CREATE TABLE "QUALIDADE"."TB_EXT_S_SIMCARD"
  (
    "OBJID_PROD"     NUMBER,
    "ID_NUMBER"      VARCHAR2(255 BYTE),
    "V_OBJID_CASE"   NUMBER,
    "TITLE"          VARCHAR2(80 BYTE),
    "CREATION_TIME"  DATE,
    "ACESSO"         VARCHAR2(30 BYTE),
    "IMSI_HLR"       VARCHAR2(80 BYTE),
    "IMSI_CLY"       VARCHAR2(80 BYTE),
    "ESTADO_HLR"     VARCHAR2(80 BYTE),
    "CATEGORIA_HLR"  VARCHAR2(80 BYTE),
    "TECNOLOGIA_HLR" VARCHAR2(80 BYTE),
    "STATUS_CLY"     VARCHAR2(120 BYTE),
    "IMSI_GPP"       VARCHAR2(80 BYTE),
    "MSISDN_GPP"     VARCHAR2(80 BYTE),
    "IMSI_SISGEN"    VARCHAR2(80 BYTE),
    "IMSI_CLY_HST"   VARCHAR2(80 BYTE),
    "SERVICO_HLR"    VARCHAR2(4000 BYTE)
  )
  SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING STORAGE
  (
    INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT
  )
  TABLESPACE "T

CREATE TABLE "QUALIDADE"."TB_EXT_S_SIMCARD_ACESSO"
  (
    "OBJID_PROD"     NUMBER,
    "ID_NUMBER"      VARCHAR2(255 BYTE),
    "V_OBJID_CASE"   NUMBER,
    "TITLE"          VARCHAR2(80 BYTE),
    "CREATION_TIME"  DATE,
    "ACESSO"         VARCHAR2(30 BYTE),
    "IMSI_HLR"       VARCHAR2(80 BYTE),
    "IMSI_CLY"       VARCHAR2(80 BYTE),
    "ESTADO_HLR"     VARCHAR2(80 BYTE),
    "CATEGORIA_HLR"  VARCHAR2(80 BYTE),
    "TECNOLOGIA_HLR" VARCHAR2(80 BYTE),
    "STATUS_CLY"     VARCHAR2(120 BYTE),
    "IMSI_GPP"       VARCHAR2(80 BYTE),
    "MSISDN_GPP"     VARCHAR2(80 BYTE),
    "IMSI_SISGEN"    VARCHAR2(80 BYTE),
    "IMSI_CLY_HST"   VARCHAR2(80 BYTE),
    "SERVICO_HLR"    VARCHAR2(4000 BYTE)
  )
  SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 COMPRESS FOR OLTP NOLOGGING STORAGE
  (
    INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT
  
delete from sys_menu where code ='Url_CabProductionView_View'
delete from acc_permission where code ='Url_CabProductionView_View'
go
delete from sys_menu where code ='Url_CabGuideOutSoureView_View'
delete from acc_permission where code ='Url_CabGuideOutSoureView_View'
go
insert into sys_menu values
('Url_CabGuideHomeMadeView_View','驾驶室导轨自制视图','Menu.Production.Info',202,'驾驶室导轨自制视图','~/CabGuide/HomeMadeViewIndex','~/Content/Images/Nav/Default.png',1)
go
insert into acc_permission values('Url_CabGuideHomeMadeView_View','驾驶室导轨自制视图','Production')
go
insert into sys_menu values
('Url_CabGuideOutSoureView_View','驾驶室导轨外购视图','Menu.Production.Info',203,'驾驶室导轨外购视图','~/CabGuide/OutSoureViewIndex','~/Content/Images/Nav/Default.png',1)
go
insert into acc_permission values('Url_CabGuideOutSoureView_View','驾驶室导轨外购视图','Production')
go
insert into sys_menu values
('Url_VehicleProductionSubLineView_View','整车生产分线视图','Menu.Production.Info',204,'整车生产分线视图','~/VehicleProductionSubLine/Index','~/Content/Images
INSERT --+append parallel(t 4)
      INTO  opers t
   SELECT event_dt AS transaction_dt
        , transaction_id AS transaction_id
        , st.store_id
        , st.store_name
        , cst.first_name AS cust_first_name
        , cst.last_name AS cust_last_name
        , cst.birth_day AS cust_birth_day
        , prd.product_id
        , prd.product_name
        , o.pay_metod AS pay_metod_id
        , ( CASE o.pay_metod
              WHEN 1 THEN 'CASH'
              WHEN 2 THEN 'CARD'
              WHEN 3 THEN 'Others'
              ELSE 'N.A.'
           END )
             AS pay_metod_desc
        , o.quantity
        , prd.prd_unit
        , o.price        
        , o.price * o.quantity AS value_full
        , o.disc AS discount_percent
        , ROUND ( o.disc * ( o.price * o.quantity )
                , 2 )
             AS discount_sum
        , ( o.price * o.quantity ) - o.disc * ( o.price * o.quantity ) AS value_clear
        , emp.emp_id AS emp_id
        , emp.first_name AS e
UPDATE project_memory SET model_number = " " WHERE model_number = " ";
UPDATE project_memory SET name = " " WHERE model_number = " ";
UPDATE project_memory SET brand = " " WHERE model_number = " ";
UPDATE project_memory SET price = " " WHERE model_number = " ";
UPDATE project_memory SET memory_type = " " WHERE model_number = " ";
UPDATE project_memory SET size_per_stick_megabytes = " " WHERE model_number = " ";
UPDATE project_memory SET number_of_sticks = " " WHERE model_number = " ";
UPDATE project_memory SET speed = " " WHERE model_number = " ";
UPDATE project_motherboard SET model_number = " " WHERE model_number = " ";
UPDATE project_motherboard SET name = " " WHERE model_number = " ";
UPDATE project_motherboard SET brand = " " WHERE model_number = " ";   
UPDATE project_motherboard SET price  = " " WHERE model_number = " ";   
UPDATE project_motherboard SET mobo_class = " " WHERE model_number = " ";   
UPDATE project_motherboard SET socket = " " WHERE model_number = " ";   
UPDATE 

UPDATE project_motherboard SET ram_type = " " WHERE model_number = " ";
UPDATE project_motherboard SET ram_speed = " " WHERE model_number = " ";   
UPDATE project_motherboard SET cpu_brand = " " WHERE model_number = " ";   
UPDATE project_motherboard SET form_factor = " " WHERE model_number = " ";   
UPDATE project_motherboard SET pci_x1_slots = " " WHERE model_number = " ";   
UPDATE project_motherboard SET pci_x4_slots = " " WHERE model_number = " ";
UPDATE project_motherboard SET pci_x8_slots = " " WHERE model_number = " ";
UPDATE project_motherboard SET pci_x16_slots = " " WHERE model_number = " ";   
UPDATE project_motherboard SET total_pci_slots = " " WHERE model_number = " ";   
UPDATE project_motherboard SET sata_ports = " " WHERE model_number = " ";   
UPDATE project_motherboard SET pata_ports = " " WHERE model_number = " ";   
UPDATE project_motherboard SET main_mobo_power = " " WHERE model_number = " ";
UPDATE project_motherboard SET secondary_mobo_power = " " WHERE model_n

UPDATE project_motherboard SET fan_connectors int = " " WHERE model_number = " ";   
UPDATE project_motherboard SET dvi_ports = " " WHERE model_number = " ";   
UPDATE project_motherboard SET hdmi_ports = " " WHERE model_number = " ";   
UPDATE project_motherboard SET agp_ports = " " WHERE model_number = " ";   
UPDATE project_motherboard SET vga_ports = " " WHERE model_number = " ";
UPDATE project_motherboard SET raid_support  = " " WHERE model_number = " ";
UPDATE project_motherboard SET raid_modes = " " WHERE model_number = " ";   
UPDATE project_motherboard SET intergrated_video = " " WHERE model_number = " ";   
UPDATE project_optical_drive SET model_number = " " WHERE model_number = " ";
UPDATE project_optical_drive SET name = " " WHERE model_number = " ";
UPDATE project_optical_drive SET brand = " " WHERE model_number = " ";
UPDATE project_optical_drive SET price = " " WHERE model_number = " ";
UPDATE project_optical_drive SET drive_type = " " WHERE model_number = " ";
UPDATE p
CREATE TABLE dmFlash(
lockedBy varchar(250) NULL DEFAULT NULL ,
lastupdatedby varchar(250) NOT NULL DEFAULT '' ,
flashPlay tinyint(1) NOT NULL DEFAULT 1 ,
flashQuality varchar(250) NULL DEFAULT 'high' ,
flashWidth decimal(10,2) NULL DEFAULT 0 ,
flashBgcolor varchar(250) NULL DEFAULT '#FFFFFF' ,
metaKeywords varchar(250) NULL DEFAULT NULL ,
status varchar(250) NULL DEFAULT NULL ,
flashAlign varchar(250) NULL DEFAULT 'center' ,
teaser longtext NULL ,
displayMethod varchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
ObjectID varchar(50) NOT NULL DEFAULT '' ,
flashMenu tinyint(1) NOT NULL DEFAULT 0 ,
flashMovie varchar(250) NULL DEFAULT NULL ,
label varchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL ,
flashLoop tinyint(1) NOT NULL DEFAULT 0 ,
flashURL varchar(250) NULL DEFAULT NULL ,
flashVersion varchar(250) NULL DEFAULT '8,0,0,0' ,
createdby varchar(250) NOT NULL DEFAULT '' ,
datetimecreated datetime NOT NULL ,
locked tinyint(1) NOT NULL DEFAULT 0 ,
flashParams varc
--liquibase formatted sql
--This is for the sparrow_dss schema
  
--logicalFilePath: changeLog3ForeignKeys.sql
--changeset drsteini:fks3a
alter table model_reach_swap add constraint model_reach_swap_enh_reach_fk foreign key (enh_reach_id) references stream_network.enh_reach (enh_reach_id);
--rollback alter table model_reach_swap drop constraint model_reach_swap_enh_reach_fk;
     
--changeset drsteini:fks3b
alter table model_reach_swap add constraint model_reach_swap_sprw_mdl_fk foreign key (sparrow_model_id) references sparrow_model (sparrow_model_id) on delete cascade;
--rollback alter table model_reach_swap drop constraint model_reach_swap_sprw_mdl_fk;
--changeset drsteini:fks3c
alter table source_swap add constraint source_swap_sparrow_model_fk foreign key (sparrow_model_id) references sparrow_model (sparrow_model_id) on delete cascade;
--rollback alter table source_swap drop constraint source_swap_sparrow_model_fk;
--changeset drsteini:fks3d
alter table reach_coef_swap add constra

--rollback alter table reach_coef_swap drop constraint reach_ceof_swp_model_reach_fk;
--changeset drsteini:fks3e
alter table reach_coef_swap add constraint reach_coef_swp_sparrow_mdl_fk foreign key (sparrow_model_id) references sparrow_model (sparrow_model_id);
--rollback alter table reach_coef_swap drop constraint reach_coef_swp_sparrow_mdl_fk;
--changeset drsteini:fks3f
alter table source_reach_coef_swap add constraint source_reach_coef_swp_fk foreign key (model_reach_id) references model_reach_swap (model_reach_id) on delete cascade;
--rollback alter table source_reach_coef_swap drop constraint source_reach_coef_swp_fk;
--changeset drsteini:fks3g
alter table source_reach_coef_swap add constraint source_reach_coef_swp_src_fk foreign key (source_id) references source (source_id) on delete cascade;
--rollback alter table source_reach_coef_swap drop constraint source_reach_coef_swp_src_fk;
--changeset drsteini:fks3h
alter table source_reach_coef_swap add constraint src_reach_coef_swp_m

--rollback alter table source_reach_coef_swap drop constraint src_reach_coef_swp_model_fk;
--changeset drsteini:fks3i
alter table source_value_swap add constraint source_value_swp_mdl_rch_fk foreign key (model_reach_id) references model_reach_swap (model_reach_id) on delete cascade;
--rollback alter table source_value_swap drop constraint source_value_swp_mdl_rch_fk;
--changeset drsteini:fks3j
alter table source_value_swap add constraint source_value_swp_source_fk foreign key (source_id) references source (source_id) on delete cascade;
--rollback alter table source_value_swap drop constraint source_value_swp_source_fk;
--changeset drsteini:fks3k
alter table source_value_swap add constraint src_value_swp_sparrow_model_fk foreign key (sparrow_model_id) references sparrow_model (sparrow_model_id);
--rollback alter table source_value_swap drop constraint src_value_swp_sparrow_model_fk;
--changeset drsteini:fks3l
alter table model_reach_attrib_swap add constraint model_rch_attrib_swp_reach
USE [TestDB]
GO
/****** Object:  View [dbo].[Cust_View]    Script Date: 20/4/2015 下午 4:02:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Cust_View]
AS
SELECT dbo.customers.*
FROM   dbo.customers
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguratio

         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Confi

      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "customers"
            Begin Extent = 
               Top = 9
               Left = 57
               Bottom = 425
               Right = 594
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'Cust_View'
GO
EXEC sys.sp_
﻿CREATE TABLE [dbo].[TblDocument_Flash] (
  [DocumentID] [int] NOT NULL CONSTRAINT [DF__TblDocume__Docum__278EDA44] DEFAULT (0),
  [FlashID] [int] NOT NULL CONSTRAINT [DF__TblDocume__Flash__2882FE7D] DEFAULT (0),
  CONSTRAINT [aaaaaTblDocument_Flash_PK] PRIMARY KEY NONCLUSTERED ([DocumentID], [FlashID]) WITH (FILLFACTOR = 90)
ON [PRIMARY]
GO
CREATE INDEX [ASPFuncID]
  ON [dbo].[TblDocument_Flash] ([FlashID])
  WITH (FILLFACTOR = 90)
  ON [PRIMARY]
GO
CREATE INDEX [DocumentID]
  ON [dbo].[TblDocument_Flash] ([DocumentID])
  WITH (FILLFACTOR = 90)
  ON [PRIMARY]
GO
CREATE INDEX [TblDocumentTblDocument_Flash]
  ON [dbo].[TblDocument_Flash] ([DocumentID])
  WITH (FILLFACTOR = 90)
  ON [PRIMARY]
GO
CREATE INDEX [TblFlashTblDocument_Flash]
  ON [dbo].[TblDocument_Flash] ([FlashID])
  WITH (FILLFACTOR = 90)
  ON [PRIMARY]
GO
ALTER TABLE [dbo].[TblDocument_Flash] WITH NOCHECK
  ADD CONSTRAINT [TblDocument_Flash_FK00] FOREIGN KEY ([DocumentID]) REFERENCES [dbo].[TblDocument] ([DocumentID]) ON D
-- WINDSFORCE 群组数据库数据
-- version 1.1.1
-- http://www.windsforce.com
--
-- 开发: Windsforce TEAM
-- 网站: http://www.windsforce.com
--
-- 数据库: 群组初始化数据
--
-- --------------------------------------------------------
--
-- 转存表中的数据 `windsforce_app`
--
INSERT INTO `#@__app` (`app_id`, `app_identifier`, `app_name`, `app_version`, `app_description`, `app_url`, `app_email`, `app_author`, `app_authorurl`, `app_isadmin`, `app_isinstall`, `app_isuninstall`, `app_issystem`, `app_isappnav`, `app_status`) VALUES
(3,'group', '小组', '1.0', '群组应用', 'http://doyouhaobaby.net', 'admin@doyouhaobaby.net', 'WindsForce Team', 'http://doyouhaobaby.net', 1, 1, 1, 1, 1, 1);
-- --------------------------------------------------------
--
-- 转存表中的数据 `windsforce_creditrule`
--
INSERT INTO `#@__creditrule` (`creditrule_id`, `creditrule_name`, `creditrule_action`, `creditrule_cycletype`, `creditrule_cycletime`, `creditrule_rewardnum`, `creditrule_extendcredit1`, `creditrule_extendcredit2`, `creditrule_extendcredit3`, `credi

(10, '发布主题', 'group_addtopic', 4, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0),
(11, '发布回帖', 'group_addcomment', 4, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0),
(12, '帖子被设置精华1', 'group_topicdigest1', 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0),
(13, '帖子被设置精华2', 'group_topicdigest2', 4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0),
(14, '帖子被设置精华3', 'group_topicdigest3', 4, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0),
(15, '帖子被设置精华4', 'group_topicdigest4', 4, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0),
(16, '帖子被组长推荐', 'group_trecommend1', 4, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0),
(17, '帖子被系统推荐', 'group_trecommend2', 4, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0),
(18, '帖子被小组置顶1', 'group_topicstick1', 4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0),
(19, '帖子被小组置顶2', 'group_topicstick2', 4, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0),
(20, '帖子被全局置顶', 'group_topicstick3', 4, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0),
(21, '帖子被回复', 'group_topicreply', 1, 0, 30, 2, 0, 0, 0, 0, 0, 0, 0),
(22, '管理主题', 'group_topicadmin', 4, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0),
(23, '管理回帖', 'group_commentadmin', 4, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0),
(24, '主题被

(25, '回帖被删除', 'group_commentdelete', 4, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0),
(26, '回帖被置顶', 'group_stickreply', 4, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0),
(27, '帖子被提升', 'group_uptopic', 4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0);
-- --------------------------------------------------------
--
-- 转存表中的数据 `windsforce_cron`
--
INSERT INTO `#@__cron` (`cron_id`, `cron_status`, `cron_type`, `cron_name`, `cron_filename`, `cron_lastrun`, `cron_nextrun`, `cron_weekday`, `cron_day`, `cron_hour`, `cron_minute`) VALUES
(5, 1, 'app', '清空今日发帖数', 'group@Todaytopic_Daily_.php', 1365910913, 1365955200, -1, -1, 0, '0');
-- --------------------------------------------------------
--
-- 转存表中的数据 `windsforce_groupoption`
--
INSERT INTO `#@__groupoption` (`groupoption_name`, `groupoption_value`) VALUES
('group_isaudit', '0'),
('group_icon_uploadfile_maxsize', '102400'),
('group_indextopicnum', '10'),
('group_listtopicnum', '10'),
('group_hottopic_date', '604800'),
('group_hottopic_num', '10'),
('group_thumbtopic_num', '5'),
('group
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
--
-- StatusView
--
CREATE function [dbo].[StatusView] (@ReadWrite varchar(5), @PermIDs varchar(MAX), @WhichLob int)
returns table
as
return (
                Select distinct someview.CSID as id,someview.descrip , SomeView.Status_type_id, SomeView.[Rank] /*,CSR.Access as Access*/ from
                                (
                                                select
                                                                cs.id as CSID,
                                                                ug.id as UGID,
                                                                cs.Status_type_id,
                                                                cs.descrip,
                                                                ug.permissionName,
                                                                cs.[Rank]
                                                from
                                                 

                                                                [Permissions] ug JOIN
                                                                intList(@PermIDs) i ON ug.ID = i.number
                                                Where
                                                                cs.Available = 1
                                                                AND
                                                                cs.Renewal_Status_ID = 0
                                                                AND
                                                                (
                                                                OnlyForLob is null OR
                                                                OnlyForLob = @WhichLob
                                                                )
                                ) someView left outer join
                                Contact_Status_Roles csr
                            

                                                                csr.group_id = SomeView.UGID
                                                                AND
                                                                csr.Status_id = SomeView.CSID
                WHERE
                                                                                (
                                                                                                (@ReadWrite = 'READ'  AND (Access=1 OR Access=3))
                                                                                                OR
                                                                                                (@ReadWrite = 'WRITE' AND (Access=2 OR Access=3))
                                                                                                OR
                                                                                                (@ReadWrite = 'BOTH'  AND access=3) 
                 
SET IDENTITY_INSERT #__extensions  ON;
INSERT INTO #__extensions (extension_id, name, type, element, folder, client_id, enabled, access, protected, manifest_cache, params, custom_data, system_data, checked_out, checked_out_time, ordering, state)
SELECT 28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2015 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '1900-01-01 00:00:00', 0, 0;
SET IDENTITY_INSERT #__extensions  OFF;
INSERT INTO #__menu (menutype, title, alias, note, path, link, type, published, parent_id, level, component_id, ordering, checked_out, checked_out_time, browserNav, access, img, template_style_id, params, lft, rgt, home, language, client_id)
SELECT 'men
# Tests for the performance schema
# ==========================================
# HELPER include/event_aggregate_cleanup.inc
# ==========================================
--disable_query_log
revoke all privileges, grant option from user1@localhost;
revoke all privileges, grant option from user2@localhost;
revoke all privileges, grant option from user3@localhost;
revoke all privileges, grant option from user4@localhost;
drop user user1@localhost;
drop user user2@localhost;
drop user user3@localhost;
drop user user4@localhost;
flush privileges;
drop procedure dump_thread;
drop procedure dump_one_thread;
drop prepare dump_waits_account;
drop prepare dump_waits_user;
drop prepare dump_waits_host;
drop prepare dump_waits_history;
drop prepare dump_waits_global;
drop prepare dump_stages_account;
drop prepare dump_stages_user;
drop prepare dump_stages_host;
drop prepare dump_stages_history;
drop prepare dump_stages_global;
drop prepare dump_statements_account;
drop prepare dump_statements_user
-- $Id: fact_proj_tech_data.sql,v 1.2 2014/02/21 14:30:35 skempins Exp $
EXECUTE build_util.drop_table('new_fact_project_tech_data');
CREATE TABLE new_fact_project_tech_data
   ( permit_key NUMBER NOT NULL
   , data_category_name VARCHAR2(50) NOT NULL
   , data_name VARCHAR2(50) NOT NULL
   )
TABLESPACE &TABLE_TABLESPACE
   PCTFREE 0 PCTUSED 99
   PARALLEL NOLOGGING
	 &COMPRESS_OPTION
INSERT /*+APPEND*/
INTO new_fact_project_tech_data
  ( permit_key
  , data_category_name
  , data_name )
SELECT 
  dim_permit.permit_key 
  , 'Development Type' data_category_name
  , dvlp_tp.tech_abbr_dsc data_name
FROM proj_dvlp
JOIN new_dim_permit dim_permit ON (dim_permit.cur_prmt_id = proj_dvlp.cur_id)
JOIN sjr_tech_abbr_et dvlp_tp ON (proj_dvlp.dvlp_tp_cd = dvlp_tp.tech_data_tp_id) 
COMMIT;
INSERT /*+APPEND*/
INTO new_fact_project_tech_data
  ( permit_key
  , data_category_name
  , data_name )
SELECT 
  dim_permit.permit_key 
  , 'Treatment Type' data_category_name
  , tp_dsc data_name
FROM proj_trt
/*@export on
go
@export set Filename = "C:\Documents and Settings\fmab\Desktop\CIS\JP_NeueDatenImSternschema.html" format = "html" AppendFile = "clear"
go
*/
-- Anzahl neue Daten im Sternschema "VA-JP Fallbuchhaltung"
DECLARE @altstartdate datetime
SET @altstartdate = Getdate() -3
SELECT (DATEPART(day,ZF2072)) [Tag], ( DATEPART(month,ZF2072)) [Monat], ( DATEPART(year,ZF2072)) [Jahr], count (*) [JP_Fallbuchhaltung_Neu]
FROM 
    cis.dbo.DW2072
where ZF2072 > @altstartdate
group  by (DATEPART(day,ZF2072)), ( DATEPART(month,ZF2072)), ( DATEPART(year,ZF2072)) 
order by (DATEPART(year,ZF2072)) , (DATEPART(day,ZF2072)), ( DATEPART(month,ZF2072))  desc
 --go
-- Anzahl neue Daten im Sternschema "VA-JP Verarbeitungsstand"
DECLARE @altstartdate datetime
SET @altstartdate = Getdate() -3
SELECT (DATEPART(day,ZF2076)) [Tag], ( DATEPART(month,ZF2076)) [Monat], ( DATEPART(year,ZF2076)) [Jahr], count (*) [JP_Verarbeitungsstand_Neu]
FROM 
    cis.dbo.DW2076
where ZF2076 > @altstartdate
group  by (DATEP
CREATE view [dbo].[vJeopardy_CheckList]
AS
SELECT     TOP 100 PERCENT State, CLO, TaskID, Status, FinishTime, RespondBy, RespondTime, jeopardyID
FROM         dbo.vJeopardy
WHERE     (Status < 100) OR
                      (Status > 100)
ORDER BY State, CLO
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
     

      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
  

         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "vJeopardy (dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 247
               Right = 234
            End
            DisplayFlags = 280
            TopColumn = 15
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = 
﻿/*
    Import vcf file produced from samtools mpileup | bcftools from RNAseq am and bmdm.
    See Eddie /exports/work/vet_roslin_nextgen/dario/samtools/output/20110414_rnaseq_mpileup for pileups and filetring.
    See /exports/work/vet_roslin_nextgen/dario/tophat/output/20110202_rnaseq_xxx for alignments.
    This python script was used to prepare the SQL statement (manually edited to have DROP TABLE and append:False)
fout= open('D:/Tritume/import_vcf.sql', 'w')
for file_name in ('var.flt.am_cat.vcf',  'var.flt.am_ctrl.vcf', 'var.flt.am_lps.vcf',  'var.flt.bmdm_cat.vcf',  'var.flt.bmdm_ctrl.vcf',  'var.flt.bmdm_lps.vcf'):
    read_table= """
select read_table($$ file: 'D:/Tritume/%s', table: 'vcf_variants.vcf', comment_char: '#', append:True,
    apply:\"\"\"def apply(line):
                        if line.startswith('#'):
                            return(line)
                        line= '%s' + '\t' + line
                        return(line)\"\"\",
    header: ["file", "chrom", 

    fout.write(read_table)
fout.close()
   
*/
-- drop table vcf_variants.vcf;
select read_table($$ file: 'D:/Tritume/var.flt.am_cat.vcf', table: 'vcf_variants.vcf', comment_char: '#', append:False,
    apply:"""def apply(line):
                        if line.startswith('#'):
                            return(line)
                        line= 'var.flt.am_cat.vcf' + '	' + line
                        return(line)""",
    header: ["file", "chrom", "pos", "id", "ref", "alt", "qual", "filter", "info", "format", "am", "bmdm"] $$);
select read_table($$ file: 'D:/Tritume/var.flt.am_ctrl.vcf', table: 'vcf_variants.vcf', comment_char: '#', append:True,
    apply:"""def apply(line):
                        if line.startswith('#'):
                            return(line)
                        line= 'var.flt.am_ctrl.vcf' + '	' + line
                        return(line)""",
    header: ["file", "chrom", "pos", "id", "ref", "alt", "qual", "filter", "info", "format", "am", "bmdm"] $$);
selec

    apply:"""def apply(line):
                        if line.startswith('#'):
                            return(line)
                        line= 'var.flt.am_lps.vcf' + '	' + line
                        return(line)""",
    header: ["file", "chrom", "pos", "id", "ref", "alt", "qual", "filter", "info", "format", "am", "bmdm"] $$);
select read_table($$ file: 'D:/Tritume/var.flt.bmdm_cat.vcf', table: 'vcf_variants.vcf', comment_char: '#', append:True,
    apply:"""def apply(line):
                        if line.startswith('#'):
                            return(line)
                        line= 'var.flt.bmdm_cat.vcf' + '	' + line
                        return(line)""",
    header: ["file", "chrom", "pos", "id", "ref", "alt", "qual", "filter", "info", "format", "am", "bmdm"] $$);
select read_table($$ file: 'D:/Tritume/var.flt.bmdm_ctrl.vcf', table: 'vcf_variants.vcf', comment_char: '#', append:True,
    apply:"""def apply(line):
                        if line.startswith('#'):
 
/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;
/* import table which contains outdated column definitions that cause some change sets to fail */
DROP TABLE IF EXISTS import;
/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESU
IF OBJECT_ID('dbo.wsp_getAllLocalizedContents') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_getAllLocalizedContents
    IF OBJECT_ID('dbo.wsp_getAllLocalizedContents') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_getAllLocalizedContents >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_getAllLocalizedContents >>>'
END
go
/******************************************************************************
**
** CREATION:
**   Author:  Mike Stairs
**   Date:  May 21, 2003
**   Description:  retrieves all package descriptions
**
** REVISION(S):
**   Author:  Yan Liu
**   Date:  Janunary 28 2009
**   Description: append dynamicalFlag to result set.
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
******************************************************************************/
CREATE PROCEDURE dbo.wsp_getAllLocalizedContents
AS
BEGIN  
   SELECT localeId,
          contentId,
          contentText,
          dynamicalFlag
     FROM LocaleContent
   ORD
﻿CREATE VIEW dbo.vPPI_Check
AS
SELECT DISTINCT CLO, Item, State
FROM         dbo.vPPI
WHERE     (Status <> 100) AND (IsSOAC = 0) AND (CLO NOT LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[8] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes 

         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
 

      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -341
         Left = 0
      End
      Begin Tables = 
         Begin Table = "vPPI (dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 190
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
 
insert into permission (name,description) values ('scheduleRead','scheduleRead');
insert into permission (name,description) values ('aircraftRead','aircraftRead');
insert into permission (name,description) values ('aircraftInfoRead','aircraftInfoRead');
insert into permission (name,description) values ('aircraftInfoWrite','aircraftInfoWrite');
insert into permission (name,description) values ('aircraftHoursRead','aircraftHoursRead');
insert into permission (name,description) values ('aircraftHoursWrite','aircraftHoursWrite');
insert into permission (name,description) values ('aircraftDocRead','aircraftDocRead');
insert into permission (name,description) values ('aircraftDocWrite','aircraftDocWrite');
insert into permission (name,description) values ('contractRead','contractRead');
insert into permission (name,description) values ('contractAdminRead','contractAdminRead');
insert into permission (name,description) values ('contractAdminWrite','contractAdminWrite');
insert into permission

insert into permission (name,description) values ('contractResourcesWrite','contractResourcesWrite');
insert into permission (name,description) values ('contractPriceRead','contractPriceRead');
insert into permission (name,description) values ('contractPriceWrite','contractPriceWrite');
insert into permission (name,description) values ('contractInsRead','contractInsRead');
insert into permission (name,description) values ('contractInsWrite','contractInsWrite');
insert into permission (name,description) values ('contractCostRead','contractCostRead');
insert into permission (name,description) values ('contractCostWrite','contractCostWrite');
insert into permission (name,description) values ('contractHoursRead','contractHoursRead');
insert into permission (name,description) values ('contractHoursWrite','contractHoursWrite');
insert into permission (name,description) values ('contractDocRead','contractDocRead');
insert into permission (name,description) values ('contractDocWrite','contrac

insert into permission (name,description) values ('contractOnContractWrite','contractOnContractWrite');
insert into permission (name,description) values ('contractAssignRead','contractAssignRead');
insert into permission (name,description) values ('contractAssignWrite','contractAssignWrite');
insert into permission (name,description) values ('crewRead','crewRead');
insert into permission (name,description) values ('crewPersonalRead','crewPersonalRead');
insert into permission (name,description) values ('crewPersonalWrite','crewPersonalWrite');
insert into permission (name,description) values ('crewBankRead','crewBankRead');
insert into permission (name,description) values ('crewBankWrite','crewBankWrite');
insert into permission (name,description) values ('crewRoleRead','crewRoleRead');
insert into permission (name,description) values ('crewRoleWrite','crewRoleWrite');
insert into permission (name,description) values ('crewPayRead','crewPayRead');
insert into permission (name,descript
#DROP TABLE IF EXISTS blog_posts;
CREATE TABLE IF NOT EXISTS blog_posts
	id INTEGER UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	title VARCHAR(255),
	url VARCHAR(255),
	summary VARCHAR(200),
	content TEXT,
	created DATETIME,
	modified DATETIME
);
#DROP TABLE IF EXISTS blog_tags;
CREATE TABLE IF NOT EXISTS blog_tags
	id INTEGER UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	tag VARCHAR(100) NOT NULL,
	created DATETIME NOT NULL,
	modified DATETIME NOT NULL
);
#DROP TABLE IF EXISTS blog_posts_blog_tags;
CREATE TABLE IF NOT EXISTS blog_posts_blog_tags
	id INTEGER UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	blog_post_id INTEGER UNSIGNED NOT NULL,
	blog_tag_id INTEGER UNSIGNED NOT NULL
);
ALTER TABLE blog_posts_blog_tags RENAME blog_posts_tags;
ALTER TABLE blog_posts ADD nav_topic BOOL DEFAULT FALSE;
ALTER TABLE blog_posts ADD parent_id INTEGER UNSIGNED;
ALTER TABLE blog_posts_tags CHANGE blog_post_id post_id INTEGER UNSIGNED, CHANGE blog_tag_id tag_id INTEGER UNSIGNED;
ALTER TABLE blog
set autocommit on;
\p\g
drop table gca02;
\p\g
drop table gca02i;
\p\g
create table gca02( integer1    i1       with null
		  , integer2    i2       with null
		  , integer4    i4       with null
		  , float4      f4       with null
		  , float8      f8       with null
		  , date        date     with null
		  , money       money    with null
		  , should_read char(30) with null
		  ) with duplicates;
\p\g
insert into gca02( integer1, should_read ) values (-128,'-128');\p\g
insert into gca02( integer1, should_read ) values ( 127, '127');\p\g
insert into gca02( integer2, should_read ) values (-32768,'-32768');\p\g
insert into gca02( integer2, should_read ) values ( 32767, '32767');\p\g
insert into gca02( integer4, should_read ) values (-2147483648,'-2147483648');\p\g
insert into gca02( integer4, should_read ) values ( 2147483647, '2147483647');\p\g
insert into gca02( float4,   should_read ) values (-10.000e+37,'-10.000e+37' );\p\g
insert into gca02( float4,   should_read ) values ( 10.00

insert into gca02( float8,   should_read ) values (-10.000e+37,'-10.000e+37' );\p\g
insert into gca02( float8,   should_read ) values ( 10.000e+37, '10.000e+37' );\p\g
insert into gca02( date,     should_read ) values ('01-jan-1582','01-jan-1582');\p\g
insert into gca02( date,     should_read ) values ('31-dec-2382','31-dec-2382');\p\g
insert into gca02( money,    should_read ) values ('$-999999999999.99','$-999999999999.99');\p\g
insert into gca02( money,    should_read ) values ( '$999999999999.99','$ 999999999999.99');
\p\g
create table gca02i( integer1    i1       with null
		   , integer2    i2       with null
		   , integer4    i4       with null
		   , float4      f4       with null
		   , float8      f8       with null
		   , date        date     with null
		   , money       money    with null
		   , should_read char(30) with null
                   ) with duplicates;
\p\g
copy gca02 () into 'gca02i.res';\p\g
copy gca02i () from 'gca02i.res';
\p\g
select integer1, integer2, in

select float4, float8, should_read from gca02i;\p\g
select date, money, should_read from gca02i;
\p\g
copy gca02( integer1=    c0tab       with null ('NULL')
	  , integer2=    c0tab       with null ('NULL')
	  , integer4=    c0tab       with null ('NULL')
	  , float4=      c0tab       with null ('NULL')
	  , float8=      c0tab       with null ('NULL')
	  , date=        c0tab       with null ('NULL')
	  , money=       c0tab       with null ('NULL')
	  , should_read= varchar(30) with null ('NULL')
	  , nl= d1) into 'gca02.res';
\p\g
drop table gca02i;\p\g
drop table gca02;
\p\g
create table gca02( integer1    i1       with null
		  , integer2    i2       with null
		  , integer4    i4       with null
		  , float4      f4       with null
		  , float8      f8       with null
		  , date        date     with null
		  , money       money    with null
		  , should_read char(30) with null
		  ) with duplicates;
\p\g
create table gca02i( integer1    i1       with null
		   , integer2    i2     
IF OBJECT_ID('dbo.wsp_newBillToMobileResponse') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newBillToMobileResponse
    IF OBJECT_ID('dbo.wsp_newBillToMobileResponse') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newBillToMobileResponse >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newBillToMobileResponse >>>'
END
go
/*******************************************************************
**
** CREATION:
**   Author:      Andy Tran
**   Date:        April 2011 
**   Description: Inserts row into BillToMobileResponse.
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
*******************************************************************/
CREATE PROCEDURE wsp_newBillToMobileResponse
    @xactionId  NUMERIC(12,0)
   ,@response   VARCHAR(1000)
AS
DECLARE
 @dateNow DATETIME
,@return  INT
EXEC @return = dbo.wsp_GetDateGMT @dateNow OUTPUT
IF @return != 0
    BEGIN
        RETURN @return
    END
BEGIN TRAN TRAN_newBillToMobileResponse
    INSERT INTO Bi
USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_product')
BEGIN
DROP PROCEDURE sp_update_product
Print '' print  ' *** dropping procedure sp_update_product'
End
GO
Print '' print  ' *** creating procedure sp_update_product'
GO
Create PROCEDURE sp_update_product
@old_PRODUCT_ID[INT],
@old_NAME[NVARCHAR](50),
@new_NAME[NVARCHAR](50),
@old_DESCRIPTION[NVARCHAR](200),
@new_DESCRIPTION[NVARCHAR](200),
@old_UNIT_PRICE[DECIMAL](10,2),
@new_UNIT_PRICE[DECIMAL](10,2),
@old_IMAGE_NAME[VARCHAR](50)=null,
@new_IMAGE_NAME[VARCHAR](50),
@old_ACTIVE[BIT],
@new_ACTIVE[BIT],
@old_UNIT_OF_MEASUREMENT[NVARCHAR](20),
@new_UNIT_OF_MEASUREMENT[NVARCHAR](20),
@old_DELIVERY_CHARGE_PER_UNIT[DECIMAL](5,2),
@new_DELIVERY_CHARGE_PER_UNIT[DECIMAL](5,2)
AS
BEGIN
UPDATE product
SET NAME = @new_NAME, DESCRIPTION = @new_DESCRIPTION, UNIT_PRICE = @new_UNIT_PRICE, IMAGE_NAME = @new_IMAGE_NAME, ACTIVE = @new_ACTIVE, UNIT_OF_MEASUREMENT = @new_UNIT_OF_MEASUREMENT, DELIV
-- This needs to be run after every change to a view.
-- everything in the user search_path needs to be here except '$user'
grant select on all tables in schema vertex to                          vertex_read_only_view_role;
grant select on all tables in schema vertex_materialized to             vertex_read_only_view_role;
grant select on all tables in schema vertex_verse_materialized to       vertex_read_only_view_role;
grant select on all tables in schema vertex_materialized_reference to   vertex_read_only_view_role;
grant select on all tables in schema ods_kiva to                        vertex_read_only_view_role;
grant select on all tables in schema ods_kiva_live to                   vertex_read_only_view_role;
grant select on all tables in schema verse to                           vertex_read_only_view_role;
grant select on all tables in schema verse_live to                      vertex_read_only_view_role;
grant select on all tables in schema verse_reference to                 vert
# --- !Ups
alter table feature add column new_quarter integer default null;
update feature set new_quarter = 19 where quarter = 'Q3_2012';
update feature set new_quarter = 20 where quarter = 'Q4_2012';
update feature set new_quarter = 21 where quarter = 'Q1_2013';
update feature set new_quarter = 22 where quarter = 'Q2_2013';
update feature set new_quarter = 23 where quarter = 'Q3_2013';
update feature set new_quarter = 24 where quarter = 'Q4_2013';
update feature set new_quarter = 25 where quarter = 'Q1_2014';
update feature set new_quarter = 26 where quarter = 'Q2_2014';
update feature set new_quarter = 27 where quarter = 'Q3_2014';
update feature set new_quarter = 28 where quarter = 'Q4_2014';
alter table feature drop column quarter;
alter table feature rename column new_quarter to quarter;
alter table team_staff_levels add column new_quarter integer default null;
update team_staff_levels set new_quarter = 19 where quarter = 'Q3_2012';
update team_staff_levels set new_quarter = 20 w

update team_staff_levels set new_quarter = 21 where quarter = 'Q1_2013';
update team_staff_levels set new_quarter = 22 where quarter = 'Q2_2013';
update team_staff_levels set new_quarter = 23 where quarter = 'Q3_2013';
update team_staff_levels set new_quarter = 24 where quarter = 'Q4_2013';
update team_staff_levels set new_quarter = 25 where quarter = 'Q1_2014';
update team_staff_levels set new_quarter = 26 where quarter = 'Q2_2014';
update team_staff_levels set new_quarter = 27 where quarter = 'Q3_2014';
update team_staff_levels set new_quarter = 28 where quarter = 'Q4_2014';
alter table team_staff_levels drop constraint pk_team_staff_levels;
alter table team_staff_levels drop column quarter;
alter table team_staff_levels rename column new_quarter to quarter;
alter table team_staff_levels add constraint pk_team_staff_levels primary key (team_id, quarter);
create index ix_team_staff_levels_quarter_2 on team_staff_levels (quarter);
# --- !Downs
alter table feature rename column quarter

alter table feature add column quarter varchar(7);
update feature set quarter = 'Q3_2012' where new_quarter = 19;
update feature set quarter = 'Q4_2012' where new_quarter = 20;
update feature set quarter = 'Q1_2013' where new_quarter = 21;
update feature set quarter = 'Q2_2013' where new_quarter = 22;
update feature set quarter = 'Q3_2013' where new_quarter = 23;
update feature set quarter = 'Q4_2013' where new_quarter = 24;
update feature set quarter = 'Q1_2014' where new_quarter = 25;
update feature set quarter = 'Q2_2014' where new_quarter = 26;
update feature set quarter = 'Q3_2014' where new_quarter = 27;
update feature set quarter = 'Q4_2014' where new_quarter = 28;
alter table feature drop column new_quarter;
alter table team_staff_levels drop constraint pk_team_staff_levels;
alter table team_staff_levels rename column quarter to new_quarter;
alter table team_staff_levels add column quarter varchar(7);
update team_staff_levels set quarter = 'Q3_2012' where new_quarter = 19;
upd
/****** Object:  StoredProcedure [dbo].[DumpViewToFile] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Procedure DumpViewToFile
/****************************************************
**
**	Desc: 
**		Creates a flat file containing contents
**		for given view
**
**	Return values: 0: success, otherwise, error code
**
**	Parameters:
**
**		Auth: grk
**		Date: 12/02/2002
**			  11/23/2005 mem - Added brackets around @dbName as needed to allow for DBs with dashes in the name
**    
*****************************************************/
	@dbName varchar(64) = 'MT_Deinococcus_P12',
	@viewName varchar(128) = 'V_Junk_GRK1',
	@outFileDir varchar(256) = 'E:\BCP\',
	@outFileName varchar(256) = 'dump.txt'
As
	set nocount on
	declare @myError int
	set @myError = 0
	declare @outFilePath varchar(256)
	declare @cmd varchar(255)
	declare @result int
	declare @lockerCount varchar(12)
	--------------------------------------------------------------
	--  build output file name
	-------------
read c:\\sites\\ASA.rest\\sql\\_tables.sql;
read c:\\sites\\ASA.rest\\sql\\addElement.sql;
read c:\\sites\\ASA.rest\\sql\\arest_service.sql;
read c:\\sites\\ASA.rest\\sql\\checkForbiddenChars.sql;
read c:\\sites\\ASA.rest\\sql\\chestToRawData.sql;
read c:\\sites\\ASA.rest\\sql\\entityPermission.sql;
read c:\\sites\\ASA.rest\\sql\\columnDatatype.sql;
read c:\\sites\\ASA.rest\\sql\\csv.sql;
read c:\\sites\\ASA.rest\\sql\\csv_service.sql;
read c:\\sites\\ASA.rest\\sql\\csvPost.sql;
read c:\\sites\\ASA.rest\\sql\\entityDescription.sql;
read c:\\sites\\ASA.rest\\sql\\entityIdAndType.sql;
read c:\\sites\\ASA.rest\\sql\\ETag.sql;
read c:\\sites\\ASA.rest\\sql\\fkList.sql;
read c:\\sites\\ASA.rest\\sql\\getCollection.sql;
read c:\\sites\\ASA.rest\\sql\\getEntity.sql;
read c:\\sites\\ASA.rest\\sql\\getQuery.sql;
read c:\\sites\\ASA.rest\\sql\\getRecordByXid.sql;
read c:\\sites\\ASA.rest\\sql\\gut.sql;
read c:\\sites\\ASA.rest\\sql\\gutFindObject.sql;
read c:\\sites\\ASA.rest\\sql\\gutGet.sql;
r
-- This file is normally run from "setup.py test".
-- Run manually like this: psql -d postgres -v langname=plpython2u < run_test_plpydbapi_dbapi20.sql
-- This script sets sys.path in the server to include the directory
-- for plpydbapi.py.  It also needs dbapi20.py, so either copy that,
-- or adjust sys.path, or set the environment variable PYTHONPATH for
-- the PostgreSQL server process.
-- Choose plpython2u or plpython3u here, if not set on the psql command line.
--\set langname plpython2u
-- turn off most unnecessary output decoration
\set ON_ERROR_STOP 1
\set QUIET 1
\set VERBOSITY terse
\timing off
SET client_min_messages = warning;
-- set up test database
DROP DATABASE IF EXISTS plpydbapi_test;
CREATE DATABASE plpydbapi_test;
\connect plpydbapi_test
CREATE OR REPLACE LANGUAGE :langname;
-- adjust sys.path
\set pwd `pwd`
\set cmd 'import sys; sys.path.insert(0, \'' :pwd '\'); sys.path.append(\'' :pwd '/dbapi-compliance\')'
DO LANGUAGE :langname :'cmd';
-- run unittest
DO LANGUAGE 
INSERT INTO `#__extensions` (`extension_id`, `name`, `type`, `element`, `folder`, `client_id`, `enabled`, `access`, `protected`, `manifest_cache`, `params`, `custom_data`, `system_data`, `checked_out`, `checked_out_time`, `ordering`, `state`) VALUES
(28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2014 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '0000-00-00 00:00:00', 0, 0);
INSERT INTO `#__menu` (`id`, `menutype`, `title`, `alias`, `note`, `path`, `link`, `type`, `published`, `parent_id`, `level`, `component_id`, `ordering`, `checked_out`, `checked_out_time`, `browserNav`, `access`, `img`, `template_style_id`, `params`, `lft`, `rgt`, `home`, `language`, `client_i
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
# Dump of table QRTZ_BLOB_TRIGGERS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_BLOB_TRIGGERS`;
# Dump of table QRTZ_CALENDARS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_CALENDARS`;
# Dump of table QRTZ_CRON_TRIGGERS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_CRON_TRIGGERS`;
# Dump of table QRTZ_FIRED_TRIGGERS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_FIRED_TRIGGERS

# Dump of table QRTZ_JOB_DETAILS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_JOB_DETAILS`;
# Dump of table QRTZ_JOB_LISTENERS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_JOB_LISTENERS`;
# Dump of table QRTZ_LOCKS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_LOCKS`;
# Dump of table QRTZ_PAUSED_TRIGGER_GRPS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_PAUSED_TRIGGER_GRPS`;
# Dump of table QRTZ_SCHEDULER_STATE
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_SCHEDULER_STATE`;
# Dump of table QRTZ_SIMPLE_TRIGGERS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_SIMPLE_TRIGGERS`;
# Dump of table QRTZ_TRIGGER_LISTENERS
# ------------------------------------------------------------
DROP TABLE IF EXISTS `QRTZ_TRIGGER_LISTENERS`;
# Du
ALTER TABLE ELECHISTORY
DROP PRIMARY KEY CASCADE;
DROP TABLE ELECHISTORY CASCADE CONSTRAINTS;
CREATE TABLE ELECHISTORY
AUDITYEAR VARCHAR2(4 BYTE),
REPORTID NUMBER(12),
TRANSTYPE VARCHAR2(2 BYTE),
TRANSDATE DATE,
DBKEY NUMBER(6),
VERSION NUMBER(2) DEFAULT 1,
MATCHEDTO VARCHAR2(10 BYTE)
TABLESPACE TS_SAP
RESULT_CACHE (MODE DEFAULT)
PCTUSED 0
PCTFREE 5
INITRANS 1
MAXTRANS 255
STORAGE (
INITIAL 3080K
NEXT 3M
MINEXTENTS 1
MAXEXTENTS UNLIMITED
PCTINCREASE 0
BUFFER_POOL DEFAULT
FLASH_CACHE DEFAULT
CELL_FLASH_CACHE DEFAULT
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX ELECHISTORY_PK ON ELECHISTORY
(AUDITYEAR, REPORTID, TRANSTYPE, TRANSDATE)
LOGGING
TABLESPACE TS_SAP
PCTFREE 10
INITRANS 2
MAXTRANS 255
STORAGE (
INITIAL 1040K
NEXT 1M
MINEXTENTS 1
MAXEXTENTS UNLIMITED
PCTINCREASE 0
BUFFER_POOL DEFAULT
FLASH_CACHE DEFAULT
CELL_FLASH_CACHE DEFAULT
NOPARALLEL;
CREATE INDEX ELECHISTORY_REPORTID_INDX ON ELECHISTORY
(REPORTID)
LOGGING
TABLESPACE TS_SAP
PCTFREE 10
INITRANS 2
MAXT
#/**
#  *
#  * Include scripts message catalog (English)
#  *
#  * Codendi 
#  * Copyright (c) Xerox Corporation, Codendi Team, 2001-2009. All rights reserved
#  * http://www.codendi.com
#  *
#  *
#  */
#-----------------------------------------------
# Script: SF/www/new/index.php
new_index	new_file_release	New File Releases
new_index	new_releases	New Releases
new_index	no_release_found	No new releases found.
new_index	no_projects_found	No new projects found.
new_index	db_err	DB error.	
new_index	released_by	Released by
new_index	module	Module
new_index	version	Version
new_index	no_desc	This project has not submitted a description.
new_index	download	Download
new_index	total	Project Total
new_index	notes	Notes & Changes
new_index	newer_releases	Newer Releases
new_index	newer_projects	Newer Projects
new_index	older_releases	Older Releases
new_index	older_projects	Older Projects
new_index	new_projects	New Projects
new_index	prog_lang	Programming Language
new_index	os	Operating System
ne
USE [LCCHPDev]
GO
/****** Object:  StoredProcedure [dbo].[usp_upQuestionnaire]    Script Date: 6/18/2015 5:16:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		William Thier
-- Create date: 20130618
-- Description:	Stored Procedure to update 
--              questionnaire records
-- =============================================
-- DROP PROCEDURE usp_upQuestionnaire
CREATE PROCEDURE [dbo].[usp_upQuestionnaire]  
	-- Add the parameters for the stored procedure here
	@QuestionnaireID int = NULL,
	@New_QuestionnaireDate date = NULL,
	@New_QuestionnaireDataSourceID int = NULL,
	@New_VisitRemodeledProperty bit = NULL,
	@New_PaintDate date = NULL,
	@New_RemodelPropertyDate date = NULL,
	@New_isExposedtoPeelingPaint bit = NULL,
	@New_isTakingVitamins bit = NULL,
	@New_NursingMother bit = NULL,
	@New_NursingInfant bit = NULL,
	@New_Pregnant bit = NULL,
	@New_isUsingPacifier bit = NULL,
	@New_isUsingBottle bit = NULL,
	@Ne

	@New_NonFoodEating bit = NULL,
	@New_NonFoodinMouth bit = Null,
	@New_EatOutside bit = NULL,
	@New_Suckling bit = NULL,
	@New_Mouthing bit = NULL,
	@New_FrequentHandWashing bit = NULL,
	@New_VisitsOldHomes bit = NULL,
	@New_DaycareID int = NULL,
	@New_Notes varchar(3000) = NULL,
	@DEBUG BIT = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @ErrorLogID int, @NotesID int, @spupdateQuestionnairesqlStr NVARCHAR(4000);
    -- insert statements for procedure here
	BEGIN TRY
		-- Check if QuestionnaireID is valid, if not return
		IF NOT EXISTS (SELECT QuestionnaireID from Questionnaire where QuestionnaireID = @QuestionnaireID)
		BEGIN
			RAISERROR('QuestionnaireID must be specified and valid', 11,-1,'usp_upQuestionnaire');
		END
		
		-- BUILD update statement
		if (@New_QuestionnaireDate is null)
			select @New_QuestionnaireDate = QuestionnaireDate from Questionnaire where QuestionnaireID = @Questionnair

		
		SELECT @spupdateQuestionnairesqlStr = N'update Questionnaire set QuestionnaireDate = @QuestionnaireDate'
		IF (@New_QuestionnaireDataSourceID IS NOT NULL)
			SELECT @spupdateQuestionnairesqlStr = @spupdateQuestionnairesqlStr + N', QuestionnaireDataSourceID = @QuestionnaireDataSourceID'
		IF (@New_VisitRemodeledProperty IS NOT NULL)
			SELECT @spupdateQuestionnairesqlStr = @spupdateQuestionnairesqlStr + N', VisitRemodeledProperty = @VisitRemodeledProperty'
		IF (@New_PaintDate IS NOT NULL)
			SELECT @spupdateQuestionnairesqlStr = @spupdateQuestionnairesqlStr + N', PaintDate = @PaintDate'
		IF (@New_RemodelPropertyDate IS NOT NULL)
			SELECT @spupdateQuestionnairesqlStr = @spupdateQuestionnairesqlStr + N', RemodelPropertyDate = @RemodelPropertyDate'
		IF (@New_isExposedtoPeelingPaint IS NOT NULL)
			SELECT @spupdateQuestionnairesqlStr = @spupdateQuestionnairesqlStr + N', isExposedtoPeelingPaint = @isExposedtoPeelingPaint'
		IF (@New_isTakingVitamins IS NOT NULL)
			SELECT @spupdate
-- Sale
SELECT dropIfExists('VIEW', 'api_sale', 'xtpos');
CREATE VIEW xtpos.api_sale
AS
  SELECT 
    salehead_number AS sale_number,
    CASE WHEN (salehead_type='S') THEN 'Sale'
         WHEN (salehead_type='Q') THEN 'Quote'
         WHEN (salehead_type='R') THEN 'Return'
         ELSE 'Error' 
    END AS type,
    CASE 
      WHEN (salehead_closed OR salehead_type IN ('S','R')) THEN
        salehead_closed
      ELSE
        xtpos.checkStatus(salehead_id)
    END AS closed,
    cust_number AS customer_number,
    c.cntct_number AS contact_number,
    c.cntct_honorific AS honorific,
    c.cntct_first_name AS first,
    c.cntct_middle AS middle,
    c.cntct_last_name AS last,
    c.cntct_suffix AS suffix,
    c.cntct_title AS job_title,
    c.cntct_phone AS voice,
    c.cntct_phone2 AS alternate,
    c.cntct_fax AS fax,
    c.cntct_email AS email,
    c.cntct_webaddr AS web,
    ''::text AS contact_change,
    a.addr_number AS address_number,
    a.addr_line1 AS address1,
    a.addr_l

    a.addr_line3 AS address3,
    a.addr_city AS city,
    a.addr_state AS state,
    a.addr_postalcode AS postalcode,
    a.addr_country AS country,
    ''::text AS address_change,
    salehead_time AS date,
    salesrep_number AS sales_rep,
    salehead_notes AS notes,
    warehous_code AS site,
    terminal_number AS terminal,
    taxzone_code AS tax_zone,
    coalesce((sum(round(abs(saleitem_qty) * saleitem_unitprice_discounted,2))),0) AS subtotal,
    xtpos.saletax(salehead_id) AS tax,
    coalesce((sum(round((abs(saleitem_qty) * saleitem_unitprice_discounted), 2)) + abs(xtpos.saletax(salehead_id))),0) AS total
  FROM xtpos.salehead
    JOIN site() ON (salehead_warehous_id=warehous_id)
    JOIN xtpos.terminal ON (salehead_terminal_id=terminal_id)
    LEFT OUTER JOIN custinfo ON (salehead_cust_id=cust_id)
    LEFT OUTER JOIN cntct c ON (cust_cntct_id=c.cntct_id)
    LEFT OUTER JOIN addr a ON (cntct_addr_id=a.addr_id)
    LEFT OUTER JOIN salesrep ON (salehead_salesrep_id=salesrep_i

    LEFT OUTER JOIN xtpos.saleitem ON (salehead_id=saleitem_salehead_id)
    LEFT OUTER JOIN taxzone ON (salehead_taxzone_id=taxzone_id)
  GROUP BY salehead_id, salehead_number,salehead_type,salehead_closed,cust_number,
    c.cntct_number,c.cntct_honorific,c.cntct_first_name,c.cntct_middle,
    c.cntct_last_name,c.cntct_suffix,c.cntct_title,c.cntct_phone,c.cntct_phone2,
    c.cntct_fax,c.cntct_email,c.cntct_webaddr,a.addr_number,a.addr_line1,a.addr_line2,
    a.addr_line3,a.addr_city,a.addr_state,a.addr_postalcode,a.addr_country,salehead_time,
    warehous_code,salesrep_number,terminal_number,salehead_notes,taxzone_code
  ORDER BY salehead_number;
GRANT ALL ON TABLE xtpos.api_sale TO xtrole;
COMMENT ON VIEW xtpos.api_sale IS 'Sale';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO xtpos.api_sale DO INSTEAD
  INSERT INTO xtpos.salehead (
    salehead_number,
    salehead_warehous_id,
    salehead_type,
    salehead_cust_id,
    salehead_time,
    salehead_terminal_id,
    s
-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- 
-- wdb - weather and water data storage
--
-- Copyright (C) 2011 met.no
--
--  Contact information:
--  Norwegian Meteorological Institute
--  Box 43 Blindern
--  0313 OSLO
--  NORWAY
--  E-mail: wdb@met.no
--
--  This is free software; you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation; either version 2 of the License, or
--  (at your option) any later version.
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Implement the statistical function median in WDB.
-- Based on code from http://wiki.postgresql.org/wiki/Aggregate_Median
CREATE OR REPLACE FUNCTION __WDB_SCHEMA__.final_median(float[])
	RETURNS float AS
$$
	SELECT AVG(val)
	FROM (
			SELECT val
			FROM unnest($1) as val
			ORDER BY 1
			LIMIT  2 - MOD(array_upper($1, 1), 2)
			OFFSET CEIL(array_upper($1, 1) / 2.0) - 1
	) as sub;
$$
L
CREATE TABLE `Life_Event_Log` (
  `life_event_id_log` int(11) NOT NULL AUTO_INCREMENT,
  `life_event_id` int(11) NOT NULL ,
  `headline` varchar(254) DEFAULT NULL COMMENT 'headline + text = a tweet :-)',
  `text` text COMMENT 'Can be the extended story behind the life event or simply a longer description of it',
  `richtext` text,
  `type` varchar(45) DEFAULT NULL COMMENT 'OPEN TYPE of the Life event for classification purposes\\n\\nBIRTH\\nMARRIAGE\\nTRAVEL\\nGRADUATION\\nMEMORY\\n...',
  `visibility` int(11) DEFAULT NULL COMMENT '0, private. 1, public',
  `contributor_id` int(11) DEFAULT '1' COMMENT 'There is always a contributor for LifeEvents. Is the Person who contributed this life event to the system. The system contributor is id=0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n',
  `creation_date` datetime DEFAULT NULL,
  `locale` varchar(10) DEFAULT NULL,
  `location_id` bigint(20) DEFAULT NULL,
  `question_id` int(11) DEFAULT NULL,
  `fuzzy_startdate` bigint(20) DEFAULT NULL,
  `fuzzy_enddat

  `public_memento_id` bigint(20) DEFAULT NULL,
  action ENUM('create','update','delete'),
	ts TIMESTAMP,
  PRIMARY KEY (`life_event_id_log`)
) ENGINE=InnoDB AUTO_INCREMENT=150 DEFAULT CHARSET=latin1;
DELIMITER #
CREATE TRIGGER ai_life_event AFTER INSERT ON Life_Event FOR EACH ROW
BEGIN
  INSERT INTO Life_Event_Log 
	(	action,ts,life_event_id,
		headline, `text`, richtext, `type`, visibility,
		contributor_id, creation_date, locale, 
		location_id, question_id, fuzzy_startdate,
		fuzzy_enddate, public_memento_id)
  VALUES
	(	'create',NOW(),NEW.life_event_id,
		NEW.headline, NEW.`text`, NEW.richtext, NEW.`type`, NEW.visibility,
		NEW.contributor_id, NEW.creation_date, NEW.locale, 
		NEW.location_id, NEW.question_id, NEW.fuzzy_startdate,
		NEW.fuzzy_enddate, NEW.public_memento_id);
END#
DELIMITER #
CREATE TRIGGER au_life_event AFTER UPDATE ON Life_Event
FOR EACH ROW
BEGIN
  INSERT INTO Life_Event_Log
	(action,ts,life_event_id,
		headline,`text`,richtext,`type`,visibility,contributor_id,

﻿CREATE VIEW dbo.v_GroupRole_ican5
AS
SELECT          para_no AS Id, para_phsiname AS Code, para_dispname AS Name
FROM              iCAN5.dbo.ican_para
WHERE          (para_code = 'P_ManScore')
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[13] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
  

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ican_para (iCAN5.dbo)"
            Begin Extent = 
               Top = 6
               Left = 43
               Bottom = 270
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 12
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1980
         Alias = 2055
         Table = 1815
         Output = 720
         Append = 1400
         NewValue = 1170
         S
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_skills`;
CREATE TABLE `character_skills` (
  `guid` int(10) unsigned NOT NULL COMMENT 'Global Unique Identifier',
  `skill` smallint(5) unsigned NOT NULL,
  `value` smallint(5) unsigned NOT NULL,
  `max` smallint(5) unsigned NOT NULL,
  PRIMARY KEY (`guid`,`skill`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Player System';
LOCK TABLES `character_skills` WRITE;
/*!40000
USE VIVALDI
GO
IF  EXISTS (
SELECT 	* FROM dbo.sysobjects 
WHERE 	id = OBJECT_ID(N'[dbo].[vw_RelativeVaRReports]') AND 
	OBJECTPROPERTY(id, N'IsView') = 1
DROP VIEW [dbo].[vw_RelativeVaRReports]
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vw_RelativeVaRReports]
AS
SELECT	VAR.ReportDate
	, VAR.FundId
	, VAR.VAR
	, VAR.VARBench
	, VAR.VARActive
	, NAV.CostNaV
	, VAR.VARActive/NULLIF(NAV.CostNaV,0) AS ExAnteTE1D
	, (SELECT	SUM(CASE 	WHEN Report.PortShare > 0 THEN 
				(CASE 	WHEN Report.PortShare > Report.BenchPerc 
					THEN Report.BenchPerc 
					ELSE Report.PortShare 
				END)
			ELSE 0 
			END)
		FROM 	tbl_VaRReports AS Report
		WHERE	Report.ReportDate = VAR.ReportDate
			AND Report.ReportId = VaR.ReportId
			AND Report.SecTicker <> 'Totals'
		) / 100 AS IndexPerc
	, (SELECT	CAST(SUM(CASE 	WHEN (Report.PortShare <> 0 
					AND Report.BenchPerc <> 0) THEN 1 
				ELSE 0 
				END) AS DECIMAL(5, 1))
			/
			NULLIF(SUM(CASE 	WHEN Report.BenchPerc <> 0 THEN 1 
				EL
create database EDF DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
/*==============================================================*/
/* DBMS name:      MySQL 5.0                                    */
/* Created on:     2011/7/8 10:02:54                            */
/*==============================================================*/
drop table if exists SYS_MENU;
drop table if exists SYS_NAVIGATOR;
drop table if exists SYS_TABLESEQ;
/*==============================================================*/
/* Table: SYS_MENU                                              */
/*==============================================================*/
create table SYS_MENU
   MENU_ID              int not null comment '菜单id',
   NAV_ID               smallint comment '导航菜单id',
   MENU_TITLE           varchar(50) comment '菜单标题',
   MENU_CODE            varchar(50) comment '菜单编码',
   MENU_URL             varchar(500) comment '菜单url',
   MENU_SEQ             smallint comment '菜单序号',
   MENU_STATUS          

   MENU_PARENT_ID       int comment '菜单父节点id',
   MENU_NOTE            varchar(255) comment '菜单备注',
   primary key (MENU_ID)
comment = "树形菜单";
/*==============================================================*/
/* Table: SYS_NAVIGATOR                                         */
/*==============================================================*/
create table SYS_NAVIGATOR
   NAV_ID               smallint not null comment '菜单id',
   NAV_NAME             varchar(50) comment '菜单名称',
   NAV_URL              varchar(500) comment '菜单url',
   NAL_STATUS           tinyint comment '菜单状态:0-停用 1-启用',
   NAV_SEQ              tinyint comment '菜单序号',
   NAV_NOTE             varchar(255) comment '菜单备注',
   primary key (NAV_ID)
comment = "导航菜单";
/*==============================================================*/
/* Table: SYS_TABLESEQ                                          */
/*==============================================================*/
create table SYS_TABLESEQ
   SEQ_ID               bigint not n
--SELECT d.xmldata.query('/root/product[@id="304"]/name') FROM dbo.ExtraData d
--UPDATE 
--dbo.ExtraData SET xmldata = Data
--WHERE Data LIKE '<%'
--AND Stamp > '1/1/13'
CREATE FUNCTION [dbo].[Registrations] ( @days INT )
RETURNS TABLE 
AS
RETURN 
SELECT 
	 tt.Id
	,tt.Stamp
	,o.OrganizationId 
	,o.OrganizationName 
	,pu.PeopleId
	,pu.Name
	,ISNULL(xdata.value('(/OnlineRegModel/List/OnlineRegPersonModel)[1]/dob[1]', 'varchar(50)'),
		xdata.value('(/OnlineRegModel/List/OnlineRegPersonModel)[1]/DateOfBirth[1]', 'varchar(50)')) [dob]
	,ISNULL(xdata.value('(/OnlineRegModel/List/OnlineRegPersonModel)[1]/first[1]', 'varchar(50)'),
		xdata.value('(/OnlineRegModel/List/OnlineRegPersonModel)[1]/FirstName[1]', 'varchar(50)')) [first]
	,ISNULL(xdata.value('(/OnlineRegModel/List/OnlineRegPersonModel)[1]/last[1]', 'varchar(50)'),
		xdata.value('(/OnlineRegModel/List/OnlineRegPersonModel)[1]/LastName[1]', 'varchar(50)')) [last]
	,xdata.value('count(/OnlineRegModel/List/OnlineRegPersonModel)', 'int') 
USE [LCCHPDev]
GO
/****** Object:  StoredProcedure [dbo].[usp_upBloodTestResultsWebScreen]    Script Date: 6/18/2015 5:16:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Liam Thier
-- Create date: 20150618
-- Description:	stored procedure to update blood test results
--              data 
-- =============================================
CREATE PROCEDURE [dbo].[usp_upBloodTestResultsWebScreen]
	-- Add the parameters for the stored procedure here
	@BloodTestResultsID int = NULL,
	@New_Sample_Date date = NULL,
	@New_Lab_Date date = NULL,
	@New_Blood_Lead_Result numeric(4,1) = NULL,
	@New_Sample_Type_ID tinyint = NULL,
	@New_Lab_ID int = NULL,
	@New_Flag smallint = NULL,
	@New_Client_Status_ID smallint = NULL,
	@New_Hemoglobin_Value numeric(4,1) = NULL,
	@New_Blood_Test_Costs money = NULL,
	@New_Taken_After_Property_Remediation_Completed bit = NULL,
	@New_Exclude_Result bit = NULL,
	@New_Notes varchar(3000) = NULL,

	@DEBUG BIT = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	BEGIN
		DECLARE @ErrorLogID int, @RetestDate_return_value int,
				@updateBloodTestResultsReturnValue int;
		-- If no family ID was passed in exit
		IF (@BloodTestResultsID IS NULL)
		BEGIN
			RAISERROR ('Blood test results ID must be supplied', 11, -1);
			RETURN;
		END;
		BEGIN TRY  
			-- update person flag/retest date
			IF (@New_Flag IS NOT NULL)
			BEGIN
				declare @Retest_Date date, @Sample_Date date, @Person_ID int;
				-- determine personID
				select @Person_ID = PersonID, @Sample_Date = SampleDate from BloodTestResults where BloodTestResultsID = @BloodTestResultsID
				
				-- set the retest date based on integer value passed in as Flag
				SET @Retest_Date = DATEADD(dd,@New_Flag,@Sample_Date);
				-- update Person table with the new retest date
				-- anyone with a blood test is a client
				EXEC	@RetestDate_return_value = [dbo].[us

						@Person_ID = @Person_ID
						, @New_RetestDate = @Retest_Date
						, @New_ClientStatusID = @New_Client_Status_ID;
			END
			-- update bloodtestResults
			EXEC	@updateBloodTestResultsReturnValue = [dbo].[usp_upBloodTestResults]
														@BloodTestResultsID = @BloodTestResultsID,
														@New_Sample_Date = @New_Sample_Date,
														@New_Lab_Date = @New_Lab_Date,
														@New_Blood_Lead_Result = @New_Blood_Lead_Result,
														@New_Hemoglobin_Value = @New_Hemoglobin_Value,
														@New_Lab_ID = @New_Lab_ID,
														@New_Blood_Test_Costs = @New_Blood_Test_Costs,
														@New_Sample_Type_ID = @New_Sample_Type_ID,
														@New_Taken_After_Property_Remediation_Completed = @New_Taken_After_Property_Remediation_Completed,
														@New_Exclude_Result = @New_Exclude_Result,
														@New_Client_Status_ID = @New_Client_Status_ID,
														@New_Notes = @New_Notes,
														@DEBUG = @DEBUG
		END TRY
		BEGIN CATCH -- i
CREATE VIEW asset.vw_asset_type AS
    SELECT a.id, a.assettype_code, a.assettype_name, d.depn_name, 
        public.formatglaccount(a.assettype_gl1) AS assettype_gl1, 
        public.formatglaccount(a.assettype_gl2) AS assettype_gl2, 
        public.formatglaccount(a.assettype_gl3) AS assettype_gl3, 
        public.formatglaccount(a.assettype_gl4) AS assettype_gl4, 
        public.formatglaccount(a.assettype_gl5) AS assettype_gl5, 
        a.assettype_depnperc 
    FROM (asset_type a JOIN asset_depn d ON ((a.assettype_depn = d.depn_id)));
CREATE RULE "_INSERT" AS ON INSERT TO vw_asset_type DO INSTEAD INSERT INTO asset_type (assettype_code, assettype_name, assettype_depn, assettype_gl1, assettype_gl2, assettype_gl3, assettype_gl4, assettype_gl5, assettype_depnperc) VALUES (new.assettype_code, new.assettype_name, CASE WHEN (new.depn_name = 'Straight Line'::text) THEN 1 WHEN (new.depn_name = 'Diminishing Value'::text) THEN 2 ELSE 0 END, public.getglaccntid(new.assettype_gl1), public.getg
INSERT INTO `{$table_prefix}term_taxonomy` (`term_taxonomy_id`, `term_id`, `taxonomy`, `description`, `parent`, `count`) VALUES (1,1,'category','',0,0),(2,2,'link_category','',0,7),(3,3,'nav_menu','',0,37),(16,16,'post_format','',0,1),(17,17,'post_format','',0,0),(246,237,'category','Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris at ante eu justo ultrices iaculis sit amet non est. Maecenas ac mi dapibus, iaculis ipsum ut, tempor metus.',0,4),(247,238,'category','Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris at ante eu justo ultrices iaculis sit amet non est. Maecenas ac mi dapibus, iaculis ipsum ut, tempor metus.',0,4),(116,116,'product_type','',0,1),(117,117,'product_type','',0,0),(118,118,'shop_order_status','',0,0),(214,205,'product_tag','',0,6),(73,73,'link_category','',0,5),(74,74,'link_category','',0,5),(75,75,'link_category','',0,5),(76,76,'link_category','',0,5),(77,77,'link_category','',0,5),(78,78,'link_category','',0,5),(79,79,'post_format'
# these statements will update your options and user meta tables to persist 
# user permissions and ties to the database tables
# 
# set the {old_prefix} to your current prefix of the tables
# set the {new_prefix} to the prefix of the tables you wish to migrate
# this assumes you will run the table rename queries to migrate to the new prefix
UPDATE {old_prefix}options SET option_name='{new_prefix}user_roles' WHERE option_name='{old_prefix}user_roles';
UPDATE {old_prefix}usermeta SET meta_key='{new_prefix}autosave_draft_ids' WHERE meta_key='{old_prefix}autosave_draft_ids';
UPDATE {old_prefix}usermeta SET meta_key='{new_prefix}capabilities' WHERE meta_key='{old_prefix}capabilities';
UPDATE {old_prefix}usermeta SET meta_key='{new_prefix}metaboxorder_post' WHERE meta_key='{old_prefix}metaboxorder_post';
UPDATE {old_prefix}usermeta SET meta_key='{new_prefix}user_level' WHERE meta_key='{old_prefix}user_level';
UPDATE {old_prefix}usermeta SET meta_key='{new_prefix}usersettings' WHERE meta_key
  SELECT dropIfExists('VIEW', 'employee', 'api');
  CREATE OR REPLACE VIEW api.employee AS 
  SELECT 
    e.emp_code::varchar		AS code, 
    e.emp_number::varchar 	AS number, 
    e.emp_active 		AS active, 
    e.emp_startdate 		AS start_date, 
    cntct.cntct_number 	AS contact_number, 
    cntct.cntct_honorific 	AS honorific, 
    cntct.cntct_first_name 	AS first, 
    cntct.cntct_middle 	AS middle, 
    cntct.cntct_last_name 	AS last, 
    cntct.cntct_suffix 	AS suffix, 
    cntct.cntct_title 		AS job_title, 
    cntct.cntct_phone 		AS voice, 
    cntct.cntct_phone2 	AS alternate, 
    cntct.cntct_fax 		AS fax, 
    cntct.cntct_email 		AS email, 
    cntct.cntct_webaddr 	AS web, 
    (''::TEXT) 			AS contact_change, 
    addr.addr_number 		AS address_number, 
    addr.addr_line1 		AS address1, 
    addr.addr_line2 		AS address2, 
    addr.addr_line3 		AS address3, 
    addr.addr_city 			AS city, 
    addr.addr_state 		AS state, 
    addr.addr_postalcode 	AS postalcode, 
    addr.add

    (''::TEXT) 				AS address_change, 
    whsinfo.warehous_code 	AS site, 
    m.emp_code 				AS manager_code, 
    
    CASE WHEN (e.emp_wage_type = 'H')		THEN 'Hourly'
         WHEN (e.emp_wage_type = 'S')		THEN 'Salaried'
         WHEN e.emp_wage_type IS NULL THEN NULL
		 ELSE 'Error'
    END AS wage_type, 
    e.emp_wage 	AS wage, 
    curr_symbol.curr_abbr AS wage_currency, 
    CASE WHEN (e.emp_wage_period = 'H') 	THEN 'Hour'
         WHEN (e.emp_wage_period = 'D') 	THEN 'Day'
         WHEN (e.emp_wage_period = 'W') 	THEN 'Week'
         WHEN (e.emp_wage_period = 'BW') 	THEN 'Biweek'
         WHEN (e.emp_wage_period = 'M') 	THEN 'Month'
         WHEN (e.emp_wage_period = 'Y') 	THEN 'Year'
         WHEN (e.emp_wage_period IS NULL) 	THEN NULL
         ELSE 'Error'
    END AS wage_period, 
    dept.dept_number AS department, 
    shift.shift_number AS shift, 
    crmacct_usr_username IS NOT NULL AS is_user,
    salesrep.salesrep_id IS NOT NULL AS is_salesrep,
    vendinfo.vend_id 

    e.emp_notes AS notes,
    image.image_name AS image,
    e.emp_extrate AS rate,
    curr_symbol.curr_abbr AS billing_currency, 
    CASE WHEN (e.emp_extrate_period = 'H') 	THEN 'Hour'
         WHEN (e.emp_extrate_period = 'D') 	THEN 'Day'
         WHEN (e.emp_extrate_period = 'W') 	THEN 'Week'
         WHEN (e.emp_extrate_period = 'BW') THEN 'Biweek'
         WHEN (e.emp_extrate_period = 'M') 	THEN 'Month'
         WHEN (e.emp_extrate_period = 'Y') 	THEN 'Year'
         WHEN (e.emp_extrate_period IS NULL) THEN NULL
         ELSE 'Error'
   	END AS billing_period
  FROM emp e
         JOIN crmacct           ON (e.emp_id = crmacct_emp_id)
   	 LEFT JOIN cntct 	ON (e.emp_cntct_id = cntct.cntct_id)
   	 LEFT JOIN addr 	ON (cntct.cntct_addr_id = addr.addr_id)
   	 LEFT JOIN whsinfo 	ON (e.emp_warehous_id = whsinfo.warehous_id)
   	 LEFT JOIN emp m 	ON (e.emp_mgr_emp_id = m.emp_id)
   	 LEFT JOIN dept 	ON (e.emp_dept_id = dept.dept_id)
   	 LEFT JOIN shift 	ON (e.emp_shift_id = shift.sh
-- -----------------------------------------------------
-- DUMP USERS
-- -----------------------------------------------------
INSERT INTO user (`login`, `password`, `email`, `name`) VALUES
('admin', '$2a$10$MXqqS2vMDy9DAAB53udQ5Oc27OHoCXvoV.MtJZg7Lrg7kUDqxU/L.', 'juanrt1909@gmail.com', 'Juan'),
('author', '$2a$10$RewEvCU1BRWPJPLwojKbZODmilxRuRDoVd5DmcqjT9QUrXfmgtefy', 'juber@gmail.com', 'Juber'),
('user', '$2a$10$7w5J60.3TQxGJZ0GGEKGEuU6bkDXWET1SGQZ1EfNE6/mdolLMDe0i', 'user@gmail.com', 'Ann');
INSERT INTO role (`authority`) VALUES
('ROLE_ADMIN'),
('ROLE_AUTHOR'),
('ROLE_USER');
INSERT INTO user_role (`user_id`, `role_id`) VALUES
('1', '1'), ('1', '2'), ('1', '3'),
('2', '2'), ('2', '3'),
('3', '3');
-- -----------------------------------------------------
-- DUMP CATEGORIES
-- -----------------------------------------------------
INSERT INTO category (`name`) VALUES
('Local'), ('Regional'), ('Deportes'), ('Espectaculos');
-- -----------------------------------------------------
-- DU
CREATE VIEW view_users AS
  SELECT * FROM users LEFT JOIN users_uids USING (USER);
CREATE VIEW view_users_summaries AS
  SELECT
   USER,
   given_name,
   family_name,
   email,
   type
  FROM view_users ORDER BY USER;
CREATE VIEW view_users_sessions AS
    SELECT
        sid,
        USER,
        email,
        sid AS sessionid,
        type AS idtype,
        given_name,
        family_name,
        user_hash
    FROM users_sessions LEFT JOIN view_users USING (email);
CREATE VIEW view_payments_customers_uncreated AS
  SELECT USER, customer_id FROM users
  LEFT JOIN payments_customers USING (USER)
  WHERE customer_id = '';
CREATE VIEW view_payments_credit_cards AS
  SELECT provided, final_four, token, processed, payments_customers.*
  FROM payments_credit_cards
  LEFT JOIN payments_customers USING (USER);
CREATE VIEW view_payments_credit_cards_unsynced AS
  SELECT *
  FROM payments_credit_cards
  LEFT JOIN payments_customers USING (USER)
  WHERE processed=0;
CREATE VIEW view_files AS

    SELECT FILE, version, kind, original_filename, filename, filetype, filesize, fileextension, salt, token FROM files;
CREATE VIEW view_files_tokens AS
    SELECT FILE, token FROM files;
CREATE VIEW view_statistics_visits AS
  SELECT COUNT(*) FROM statistics_visits;
CREATE VIEW view_statistics_uniques AS
  SELECT ip_address FROM statistics_visits GROUP BY ip_address;
CREATE VIEW view_statistics_impressions AS
  SELECT ip_address, session, start, UNIX_TIMESTAMP( start ) AS start_ts, end, UNIX_TIMESTAMP( end ) AS end_ts, counter, UNIX_TIMESTAMP( end ) - UNIX_TIMESTAMP( start ) AS duration
  FROM statistics_impressions;
CREATE VIEW view_articles AS
    SELECT
        ARTICLE,
        articles.modified AS article_modified,
        id,
        source,
        category,
        subject,
        date,
        session,
        DATE_FORMAT( date, "%e %M %Y" ) AS hdate,
        title,
        video_type,
        video_code,
        h1,
        address,
        section,
        section_referenc
-- Project
SELECT dropIfExists('VIEW', 'project', 'api');
CREATE VIEW api.project
AS
   SELECT 
     prj_number AS number,
     prj_name AS name,
     prj_descrip AS description,
     prj_owner_username AS owner,
     prj_username AS assigned_to,
     prj_so AS sales_orders,
     prj_wo AS work_orders,
     prj_po AS purchase_orders,
     CASE 
       WHEN (prj_status = 'P') THEN
         'Concept'
       WHEN (prj_status = 'O') THEN
         'In-Process'
       WHEN (prj_status = 'C') THEN
         'Closed'
       ELSE
         'Error'
     END AS status,
     prj_due_date AS due,
     prj_assigned_date AS assigned,
     prj_start_date AS started,
     prj_completed_date AS completed
   FROM prj;
GRANT ALL ON TABLE api.project TO xtrole;
COMMENT ON VIEW api.project IS 'Project';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.project DO INSTEAD
  INSERT INTO prj (
    prj_number,
    prj_name,
    prj_descrip,
    prj_owner_username,
    prj_username,
    prj_so,
    

    prj_po,
    prj_status,
    prj_due_date,
    prj_assigned_date,
    prj_start_date,
    prj_completed_date
    )
  VALUES (
    NEW.number,
    COALESCE(NEW.name,''),
    COALESCE(NEW.description,''),
    COALESCE(NEW.owner,getEffectiveXtUser()),
    COALESCE(NEW.assigned_to,getEffectiveXtUser()),
    COALESCE(NEW.sales_orders,true),
    COALESCE(NEW.work_orders,true),
    COALESCE(NEW.purchase_orders,true),
    CASE 
      WHEN (NEW.status='In-Process') THEN
        'O'
      WHEN (NEW.status='Completed') THEN
        'C'
      ELSE
        'P'
    END,
    NEW.due,
    NEW.assigned,
    NEW.started,
    NEW.completed
    );
CREATE OR REPLACE RULE "_UPDATE" AS 
    ON UPDATE TO api.project DO INSTEAD
  UPDATE prj SET
    prj_name=NEW.name,
    prj_descrip=NEW.description,
    prj_owner_username=NEW.owner,
    prj_username=NEW.assigned_to,
    prj_so=NEW.sales_orders,
    prj_wo=NEW.work_orders,
    prj_po=NEW.purchase_orders,
    prj_status=
    CASE 
      WHEN (NEW.status='In-
select
    tio_timestamp as "timestamp",
    extract(epoch from tio_timestamp::timestamp with time zone at time zone 'utc')::int as "time",
    t_schema as "schema",
    t_name as "table",
    ((h_read_delta / timestamp_delta_s) * 3600) ::int8 as heap_read_1h_rate,
    ((h_hit_delta / timestamp_delta_s) * 3600) ::int8 as heap_hit_1h_rate,
    case when h_hit_delta + h_read_delta = 0 then null
      else (h_hit_delta / (h_hit_delta + h_read_delta) * 100.0)::int
    end as heap_hit_pct,
    ((i_read_delta / timestamp_delta_s) * 3600) ::int8 as index_read_1h_rate,
    ((i_hit_delta / timestamp_delta_s) * 3600) ::int8 as index_hit_1h_rate,
    case when i_hit_delta + i_read_delta = 0 then null
      else (i_hit_delta / (i_hit_delta + i_read_delta) * 100.0)::int
    end as index_hit_pct
from
select
    t_schema,
    t_name,
    tio_timestamp,
    extract (epoch from (tio_timestamp - timestamp_lag))::numeric as timestamp_delta_s,
    h_read_lag - h_read_lag as h_read_delta,
    h_hit - h_hit

    i_read - i_read_lag as i_read_delta,
    i_hit - i_hit_lag as i_hit_delta
from
  (
    select
      *,
      lag(tio_timestamp) over(partition by t_id order by tio_timestamp) as timestamp_lag,
      lag(h_read) over(partition by t_id order by tio_timestamp) as h_read_lag,
      lag(h_hit) over(partition by t_id order by tio_timestamp) as h_hit_lag,
      lag(i_read) over(partition by t_id order by tio_timestamp) as i_read_lag,
      lag(i_hit) over(partition by t_id order by tio_timestamp) as i_hit_lag
    from (
      select
        tio_timestamp,
        t_id,
        t_schema,
        t_name,
        tio_heap_read as h_read,
        tio_heap_hit as h_hit,
        tio_idx_read as i_read,
        tio_idx_hit as i_hit
      from
        monitor_data.table_io_data
        join
        monitor_data.tables on t_id = tio_table_id
      where
        not t_schema like any(array['pg_temp%%', 'z_blocking', 'tmp%%', 'temp%%', E'\\_v'])
        and tio_timestamp > %(from_timestamp)s - %(la
SET DEFINE OFF;
CREATE TABLE L_RESPASSENGERS
  RESNUMBER       NUMBER(18)                    NOT NULL,
  CONTACTID       INTEGER                       NOT NULL,
  PASSENGERSEQ    INTEGER                       NOT NULL,
  ROOMNUMBER      INTEGER,
  RECEIVEDAMOUNT  NUMBER(18,2),
  HOTELREQ        VARCHAR2(200 BYTE),
  AIRREQ          VARCHAR2(200 BYTE),
  GENERALREQ      CLOB,
  FREQUENT        VARCHAR2(50 BYTE),
  WHOSTAMP        VARCHAR2(50 BYTE),
  DATESTAMP       DATE
LOB (GENERALREQ) STORE AS (
  TABLESPACE  DTW_ADV_TABLES
  ENABLE      STORAGE IN ROW
  CHUNK       16384
  RETENTION
  NOCACHE
  LOGGING
      STORAGE    (
                  INITIAL          80K
                  NEXT             1M
                  MINEXTENTS       1
                  MAXEXTENTS       UNLIMITED
                  PCTINCREASE      0
                  BUFFER_POOL      DEFAULT
                  FLASH_CACHE      DEFAULT
                  CELL_FLASH_CACHE DEFAULT
                 ))
TABLESPACE DTW_ADV_TABL
select COUNT(D.Vphd_View_SSPI)
from 
( 
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date,  Vphd_View_Event_Origin_Date, Vphd_View_System_EventId, Vphd_View_Event_Description, Vphd_View_Last_Entry_Date
	from dbo.VSPC_ProcessHistoryArchive_View
WHERE Vphd_View_System_EventId = '41' AND Vphd_View__Program_Number = '102'
--WHERE Vphd_View_Event_Description = 'post disposition processing' AND Vphd_View__Program_Number = '102'
union
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date, Vphd_View_Event_Origin_Date, Vphd_View_System_EventId, Vphd_View_Event_Description, Vphd_View_Last_Entry_Date
    from dbo.VSPC_ProcessHistoryDetail_View
--WHERE Vphd_View_Event_Description = 'post disposition processing' AND Vphd_View__Program_Number = '102'
WHERE Vphd_View_System_EventId = '41' AND Vphd_View__Program_Number = '102'
) AS D
--WHERE D.Vphd_View_Event_Origin_Date BETWEEN '2012-06-01' AND '2012-10-01'
INNER JOIN dbo.SSPI
    ON SSPI_IDNT = D.Vphd_View_SSPI
--    AND
--    SSPICurrentStatusFK NOT IN (99

where 
D.Vphd_View_Last_Entry_Date between '2013-03-01' and '2013-03-31'
AND
D.Vphd_View_Last_Exit_Date IS NOT NULL
----------
-----------
select 
    D.Vphd_View_SSPI AS CASE_NUM, 
    D.Vphd_View_System_EventId AS QUEUE_NUM, 
    D.Vphd_View_Event_Description AS QUEUE,
    D.Vphd_View_Event_Origin_Date AS ORIG_DATE,
    D.Vphd_View_Last_Entry_Date AS ENTRY_DATE,
    D.Vphd_View_Last_Exit_Date AS EXIT_DATE, 
    SSPICurrentStatusFK AS STATUS
from 
( 
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date,  Vphd_View_Event_Origin_Date, Vphd_View_System_EventId, Vphd_View_Event_Description, Vphd_View_Last_Entry_Date
	from dbo.VSPC_ProcessHistoryArchive_View
WHERE Vphd_View_System_EventId = '41' AND Vphd_View__Program_Number = '102'
--WHERE Vphd_View_Event_Description = 'post disposition processing' AND Vphd_View__Program_Number = '102'
union
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date, Vphd_View_Event_Origin_Date, Vphd_View_System_EventId, Vphd_View_Event_Description, Vphd_View_Last_Entry
# --- !Ups
CREATE TABLE `topic_read_statuses` (`topic_id` BIGINT NOT NULL, `user_id` BIGINT NOT NULL);
ALTER TABLE `topic_read_statuses` ADD PRIMARY KEY (`topic_id`, `user_id`);
ALTER TABLE `topic_read_statuses` ADD CONSTRAINT `topic_read_status_topic_fk` FOREIGN KEY(`topic_id`) REFERENCES `topics`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `topic_read_statuses` ADD CONSTRAINT `topic_read_status_user_fk` FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION;
CREATE TABLE `comment_read_statuses` (`comment_id` BIGINT NOT NULL, `user_id` BIGINT NOT NULL);
ALTER TABLE `comment_read_statuses` ADD PRIMARY KEY (`comment_id`, `user_id`);
ALTER TABLE `comment_read_statuses` ADD CONSTRAINT `comment_read_status_comment_fk` FOREIGN KEY(`comment_id`) REFERENCES `comments`(`id`) ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE `comment_read_statuses` ADD CONSTRAINT `comment_read_status_user_fk` FOREIGN KEY(`user_id`) REFERENCES `users`(`id`) ON U
use chirokasterlee_;
drop table if exists new_leiding_functie;
drop table if exists new_afbeelding;
drop table if exists new_functies;
drop table if exists new_leiding;
drop table if exists new_nieuws;
drop table if exists new_programmas;
drop table if exists new_kalender;
drop table if exists new_kamp;
drop table if exists new_login;
create table new_leiding (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	chiro char not null,
	naam varchar(100) not null,
	mail varchar(100) not null,
	groep char not null,
	afbeeldingId int not null
) engine=innodb;
create table new_functies (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	omschrijving varchar(100) not null,
	leidingId INT NOT NULL
)engine=innodb;
create table new_nieuws (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	datum date not null,
	bericht varchar(100) not null	
) engine=innodb;
create table new_programmas (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	chiro char not null,
	datum date not null,
	groep char not null,
	programma v

) engine=innodb;
create table new_kalender (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	chiro char not null,
	datum date not null,
	activiteit varchar(100) not null	
) engine=innodb;
create table new_kamp (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	chiro char not null,
	tekst varchar(5000) not null	
) engine=innodb;
create table new_login (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	login varchar(20) not null,
	wachtwoord varchar(32) not null,
	chiro char not null
) engine=innodb;
create table new_afbeelding (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	type varchar(20) not null,
	data mediumblob not null	
) engine=innodb;
create table new_verhuur (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	chiro char not null,
	tekst varchar(5000) not null	
) engine=innodb;
create table new_chirofeesten (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	tekst varchar(5000) not null	
) engine=innodb;
create table new_contact (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	tekst varchar(50
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (1,1,1101,'OMNI-AA',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (2,1,1101,'OMNI',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (3,1,1102,'TRM',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (4,1,1103,'PAR',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (5,1,1104,'PAS',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (6,1,1105,'PCS-AA',1, getdate(),'import', getdate());
insert i

insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (8,1,1106,'PSS-AA',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (9,1,1106,'PSS',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (10,1,1107,'PXP',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (11,1,1108,'TMR',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (12,1,1109,'TDC-AA',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (13,1,1109,'TDC',1, getdate(),'import', getdate());
inser

insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (15,1,1110,'TMS',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (16,1,1111,'TMSA',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (17,1,1112,'350RLF1',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (18,1,1113,'350FL',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (19,1,1113,'350RL',1, getdate(),'import', getdate());
insert into Model(ModelId,BrandId,CategoryId,ModelName,IsActive,DateCreated,CreatedByUser,LastUpdateDate) values (20,1,1114,'300FS',1, getdate(),'import', getdate())
CREATE OR REPLACE TRIGGER PEADMIN.TRG_PERSONAL_ONLINE
  AFTER INSERT OR UPDATE OF C_ALLOTDATE, C_ALLOTREASON, C_DEPART, C_OFFICE, C_LINEID, C_BUSID,C_CERT2_NO,C_CERT2_NO_HEX
  ON T_PERSONAL FOR EACH ROW
BEGIN
--1.读取操作后的新记录值
--2.删除新的C_ALLOTDATE后有效的记录
 DELETE FROM T_PSN_ONLINE 
  WHERE C_BELONG = :NEW.C_BELONG
      AND C_ONLINEPSN = :NEW.C_PERSONALID
   AND C_ONDATE >= :NEW.C_ALLOTDATE;
--3.修改当前有效时间内的C_DOWNDATE为新的C_ALLOTDATE
  UPDATE T_PSN_ONLINE SET C_DOWNDATE = (:NEW.C_ALLOTDATE - 1)
  WHERE C_BELONG = :NEW.C_BELONG
      AND C_ONLINEPSN = :NEW.C_PERSONALID 
   AND C_ONDATE = (
                      SELECT MAX(C_ONDATE) 
                      FROM T_PSN_ONLINE 
                      WHERE C_BELONG = :NEW.C_BELONG 
                      AND C_ONLINEPSN = :NEW.C_PERSONALID 
                      AND C_ONDATE < :NEW.C_ALLOTDATE);
--4.插入新的状态变动记录
  INSERT INTO T_PSN_ONLINE (
  C_BELONG,
  C_ONLINEPSN ,
  C_ONDATE ,
  C_ALLOTREASON,
  C_DEPART ,
  C_OFFICE ,
  C_LINEID,
  C_BUSID,
  C_CERT2
  CREATE OR REPLACE  VIEW HV_DIVIDEND_DISTRIBUTABLE (NAV_WKEND_DT, NAV_SCHEME, NAV_SCHEMECLASS, UPR_BALANCE, UPR, UNRELIASED_PU, NAV, UNREAL_AMOUNT, DISTRIBUTABLE_UPR, DISTRIBUTABLE) AS 
  SELECT nav_wkend_dt,
    nav_scheme,
    nav_schemeclass,
    UPR_BALANCE,
    UPR,
    UNRELIASED_PU,
    NAV,
    UNREAL_AMOUNT,
    DISTRIBUTABLE_UPR,
    case
      WHEN (distributable_upr > 0)
      THEN 'YES'
      ELSE 'NO'
    END AS distributable
  FROM
    (SELECT nav_wkend_dt,
      nav_scheme,
      nav_schemeclass,
      UPR_BALANCE,
      UPR,
      UNRELIASED_PU,
      NAV,
      UNREAL_AMOUNT,
      EX_DIVIDEND_NAV,
     least((nav-10-unreliased_pu-upr),(nav-10-upr),(nav-10) )
      as distributable_upr
    FROM
      (SELECT nav_wkend_dt,
        nav_schemeclass,
        nav_scheme,
        -- SUM(DAILY_UPR_ENTRY   + POST_UPR) UPR_BALANCE,
        hdb.DAILY_UPR_BALANCE AS UPR_BALANCE,
        --( SUM(DAILY_UPR_ENTRY + POST_UPR))/ NAV_UNITS AS UPR,
        hdb.DAILY_UPR_BALANCE / NAV_
CREATE TABLE [Production].[ProductModelProductDescriptionCulture]
[ProductModelID] [int] NOT NULL,
[ProductDescriptionID] [int] NOT NULL,
[CultureID] [nchar] (6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate] DEFAULT (getdate())
) ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY CLUSTERED  ([ProductModelID], [ProductDescriptionID], [CultureID]) ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY ([CultureID]) REFERENCES [Production].[Culture] ([CultureID])
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIG

GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])
GO
EXEC sp_addextendedproperty N'MS_Description', N'Cross-reference table mapping product descriptions and the language the description is written in.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', NULL, NULL
GO
EXEC sp_addextendedproperty N'MS_Description', N'Culture identification number. Foreign key to Culture.CultureID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'COLUMN', N'CultureID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductDescription.

GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductModel.ProductModelID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'COLUMN', N'ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'DF_ProductModelProductDescriptionCulture_ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing Culture.CultureID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'FK_ProductModelProductDescriptionCulture_Culture_CultureID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing ProductDescription.ProductDescriptionID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'FK_ProductModelProductDescriptionCulture_ProductDescription_Pro
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [logging].[sp_dp_prodconfirm] AS
DECLARE @table AS TABLE(Emp_Email NVARCHAR(100), ID int IDENTITY(1,1))
--populate the above table
INSERT @table (Emp_Email) VALUES('nhall@wirelessadvocates.com')
DECLARE @count AS int
SET @count =1 --initialize the count parameter
DECLARE @Recepient_Email AS VARCHAR(100)
WHILE (@count <=(SELECT COUNT(*) FROM @table))
        BEGIN
        SET @Recepient_Email =(SELECT TOP(1) Emp_Email FROM @table WHERE ID=@count)
DECLARE @subjtext AS NVARCHAR(255)
SELECT @subjtext = CONVERT(VARCHAR(10),MAX(Timestamp),101) + ': Completion of Data Push to ' + Pushed FROM logging.DataPush GROUP BY Pushed
EXECUTE msdb.dbo.sp_send_dbmail
    @recipients = @Recepient_Email,
    @subject = @subjtext,
    @profile_name = 'Default',
    @body_format = 'html',
    @exclude_query_output = 1,
    @append_query_error = 1,
    @body = 'Changes have been pushed to Costco at <a href="http://www.membershipwireless.com">ht
alter table writers drop index writer_type_UNIQUE;
ALTER TABLE `users_log` drop FOREIGN KEY `fk_users_log_user_actions`;
ALTER TABLE `users_log` ADD CONSTRAINT `fk_users_log_user_actions` FOREIGN KEY (`action_id`) REFERENCES `actions` (`action_id`) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE  `articles_translation` CHANGE  `article_detail`  `article_detail` TEXT CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL;
alter table writers change `writer_type` `writer_type` TINYINT(3) UNSIGNED NOT NULL DEFAULT 1;
update writers set  `writer_type`  = 1;
CREATE TABLE IF NOT EXISTS `essays` (
  `article_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`article_id`),
  CONSTRAINT `fk_news_articles0`
    FOREIGN KEY (`article_id`)
    REFERENCES `articles` (`article_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;
INSERT INTO `modules_components` (`component_id`, `module_id`, `route`) VALUES ('16', '54', 'articles/default/view');
INSERT INTO `

INSERT INTO `modules_components_translation` (`component_id`, `content_lang`, `component_name`) VALUES ('16', 'en', 'View Article');
INSERT INTO `modules_components_translation` (`component_id`, `content_lang`, `component_name`) VALUES ('16', 'ar', 'عرض المقال');
INSERT INTO `modules_components_translation` (`component_id`, `content_lang`, `component_name`) VALUES ('17', 'en', 'Articles Sections');
INSERT INTO `modules_components_translation` (`component_id`, `content_lang`, `component_name`) VALUES ('17', 'ar', 'أقسام المقالات');
INSERT INTO `modules_components_params` (`component_id`, `param_id`) VALUES ('16', '1');
INSERT INTO `modules_components_params` (`component_id`, `param_id`) VALUES ('17', '1');
INSERT INTO `modules_components_params` (`component_id`, `param_id`) VALUES ('17', '2');
INSERT INTO `modules_components_params` (`component_id`, `param_id`) VALUES ('17', '6');
INSERT INTO `moduls_components_params_translation` (`content_lang`, `component_id`, `param_id`, `label`, `
DELIMITER |
ALTER TABLE `vehicle` ADD COLUMN `modifying_agent_id` INTEGER UNSIGNED NOT NULL DEFAULT 1 AFTER `title_state` |
CREATE DEFINER='ecashtrigger'@'%' TRIGGER
    `vehicle_update` 
BEFORE UPDATE ON 
    `vehicle`
FOR EACH ROW
BEGIN
        IF(LOWER(NEW.vin) != LOWER(OLD.vin)) THEN
                INSERT INTO application_audit (date_created, company_id, application_id, table_name, column_name, value_before, value_after,
                update_process,agent_id)
                VALUES (now(), (select company_id from application where application_id=NEW.application_id), NEW.application_id, 'vehicle', 'vin', OLD.vin, NEW.vin,
                 'mysql::trigger:vehicle_update', NEW.modifying_agent_id);
        END IF;
        IF(LOWER(NEW.license_plate) != LOWER(OLD.license_plate)) THEN
                INSERT INTO application_audit (date_created, company_id, application_id, table_name, column_name, value_before, value_after,
                update_process,agent_id)
                VALUE

                 'mysql::trigger:vehicle_update', NEW.modifying_agent_id);
        END IF;
        IF(LOWER(NEW.make) != LOWER(OLD.make)) THEN
                INSERT INTO application_audit (date_created, company_id, application_id, table_name, column_name, value_before, value_after,
                update_process,agent_id)
                VALUES (now(), (select company_id from application where application_id=NEW.application_id), NEW.application_id, 'vehicle', 'make', OLD.make, NEW.make,
                 'mysql::trigger:vehicle_update', NEW.modifying_agent_id);
        END IF;
        IF(LOWER(NEW.model) != LOWER(OLD.model)) THEN
                INSERT INTO application_audit (date_created, company_id, application_id, table_name, column_name, value_before, value_after,
                update_process,agent_id)
                VALUES (now(), (select company_id from application where application_id=NEW.application_id), NEW.application_id, 'vehicle', 'model', OLD.model, NEW.model,
        

        END IF; 
        IF(LOWER(NEW.series) != LOWER(OLD.series)) THEN
                INSERT INTO application_audit (date_created, company_id, application_id, table_name, column_name, value_before, value_after,
                update_process,agent_id)
                VALUES (now(), (select company_id from application where application_id=NEW.application_id), NEW.application_id, 'vehicle', 'series', OLD.series, NEW.series,
                 'mysql::trigger:vehicle_update', NEW.modifying_agent_id);
        END IF;   
        IF(LOWER(NEW.style) != LOWER(OLD.style)) THEN
                INSERT INTO application_audit (date_created, company_id, application_id, table_name, column_name, value_before, value_after,
                update_process,agent_id)
                VALUES (now(), (select company_id from application where application_id=NEW.application_id), NEW.application_id, 'vehicle', 'style', OLD.style, NEW.style,
                 'mysql::trigger:vehicle_update', NEW.modifying_agent
CREATE PROCEDURE OT_MASTER_DatabaseConnectionUpdate (@DatabaseId int, @DatabaseName varchar(128), @applicationGroup varchar(24), @MaintenanceZone char(4), 
	@ServerName varchar(128), @UserName varchar(64), @Password varchar(256), @PortNum int, @IsActive bit, @FailoverPartner varchar(128), @FailoverPortNum int, 
	@dbKind tinyint = 0, @connectionName varchar(64) = null, @shardingWeight int = null, @ReadOnlyServerName varchar(128) = null, @ReadOnlyPortNum int = null,
	@BatchServerName varchar(128) = null, @BatchPortNum int = null, @MSReadOnly bit = 0, @MSHighAvail bit = 0, @maxPoolSize int = null)
AS
BEGIN
	UPDATE MASTER_DATABASE_CONNECTION
	SET DATABASE_NAME = @DatabaseName, 
		APPLICATION_GROUP = @applicationGroup, 
		MAINTENANCE_ZONE = @MaintenanceZone, 
		SERVER_NAME = @ServerName, 
		USER_NAME = @UserName, 
		PASSWORD = @Password, 
		PORT_NUM = @PortNum, 
		IS_ACTIVE = @IsActive,
		FAILOVER_PARTNER = @FailoverPartner,
		FAILOVER_PORT_NUM = @FailoverPortNum,
		DB_KIND = @dbKind,
		--D
/********************************************************************************/
/*                                                                              */
/* Copyright by Author Sajal Dam, ISBN 1590594215                               */
/*                                                                              */
/********************************************************************************/
--Create table t2
IF(SELECT OBJECT_ID('t2')) IS NOT NULL
  DROP TABLE t2
GO
CREATE TABLE t2(c1 INT, c2 INT, Data CHAR(1), Modifier CHAR(10))
CREATE INDEX i_c1 ON t2(c1)
INSERT INTO t2 VALUES(11, 12, '', '')
GO
--Use of NOLOCK hint
INSERT INTO t2			--Dirty read NOT allowed
  SELECT * FROM t1 WITH(NOLOCK)	--Dirty read applicable for data
				-- selection only
UPDATE t2		--Dirty read NOT allowed
  SET t2.data = ''
  FROM t2 INNER JOIN
       t1 WITH(NOLOCK)	--Dirty read applicable for data selection only
    ON t2.c1 = t1.c1
DELETE t2		--Dirty read NOT allowed
  FROM t2 INNER JOIN

INSERT INTO FIELD_DEFINITION (FIELD_DEFINITION_ID, ENTITY_TYPE, FIELD_NAME, DEFAULT_LABEL, FIELD_TYPE) VALUES ('paymentHistory.id', 'paymentHistory', 'id', 'Id', 'READ_ONLY_TEXT');
INSERT INTO FIELD_DEFINITION (FIELD_DEFINITION_ID, ENTITY_TYPE, FIELD_NAME, DEFAULT_LABEL, FIELD_TYPE) VALUES ('paymentHistory.transactionDate', 'paymentHistory', 'transactionDate', 'Transaction Date', 'READ_ONLY_TEXT');
INSERT INTO FIELD_DEFINITION (FIELD_DEFINITION_ID, ENTITY_TYPE, FIELD_NAME, DEFAULT_LABEL, FIELD_TYPE) VALUES ('paymentHistory.paymentType', 'paymentHistory', 'paymentType', 'Payment Method', 'READ_ONLY_TEXT');
INSERT INTO FIELD_DEFINITION (FIELD_DEFINITION_ID, ENTITY_TYPE, FIELD_NAME, DEFAULT_LABEL, FIELD_TYPE) VALUES ('paymentHistory.paymentStatus', 'paymentHistory', 'paymentStatus', 'Payment Status', 'READ_ONLY_TEXT');
INSERT INTO FIELD_DEFINITION (FIELD_DEFINITION_ID, ENTITY_TYPE, FIELD_NAME, DEFAULT_LABEL, FIELD_TYPE) VALUES ('paymentHistory.amount', 'paymentHistory', 'amount', 'Amount'
-- 
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--   
--     http://www.apache.org/licenses/LICENSE-2.0
--   
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
-- 
ALTER TABLE WF_JOBS ADD PARENT_ID VARCHAR2(255);
ALTER TABLE WF_ACTIONS MODIFY EXECUTION_PATH VARCHAR2(1024);
ALTER TABLE COORD_JOBS ADD PENDING NUMBER DEFAULT 0;
ALTER TABLE COORD_JOBS A

ALTER TABLE COORD_JOBS ADD DONE_MATERIALIZATION NUMBER DEFAULT 0;
ALTER TABLE COORD_JOBS ADD APP_NAMESPACE VARCHAR2(255) DEFAULT 'uri:oozie:coordinator:0.1';
ALTER TABLE COORD_ACTIONS ADD PENDING NUMBER DEFAULT 0;
# please replace "OOZIEDB" to your schema name
CREATE TABLE "OOZIEDB"."BUNDLE_JOBS" 
 ("ID" VARCHAR2(255) NOT NULL ENABLE, 
"APP_NAME" VARCHAR2(255), 
"APP_PATH" VARCHAR2(255), 
"CONF" CLOB, 
"EXTERNAL_ID" VARCHAR2(255), 
"GROUP_NAME" VARCHAR2(255), 
"TIME_OUT" NUMBER, 
"USER_NAME" VARCHAR2(255), 
"BEAN_TYPE" VARCHAR2(31), 
"AUTH_TOKEN" CLOB, 
"CREATED_TIME" TIMESTAMP (6), 
"END_TIME" TIMESTAMP (6), 
"JOB_XML" CLOB, 
"KICKOFF_TIME" TIMESTAMP (6), 
"LAST_MODIFIED_TIME" TIMESTAMP (6), 
"ORIG_JOB_XML" CLOB, 
"PAUSE_TIME" TIMESTAMP (6), 
"PENDING" NUMBER, 
"START_TIME" TIMESTAMP (6), 
"STATUS" VARCHAR2(255), 
"SUSPENDED_TIME" TIMESTAMP (6), 
"TIME_UNIT" VARCHAR2(255), 
 PRIMARY KEY ("ID")
USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
STORAGE(INITIAL 65536 NE

PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "OOZIEDB" ENABLE
 ) SEGMENT CREATION IMMEDIATE 
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
TABLESPACE "OOZIEDB" 
 LOB ("CONF") STORE AS BASICFILE (
TABLESPACE "OOZIEDB" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
NOCACHE LOGGING 
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("AUTH_TOKEN") STORE AS BASICFILE (
TABLESPACE "OOZIEDB" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
NOCACHE LOGGING 
STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_C
/*
 * Index update triggers
 * Inverted Index Toolkit  <http://code.google.com/p/inverted-index/>
 * Apache License 2.0, blah blah blah.
 */
DELIMITER ;;
REPLACE INTO search_class (name, data_table, primary_key, columns) VALUES
    ('article',        'article', 'article_id', 'title,author,body'),
    ('article.title',  'article', 'article_id', 'title'),
    ('article.author', 'article', 'article_id', 'author'),
    ('article.body',   'article', 'article_id', 'body');
DROP TRIGGER IF EXISTS tr_AU_index_article;;
CREATE TRIGGER tr_AU_index_article
    AFTER UPDATE ON article
    FOR EACH ROW BEGIN
        CALL indexString(NEW.article_id, CONCAT_WS(' ',NEW.title,NEW.author,NEW.body), classID('article'));
        CALL indexString(NEW.article_id, NEW.title, classID('article.title'));
        CALL indexString(NEW.article_id, NEW.author, classID('article.author'));
        CALL indexString(NEW.article_id, NEW.body, classID('article.body'));
    END;
;;
DROP TRIGGER IF EXISTS tr_AI_index_artic

CREATE TRIGGER tr_AI_index_article
    AFTER INSERT ON article
    FOR EACH ROW BEGIN
        CALL indexString(NEW.article_id, CONCAT_WS(' ',NEW.title,NEW.author,NEW.body), classID('article'));
        CALL indexString(NEW.article_id, NEW.title, classID('article.title'));
        CALL indexString(NEW.article_id, NEW.author, classID('article.author'));
        CALL indexString(NEW.article_id, NEW.body, classID('article.body'));
    END;
;;
DROP TRIGGER IF EXISTS tr_BD_index_article;;
CREATE TRIGGER tr_BD_index_article
    BEFORE DELETE ON article
    FOR EACH ROW BEGIN
        DELETE FROM search_index WHERE id = OLD.article_id AND search_class_id = classID('article');
        DELETE FROM search_index WHERE id = OLD.article_id AND search_class_id = classID('article.title');
        DELETE FROM search_index WHERE id = OLD.article_id AND search_class_id = classID('article.author');
        DELETE FROM search_index WHERE id = OLD.article_id AND search_class_id = classID('article.body');
  
proc $sc_$cpu_evs_send_info
;JAN 11 2006 added CFE_TBL and no-op cmd to TO_APP
;APR 14 2006 updated processing for CFE_SB task
;APR 17 2006 added TST_EVS no-op 
on ERROR resume
local logging = %liv (log_procedure)
%liv (log_procedure) = FALSE
#include "ut_statusdefs.h"
#include "cfe_evs_events.h"
#include "cfe_es_events.h"
#include "cfe_sb_events.h"
#include "cfe_tbl_events.h"
#include "cfe_time_events.h"
%liv (log_procedure) = logging
local hostname = %liv(LOCALHOST) ; get hostname from ASIST STOL local internal variable
; strip off 'gpm-' from rainman hostname
if (%locate(hostname,"-") <> 0) then
  hostname = %substring(hostname,%locate(hostname,"-")+1,%length(hostname))
  hostname = %upper(hostname)
endif
write
write "     Sending INFO message for CFE_EVS."
ut_setupevt $SC, $CPU, CFE_EVS, CFE_EVS_NOOP_EID, INFO
wait 5
/$SC_$CPU_EVS_NOOP
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].event_txt 
ELSE
   write "     Event 

ENDIF
write
write "     Sending INFO message for CFE_SB."
ut_setupevt $SC, $CPU, CFE_SB, CFE_SB_CMD0_RCVD_EID, INFO
wait 5
/$SC_$CPU_SB_NOOP
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].event_txt
ELSE
   write "     Event Message NOT generated."
ENDIF
write ""
write "     Sending INFO message for CFE_ES."
ut_setupevt $SC, $CPU, CFE_ES, CFE_ES_NOOP_INF_EID, INFO
wait 5
/$SC_$CPU_ES_NOOP
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].event_txt
ELSE
   write "     Event Message NOT generated."
ENDIF
write
write "     Sending INFO message for CFE_TIME."
ut_setupevt $SC, $CPU, CFE_TIME, CFE_TIME_NOOP_EID, INFO
wait 5
/$SC_$CPU_TIME_NOOP
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].event_txt
ELSE
   write "     Event Message NOT generated."
ENDIF
write
write "     Sending INFO message for CFE_TBL."

ut_setupevt $SC, $CPU, CFE_TBL, CFE_TBL_NOOP_INF_EID, INFO
wait 5
/$SC_$CPU_TBL_NOOP
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].event_txt 
ELSE
   write "     Event Message NOT generated."
ENDIF
write
write "     Sending INFO message for CI_APP."
ut_setupevt $SC, $CPU, CI_LAB_APP, 5, INFO
wait 5
/$SC_$CPU_CI_NOOP
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].event_txt 
ELSE
   write "     Event Message NOT generated."
ENDIF
write
write "     Sending INFO message for TO_APP."
ut_setupevt $SC, $CPU, TO_LAB_APP, 18, INFO
wait 5
 /$SC_$CPU_TO_NOOP
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
  write "     Event Message: ", $SC_$CPU_find_event[1].event_txt 
ELSE
  write "     Event Message NOT generated."
ENDIF
write
write "     Sending INFO message for TST_EVS."
ut_setupevt $SC, $CPU, TST_EVS, 17, INFO
wait 5
/$SC_$CPU_TST_EVS_NOOP
wait 7
write
IF 
/* cs_ticket.cpp */
SET @id = 742;
-- Update command table with new RBAC permissions
UPDATE `command` SET `permission` = @id+0 WHERE `name` = 'ticket';
UPDATE `command` SET `permission` = @id+1 WHERE `name` = 'ticket assign';
UPDATE `command` SET `permission` = @id+2 WHERE `name` = 'ticket close';
UPDATE `command` SET `permission` = @id+3 WHERE `name` = 'ticket closedlist';
UPDATE `command` SET `permission` = @id+4 WHERE `name` = 'ticket comment';
UPDATE `command` SET `permission` = @id+5 WHERE `name` = 'ticket complete';
UPDATE `command` SET `permission` = @id+6 WHERE `name` = 'ticket delete';
UPDATE `command` SET `permission` = @id+7 WHERE `name` = 'ticket escalate';
UPDATE `command` SET `permission` = @id+8 WHERE `name` = 'ticket escalatedlist';
UPDATE `command` SET `permission` = @id+9 WHERE `name` = 'ticket list';
UPDATE `command` SET `permission` = @id+10 WHERE `name` = 'ticket onlinelist';
UPDATE `command` SET `permission` = @id+11 WHERE `name` = 'ticket reset';
UPDATE `command`
/* cs_ticket.cpp */
SET @id = 742;
-- Update command table with new RBAC permissions
UPDATE `command` SET `permission` = @id+0 WHERE `name` = 'ticket';
UPDATE `command` SET `permission` = @id+1 WHERE `name` = 'ticket assign';
UPDATE `command` SET `permission` = @id+2 WHERE `name` = 'ticket close';
UPDATE `command` SET `permission` = @id+3 WHERE `name` = 'ticket closedlist';
UPDATE `command` SET `permission` = @id+4 WHERE `name` = 'ticket comment';
UPDATE `command` SET `permission` = @id+5 WHERE `name` = 'ticket complete';
UPDATE `command` SET `permission` = @id+6 WHERE `name` = 'ticket delete';
UPDATE `command` SET `permission` = @id+7 WHERE `name` = 'ticket escalate';
UPDATE `command` SET `permission` = @id+8 WHERE `name` = 'ticket escalatedlist';
UPDATE `command` SET `permission` = @id+9 WHERE `name` = 'ticket list';
UPDATE `command` SET `permission` = @id+10 WHERE `name` = 'ticket onlinelist';
UPDATE `command` SET `permission` = @id+11 WHERE `name` = 'ticket reset';
UPDATE `command`
ALTER TABLE  `contacts` ADD UNIQUE ( `phone`, `contact_group_id` );
-- ALTER TABLE  `contacts` ADD INDEX (  `created_at` );
--
-- Triggers `callees`
--
DROP TRIGGER IF EXISTS `movetocouch`;
DELIMITER //
CREATE TRIGGER `movetocouch` AFTER INSERT ON `contacts`
 FOR EACH ROW BEGIN
    INSERT IGNORE INTO contacts_couch_insert SET id=NEW.id, phone=NEW.phone,name=NEW.name,email=NEW.email,contact_group_id=NEW.contact_group_id,created_at=NEW.created_at,updated_at=NEW.updated_at,`couchrest-type`="Calleecouch";
  END
//
DELIMITER ;
DROP TRIGGER IF EXISTS `updateincouch`;
DELIMITER //
CREATE TRIGGER `updateincouch` BEFORE UPDATE ON `contacts`
 FOR EACH ROW BEGIN
    INSERT INTO contacts_couch_update SET id=NEW.id, phone=NEW.phone,name=NEW.name,email=NEW.email,contact_group_id=NEW.contact_group_id,created_at=NEW.created_at,updated_at=NEW.updated_at,`couchrest-type`="Calleecouch" ON DUPLICATE KEY UPDATE name = values(name), phone = values(phone), email = values(email);
  END
//
DELIMITER ;
DROP TRI
  --Item View
  SELECT dropIfExists('VIEW', 'item', 'api');
  CREATE OR REPLACE VIEW api.item AS
  SELECT
    item_number::varchar AS item_number,
    item_active AS active,
    item_descrip1 AS description1,
    item_descrip2 AS description2,
    CASE
      WHEN item_type = 'P' THEN
        'Purchased'
      WHEN item_type = 'M' THEN
        'Manufactured'
      WHEN item_type = 'J' THEN
        'Job'
      WHEN item_type = 'K' THEN
        'Kit'
      WHEN item_type = 'F' THEN
        'Phantom'
      WHEN item_type = 'R' THEN
        'Reference'
      WHEN item_type = 'S' THEN
        'Costing'
      WHEN item_type = 'T' THEN
        'Tooling'
      WHEN item_type = 'O' THEN
        'Outside Process'
      WHEN item_type = 'L' THEN
        'Planning'
      WHEN item_type = 'B' THEN
        'Breeder'
      WHEN item_type = 'C' THEN
        'Co-Product'
      WHEN item_type = 'Y' THEN
        'By-Product'
    END AS item_type,
    item_maxcost AS maximum_desired_cost,
    classcode_cod

    i.uom_name AS inventory_uom,
    item_picklist AS pick_list_item,
    item_fractional AS fractional,
    item_config AS configured,
    item_sold AS item_is_sold,
    prodcat_code AS product_category,
    item_exclusive AS exclusive,
    item_listprice AS list_price,
    p.uom_name AS list_price_uom,
    item_upccode AS upc_code,
    item_prodweight AS product_weight,
    item_packweight AS packaging_weight,
    item_comments AS notes,
    item_extdescrip AS ext_description
  FROM item
         LEFT OUTER JOIN prodcat ON (item_prodcat_id=prodcat_id), 
         classcode, uom AS i, uom AS p
  WHERE ((item_classcode_id=classcode_id)
  AND (item_inv_uom_id=i.uom_id)
  AND (item_price_uom_id=p.uom_id))
  ORDER BY item_number;
GRANT ALL ON TABLE api.item TO xtrole;
COMMENT ON VIEW api.item IS 'Item';
  --Rules
  CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.item DO INSTEAD
  INSERT INTO item
	   (item_number,
	    item_active,
	    item_descrip1,
	    item_descrip2,
	    ite

	    item_maxcost,
	    item_classcode_id,
	    item_inv_uom_id,
	    item_picklist,
	    item_fractional,
	    item_config,
	    item_sold,
	    item_prodcat_id,
	    item_exclusive,
	    item_listprice,
	    item_price_uom_id,
	    item_upccode,
	    item_prodweight,
	    item_packweight,
	    item_comments,
	    item_extdescrip)
	   VALUES
	   (UPPER(NEW.item_number),
	    COALESCE(NEW.active,TRUE),
	    COALESCE(NEW.description1,''),
	    COALESCE(NEW.description2,''),
	    CASE
	      WHEN NEW.item_type = 'Purchased' THEN
	        'P'
	      WHEN NEW.item_type = 'Manufactured' THEN
	        'M'
	      WHEN NEW.item_type = 'Job' THEN
	        'J'
	      WHEN NEW.item_type = 'Kit' THEN
	        'K'
	      WHEN NEW.item_type = 'Phantom' THEN
	        'F'
	      WHEN NEW.item_type = 'Reference' THEN
	        'R'
	      WHEN NEW.item_type = 'Costing' THEN
	        'S'
	      WHEN NEW.item_type = 'Tooling' THEN
	        'T'
	      WHEN NEW.item_type = 'Outside Process' THEN
	        'O
--------------------------------------------------------
--  POPULATE OE SCHEMA WITH AUTHENTICATION MECHANISM
--------------------------------------------------------
--------------------------------------------------------
-- DDL for Dropping Tables
--------------------------------------------------------
  DROP TABLE "OE"."CUSTOMER_PASSWORD";
  DROP TABLE "OE"."CUSTOMERS_GROUP";
  DROP TABLE "OE"."SECURITY_GROUPS";
--------------------------------------------------------
--  DDL for Table SECURITY_GROUPS
--------------------------------------------------------
  CREATE TABLE "OE"."SECURITY_GROUPS" 
   ("SG_ID" NUMBER, "SG_NAME" VARCHAR2(20 BYTE), "SG_DESCRIPTION" VARCHAR2(20 BYTE)) 
   SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
   NOCOMPRESS NOLOGGING
   STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
     BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
-----------

--  DDL for Table CUSTOMERS_GROUP
--------------------------------------------------------
  CREATE TABLE "OE"."CUSTOMERS_GROUP" 
   ("CSG_CUST_ID" NUMBER, "CSG_SG_ID" NUMBER) 
   SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
   NOCOMPRESS NOLOGGING
   STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
     BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT);
--------------------------------------------------------
--  DDL for Table CUSTOMER_PASSWORD
--------------------------------------------------------
  CREATE TABLE "OE"."CUSTOMER_PASSWORD" 
   ("CUSTPWD_CUSTID" NUMBER, "CUSTPWD_PASSWORD" VARCHAR2(10 BYTE)) 
   SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
   NOCOMPRESS NOLOGGING 
   STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
     PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
     BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT

--------------------------------------------------------
--  Constraints for Table SECURITY_GROUPS
--------------------------------------------------------
  ALTER TABLE "OE"."SECURITY_GROUPS" ADD CONSTRAINT "SG_PK" PRIMARY KEY ("SG_ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
    BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
      ENABLE;
--------------------------------------------------------
--  Constraints for Table CUSTOMERS_GROUP
--------------------------------------------------------
  ALTER TABLE "OE"."CUSTOMERS_GROUP" ADD CONSTRAINT "CG_PK" PRIMARY KEY ("CSG_CUST_ID", "CSG_SG_ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
    STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
    PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
    BUFFER_POO
/****** Object:  Table [T_OldManagers] ******/
/****** RowCount: 83 ******/
/****** Columns: M_ID, M_Name, M_TypeID, M_ParmValueChanged, M_ControlFromWebsite ******/
INSERT INTO [T_OldManagers] VALUES (2,'Mash-01_Cap',4,1,0)
INSERT INTO [T_OldManagers] VALUES (3,'Mash-01b',6,1,0)
INSERT INTO [T_OldManagers] VALUES (5,'Mash-01_DEM_Old',5,1,0)
INSERT INTO [T_OldManagers] VALUES (7,'Proto-3_Res',7,1,0)
INSERT INTO [T_OldManagers] VALUES (21,'Mash-02_Cap',4,1,0)
INSERT INTO [T_OldManagers] VALUES (22,'Mash-02b',6,1,0)
INSERT INTO [T_OldManagers] VALUES (25,'Mash-03_Cap',4,1,0)
INSERT INTO [T_OldManagers] VALUES (26,'Mash-03b',6,1,0)
INSERT INTO [T_OldManagers] VALUES (29,'Mash-04_Cap',4,1,0)
INSERT INTO [T_OldManagers] VALUES (30,'Mash-04b',6,1,0)
INSERT INTO [T_OldManagers] VALUES (33,'Mash-05_Cap',4,1,0)
INSERT INTO [T_OldManagers] VALUES (34,'Mash-05b',6,1,0)
INSERT INTO [T_OldManagers] VALUES (37,'Mash-06_Cap',4,1,0)
INSERT INTO [T_OldManagers] VALUES (38,'Mash-06b',6,1,0)
INSERT INTO 

INSERT INTO [T_OldManagers] VALUES (48,'Proto-5_Res',7,1,0)
INSERT INTO [T_OldManagers] VALUES (51,'Proto-6_Cap',4,1,0)
INSERT INTO [T_OldManagers] VALUES (52,'Proto-6_Res',7,1,0)
INSERT INTO [T_OldManagers] VALUES (55,'Proto-7_Res',7,1,0)
INSERT INTO [T_OldManagers] VALUES (58,'Proto-8_Cap',4,1,0)
INSERT INTO [T_OldManagers] VALUES (59,'Proto-8_Res',7,1,0)
INSERT INTO [T_OldManagers] VALUES (62,'Proto-9_Res',7,1,0)
INSERT INTO [T_OldManagers] VALUES (300,'WE10129_ResMan',7,1,0)
INSERT INTO [T_OldManagers] VALUES (301,'WD45522_DatImpMan',9,1,0)
INSERT INTO [T_OldManagers] VALUES (303,'WE10129_DEM',5,1,0)
INSERT INTO [T_OldManagers] VALUES (304,'Proto-5_IDFU',10,0,0)
INSERT INTO [T_OldManagers] VALUES (305,'WE10129_Prep',6,1,0)
INSERT INTO [T_OldManagers] VALUES (306,'Mash-01_Prep',6,1,0)
INSERT INTO [T_OldManagers] VALUES (307,'Mash-02_Prep',6,1,0)
INSERT INTO [T_OldManagers] VALUES (308,'Mash-03_Prep',6,1,0)
INSERT INTO [T_OldManagers] VALUES (309,'Mash-04_Prep',6,1,0)
INSERT INTO [T

INSERT INTO [T_OldManagers] VALUES (311,'Mash-06_Prep',6,1,0)
INSERT INTO [T_OldManagers] VALUES (312,'WE10129_CapMan',4,1,0)
INSERT INTO [T_OldManagers] VALUES (314,'WE10129_ArchVerify',3,1,0)
INSERT INTO [T_OldManagers] VALUES (315,'Mash-01_ArchVerify',3,1,0)
INSERT INTO [T_OldManagers] VALUES (316,'Mash-02_ArchVerify',3,1,0)
INSERT INTO [T_OldManagers] VALUES (317,'Mash-03_ArchVerify',3,1,0)
INSERT INTO [T_OldManagers] VALUES (318,'Mash-04_ArchVerify',3,1,0)
INSERT INTO [T_OldManagers] VALUES (319,'Mash-05_ArchVerify',3,1,0)
INSERT INTO [T_OldManagers] VALUES (320,'Mash-06_ArchVerify',3,1,0)
INSERT INTO [T_OldManagers] VALUES (321,'WE_10129_Archive',2,1,0)
INSERT INTO [T_OldManagers] VALUES (322,'WE_10129_Update',2,1,0)
INSERT INTO [T_OldManagers] VALUES (323,'Proto-4_Archive',2,1,0)
INSERT INTO [T_OldManagers] VALUES (324,'Proto-4_Update',2,1,0)
INSERT INTO [T_OldManagers] VALUES (325,'Proto-3_Archive',2,1,0)
INSERT INTO [T_OldManagers] VALUES (326,'Proto-5_Archive',2,1,0)
INSERT 
DROP FUNCTION IF EXISTS memc_add ;
DROP FUNCTION IF EXISTS memc_add_by_key ;
DROP FUNCTION IF EXISTS memc_servers_set ;
DROP FUNCTION IF EXISTS memc_server_count ;
DROP FUNCTION IF EXISTS memc_set ;
DROP FUNCTION IF EXISTS memc_set_by_key ;
DROP FUNCTION IF EXISTS memc_cas ;
DROP FUNCTION IF EXISTS memc_cas_by_key ;
DROP FUNCTION IF EXISTS memc_get ;
DROP FUNCTION IF EXISTS memc_get_by_key ;
DROP FUNCTION IF EXISTS memc_get_cas ;
DROP FUNCTION IF EXISTS memc_get_cas_by_key ;
DROP FUNCTION IF EXISTS memc_delete ;
DROP FUNCTION IF EXISTS memc_delete_by_key ;
DROP FUNCTION IF EXISTS memc_append ;
DROP FUNCTION IF EXISTS memc_append_by_key ;
DROP FUNCTION IF EXISTS memc_prepend ;
DROP FUNCTION IF EXISTS memc_prepend_by_key ;
DROP FUNCTION IF EXISTS memc_increment ;
DROP FUNCTION IF EXISTS memc_decrement ;
DROP FUNCTION IF EXISTS memc_replace ;
DROP FUNCTION IF EXISTS memc_replace_by_key ;
DROP FUNCTION IF EXISTS memc_servers_behavior_set ;
DROP FUNCTION IF EXISTS memc_servers_behavior_get 

DROP FUNCTION IF EXISTS memc_behavior_set ;
DROP FUNCTION IF EXISTS memc_behavior_get ;
DROP FUNCTION IF EXISTS memc_list_behaviors ;
DROP FUNCTION IF EXISTS memc_list_hash_types ;
DROP FUNCTION IF EXISTS memc_list_distribution_types ;
DROP FUNCTION IF EXISTS memc_udf_version ;
DROP FUNCTION IF EXISTS memc_libmemcached_version ;
DROP FUNCTION IF EXISTS memc_stats ;
DROP FUNCTION IF EXISTS memc_stat_get_keys ;
DROP FUNCTION IF EXISTS memc_stat_get_value ;
CREATE FUNCTION memc_add RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_add_by_key RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_servers_set RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_server_count RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_set RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_set_by_key RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_cas RETURNS IN

CREATE FUNCTION memc_cas_by_key RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_get RETURNS STRING SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_get_by_key RETURNS STRING SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_get_cas RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_get_cas_by_key RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_delete RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_delete_by_key RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_append RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_append_by_key RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_prepend RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_prepend_by_key RETURNS INT SONAME 'libmemcached_functions_mysql.so';
CREATE FUNCTION memc_increment RETURNS INT SONAME 'lib
/*
	Still missing user's pantry and shopping cart.
*/
create table users (
	uid SERIAL,
	uname varchar(20),
	email varchar(40),
	password varchar(25),
	bio text,
	picture text, -- file name, append suffix+extension (nameLarge.png)
	primary key (uid),
	unique(email)
	);
/*
	several ways to store allergens:
		- single varchar[0,1,1,0,1], where each entry corresponds to an allergen (probably not)
		- BOOL entry for each allergen
		- nutrition estimates. May want to store in a joint table, rather than holding empty 
*/
create table recipes(
	rid SERIAL,
	name varchar(75),
	ingredients text ARRAY,
	instructions text,
	totaltime int,
	servings int,
	flavor_piquant real DEFAULT 0,
	flavor_bitter real DEFAULT 0,
	flavor_sweet real DEFAULT 0,
	flavor_meaty real DEFAULT 0,
	flavor_salty real DEFAULT 0,
	flavor_sour real DEFAULT 0,
	rating real DEFAULT 2.5,
	rating_count int DEFAULT 1,
	imagename text,
	calories int,
	uid int DEFAULT 1,
	imagenamesmall text,
	unique(name),
	primary key (rid),
	fo
CREATE OR REPLACE FUNCTION gh_from_a_to_b_local(lata double precision, lona double precision, latb double precision, lonb double precision, vehicle varchar)
  RETURNS text[] AS
$BODY$
import requests, json,os
def ms_to_hms(milliseconds):
    hours, milliseconds = divmod(milliseconds, 3600000)
    minutes, milliseconds = divmod(milliseconds, 60000)
    seconds = float(milliseconds) / 1000
    s = "%i:%02i" % (hours, minutes)
    return s
def ghroutetime(p1,p2,v):
    gcurl="http://localhost:8989/route?"
    params=[]
    result={}
    #result=''
    for x in range(6):
        params.append([])
    params[0].append('point')
    params[0].append(p1)
    params[1].append('point')
    params[1].append(p2)
    params[2].append('instructions')
    params[2].append('false')
    params[3].append('calc_points')
    params[3].append('true')
    params[4].append('vehicle')
    params[4].append(v)
    params[5].append('points_encoded')
    params[5].append('false')
    data = requests.get(url=gcurl

    binary = data.content
    result=json.loads(binary)
    result['paths'][0]['time']=ms_to_hms(result['paths'][0]['time'])
    distance=(result['paths'][0]['distance'])
    time=result['paths'][0]['time']
    geom=json.dumps(result['paths'][0]['points'])
    return distance,time,geom
def format_point(lat, lon):
	p=str(lat)+', '+str(lon)
	return p
try:
	dist,time,geom=ghroutetime(format_point(lata,lona),format_point(latb,lonb),vehicle)
except:
	dist,time,geom=0,0,''
return dist,time,geom	
$BODY$
  LANGUAGE plpythonu VOLATILE
  COST 100;
  
comment on function gh_from_a_to_b_local(lata double precision, lona double precision, latb double precision, lonb double precision, vehicle varchar) is 
pl/python function to enable graphhopper routing from postgis.
Make sure to have created the extension plpythonu beforehand.
Result is a text array with 
Distance[m] 
drivetime[hh:mm] 
Geometry as GeoJSON in CRS 4326 (WGS84)
To transform the GeoJSON geometry to wkb, use the postgis function "st_ge
﻿-- =============================================
-- Author:		Ken Taylor
-- Create date: February 5, 2014
-- Description:	Given a Kerberos/LoginId Return a list of orders that the user has read access to.
--	Notes: 
--		Replaces vReadAccess.
--		Determines read access based on order tracking or reviewer role, regardless of order status.
-- Usage:
/*
	select * from udf_GetReadAccessOrdersForLogin('kdani')
*/
-- =============================================
CREATE FUNCTION udf_GetReadAccessOrdersForLogin 
	-- Add the parameters for the function here
	@LoginId varchar(50)
RETURNS 
@ReadAccessOrders TABLE 
	-- Add the column definitions for the TABLE variable here
	orderid int, 
	accessuserid varchar(10),
	isadmin bit,
	accesslevel char(2)
AS
BEGIN
	INSERT INTO @ReadAccessOrders
	select access.orderid, access.UserId accessuserid,	[admin] isadmin, OrderStatusCodeId accesslevel
	from
	(
		-- acted on order
		select orderid, userid, OrderStatusCodeId, 0 [admin]
		from ordertracking
		where us
DROP DATABASE IF EXISTS `issue26211`;
CREATE DATABASE `issue26211`;
USE `issue26211`;
CREATE TABLE `process_model` (
  `PROC_MODEL_ID` decimal(10,0) NOT NULL,
  `PKG_MEM_ID` decimal(10,0) NOT NULL,
  `PROC_ID` decimal(10,0) DEFAULT NULL,
  `ACTIVE_VERSION` decimal(10,0) DEFAULT NULL,
  `CURRENT_VERSION` decimal(10,0) DEFAULT NULL,
  `ENABLED` decimal(1,0) NOT NULL,
  `NAME` varchar(64) NOT NULL,
  `COMMENTS` varchar(4000) DEFAULT NULL,
  PRIMARY KEY (`PROC_MODEL_ID`),
  KEY `I_PROCESS_MODEL_PKG_MEM_ID` (`PKG_MEM_ID`),
  KEY `I_PROCESS_MODEL_PROC_ID` (`PROC_ID`),
  KEY `procmodel_name_indx` (`NAME`)
) ENGINE=InnoDB;
CREATE TABLE `process_model_inst` (
  `PROC_MODEL_INST_ID` decimal(10,0) NOT NULL,
  `VERSION` decimal(10,0) NOT NULL,
  `PROC_MODEL_ID` decimal(10,0) NOT NULL,
  `DATE_CREATED` datetime NOT NULL,
  `CHANGE_NOTE` varchar(4000) DEFAULT NULL,
  `XML` longtext NOT NULL,
  `AUTHOR` varchar(50) DEFAULT NULL,
  `CHECKSUM` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`PROC_MODEL_INST_I
# This is a fix for InnoDB in MySQL >= 4.1.x
# It "suspends judgement" for fkey relationships until are tables are set.
SET FOREIGN_KEY_CHECKS = 0;
#-----------------------------------------------------------------------------
#-- sf_BreadNav
#-----------------------------------------------------------------------------
DROP TABLE IF EXISTS `sf_BreadNav`;
CREATE TABLE `sf_BreadNav`
	`id` INTEGER  NOT NULL AUTO_INCREMENT,
	`page` VARCHAR(255)  NOT NULL,
	`title` VARCHAR(255)  NOT NULL,
	`module` VARCHAR(128)  NOT NULL,
	`action` VARCHAR(128)  NOT NULL,
	`credential` VARCHAR(128),
	`catchall` TINYINT,
	`tree_left` INTEGER  NOT NULL,
	`tree_right` INTEGER  NOT NULL,
	`tree_parent` INTEGER  NOT NULL,
	`scope` INTEGER  NOT NULL,
	PRIMARY KEY (`id`),
	INDEX `sf_BreadNav_FI_1` (`scope`),
	CONSTRAINT `sf_BreadNav_FK_1`
		FOREIGN KEY (`scope`)
		REFERENCES `sf_BreadNav_Application` (`id`)
		ON DELETE CASCADE
)Type=InnoDB;
#------------------------------------------------------------------------
-- View: Object_Goods_View
-- DROP VIEW IF EXISTS Object_Goods_View;
CREATE OR REPLACE VIEW Object_Goods_View AS
         SELECT 
             Object_Goods.Id           AS GoodsId
           , Object_Goods.ObjectCode   AS GoodsCode
           , Object_Goods.ValueData    AS GoodsName
          
           , Object_InfoMoney_View.InfoMoneyGroupId
           , Object_InfoMoney_View.InfoMoneyDestinationId
           , Object_InfoMoney_View.InfoMoneyId
       FROM Object AS Object_Goods
            LEFT JOIN ObjectLink AS ObjectLink_Goods_InfoMoney
                                 ON ObjectLink_Goods_InfoMoney.ObjectId = Object_Goods.Id
                                AND ObjectLink_Goods_InfoMoney.DescId = zc_ObjectLink_Goods_InfoMoney()
            LEFT JOIN Object_InfoMoney_View ON Object_InfoMoney_View.InfoMoneyId = ObjectLink_Goods_InfoMoney.ChildObjectId
                                   
       WHERE Object_Goods.DescId = zc_Object_Goods();
ALTER TABLE Object_Goods_View  OWNER TO po
﻿CREATE proc [dbo].[PivotTableFramework]
/*
Exec PivotTableFramework 
'(SELECT ListPKID,DataName,Value FROM dbo.DC_Detail where ProjectPKID=1 and validFlag=1) Tmp',
'',
'listPKID',
'DataName',
'Value',
0,
0,
*/
@TableName varchar(4000), --表名
@AppendColumn varchar(200),
@縱軸 sysname,  --交叉表最左面的列
@橫軸 sysname,  --交叉表最上面的列
@表體內容 sysname, --交叉表的數資料欄位
@是否加橫向合計 bit,--為1時在交叉表橫向最右邊加橫向合計
@是否加縱向合計 bit, --為1時在交叉表縱向最下邊加縱向合計
@表體內容是數值類型 bit 
as
declare @s nvarchar(4000),@sql nvarchar(4000)
--判斷橫向欄位是否大於縱向欄位數目,如果是,則交換縱橫欄位
set @s='Declare @a sysname 
        If(Select case 
                       when count(distinct ['+@縱軸+'])<count(distinct ['+@橫軸+']) 
                       then 1 
                       else 0 
                  end
           From '+@TableName+')=1 
        Select @a=@縱軸,@縱軸=@橫軸,@橫軸=@a'
--下面這句是交換處理部分，若屏蔽則無交換功能
--exec sp_executesql @s ,N'@縱軸 sysname out,@橫軸 sysname out' ,@縱軸 out,@橫軸 out
--生成交叉表處理語句
if @表體內容是數值類型=1
        set @s='set @s='''' 
                select @s=@s+'',[''+cast([

                                                                              when  '''''' +cast(['+@橫軸+'] as varchar)+'''''' 
                                                                              then ['+@表體內容+'] 
                                                                              else 0 
                                                                         end)'' 
                from '+@TableName+' 
                group by ['+@橫軸+']'
else
        set @s='set @s='''' 
                select @s=@s+'',[''+cast(['+@橫軸+'] as varchar)+'']=Max(case ['+@橫軸 +'] 
                                                                              when  '''''' +cast(['+@橫軸+'] as varchar)+'''''' 
                                                                              then ['+@表體內容+'] 
                                                                              else ''''''''
                                                                         end)'' 
                fr

                group by ['+@橫軸+']'
        
        
exec sp_executesql @s ,N'@s varchar(8000) out ' ,@sql out
--是否生成合計欄位的處理
declare @sum1 varchar(200),@sum2 varchar(200),@sum3 varchar(200)
select @sum1=case @是否加橫向合計  
                  when 1 then ',[合計]=sum(['+@表體內容+'])' 
                  else '' 
             end ,
       @sum2=case @是否加縱向合計  
                  when 1 then '['+@縱軸+']=Case Grouping([' +@縱軸+']) 
                                                when 1 then ''合計'' 
                                                Else cast([' +@縱軸+'] as varchar) 
                                           End'  
                  else '['+@縱軸+']' +char(13)+char(9)+char(9)
             end ,
       @sum3=case @是否加縱向合計  
                  when 1 then ' with rollup'  
                  else '' 
             end
Declare @AppendColumnSQL nvarchar(400)
if @AppendColumn<>''
    Set @AppendColumnSQL=@AppendColumn+','
else
    Set @AppendColumnSQL=''
    
--生成交叉表
Declare @SqlText varchar(8000)

﻿-- SUNCORP MODEL RERUN
-- PREPARE THE DATASET
-- Take Residuals at customer level and roll up to meshblock
--
--	APPEND POINT GEOMETRY TO "<your new table>"
--
alter table "<your new table>"
add  claim_point geometry;
update "<your new table>"
set claim_point = ST_SetSRID(ST_MakePoint(longitude,latitude), 4283)
where claim_point is null;
CREATE INDEX "<your new table>"_geom_pt ON "<your new table>" USING GIST(claim_point);
alter table "<your new table>"
add mb_code_20  VARCHAR(50);
-- ADD MESHBLOCK CODE TO TABLE
UPDATE "<your new table>" a
SET mb_code_20 = b.mb_code_20
FROM raw_abs_mb11_4283  b
WHERE st_intersects(a.claim_point, b.geometry)
and a.mb_code_20 is null;
--
--	CALCULATE RESIDUALS PER MESHBLOCK
--
create table DRV_RESIDUALS as
Select 	
	a.mb_code_20
	,sum( residual ) as residual
from "<your new table>" a
group by a.mb_code_20
--
-- 	ADD RESIDUAL TO DRV_RESIDUALS
--
ALTER TABLE DRV_DATA_MODELLING
ADD residual float;
update a
set residual = b.residual
from DRV_DATA_MODELLING 
INSERT IGNORE INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('inventory', 'READ_INVENTORY', 'INVENTORY', 'READ', 0);
INSERT IGNORE INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('inventory', 'READ_SUPPLIER', 'SUPPLIER', 'READ', 0);
INSERT IGNORE INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('inventory', 
'READ_ITEM', 'ITEM', 'READ', 0);
INSERT IGNORE INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('inventory', 
'READ_MRN', 'MRN', 'READ', 0);
INSERT IGNORE INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('inventory', 
'READ_GRN', 'GRN', 'READ', 0);
INSERT IGNORE INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('inventory', 'READ_ITEMSALE', 'ITEMSALE', 'READ', 0);
INSERT IGNORE I

insert IGNORE INTO m_role values(null,'Sale','For Exclusively sale user');
SET @ROLEID=(select id from m_role where name='Sale');
SET @ID=(select id from m_permission where code='READ_LOANPRODUCT');
INSERT IGNORE INTO m_role_permission VALUES (@ROLEID,@ID);
SET @ID=(select id from m_permission where code='READ_LOAN');
INSERT IGNORE INTO m_role_permission VALUES (@ROLEID,@ID);
SET @ID=(select id from m_permission where code='READ_CLIENT');
INSERT IGNORE INTO m_role_permission VALUES (@ROLEID,@ID);
SET @ID=(select id from m_permission where code='CREATE_CLIENT');
INSERT IGNORE INTO m_role_permission VALUES (@ROLEID,@ID);
SET @ID=(select id from m_permission where code='UPDATE_CLIENT');
INSERT IGNORE INTO m_role_permission VALUES (@ROLEID,@ID);
SET @ID=(select id from m_permission where code='READ_CLIENTIMAGE');
INSERT IGNORE INTO m_role_permission VALUES (@ROLEID,@ID);
SET @ID=(select id from m_permission where code='CREATE_CLIENTIMAGE');
INSERT IGNORE INTO m_role_permission VALUES (@RO
﻿CREATE VIEW dbo.CurrentMediaDetailsView
AS
SELECT     TOP (1) Title, Description, Tags, MediaYear, MediaDay, MediaMonth, MediaId, InsertDate, UserId
FROM         dbo.MediaLedger
ORDER BY InsertDate
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes =

         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
 

      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "MediaLedger"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 246
               Right = 391
            End
            DisplayFlags = 344
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
   
/*
*			GET VIRTUAL FILE STATS
*			---------------------------------
*			
*			For data files, MS recommend:
*			
*			< 10 ms			= Good
*			10 - 20 ms		= Acceptable
*			> 20 ms			= Unacceptable
*			For log files, MS recommend:
*			
*			< 5 ms			= Good
*			5 - 15 ms		= Acceptable
*			> 15 ms			= Unacceptable
*/
	SELECT		DB_NAME(database_id)								AS 'Database_Name'
	,			CASE WHEN file_id = 2 THEN 'Log' ELSE 'Data' END	AS 'File_Type'
	,			((size_on_disk_bytes/1024)/1024.0)					AS 'Size_On_Disk_in_MB'
	,			io_stall_read_ms / num_of_reads						AS 'Avg_Read_Transfer_in_Ms'
	,			CASE WHEN file_id = 2 THEN
					CASE 
						WHEN io_stall_read_ms / num_of_reads < 5 THEN
							'Good'
						WHEN io_stall_read_ms / num_of_reads < 15 THEN 
							'Acceptable'
						ELSE 
							'Unacceptable'
					END
				ELSE
					CASE 
						WHEN io_stall_read_ms / num_of_reads < 10 THEN
							'Good'
						WHEN io_stall_read_ms / num_of_reads < 20 THEN 
							'Acceptable'
						ELSE 
							'Unacceptable'
					E
-- 
-- select count from all tables 
--
-- to run, first connect to db2 via command line connect 
-- e.g. db2 connect to cit_1 user db2sol7s using <password>
--
-- This file is part of the Grid LSC User Environment (GLUE)
-- 
-- GLUE is free software: you can redistribute it and/or modify it under the
-- terms of the GNU General Public License as published by the Free Software
-- Foundation, either version 3 of the License, or (at your option) any later
-- version.
-- 
-- This program is distributed in the hope that it will be useful, but WITHOUT
-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
-- details.
-- 
-- You should have received a copy of the GNU General Public License along
-- with this program.  If not, see <http://www.gnu.org/licenses/>.
-- misc tables
echo select count(*) from calib_info;
select count(*) from calib_info for read only ;
echo select count(*) from runlist;
sel

echo select count(*) from search_summvars;
select count(*) from search_summvars for read only ;
echo select count(*) from search_summary;
select count(*) from search_summary for read only ;
-- multi events
echo select count(*) from exttrig_search;
select count(*) from exttrig_search for read only ;
echo select count(*) from coinc_sngl;
select count(*) from coinc_sngl for read only ;
echo select count(*) from multi_burst;
select count(*) from multi_burst for read only ;
echo select count(*) from multi_inspiral;
select count(*) from multi_inspiral for read only ;
-- single events 
echo select count(*) from waveburst_mime;
select count(*) from waveburst_mime for read only ;
echo select count(*) from waveburst;
select count(*) from waveburst for read only ;
echo select count(*) from gds_trigger;
select count(*) from gds_trigger for read only ;
echo select count(*) from sngl_burst;
select count(*) from sngl_burst for read only ;
echo select count(*) from sngl_block;
select count(*) from sn

echo select count(*) from sngl_dperiodic;
select count(*) from sngl_dperiodic for read only ;
echo select count(*) from sngl_inspiral;
select count(*) from sngl_inspiral for read only ;
echo select count(*) from sngl_ringdown;
select count(*) from sngl_ringdown for read only ;
echo select count(*) from sngl_unmodeled;
select count(*) from sngl_unmodeled for read only ;
echo select count(*) from sngl_unmodeled_v;
select count(*) from sngl_unmodeled_v for read only ;
echo select count(*) from summ_mime;
select count(*) from summ_mime for read only ;
echo select count(*) from summ_comment;
select count(*) from summ_comment for read only ;
echo select count(*) from summ_spectrum;
select count(*) from summ_spectrum for read only ;
echo select count(*) from summ_csd;
select count(*) from summ_csd for read only ;
echo select count(*) from summ_statistics;
select count(*) from summ_statistics for read only ;
echo select count(*) from summ_value;
select count(*) from summ_value for read only ;
## htsjdk.samtools.metrics.StringHeader
# picard.sam.markduplicates.EstimateLibraryComplexity INPUT=[/Users/anton/galaxy-central/database/files/000/dataset_951.dat] OUTPUT=/Users/anton/galaxy-central/database/files/001/dataset_1073.dat MIN_IDENTICAL_BASES=5 MAX_DIFF_RATE=0.03 MIN_MEAN_QUALITY=20 MAX_GROUP_RATIO=500 READ_NAME_REGEX=[a-zA-Z0-9]+:[0-9]:([0-9]+):([0-9]+):([0-9]+).*. OPTICAL_DUPLICATE_PIXEL_DISTANCE=100 VERBOSITY=ERROR QUIET=true VALIDATION_STRINGENCY=LENIENT    COMPRESSION_LEVEL=5 MAX_RECORDS_IN_RAM=3472024 CREATE_INDEX=false CREATE_MD5_FILE=false
## htsjdk.samtools.metrics.StringHeader
# Started on: Fri Oct 17 13:39:31 EDT 2014
## METRICS CLASS	picard.sam.DuplicationMetrics
LIBRARY	UNPAIRED_READS_EXAMINED	READ_PAIRS_EXAMINED	UNMAPPED_READS	UNPAIRED_READ_DUPLICATES	READ_PAIR_DUPLICATES	READ_PAIR_OPTICAL_DUPLICATES	PERCENT_DUPLICATION	ESTIMATED_LIBRARY_SIZE
Unknown	0	982	0	0	116	0	0.118126	3822
## HISTOGRAM	java.lang.Integer
duplication_group_count	Unknown
1	781
2	65
3	12
4
  CREATE TABLE "REFERENCIA"."TPRY_CONTACTO_PROVEEDOR" 
   (	"IDCONTACTO" NUMBER NOT NULL ENABLE, 
	"IDPROVEEDOR" NUMBER NOT NULL ENABLE, 
	"NOMBRECONTACTO" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"APPATERNO" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"APMATERNO" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EMAIL1" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"TELEFONO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MOVIL1" VARCHAR2(13 BYTE), 
	"MOVIL2" VARCHAR2(13 BYTE), 
	"PRINCIPAL" VARCHAR2(1 BYTE), 
	 CONSTRAINT "TPRY_CONTACTOSPROVEEDOR_PK" PRIMARY KEY ("IDCONTACTO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA"  ENABLE, 
	 CONSTRAINT "FK001_TPRY_CONTACTO_PROVEEDOR" FOREIGN KEY ("IDPROVEEDOR")
	  REFERENCES "REFERENCIA"."TPRY_PROVEEDORES" ("IDPROVEEDOR") ENABLE
   ) SEGMENT CREATION IMMEDI
CREATE TABLE part.orders_range_hash (
    order_id                                 NUMBER(12)   NOT NULL
  , order_date                               TIMESTAMP(6) NOT NULL
  , order_mode                               VARCHAR2(8)
  , customer_id                              NUMBER(12) NOT NULL
  , order_status                             NUMBER(2)
  , order_total                              NUMBER(8,2)
  , sales_rep_id                             NUMBER(6)
  , promotion_id                             NUMBER(6)
  , warehouse_id                             NUMBER(6)
PARTITION BY RANGE   (order_id) 
SUBPARTITION BY HASH (customer_id) 
SUBPARTITION TEMPLATE(
    SUBPARTITION sp1 TABLESPACE users,
    SUBPARTITION sp2 TABLESPACE users,
    SUBPARTITION sp3 TABLESPACE users,
    SUBPARTITION sp4 TABLESPACE users)
    PARTITION id_00m VALUES LESS THAN (1000000)
  , PARTITION id_01m VALUES LESS THAN (2000000)
  , PARTITION id_02m VALUES LESS THAN (3000000)
  , PARTITION id_03m VALUES LESS THAN
SET DEFINE OFF;
CREATE TABLE L_HOUSE_EARNINGS
  DEPARTMENT      CHAR(20 BYTE),
  EMPLOYEENO      CHAR(20 BYTE),
  FIRSTNAME       CHAR(50 BYTE),
  LASTNAME        CHAR(50 BYTE),
  HOURLYRATE      INTEGER,
  ANNUALSALARY    INTEGER,
  INCDOLLARS      INTEGER,
  ADJUSTHOURS     INTEGER,
  BONUSDOLLARS    INTEGER,
  FUNERALHOURS    INTEGER,
  HOLIDAYHOURS    INTEGER,
  INCENTDOLLARS   INTEGER,
  JURYHOURS       INTEGER,
  MISCHOURS       INTEGER,
  MISCDOLLARS     INTEGER,
  OVERTIMEHOURS   INTEGER,
  PTOHOURS        INTEGER,
  REGHOURS        INTEGER,
  SALHOURS        INTEGER,
  WKNMGRHOURS     INTEGER,
  WKNMGROTHOURS   INTEGER,
  GROSSWAGES      INTEGER,
  PAIDGROSSWAGES  INTEGER,
  PAYDATE         DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      
-- Civ5 DLC Localization Schema
-- Created by Shaun Seckman (April 23rd 2012)
-- 
-----------------------------------------------------------------
-- ScannedFiles table used for caching database.
CREATE TABLE ScannedFiles("Path" TEXT NOT NULL PRIMARY KEY, "DateTime" INTEGER NOT NULL);
CREATE TABLE LocalizedText("Language" TEXT,
						   "Tag" TEXT,
						   "Text" TEXT,						
						   "Gender" TEXT,
						   "Plurality" TEXT,
						   PRIMARY KEY(Language, Tag));
-- English		
CREATE VIEW Language_en_US AS SELECT Tag, Text, Gender, Plurality from LocalizedText where Language = 'en_US';
CREATE TRIGGER Language_en_US_insert INSTEAD OF INSERT ON Language_en_US BEGIN insert into LocalizedText(Language, Tag, Text, Gender, Plurality) VALUES('en_US', NEW.Tag, NEW.Text, NEW.Gender, NEW.Plurality); END;
CREATE TRIGGER Language_en_US_update INSTEAD OF UPDATE ON Language_en_US BEGIN UPDATE LocalizedText SET Text = NEW.Text , Gender = NEW.Gender, Plurality = NEW.Plurality WHERE Language = 'en_US' 

CREATE TRIGGER Language_en_US_delete INSTEAD OF DELETE ON Language_en_US BEGIN DELETE from LocalizedText where Language = 'en_US' and Tag = OLD.Tag; END;
			
-- German
CREATE VIEW Language_DE_DE AS SELECT Tag, Text, Gender, Plurality from LocalizedText where Language = 'de_DE';
CREATE TRIGGER Language_DE_DE_insert INSTEAD OF INSERT ON Language_DE_DE BEGIN insert into LocalizedText(Language, Tag, Text, Gender, Plurality) VALUES('de_DE', NEW.Tag, NEW.Text, NEW.Gender, NEW.Plurality); END;
CREATE TRIGGER Language_DE_DE_update INSTEAD OF UPDATE ON Language_DE_DE BEGIN UPDATE LocalizedText SET Text = NEW.Text , Gender = NEW.Gender, Plurality = NEW.Plurality WHERE Language = 'de_DE' and Tag = NEW.Tag; END;
CREATE TRIGGER Language_DE_DE_delete INSTEAD OF DELETE ON Language_DE_DE BEGIN DELETE from LocalizedText where Language = 'de_DE' and Tag = OLD.Tag; END;
-- Spanish
CREATE VIEW Language_ES_ES AS SELECT Tag, Text, Gender, Plurality from LocalizedText where Language = 'es_ES';
CREATE TRIGGE

CREATE TRIGGER Language_ES_ES_update INSTEAD OF UPDATE ON Language_ES_ES BEGIN UPDATE LocalizedText SET Text = NEW.Text , Gender = NEW.Gender, Plurality = NEW.Plurality WHERE Language = 'es_ES' and Tag = NEW.Tag; END;
CREATE TRIGGER Language_ES_ES_delete INSTEAD OF DELETE ON Language_ES_ES BEGIN DELETE from LocalizedText where Language = 'es_ES' and Tag = OLD.Tag; END;
-- French
CREATE VIEW Language_FR_FR AS SELECT Tag, Text, Gender, Plurality from LocalizedText where Language = 'fr_FR';
CREATE TRIGGER Language_FR_FR_insert INSTEAD OF INSERT ON Language_FR_FR BEGIN insert into LocalizedText(Language, Tag, Text, Gender, Plurality) VALUES('fr_FR', NEW.Tag, NEW.Text, NEW.Gender, NEW.Plurality); END;
CREATE TRIGGER Language_FR_FR_update INSTEAD OF UPDATE ON Language_FR_FR BEGIN UPDATE LocalizedText SET Text = NEW.Text , Gender = NEW.Gender, Plurality = NEW.Plurality WHERE Language = 'fr_FR' and Tag = NEW.Tag; END;
CREATE TRIGGER Language_FR_FR_delete INSTEAD OF DELETE ON Language_FR_FR BE
﻿\COPY routes(kode,disabled,created,create_uid,nama,path,perm_name) FROM stdin
efiling	0	2014-12-24 03:04:42.837591	1	Filing	/efiling	read
efiling-admin	0	2014-12-24 03:04:42.837591	1	Admin e-Filling	/efiling/admin	read
efiling-kategori	0	2014-12-24 03:04:42.837591	1	Kategori Filing	/efiling/kategori	read
efiling-kategori-add	0	2014-12-24 03:04:42.837591	1	Tambah Kategori Filing	/efiling/kategori/add	read
efiling-kategori-edit	0	2014-12-24 03:04:42.837591	1	Edit Kategori Filing	/efiling/kategori/{id}/edit	edit
efiling-kategori-delete	0	2014-12-24 03:04:42.837591	1	Hapus Kategori Filing	/efiling/kategori/{id}/delete	delete
efiling-kategori-act	0	2014-12-24 03:04:42.837591	1	Kategori Filing Act	/efiling/kategori/{act}/act	read
efiling-kategori-csv	0	2014-12-24 03:04:42.837591	1	Kategori Filing CSV	/efiling/kategori/{csv}/csv	read
efiling-lokasi	0	2014-12-24 03:04:42.837591	1	Lokasi Filing	/efiling/lokasi	read
efiling-lokasi-add	0	2014-12-24 03:04:42.837591	1	Tambah Lokasi Filing	/efiling

efiling-lokasi-edit	0	2014-12-24 03:04:42.837591	1	Edit Lokasi Filing	/efiling/lokasi/{id}/edit	edit
efiling-lokasi-delete	0	2014-12-24 03:04:42.837591	1	Hapus Lokasi Filing	/efiling/lokasi/{id}/delete	delete
efiling-lokasi-act	0	2014-12-24 03:04:42.837591	1	Lokasi Filing Act	/efiling/lokasi/{act}/act	read
efiling-lokasi-csv	0	2014-12-24 03:04:42.837591	1	Lokasi Filing CSV	/efiling/lokasi/{csv}/csv	read
efiling-filing	0	2014-12-24 03:04:42.837591	1	 Filing	/efiling/filing	read
efiling-filing-add	0	2014-12-24 03:04:42.837591	1	Tambah Filing	/efiling/filing/add	read
efiling-filing-edit	0	2014-12-24 03:04:42.837591	1	Edit Filing	/efiling/filing/{id}/edit	edit
efiling-filing-delete	0	2014-12-24 03:04:42.837591	1	Hapus Filing	/efiling/filing/{id}/delete	delete
efiling-filing-act	0	2014-12-24 03:04:42.837591	1	 Filing Act	/efiling/filing/{act}/act	read
efiling-filing-csv	0	2014-12-24 03:04:42.837591	1	 Filing CSV	/efiling/filing/{csv}/csv	read
efiling-file	0	2014-12-24 03:04:42.837591	1	 Da
-- =============================================================
-- =============================================================
-- =============================================================
-- TO REUSE IN ANOTHER BOUNDED CONTEXT, APPEND THIS FILE TO
-- THE END OF YOUR DDL
-- =============================================================
-- =============================================================
-- =============================================================
DROP TABLE IF EXISTS tbl_es_event_store;
CREATE TABLE `tbl_es_event_store` (
  `event_id`       BIGINT(20)     NOT NULL AUTO_INCREMENT,
  `event_body`     VARCHAR(20000) NOT NULL,
  `event_type`     VARCHAR(250)   NOT NULL,
  `stream_name`    VARCHAR(250)   NOT NULL,
  `stream_version` INT(11)        NOT NULL,
  KEY (`stream_name`),
  UNIQUE KEY (`stream_name`, `stream_version`),
  PRIMARY KEY (`event_id`)
  ENGINE = InnoDB;
DROP TABLE IF EXISTS tbl_published_notification_tracker;
CREATE TABLE `tbl_published_notification_

  `published_notification_tracker_id`     BIGINT(20)   NOT NULL AUTO_INCREMENT,
  `most_recent_published_notification_id` BIGINT(20)   NOT NULL,
  `type_name`                             VARCHAR(100) NOT NULL,
  `concurrency_version`                   INT(11)      NOT NULL,
  PRIMARY KEY (`published_notification_tracker_id`)
  ENGINE = InnoDB;
DROP TABLE IF EXISTS tbl_stored_event;
CREATE TABLE `tbl_stored_event` (
  `event_id`    BIGINT(20)     NOT NULL AUTO_INCREMENT,
  `event_body`  VARCHAR(20000) NOT NULL,
  `occurred_on` DATETIME       NOT NULL,
  `type_name`   VARCHAR(200)   NOT NULL,
  PRIMARY KEY (`event_id`)
  ENGINE = InnoDB;
DROP TABLE IF EXISTS tbl_time_constrained_process_tracker;
CREATE TABLE `tbl_time_constrained_process_tracker` (
  `time_constrained_process_tracker_id` BIGINT(20)   NOT NULL AUTO_INCREMENT,
  `allowable_duration`                  BIGINT(20)   NOT NULL,
  `completed`                           TINYINT(1)   NOT NULL,
  `description`                       
------------------------------------------------------------
-- Put schema changes here as an append-only log that update
-- SQL seen in schema.sql and functions_and_triggers.sql
------------------------------------------------------------
--
-- Prune out old/unused queries
--
-- Failed indexes for the deimplemented "Topic X was moved to Forum Y"
-- papertrail system
DROP INDEX IF EXISTS topics_moved_at_latest_post_at;
DROP INDEX IF EXISTS topics_sort_1;
-- For show-forum topics ordering
CREATE INDEX topics_order_crystal ON topics (is_sticky DESC, latest_post_at DESC);
------------------------------------------------------------
------------------------------------------------------------
CREATE TYPE convo_folder AS ENUM (
  'INBOX'
, 'STAR'
, 'ARCHIVE'
, 'TRASH'
);
ALTER TABLE convos_participants
ADD COLUMN id serial NOT NULL PRIMARY KEY
ALTER TABLE convos_participants
ADD COLUMN folder convo_folder NOT NULL DEFAULT 'INBOX'
CREATE INDEX convos_participants__folder ON convos_participan
proc cfe_b3_es_integration
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Purpose:  The purpose of this procedure is to perform Build Integration Testing of Executive Services.  
; Note:  At the time of the writing of this procedure, there were no utilities to look for a particular event 
;         message
;        Also note that this procedure is written for CPU3.  It will be made generic at a later time
; History:
;  18APR05    Initial development of this proc         MOB
%LIV(USE_ASK_POPUP) = TRUE
local success_cmd_ctr, error_cmd_ctr
local packet_sequence_cnt
local proc_error_cnt
local event_packet_ctr
local file_time
local app_info_file_index
local found_app
;LIMIT ON CDH_ROUTE.NSBSTREAM
;LIMIT ON ACE_ROUTE.NSBSTREAM
;LIMIT ON PSE_ROUTE.NSBSTREAM
;LIMIT ON P019
;LIMIT ON P039
;LIMIT ON P059
page scx_cpu3_es_hk
page scx_cpu3_es_app_info
newlog
Write "The cFE Build Label is =======> " & SCX_CPU3_ES_CFEMAJORVER & "." & SCX_CP

Write "Build Integration Testing of EVS"
Write "Checksum of this version is ====>  "& SCX_CPU3_ES_CKSUM
Write " "
Write "The OS Build Label is ========> " & SCX_CPU3_ES_OSMAJORVER & "." & SCX_CPU3_ES_OSMINORVER
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Setup for test
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  In build 3, Event Messages of type DEBUG are disabled by default.  Need to enable 
   success_cmd_ctr = SCX_CPU3_EVS_CMDPC
   error_cmd_ctr = SCX_CPU3_EVS_CMDEC
   wait 5
   Write "Sening a command to Enable Event Messages of type DEBUG"
   /SCX_CPU3_EVS_ENAEVENTTYPE DEBUG
   WAIT UNTIL ((SCX_CPU3_EVS_CMDPC = success_cmd_ctr + 1) AND (SCX_CPU3_EVS_CMDEC = error_cmd_ctr))
   
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Verify No-Op command (Command Code 0)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   Write "*********  Verifying the No-op command*********"
   Write " Sending the no-op command "
   success_cmd_ctr = SCX_CPU3_ES_CMDP

   error_cmd_ctr = SCX_CPU3_ES_CMDEC
   /SCX_CPU3_ES_NOOP
   WAIT UNTIL ((SCX_CPU3_ES_CMDPC = success_cmd_ctr + 1) AND (SCX_CPU3_ES_CMDEC = error_cmd_ctr))
   Write "No-Op Counter command SUCCESSFUL"
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Verify Reset Counters Command (Command Code 1)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   success_cmd_ctr = SCX_CPU3_ES_CMDPC
   error_cmd_ctr = SCX_CPU3_ES_CMDEC
   Write " "
   Write "************* Verifying the Reset Counter Command************"
   Write "Sending a command with an error so that the error counter increments"
   ;  Note that this is an ES command with an invalid function code = hex 'aa' (42 decimal)
   /raw 1846c0000001aa
   WAIT UNTIL ((SCX_CPU3_ES_CMDPC = success_cmd_ctr) AND (SCX_CPU3_ES_CMDEC = error_cmd_ctr + 1))
   success_cmd_ctr = SCX_CPU3_ES_CMDPC
   error_cmd_ctr = SCX_CPU3_ES_CMDEC
   
   Write "Sending the Reset Counters command"
   /SCX_CPU3_ES_RESETCTRS
   WAIT UNTIL ((SCX_CPU3_ES_C
use b2b;
set names utf8;
drop table if exists company_nav;
create table company_nav(
    id mediumint(8) unsigned not null auto_increment primary key,
    corpid mediumint(8) unsigned not null  ,
    name varchar(20) not null default '链接',
    urltype tinyint(4) unsigned not null default 0,
    url   varchar(200) not null default '',
    target varchar(10) not null default '_self',
    key(corpid)
)engine=myisam default charset=utf8 collate=utf8_general_ci;
drop table if exists company_nav2;
create table company_nav2(
    id mediumint(8) unsigned not null auto_increment primary key,
    corpid mediumint(8) unsigned not null  ,
    name varchar(20) not null default '链接',
    urltype tinyint(4) unsigned not null default 0,
    url   varchar(200) not null default '',
    target varchar(10) not null default '_self',
    key(corpid)
)engine=myisam default charset=utf8 collate=utf8_general_ci;
CREATE TABLE IF NOT EXISTS `urltarget` (
  `id` tinyint(4) unsigned NOT NULL AUTO_INCREMENT,
  `nam
/****** Object:  StoredProcedure [dbo].[LoadToolVersionInfo] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Procedure dbo.LoadToolVersionInfo
/****************************************************
**
**	Desc:	Load Tool version info for specified tool in specified folder
**
**	Return values: 0: success, otherwise, error code
**
**	Parameters:
**
**	Auth:	mem
**	Date:	12/30/2011 mem - Initial Version
**
*****************************************************/
	@AnalysisToolName varchar(128),						-- Sequest, Masic_Finnigan, XTandem, MSGF, etc.
	@StoragePathResults varchar(512),					-- Path to the folder to look for the Tool version info file, e.g. Tool_Version_Info_MSGF.txt
	@Job int,											-- Only used for logging purposes; this procedure does not update T_Analysis_Description
	@ToolVersionInfo varchar(512) = '' OUTPUT,			-- Tool version info read from the tool version info file
	@message varchar(255) = '' OUTPUT,
	@RaiseErrorIfFileNotFound tinyint = 0				-- If 0 and i

AS
	Set nocount on
	Declare @myError int
	Declare @myRowCount int
	Set @myError = 0
	Set @myRowCount = 0
	Declare @fileExists tinyint
	-----------------------------------------------
	-- Clear the outputs
	-----------------------------------------------
	Set @ToolVersionInfo = ''
	Set @message = ''
	Declare @jobStr varchar(12)
	If @Job Is Null
		Set @jobStr = '??'
	Else
		Set @jobStr = convert(varchar(12), @Job)
	If IsNull(@AnalysisToolName, '') = ''
	Begin
		Set @message = '@AnalysisToolName parameter is empty; unable to continue'
		Return 53000
	End
	If IsNull(@StoragePathResults, '') = ''
	Begin
		Set @message = '@StoragePathResults parameter is empty; unable to continue'
		Return 53001
	End	
	-----------------------------------------------
	-- See if the Tool Version Info file exists
	-----------------------------------------------
	Declare @ToolVersionInfoFileName varchar(512)
	Declare @ToolVersionInfoFilePath varchar(512)
	Declare @FileCountFound int = 0
	Declare @FileCountMissi

	Set @ToolVersionInfoFileName = 'Tool_Version_Info_' + @AnalysisToolName + '.txt'
	Set @ToolVersionInfoFilePath = dbo.udfCombinePaths(@StoragePathResults, @ToolVersionInfoFileName)
	exec ValidateFilesExist @StoragePathResults, @ToolVersionInfoFileName, @FileCountFound = @FileCountFound output, @FileCountMissing = @FileCountMissing output
	If @FileCountMissing > 0
	Begin
		Set @message = 'Tool version info file not found for job ' + @jobStr + ', tool ' + @AnalysisToolName + ' (' + @ToolVersionInfoFilePath + ')'
		
		If @RaiseErrorIfFileNotFound = 0
			Return 0
		Else
			Return 53002
	End
	-----------------------------------------------
	-- We will bulk load the data into T_ToolVersionInfoContents using view V_ToolVersionInfo_Append
	-- We do this to assure that the data is loaded from the file into the table in the same order as the file
	-- We can then use the EntryID column to determine the row just after the 'ToolVersionInfo:' row
	--
	-- Before loading new data, delete entries from
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `petition`;
CREATE TABLE `petition` (
  `ownerguid` int(10) unsigned NOT NULL,
  `petitionguid` int(10) unsigned DEFAULT '0',
  `name` varchar(24) NOT NULL,
  PRIMARY KEY (`ownerguid`),
  UNIQUE KEY `index_ownerguid_petitionguid` (`ownerguid`,`petitionguid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Guild System';
LOCK TABLES `petition` WRITE;
/*!40000 ALTER TABLE `petition` DIS
INSERT INTO EmergencyContact
SELECT ReachID,
 'Contact ' + cast(ReachID as varchar(10)), --NameOfContact varchar(50),
 cast(ABS(Checksum(NewID()) % 100000) + 1 as varchar(10)) + ' Main St.', --StreetAddress1 varchar(50),
 'Level ' + cast(ABS(Checksum(NewID()) % 2) + 1 as varchar(10)), --StreetAddress2 varchar(50),
 'Apt. ' + cast(ABS(Checksum(NewID()) % 49) + 1 as varchar(2)), --StreetAddress3 varchar(50),
 City, --City varchar(50),
 State, --State varchar(30),
 Zip, --Zip varchar(50),
 cast(ABS(Checksum(NewID()) % 8998) + 1000 as varchar(4)), --Zip4 varchar(50),
 cast(ABS(Checksum(NewID()) % 898) + 100 as varchar(3)) + cast(ABS(Checksum(NewID()) % 898) + 100 as varchar(3)) + cast(ABS(Checksum(NewID()) % 8988) + 1000 as varchar(4)), --Phone varchar(50),
 NULL --PhoneWork varchar(50)
FROM VeteranRisk
WHERE RiskLevel is NOT NULL
UPDATE EmergencyContact
SET PhoneWork = left(Phone, 3) + + cast(ABS(Checksum(NewID()) % 898) + 100 as varchar(3)) + cast(ABS(Checksum(NewID()) % 8988) + 1000 as 
-- Test data.
CREATE DATABASE showdb;
USE showdb;
CREATE TABLE show_t1(a String, b Int, c String, d String) USING parquet PARTITIONED BY (c, d);
ALTER TABLE show_t1 ADD PARTITION (c='Us', d=1);
CREATE TABLE show_t2(b String, d Int) USING parquet;
CREATE TEMPORARY VIEW show_t3(e int) USING parquet;
CREATE GLOBAL TEMP VIEW show_t4 AS SELECT 1 as col1;
-- SHOW TABLES
SHOW TABLES;
SHOW TABLES IN showdb;
-- SHOW TABLES WITH wildcard match
SHOW TABLES 'show_t*';
SHOW TABLES LIKE 'show_t1*|show_t2*';
SHOW TABLES IN showdb 'show_t*';
-- SHOW TABLE EXTENDED
SHOW TABLE EXTENDED LIKE 'show_t*';
SHOW TABLE EXTENDED;
-- SHOW TABLE EXTENDED ... PARTITION
SHOW TABLE EXTENDED LIKE 'show_t1' PARTITION(c='Us', d=1);
-- Throw a ParseException if table name is not specified.
SHOW TABLE EXTENDED PARTITION(c='Us', d=1);
-- Don't support regular expression for table name if a partition specification is present.
SHOW TABLE EXTENDED LIKE 'show_t*' PARTITION(c='Us', d=1);
-- Partition specification is not compl
SET DEFINE OFF;
CREATE TABLE L_RESHISTORY
  HISTORYNUMBER   NUMBER(10),
  RESNUMBER       NUMBER(9),
  SERVICESEQ      NUMBER(8),
  ACTIONSEQ       NUMBER(8),
  ACTIONORDER     NUMBER(8),
  ACTIONDATE      DATE,
  ACTIONCODE      VARCHAR2(20 BYTE),
  CREATEDBY       VARCHAR2(50 BYTE),
  SYSTEMCOMMENT   CLOB,
  SUPPLIERID      VARCHAR2(40 BYTE),
  TOURCODE        VARCHAR2(30 BYTE),
  ATTACHMENTNAME  VARCHAR2(275 BYTE),
  WHOSTAMP        VARCHAR2(50 BYTE),
  DATESTAMP       DATE
LOB (SYSTEMCOMMENT) STORE AS (
  TABLESPACE  DTW_ADV_TABLES
  ENABLE      STORAGE IN ROW
  CHUNK       16384
  RETENTION
  NOCACHE
  LOGGING
      STORAGE    (
                  INITIAL          80K
                  NEXT             1M
                  MINEXTENTS       1
                  MAXEXTENTS       UNLIMITED
                  PCTINCREASE      0
                  BUFFER_POOL      DEFAULT
                  FLASH_CACHE      DEFAULT
                  CELL_FLASH_CACHE DEFAULT
                 ))
TABLESPACE DT
  --Purchase Order View
  SELECT dropIfExists('VIEW', 'purchaseorder', 'api');
  CREATE OR REPLACE VIEW api.purchaseorder AS
  SELECT
    pohead_number::varchar AS order_number,
    pohead_orderdate AS order_date,
    terms_code AS terms,
    taxzone_code AS tax_zone,
    warehous_code AS receiving_site,
    pohead_agent_username AS purchasing_agent,
    vend_number AS vendor_number,
    COALESCE(vendaddr_code,'MAIN') AS alt_address,
    pohead_fob AS fob,
    pohead_shipvia AS ship_via,
    curr_abbr AS currency,
    (SELECT COALESCE(SUM(tax), 0.00) AS tax
     FROM (SELECT ROUND(SUM(taxdetail_tax),2) AS tax
           FROM tax
            JOIN calculateTaxDetailSummary('PO', pohead_id, 'T') ON (taxdetail_tax_id=tax_id)
           GROUP BY tax_id) AS data) AS tax,
    pohead_freight AS freight,
    pohead_comments AS notes,
    pohead_dropship AS dropship,
    vc.cntct_number AS vend_contact_number,
    pohead_vend_cntct_honorific AS vend_cntct_honorific,
    pohead_vend_cntct_first_n

    pohead_vend_cntct_middle AS vend_cntct_middle,
    pohead_vend_cntct_last_name AS vend_cntct_last_name,
    pohead_vend_cntct_suffix AS vend_cntct_suffix,
    pohead_vend_cntct_phone AS vend_cntct_phone,
    pohead_vend_cntct_title AS vend_cntct_title,
    pohead_vend_cntct_fax AS vend_cntct_fax,
    pohead_vend_cntct_email AS vend_cntct_email,
    pohead_vendaddress1 AS vendaddress1,
    pohead_vendaddress2 AS vendaddress2,
    pohead_vendaddress3 AS vendaddress3,
    pohead_vendcity AS vendcity,
    pohead_vendstate AS vendstate,
    pohead_vendzipcode AS vendzipcode,
    pohead_vendcountry AS vendcountry,
    sc.cntct_number AS shipto_contact_number,
    pohead_shipto_cntct_honorific AS shipto_cntct_honorific,
    pohead_shipto_cntct_first_name AS shipto_cntct_first_name,
    pohead_shipto_cntct_middle AS shipto_cntct_middle,
    pohead_shipto_cntct_last_name AS shipto_cntct_last_name,
    pohead_shipto_cntct_suffix AS shipto_cntct_suffix,
    pohead_shipto_cntct_phone AS shipt

    pohead_shipto_cntct_title AS shipto_cntct_title,
    pohead_shipto_cntct_fax AS shipto_cntct_fax,
    pohead_shipto_cntct_email AS shipto_cntct_email,
    addr_number AS shiptoaddress_number,
    pohead_shiptoaddress1 AS shiptoaddress1,
    pohead_shiptoaddress2 AS shiptoaddress2,
    pohead_shiptoaddress3 AS shiptoaddress3,
    pohead_shiptocity AS shiptocity,
    pohead_shiptostate AS shiptostate,
    pohead_shiptozipcode AS shiptozipcode,
    pohead_shiptocountry AS shiptocountry,
    cohead_number AS sales_order_number
  FROM pohead
    LEFT OUTER JOIN cntct vc ON (pohead_vend_cntct_id=vc.cntct_id)
    LEFT OUTER JOIN cntct sc ON (pohead_shipto_cntct_id=sc.cntct_id)
    LEFT OUTER JOIN addr     ON (pohead_shiptoddress_id=addr_id)
    LEFT OUTER JOIN terms ON (pohead_terms_id=terms_id)
    LEFT OUTER JOIN taxzone ON (pohead_taxzone_id=taxzone_id)
    LEFT OUTER JOIN whsinfo ON (pohead_warehous_id=warehous_id)
    LEFT OUTER JOIN vendaddrinfo ua ON (pohead_vendaddr_id=vendaddr_i
INSERT INTO `post` VALUES (1, 1, 1, 1, 'discovery回复：探索频道系列节目shark week的广告之一，效果是制作出来的，不是偶然拍到的！', 2, 5, '2013-08-14 14:45:49');
INSERT INTO `post` VALUES (2, 1, 1, 2, 'YOUTUBE点击过200多万。她打扮得像小公主，说话奶声奶气的，可是一张嘴唱歌全场震惊了。6岁的Aaralyn在哥哥Izzy的鼓声下演唱自己的原创重金属摇滚歌曲《Zombie Skin》，整个一“嘶吼小辣妹”啊！', 12, 9, '2013-08-15 14:45:49');
INSERT INTO `post` VALUES (3, 1, 1, 3, '白天鹅一家子在马路中间气定神闲地走着，一辆警车在后面跟着缓缓前行，挡住后方的来车，为他们“保驾护航”~~直到他们走到路边。超级有爱呀~~~博爱的警察蜀黍！', 7, 4, '2013-08-15 15:45:49');
INSERT INTO `follow` VALUES (1, 1, 1, '2013-08-14 14:25:49');
INSERT INTO `channel` VALUES (1, 'TheDailyShow', '每一个优秀的人，都有一段沉默的时光。那一段时光，是付出了很多努力，忍受孤独和寂寞。', 'https://lh3.googleusercontent.com/-vdFZnVWkv4A/AAAAAAAAAAI/AAAAAAAAAF4/htRO1z5SDeU/s120-c/photo.jpg', 1, 7, 21, 2, 1, '2013-08-14 14:45:49');
INSERT INTO `video` VALUES (1, 'http://v.youku.com/v_show/id_XNTk0NDU4ODU2.html?f=19561778', 'U.S. Postal Service Logging All Mail for Law Enforcement', 'http://p1.v.iask.com/349/782/108331779_1.jpg');
INSERT INTO `video` VALUES (2, 'http://v.y
-- D.  These questions use the table 'score', which has fields 'student_id',
--     'event_id', and 'score'.
-- 
-- 1.  Write a query returning records only for student_id 10.
-- 2.  Write a query returning records only for event_id 3.
-- 3.  Write a query returning records with scores above 15.
-- 4.  Write a query returning records with scores above 15 for event_id 5.
-- 5.  Write a query counting the number of records for each event.
-- 6.  Write a query counting the number of records for each combination of
--      values for event_id and student_id.  (HINT: Add something to the GROUP BY
--      clause.)   Is there any count greater than one?
-- 7.  Write a query averaging the score for each event.
-- 8.  Write a query averaging the score for each student.
-- 9.  Write a query reporting the count of records and average score for each event.
-- 10.  BONUS Write a query returning the standard deviation for the score for
--     each event.  (Hint: Google.)
-- 
SELECT
    *
FROM
    sa
-- drop static views
DROP view view_biz_event_metadata;
DROP VIEW view_biz_event_defect_network_time_by_app_server;
DROP VIEW view_biz_event_defect_network_time_by_web_server;
DROP VIEW view_biz_event_defect_network_time_by_slowest_lowest_back_comp;
DROP VIEW view_biz_event_defect_network_time_by_slowest_lowest_comp;
DROP VIEW view_biz_event_defect_network_time_by_usergroup;
DROP VIEW view_biz_event_defect_time_by_app_server;
DROP VIEW view_biz_event_defect_time_by_web_server;
DROP VIEW view_biz_event_defect_time_by_slowest_lowest_back_comp;
DROP VIEW view_biz_event_defect_time_by_slowest_lowest_comp;
DROP VIEW view_biz_event_defect_time_by_usergroup;
DROP VIEW view_biz_event_defect_time_by_user_agent;
DROP VIEW view_biz_event_defect_network_time_by_user_agent;
DROP VIEW view_biz_event_defect_app_time_by_app_server;
DROP VIEW view_biz_event_defect_app_time_by_web_server;
DROP VIEW view_biz_event_defect_app_time_by_slowest_lowest_back_comp;
DROP VIEW view_biz_event_defect_app_time_by_sl

DROP VIEW view_biz_event_defect_app_time_by_user_agent;
DROP VIEW view_biz_event_defect_app_time_by_usergroup;
DROP VIEW view_biz_event_defect_logic_time_by_app_server;
DROP VIEW view_biz_event_defect_logic_time_by_web_server;
DROP VIEW view_biz_event_defect_logic_time_by_slowest_lowest_back_comp;
DROP VIEW view_biz_event_defect_logic_time_by_slowest_lowest_comp;
DROP VIEW view_biz_event_defect_logic_time_by_user_agent;
DROP VIEW view_biz_event_defect_backend_time_by_app_server;
DROP VIEW view_biz_event_defect_backend_time_by_web_server;
DROP VIEW view_biz_event_defect_backend_time_by_slowest_lowest_back_comp;
DROP VIEW view_biz_event_defect_backend_time_by_slowest_lowest_comp;
DROP VIEW view_biz_event_defect_backend_time_by_user_agent;
DROP VIEW view_biz_event_defect_backend_time_by_usergroup;
DROP VIEW view_biz_event_defect_web_time_by_app_server;
DROP VIEW view_biz_event_defect_web_time_by_web_server;
DROP VIEW view_biz_event_defect_web_time_by_slowest_lowest_back_comp;
DROP VIEW v
--
-- PostgreSQL database dump
--
SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET search_path = public, pg_catalog;
--
-- Name: viewReadings; Type: VIEW; Schema: public; Owner: daniel
--
CREATE VIEW "viewReadings" AS
    SELECT DISTINCT ON ("Interval".end_time, "MeterData".meter_name, "Reading".channel) "Interval".end_time, "MeterData".meter_name, "Reading".channel, "Reading".raw_value, "Reading".value, "Reading".uom, "IntervalReadData".start_time, "IntervalReadData".end_time AS ird_end_time FROM ((("MeterData" JOIN "IntervalReadData" ON (("MeterData".meter_data_id = "IntervalReadData".meter_data_id))) JOIN "Interval" ON (("IntervalReadData".interval_read_data_id = "Interval".interval_read_data_id))) JOIN "Reading" ON (("Interval".interval_id = "Reading".interval_id))) ORDER BY "Interval".end_time, "MeterData".meter_name, "Reading".channel;
ALTER TABLE public."viewRe
-- To Be Run as SA
--Use Master 
--GRANT VIEW ANY DEFINITION TO automation
-- Automation user should have Dataread, DataWrite?, Execute
declare @dbName nvarchar(1000)
select @dbName = db_name(db_id())
GRANT IMPERSONATE ON USER:: WebReadRegion TO automation
GRANT IMPERSONATE ON USER:: WebUserRegion TO automation
 if (@dbName = 'WebDB')
BEGIN
	GRANT IMPERSONATE ON USER:: WebUserUS TO automation
	GRANT IMPERSONATE ON USER:: WebUserMX TO automation
	GRANT IMPERSONATE ON USER:: WebUserUK TO automation
	GRANT IMPERSONATE ON USER:: WebUserUSMX TO automation
	GRANT IMPERSONATE ON USER:: WebUserFRCA TO automation
	GRANT IMPERSONATE ON USER:: WebReadRegion TO automation
	GRANT IMPERSONATE ON USER:: WebReadUS TO automation
	GRANT IMPERSONATE ON USER:: WebReadMX TO automation
	GRANT IMPERSONATE ON USER:: WebReadUK TO automation
	GRANT IMPERSONATE ON USER:: WebReadUSMX TO automation
	GRANT IMPERSONATE ON USER:: WebReadFRCA TO automation
END
else if (@dbName = 'WebDB_ASIA')
BEGIN
	GRANT IMPERSONATE 
﻿USE [master]
GO
/****** Object:  Database [Multek_ZH_New]    Script Date: 11/06/2014 15:50:18 ******/
CREATE DATABASE [Multek_ZH_New] ON  PRIMARY 
( NAME = N'Muktek_ZH_New', FILENAME = N'D:\Multek_Database\Multek_ZH_New.mdf' , SIZE = 34227200KB , MAXSIZE = UNLIMITED, FILEGROWTH = 102400KB )
 LOG ON 
( NAME = N'Muktek_ZH_New_log', FILENAME = N'D:\Multek_Database\Multek_ZH_New_log.ldf' , SIZE = 65955200KB , MAXSIZE = 2048GB , FILEGROWTH = 102400KB )
GO
ALTER DATABASE [Multek_ZH_New] SET COMPATIBILITY_LEVEL = 80
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [Multek_ZH_New].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [Multek_ZH_New] SET ANSI_NULL_DEFAULT OFF
GO
ALTER DATABASE [Multek_ZH_New] SET ANSI_NULLS OFF
GO
ALTER DATABASE [Multek_ZH_New] SET ANSI_PADDING OFF
GO
ALTER DATABASE [Multek_ZH_New] SET ANSI_WARNINGS OFF
GO
ALTER DATABASE [Multek_ZH_New] SET ARITHABORT OFF
GO
ALTER DATABASE [Multek_ZH_New] SET AUTO_CLOSE OFF
GO
ALTER DATABAS

GO
ALTER DATABASE [Multek_ZH_New] SET AUTO_SHRINK OFF
GO
ALTER DATABASE [Multek_ZH_New] SET AUTO_UPDATE_STATISTICS ON
GO
ALTER DATABASE [Multek_ZH_New] SET CURSOR_CLOSE_ON_COMMIT OFF
GO
ALTER DATABASE [Multek_ZH_New] SET CURSOR_DEFAULT  GLOBAL
GO
ALTER DATABASE [Multek_ZH_New] SET CONCAT_NULL_YIELDS_NULL OFF
GO
ALTER DATABASE [Multek_ZH_New] SET NUMERIC_ROUNDABORT OFF
GO
ALTER DATABASE [Multek_ZH_New] SET QUOTED_IDENTIFIER OFF
GO
ALTER DATABASE [Multek_ZH_New] SET RECURSIVE_TRIGGERS OFF
GO
ALTER DATABASE [Multek_ZH_New] SET  DISABLE_BROKER
GO
ALTER DATABASE [Multek_ZH_New] SET AUTO_UPDATE_STATISTICS_ASYNC OFF
GO
ALTER DATABASE [Multek_ZH_New] SET DATE_CORRELATION_OPTIMIZATION OFF
GO
ALTER DATABASE [Multek_ZH_New] SET TRUSTWORTHY OFF
GO
ALTER DATABASE [Multek_ZH_New] SET ALLOW_SNAPSHOT_ISOLATION OFF
GO
ALTER DATABASE [Multek_ZH_New] SET PARAMETERIZATION SIMPLE
GO
ALTER DATABASE [Multek_ZH_New] SET READ_COMMITTED_SNAPSHOT OFF
GO
ALTER DATABASE [Multek_ZH_New] SET HONOR_BROKER_PRIORITY O
﻿CREATE TABLE [Production].[ProductModelIllustration] (
    [ProductModelID] INT      NOT NULL,
    [IllustrationID] INT      NOT NULL,
    [ModifiedDate]   DATETIME CONSTRAINT [DF_ProductModelIllustration_ModifiedDate] DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY CLUSTERED ([ProductModelID] ASC, [IllustrationID] ASC),
    CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY ([IllustrationID]) REFERENCES [Production].[Illustration] ([IllustrationID]),
    CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])
);
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default constraint value of GETDATE()', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'CONSTRAINT', @level2name = N'D

GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key constraint referencing Illustration.IllustrationID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'CONSTRAINT', @level2name = N'FK_ProductModelIllustration_Illustration_IllustrationID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key constraint referencing ProductModel.ProductModelID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'CONSTRAINT', @level2name = N'FK_ProductModelIllustration_ProductModel_ProductModelID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key (clustered) constraint', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'CONSTRAINT', @level2name = N'

GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Cross-reference table mapping product models and illustrations.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key. Foreign key to ProductModel.ProductModelID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'COLUMN', @level2name = N'ProductModelID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key. Foreign key to Illustration.IllustrationID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'COLUMN', @level2name = N'IllustrationID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time the record was last updated.', @le
﻿CREATE TABLE [Production].[ProductModelIllustration] (
    [ProductModelID] INT      NOT NULL,
    [IllustrationID] INT      NOT NULL,
    [ModifiedDate]   DATETIME CONSTRAINT [DF_ProductModelIllustration_ModifiedDate] DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY CLUSTERED ([ProductModelID] ASC, [IllustrationID] ASC),
    CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY ([IllustrationID]) REFERENCES [Production].[Illustration] ([IllustrationID]),
    CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])
);
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default constraint value of GETDATE()', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'CONSTRAINT', @level2name = N'D

GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key constraint referencing Illustration.IllustrationID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'CONSTRAINT', @level2name = N'FK_ProductModelIllustration_Illustration_IllustrationID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key constraint referencing ProductModel.ProductModelID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'CONSTRAINT', @level2name = N'FK_ProductModelIllustration_ProductModel_ProductModelID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key (clustered) constraint', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'CONSTRAINT', @level2name = N'

GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Cross-reference table mapping product models and illustrations.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key. Foreign key to ProductModel.ProductModelID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'COLUMN', @level2name = N'ProductModelID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key. Foreign key to Illustration.IllustrationID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelIllustration', @level2type = N'COLUMN', @level2name = N'IllustrationID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time the record was last updated.', @le
-- triggerD.test
-- 
-- db eval {
--     DROP TABLE t1;
--     CREATE TABLE t1(w,x,y,z);
--     CREATE TRIGGER r1 BEFORE INSERT ON t1 BEGIN
--       INSERT INTO log VALUES('r1', new.rowid, new.oid, new._rowid_, new.x);
--     END;
--     CREATE TRIGGER r2 AFTER INSERT ON t1 BEGIN
--       INSERT INTO log VALUES('r2', new.rowid, new.oid, new._rowid_, new.x);
--     END;
--     CREATE TRIGGER r3 BEFORE UPDATE ON t1 BEGIN
--       INSERT INTO log VALUES('r3.old', old.rowid, old.oid, old._rowid_, old.x);
--       INSERT INTO log VALUES('r3.new', new.rowid, new.oid, new._rowid_, new.x);
--     END;
--     CREATE TRIGGER r4 AFTER UPDATE ON t1 BEGIN
--       INSERT INTO log VALUES('r4.old', old.rowid, old.oid, old._rowid_, old.x);
--       INSERT INTO log VALUES('r4.new', new.rowid, new.oid, new._rowid_, new.x);
--     END;
--     CREATE TRIGGER r5 BEFORE DELETE ON t1 BEGIN
--       INSERT INTO log VALUES('r5', old.rowid, old.oid, old._rowid_, old.x);
--     END;
--     CREATE TRIGGER r6 AFTE

--       INSERT INTO log VALUES('r6', old.rowid, old.oid, old._rowid_, old.x);
--     END;
-- }
DROP TABLE t1;
CREATE TABLE t1(w,x,y,z);
CREATE TRIGGER r1 BEFORE INSERT ON t1 BEGIN
INSERT INTO log VALUES('r1', new.rowid, new.oid, new._rowid_, new.x);
END;
CREATE TRIGGER r2 AFTER INSERT ON t1 BEGIN
INSERT INTO log VALUES('r2', new.rowid, new.oid, new._rowid_, new.x);
END;
CREATE TRIGGER r3 BEFORE UPDATE ON t1 BEGIN
INSERT INTO log VALUES('r3.old', old.rowid, old.oid, old._rowid_, old.x);
INSERT INTO log VALUES('r3.new', new.rowid, new.oid, new._rowid_, new.x);
END;
CREATE TRIGGER r4 AFTER UPDATE ON t1 BEGIN
INSERT INTO log VALUES('r4.old', old.rowid, old.oid, old._rowid_, old.x);
INSERT INTO log VALUES('r4.new', new.rowid, new.oid, new._rowid_, new.x);
END;
CREATE TRIGGER r5 BEFORE DELETE ON t1 BEGIN
INSERT INTO log VALUES('r5', old.rowid, old.oid, old._rowid_, old.x);
END;
CREATE TRIGGER r6 AFTER DELETE ON t1 BEGIN
INSERT INTO log VALUES('r6', old.rowid, old.oid, old._rowid_, old.x);

read /Users/%YourUserNameHere%/Sites/emailAuth/sql/_tables.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/accountData.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/accountRoles.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/check.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/checkAccessToken.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/checkOTP.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/confirm.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/confirmInvite.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/ea.account_pwd_change.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/ea.account_pwd_change_request.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/ea.account_set_password.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/emailAuth.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/emailAuth_service.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/invite.sql;
read /Users/%YourU

read /Users/%YourUserNameHere%/Sites/emailAuth/sql/newAuthCode.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/newCode.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/newConfirmationCode.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/newOTPSecret.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/OTPSecret.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/OTPUri.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/passwordCheck.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/register.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/registerUser.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/roles.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/sendConfirmation.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/sendInvitation.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/temporaryTables.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sql/token.sql;
read /Users/%YourUserNameHere%/Sites/emailAuth/sq
--------------------------------------------------------
-- Archivo creado  - viernes-abril-04-2014   
--------------------------------------------------------
DROP TABLE "REFERENCIA"."TPRY_EMPRESA" cascade constraints;
--------------------------------------------------------
--  DDL for Table TPRY_EMPRESA
--------------------------------------------------------
  CREATE TABLE "REFERENCIA"."TPRY_EMPRESA" 
   (	"EMPR_ID" VARCHAR2(5 BYTE), 
	"EMPR_NOMBRE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA" ;
REM INSERTING into REFERENCIA.TPRY_EMPRESA
SET DEFINE OFF;
Insert into REFERENCIA.TPRY_EMPRESA (EMPR_ID,EMPR_NOMBRE) values ('FXE','Ferromex');
Insert into REFERENCIA.TPRY_EMPRESA (EMPR_ID,EMPR_NOMBRE) values ('FSR

--------------------------------------------------------
--  DDL for Index TGENEMPRESA_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "REFERENCIA"."TGENEMPRESA_PK" ON "REFERENCIA"."TPRY_EMPRESA" ("EMPR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  Constraints for Table TPRY_EMPRESA
--------------------------------------------------------
  ALTER TABLE "REFERENCIA"."TPRY_EMPRESA" ADD CONSTRAINT "PK_EMPR_ID" PRIMARY KEY ("EMPR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACH
--------------------------------------------------------
--  File created - Saturday-April-04-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table RM_CASE_CLASSIFICATIONS
--------------------------------------------------------
  CREATE TABLE "MART_USER"."RM_CASE_CLASSIFICATIONS" 
   (	"ENTERPRISE_ID" NUMBER DEFAULT SYS_CONTEXT('ARGUS_MART_CTX','enterprise_id'), 
	"CASE_ID" NUMBER, 
	"SEQ_NUM" NUMBER, 
	"CLASSIFICATION_ID" NUMBER, 
	"DELETED" DATE, 
	"DLP_REVISION_NUMBER" NUMBER, 
	"REVISION_DELETE_FLAG" NUMBER DEFAULT 0, 
	"DELETED_FLAG" NUMBER(1,0), 
	"EFFECTIVE_START_DATE" DATE, 
	"EFFECTIVE_END_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE

--------------------------------------------------------
--  DDL for Index PK_RM_CASE_CLASSIFICATIONS
--------------------------------------------------------
  CREATE UNIQUE INDEX "MART_USER"."PK_RM_CASE_CLASSIFICATIONS" ON "MART_USER"."RM_CASE_CLASSIFICATIONS" ("ENTERPRISE_ID", "CASE_ID", "SEQ_NUM", "DLP_REVISION_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AM_MART_INDEX_01" ;
--------------------------------------------------------
--  DDL for Index I_RM_CASE_CLASSIFICATIONS
--------------------------------------------------------
  CREATE INDEX "MART_USER"."I_RM_CASE_CLASSIFICATIONS" ON "MART_USER"."RM_CASE_CLASSIFICATIONS" ("ENTERPRISE_ID", "CASE_ID", "EFFECTIVE_END_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 10485

  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AM_MART_INDEX_01" ;
--------------------------------------------------------
--  Constraints for Table RM_CASE_CLASSIFICATIONS
--------------------------------------------------------
  ALTER TABLE "MART_USER"."RM_CASE_CLASSIFICATIONS" ADD CONSTRAINT "PK_RM_CASE_CLASSIFICATIONS" PRIMARY KEY ("ENTERPRISE_ID", "CASE_ID", "SEQ_NUM", "DLP_REVISION_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "AM_MART_INDEX_01"  ENABLE;
  ALTER TABLE "MART_USER"."RM_CASE_CLASSIFICATIONS" MODIFY ("ENTERPRISE_ID" NOT NULL ENABLE);
  ALTER TABLE "MART_USER"."RM_CASE_CLASSIFICATIONS" MODIFY ("DELETED_FLAG" NOT NULL ENABLE);
  ALTER TABLE "MART_USER"."RM_CASE_CL
USE VIVALDI
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF  EXISTS (
	SELECT * FROM dbo.sysobjects 
	WHERE 	id = OBJECT_ID(N'[dbo].[spS_Worst3ScenariosRel]') AND 
		OBJECTPROPERTY(id,N'IsProcedure') = 1
	)
DROP PROCEDURE [dbo].[spS_Worst3ScenariosRel]
GO
CREATE PROCEDURE [dbo].[spS_Worst3ScenariosRel] 
	@RefDate datetime
AS
SET NOCOUNT ON;
SELECT	ScensA.ReportId
		, ScensA.FundId
		, ScensA.ReportDate
--		, ScensA.PortPerf
		, RANK() OVER (PARTITION BY ScensA.FundId 
		ORDER BY (ScensA.PortPerf - ScensA.BenchPerf) ASC) AS RankNo
INTO	#RankedSc
FROM		tbl_ScenReports AS ScensA 
WHERE		ScensA.ReportDate = @RefDate
			AND ScensA.PortPerf IS NOT NULL
			AND ScensA.BenchPerf IS NOT NULL
SELECT	Scenarios.ReportId
		, Scenarios.FundId
		, Scenarios.ReportDate
		, Scenarios.MktVal
		, (Scenarios.Portperf*Scenarios.MktVal/NaVs.CostNAV)/100 AS PortPerf
		, Scenarios.BenchPerf/100 AS BenchPerf
		, (Scenarios.Portperf*Scenarios.MktVal/NaVs.CostNAV - Scenarios.BenchPerf)/100 AS RelativePerf


		, Funds.FundCode
		, RepDets.ScenLabel
		, (CASE WHEN Scenarios.BenchPerf IS NULL THEN 0 ELSE 1 END) AS IsRelative
		, Funds.HoDLongName AS HoD
		, '<b>' + Funds.FundCode + ' - <i>' + Funds.FundName + '</i></b>  <font color="gray">(' 
			+ FundClass + ', ' + VehicleName 
			+ ISNULL(', benchmark: ' + BenchLong, '')
			+ ')</font>' AS FundLabel
FROM	tbl_ScenReports AS Scenarios JOIN
		#RankedSc AS Ranked ON (
			Scenarios.ReportId = Ranked.ReportId
			AND Scenarios.FundId = Ranked.FundId
			AND Scenarios.ReportDate = Ranked.ReportDate
			) LEFT JOIN 
		tbl_EnumScen AS RepDets ON (
			Scenarios.ReportId = RepDets.ID 
			) LEFT JOIN
		tbl_FundsNaVsAndPls AS NaVs ON (
			Scenarios.FundId = NaVs.FundId
			AND Scenarios.ReportDate = NaVs.NavPLDate
			) LEFT JOIN
		vw_FundsTypology AS Funds ON (
			Funds.FundId = Scenarios.FundId
			) 
WHERE	Scenarios.ReportDate = @RefDate
		AND Ranked.RankNo <= 3
ORDER BY	Funds.FundCode ASC
		, Scenarios.PortPerf ASC
DROP TABLE #RankedSc
GRANT EXECUTE ON 
  --Address View
SELECT dropIfExists('VIEW', 'address', 'api');
  CREATE OR REPLACE VIEW api.address AS
  SELECT 
    addr_number::varchar AS address_number,
    addr_line1 AS address1,
    addr_line2 AS address2,
    addr_line3 AS address3,
    addr_city AS city,
    addr_state AS state,
    addr_postalcode AS postal_code,
    addr_country AS country,
    addr_active AS active,
    addr_notes AS notes,
    ''::TEXT AS change       
  FROM
    addr;
GRANT ALL ON TABLE api.address TO xtrole;
COMMENT ON VIEW api.address IS 'Address';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.address DO INSTEAD
SELECT    saveAddr(
	    NULL,
            NEW.address_number,
            NEW.address1,
            NEW.address2,
            NEW.address3,
            NEW.city,
            NEW.state,
            NEW.postal_code,
            NEW.country,
            COALESCE(NEW.active,TRUE),
            NEW.notes,
            NULL);
CREATE OR REPLACE RULE "_UPDATE" AS
    ON UPDATE TO api.
DELIMITER $$
DROP TRIGGER IF EXISTS `observation_after_update`$$
CREATE TRIGGER `observation_after_update` AFTER UPDATE
ON `obs`
FOR EACH ROW
BEGIN
   SET @visit = (SELECT COALESCE((SELECT id FROM flat_table2 WHERE patient_id = new.person_id AND DATE(visit_date) = DATE(new.obs_datetime) LIMIT 1), 0));
   SET @encounter_type = COALESCE(( SELECT encounter_type FROM encounter
                            WHERE patient_id = new.person_id
                            AND DATE(encounter_datetime) = DATE(new.obs_datetime)
                            AND encounter_id = new.encounter_id
                            AND voided = 0 AND encounter_type NOT IN (6, 7, 9, 25, 51, 52, 53, 54, 68, 119)), 0);
   IF (@encounter_type = 0 ) THEN
     CALL proc_insert_observations(
          new.person_id,
          DATE(new.obs_datetime),
          new.concept_id,
          new.value_coded,
          new.value_coded_name_id,
          new.value_text,
          new.value_numeric,
          new.value_datetime,
 

          @visit,
          new.voided,
          new.encounter_id
      );
    SET @current_hiv_program_state = (SELECT current_hiv_program_state FROM flat_table2 WHERE id = @visit LIMIT 1);
    SET @current_state = (SELECT IFNULL(current_state_for_program(new.person_id,1,new.obs_datetime), 'Unknown') AS state);
    IF ISNULL(@current_hiv_program_state) THEN
      SET @patient_program_id = ( SELECT patient_program_id FROM patient_program
                                          WHERE patient_id = new.person_id
                                          AND program_id = 1
                                          AND voided = 0
                                          ORDER BY date_enrolled DESC
                                          LIMIT 1);
      SET @latest_patient_hiv_state = ( SELECT state FROM patient_state
                                        WHERE patient_program_id = @patient_program_id
                                        AND start_date <= DATE(new.obs_datetime)
 
USE [Lenawee]
GO 
--UPDATE dbo.NewTrainingData 
--SET car_value = v.NewCarValue, 
--	risk_factor = v.NewRiskFactor,
--	C_previous = v.NewCPrevious,
--	duration_previous = v.NewDurationPrev
--fROM dbo.NewTrainingData nd
--JOIN dbo.TrainingDataMissingValues v
--	ON v.CustomerID = nd.Customer_id
SELECT 'Original Missing Car Values'AS'Variable', COUNT(*)'Total'
FROM dbo.TrainingData
WHERE car_value IS NULL 
	UNION 
SELECT 'New Missing Car Values', COUNT(*) 
FROM dbo.NewTrainingData
WHERE car_value IS NULL 
	UNION
SELECT 'Original Missing Risk Factors', COUNT(*) 
FROM dbo.TrainingData
WHERE risk_factor IS NULL 
	UNION 
SELECT 'New Missing Risk Factors', COUNT(*) 
FROM dbo.NewTrainingData
WHERE risk_factor IS NULL 
	UNION 
SELECT 'Original Missing Previous Coverage', COUNT(*) 
FROM dbo.TrainingData
WHERE C_previous IS NULL 
	UNION 
SELECT 'New Missing Previous Coverage', COUNT(*) 
FROM dbo.NewTrainingData
WHERE C_previous IS NULL 
	UNION 
SELECT 'Original Missing Duration', COUNT(*) 
FROM db
# These data are a subset http://0-www.ncbi.nlm.nih.gov.elis.tmu.edu.tw/geo/query/acc.cgi?acc=GSE27619 from GEO, specifically:
# GSM721116, GSM721117, GSM721118, GSM721119, GSM721123, GSM721124
## LNCaP and PrEC are the names of prostate cancer cell lines used in this GEO dataset
## As you may have noticed, any lines starting with a hash (`#') are ignored 
## This file is based on the columns, so if you add extraneous columns, they will not be read into the program (ie you can add comments)
####
# This is a tab-delimited file, with the following columns:
# bam_prefix	id	group	gender	read_type	strandedness
## bam_prefix = the filename, without the .bam
## id = (user-defined, could be anything)
## group = (user-defined, could be anything)
## gender = male --or-- female
## read_type = single_read --or-- paired_end
## strandedness = whether the cDNA library preparation was strand-specific or not. values = "strand_specific" --or-- "not_strand_specific"
test-data/GSM721117_mctp_20F0GAAXX_1_c
insert into SYS_Menu values('Url_Supplier_SequenceOrder','탤埼데','Menu.SupplierMenu',65,'탤埼데',null,'~/Content/Images/Nav/Default.png',1)
go	
insert into SYS_Menu values('Url_Supplier_SequenceOrder_View','꿴였','Url_Supplier_SequenceOrder',100,'꿴였','~/SequenceMaster/Index','~/Content/Images/Nav/Default.png',1)
go	
insert into ACC_Permission values('Url_Supplier_SequenceOrder_View','탤埼데-꿴였','SupplierMenu')
go
update  BAT_Trigger set Interval=1 ,IntervalType=4 where id =210
go
alter table FIS_CreateSeqOrderDAT alter column uploadDate datetime null
go
alter table FIS_CreateSeqOrderDAT alter column IsCreateDat bit not null
go
 update SYS_Menu set IsActive=0 where Code='Url_SequenceOrder_Detail_Distribution'
 go
 update SYS_Menu set IsActive=1 where Code='Url_SequenceOrder_Distribution'
 go
 update SYS_Menu set PageUrl='~/SequenceMaster/Index/10' where Code='Url_SequenceOrder_View'
 go
 update SYS_Menu set PageUrl='~/SequenceMaster/Index/20' where Code='Url_SequenceOrder_View_Distribution'
 go 

CREATE PROCEDURE [dbo].[sp_Question_GetPagedList]
	@surveyNumber int = null
	,@startRowIndex int = 0
	,@maximumRows int = 20
	,@recordCount int OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
	--若參數型別對應到.net的實值型別，並且參數允許null，請務必檢查is null並給預設值
	--if (@int is null) set @int = -1; 
	declare @sql nvarchar(max);
	set @sql = dbo.fn_GeneratePagedSql(
	'[Question]' --table
	, '[Number], [SurveyNumber], [Section], [Title], [Description], [Sequence],[Guid],[OptionDisplayType],[OptionIsVerticalList],[OptionDisplayPerRow],[OptionMultipleSelection],[OptionLimitMin],[OptionLimitMax],[OptionDisplayLines],[OptionIsRequired],[OptionLabelLeft],[OptionLabelRight],[OptionLevelStart],[OptionLevelEnd],[OptionShowOther],[OptionAppendToChoice], [OptionOtherLabel]' --reutrn columns
	, '[Number]' --sortExpressions
	, 'where [SurveyNumber] = isNull(@surveyNumber,[SurveyNumber])
	' --where conditions
	)
	EXECUTE sp_executesql @sql, N'@surveyNumber int, @startRowIndex int,@maximumRows int , @recordCount int output'
		,@surveyNumb
-- -----------------------------------------
-- Firebolt Supreme De Novo Variant Finder--   (it's that fast)
-- -----------------------------------------
delete from {FAMILY}_1VCF where instr(uniLocVCF, 'GL') != 0;  #gets rid of VCF lines that don't link back to a proper chromosome (these cause trouble later)
delete from {FAMILY}_2VCF where instr(uniLocVCF, 'GL') != 0;  #same as above, but for dad
ALTER TABLE {FAMILY}_1VCF MODIFY uniLocVCF varchar(15) NOT NULL UNIQUE;  #declares that each line of the vcf will have a locus listed and it will be unique
ALTER TABLE {FAMILY}_2VCF MODIFY uniLocVCF varchar(15) NOT NULL UNIQUE;  #same as above, but for dad
create table {FAMILY}_genotemp1 as select uniLoc, geneList, GenotypeVCF proband_geno, FILTERVCF, Genotype_QualityVCF, Variant_Confidence_Quality_by_DepthVCF,
				Depth_CountedVCF depth_proband, Reference_readsVCF Ref_reads_proband, Alt_readsVCF Alt_read_proband, Ref_read_percentVCF Ref_read_pct_proband,
				A_readVCF A_read_proband, G_readV

	from {FAMILY}_0_rare_damage;  #builds a new table by extracting values from the rare_and_damage table for the patient that we will need to test the genotype
alter table {FAMILY}_genotemp1 add primary key (uniLoc, geneList);  #adds indexing to columns we may (or definitely will) want to search on in the new table
Alter table {FAMILY}_genotemp1 add CONSTRAINT `genotemp1`
    FOREIGN KEY (`uniLoc`)
    REFERENCES `{FAMILY}_1VCF` (`uniLocVCF`);  #tells mySQL that each entry in the uniLoc column is going to be connected an entry in mom's VCF table.  We are now pivoting on the uniLoc column to speed up the searches
create table {FAMILY}_genotemp2 as select {FAMILY}_genotemp1.*, 
		{FAMILY}_1VCF.GenotypeVCF mom_geno, {FAMILY}_1VCF.Depth_CountedVCF Depth_mom, {FAMILY}_1VCF.Reference_readsVCF Ref_read_mom, {FAMILY}_1VCF.Alt_readsVCF Alt_read_mom, {FAMILY}_1VCF.Ref_read_percentVCF Ref_read_pct_mom,
		{FAMILY}_1VCF.A_readVCF A_read_mom, {FAMILY}_1VCF.G_readVCF G_read_mom, {FAMILY}_1VCF.T_readVC

	from {FAMILY}_genotemp1
		left join {FAMILY}_1VCF on {FAMILY}_genotemp1.uniLoc = {FAMILY}_1VCF.uniLocVCF; #creates a new table using the previously generated table with the child's info and looking up mom's info based on the locus, for which we just had it build up a list of linkage (this is like telling it to find something when it already knows where it is)
alter table {FAMILY}_genotemp2 add primary key (uniLoc, geneList);  #adds indexing like above
drop table {FAMILY}_genotemp1; #deletes genotemp1 (we no longer need it and all of its data is on genotemp2)
Alter table {FAMILY}_genotemp2 add CONSTRAINT `genotemp2` 
    FOREIGN KEY (`uniLoc`)
    REFERENCES `{FAMILY}_2VCF` (`uniLocVCF`); #like above, tells SQL that the uniLoc column ties in to another table, only this time the father's locus column
create table {FAMILY}_genotypes as select {FAMILY}_genotemp2.*, 
		{FAMILY}_2VCF.GenotypeVCF dad_geno, {FAMILY}_2VCF.Depth_CountedVCF Depth_dad, {FAMILY}_2VCF.Reference_readsVCF Ref_read_d
--------------------------------------------------------
--  File created - Wednesday-May-28-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for View HV_EQUITY_CHECK_EOD1
--------------------------------------------------------
  CREATE OR REPLACE FORCE VIEW HV_EQUITY_CHECK_EOD1 (SOURCE, NAV_DATE, SECURITY, STK_SEC_ID, AMT, TICKER, S_STK_ID, NSE_CODE, NSE_CLOSE, BSE_CODE, BSE_CLOSE) AS 
  SELECT 'NSE' AS SOURCE,
  TRADED.NAV_DATE,
  TRADED.SECURITY,
  TRADED.STK_SEC_ID,
  TRADED.AMT,
  TRADED.TICKER,
  TRADED.S_STK_ID,
  NSE.NSE_CODE AS NSE_CODE,
  NSE.NSE_CLOSE,
  NULL AS BSE_CODE,
  NULL BSE_CLOSE
FROM
  (SELECT SCHNAVBD.SECURITY,
    SECURITY.STK_SEC_ID,
    -SUM(SCHNAVBD.AMOUNT)/SUM(SCHNAVBD.UNITS) AMT,
    SECURITY.TICKER,
    SCHNAVBD.NAV_DATE,
    SUBSTR(SECURITY.STK_SEC_ID,3,(LENGTH(SECURITY.STK_SEC_ID)-2)) S_STK_ID
  FROM HI_SCHNAVBD_CURR SCHNAVBD,
    HM_SECURITY SECURITY
  WHERE SCHNAVBD.SECURI

  AND ( (SCHNAVBD.INVEST_TYPE ='INVEST')
  AND (SCHNAVBD.UNITS        <>'0')
  AND (SECURITY.ASSET_TYPE    ='01')
  AND (SECURITY.SECURITY     <>SECURITY.STK_SEC_ID)
  AND (SCHNAVBD.SCHEME NOT   IN ('HDFCSX','HDFCS+','HDFCNY'))
  AND (SECURITY.RECTYPE       ='L') )
  AND SECURITY.SECURITY      <>'ARSSINF'
    --AND (schnavbd.NAV_DATE=(select cur_date-1 from sysparam where rectype='L'))
  GROUP BY SCHNAVBD.SECURITY,
    SECURITY.STK_SEC_ID,
    SECURITY.TICKER,
    SCHNAVBD.NAV_DATE
  ) TRADED,
  HI_NSE NSE
WHERE NSE.NSE_CODE = TRADED.S_STK_ID(+)
AND NSE.NSE_DT     = TRADED.NAV_DATE
UNION ALL
SELECT 'BSE' AS SOURCE,
  TRADED.NAV_DATE,
  TRADED.SECURITY,
  TRADED.STK_SEC_ID,
  TRADED.AMT,
  TRADED.TICKER,
  TRADED.S_STK_ID,
  NULL AS NSE_CODE,
  NULL NSE_CLOSE,
  BSE.BSE_CODE AS BSE_CODE,
  BSE.BSE_CLOSE
FROM
  (SELECT SCHNAVBD.SECURITY,
    SECURITY.STK_SEC_ID,
    -SUM(SCHNAVBD.AMOUNT)/SUM(SCHNAVBD.UNITS) AMT,
    SECURITY.TICKER,
    SCHNAVBD.NAV_DATE,
    SUBSTR(SECURITY.STK_SEC_ID,
SET search_path TO xml;
-- Write functions using the descendant axe...
create table a (i int, data doc, targ_path xml.path, new_node node, add_mode add_mode);
insert into a values
(1, '<root><x><b><test1/><x><b><test2/></b></x></b><a><b><test3/></b><d/></a></x></root>', '/root//x/b', '<new/>', 'r'),
(2, '<root><x><c><test1/><x><b><test2/></b></x></c><a><b><test3/></b><d/></a></x></root>', '/root//x/b', '<new/>', 'b'),
(3, '<root><x><b><test1/><x><b><test2/></b></x></b><a><b><test3/></b><d/></a></x></root>', '/root//x/b', '<new/>', 'a'),
(4, '<root><x><b><test1/><x><b><test2/></b></x></b><a><b><test3/></b><d/></a></x></root>', '/root//x//b', '<new/>', 'r'),
(5, '<root><x><b><test1/><x><b><test2/></b></x></b><a><b><test3/></b><d/></a></x></root>', '/root//x//b', '<new/>', 'a'),
(6, '<root><x><b><test1/><x><b><test2/></b></x></b><a><b><test3/></b><d/></a></x></root>', '//x//b', '<new/>', 'r'),
(7, '<root><x><b><test1/><x><b><test2/></b></x></b><a><b><test3/></b><d/></a></x></root>', '//x/

(8, '<root><x><c><test1/><x><b><test2/></b></x></c><a><b><test3/></b><d/></a></x></root>', '/root//x/b', '<new/>', 'i');
-- Specifically, addition must not take place multiple times for the same node. 
insert into a values
(9, '<root><x><c><test1/><x><b><test2/></b></x></c><a><b><test3/></b><d/></a></x></root>', '/root//x//b', '<new/>', 'b'),
(8, '<root><x><b><test1/><x><b><test2/></b></x></b><a><b><test3/></b><d/></a></x></root>', '/root//x//b', '<new/>', 'i'),
(10, '<root><x><c><test1/><x><b><test2/></b></x></c><a><b><test3/></b><d/></a></x></root>', '//x//b', '<new/>', 'b'),
(11, '<root><x><b><test1/><x><b><test2/></b></x></b><a><b><test3/></b><d/></a></x></root>', '//x//b', '<new/>', 'i'),
(12, '<root><x><a/><b/><b><c/></b><x><b i="1"/></x><b/></x></root>', '/root//x//b', '<n/>', 'i');
select node_debug_print(data), targ_path, add_mode, new_node, node_debug_print(xml.add(data, targ_path, new_node, add_mode))
from a
order by a.i;
-- Add a node that matches the xpath.
update a set n

select node_debug_print(data), targ_path, add_mode, new_node, node_debug_print(xml.add(data, targ_path, new_node, add_mode))
from a
order by a.i;
-- Add a subtree that contains matching nodes (i.e.  infinite recursion could take place).
update a set new_node='<x><b><x/></b></x>';
select node_debug_print(data), targ_path, add_mode, new_node, node_debug_print(xml.add(data, targ_path, new_node, add_mode))
from a
order by a.i;
-- Similar to the previous one, just a document fragment is added instead of a single (though compound) node.
update a set new_node='<x><b><x/></b></x><b><x><b/></x></b>';
select node_debug_print(data), targ_path, add_mode, new_node, node_debug_print(xml.add(data, targ_path, new_node, add_mode))
from a
order by a.i;
-- And finally test node removal
drop table a;
create table a (i int, data doc, targ_path xml.path);
insert into a values 
(1, '<root><x><b><test1/><x><b><test2/></b></x></b><a><b><test3/></b><d/></a></x></root>', '/root/x/b'),
(2, '<root><x><b><test1/><
CREATE TABLE "eventapp_participant_log" (
    "mod_type" char(1),
    "mod_timestamp" timestamp default CURRENT_TIMESTAMP,
    "id" varchar(11),
    "entryid" varchar(11),
    "firstname" varchar(50),
    "surname" varchar(50),
    "club" varchar(7),
    "si" numeric(9, 0),
    "simode" varchar(1),
    "cls" varchar(10),
    "laps" varchar(50),
    "note" text,
    "accomid" varchar(11),
    "accommcount" smallint,
    "accommnights" smallint,
    "accommnote" text,
    "accommfee" numeric(10, 2),
    "entryfee" numeric(10, 2),
    "sifee" numeric(10, 2),
    "created" timestamp with time zone,
    "modified" timestamp with time zone
);
CREATE RULE eventapp_participant_delete AS ON DELETE TO eventapp_participant DO
INSERT INTO eventapp_participant_log VALUES (
    'D',
    CURRENT_TIMESTAMP,
    old.id,
    old.entryid,
    old.firstname,
    old.surname,
    old.club,
    old.si,
    old.simode,
    old.cls,
    old.laps,
    old.note,
    old.accomid,
    old.accommcount,
    old.acc
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `item_soulbound_trade_data`;
CREATE TABLE `item_soulbound_trade_data` (
  `itemGuid` int(10) unsigned NOT NULL COMMENT 'Item GUID',
  `allowedPlayers` text NOT NULL COMMENT 'Space separated GUID list of players who can receive this item in trade',
  PRIMARY KEY (`itemGuid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Item Refund System';
LOCK TABLES `item_soulbound_trade_data` WRI
-- -----------------------------------------
-- Firebolt Supreme De Novo Variant Finder--   (it's that fast)
-- -----------------------------------------
delete from {FAMILY}_1VCF where instr(uniLocVCF, 'GL') != 0;  #gets rid of VCF lines that don't link back to a proper chromosome (these cause trouble later)
delete from {FAMILY}_2VCF where instr(uniLocVCF, 'GL') != 0;  #same as above, but for dad
#ALTER TABLE {FAMILY}_1VCF MODIFY uniLocVCF varchar(15) NOT NULL UNIQUE;  #declares that each line of the vcf will have a locus listed and it will be unique
#ALTER TABLE {FAMILY}_2VCF MODIFY uniLocVCF varchar(15) NOT NULL UNIQUE;  #same as above, but for dad
create table {FAMILY}_genotemp1 as select uniLoc, geneList, GenotypeVCF proband_geno, FILTERVCF, Genotype_QualityVCF, Variant_Confidence_Quality_by_DepthVCF,
				Depth_CountedVCF depth_proband, Reference_readsVCF Ref_reads_proband, Alt_readsVCF Alt_read_proband, Ref_read_percentVCF Ref_read_pct_proband,
				A_readVCF A_read_proband, G_rea

	from {FAMILY}_0_rare_damage;  #builds a new table by extracting values from the rare_and_damage table for the patient that we will need to test the genotype
#alter table {FAMILY}_genotemp1 add primary key (uniLoc, geneList);  #adds indexing to columns we may (or definitely will) want to search on in the new table
#Alter table {FAMILY}_genotemp1 add CONSTRAINT `genotemp1`
#    FOREIGN KEY (`uniLoc`)
#    REFERENCES `{FAMILY}_1VCF` (`uniLocVCF`);  #tells mySQL that each entry in the uniLoc column is going to be connected an entry in mom's VCF table.  We are now pivoting on the uniLoc column to speed up the searches
ALTER TABLE {FAMILY}_genotemp1 ADD INDEX (uniLoc), ADD INDEX (geneList);
create table {FAMILY}_genotemp2 as select {FAMILY}_genotemp1.*, 
		{FAMILY}_1VCF.GenotypeVCF mom_geno, {FAMILY}_1VCF.Depth_CountedVCF Depth_mom, {FAMILY}_1VCF.Reference_readsVCF Ref_read_mom, {FAMILY}_1VCF.Alt_readsVCF Alt_read_mom, {FAMILY}_1VCF.Ref_read_percentVCF Ref_read_pct_mom,
		{FAMILY}_1VCF.A_r

	from {FAMILY}_genotemp1
		left join {FAMILY}_1VCF on {FAMILY}_genotemp1.uniLoc = {FAMILY}_1VCF.uniLocVCF; #creates a new table using the previously generated table with the child's info and looking up mom's info based on the locus, for which we just had it build up a list of linkage (this is like telling it to find something when it already knows where it is)
#alter table {FAMILY}_genotemp2 add primary key (uniLoc, geneList);  #adds indexing like above
drop table {FAMILY}_genotemp1; #deletes genotemp1 (we no longer need it and all of its data is on genotemp2)
#Alter table {FAMILY}_genotemp2 add CONSTRAINT `genotemp2` 
#    FOREIGN KEY (`uniLoc`)
#    REFERENCES `{FAMILY}_2VCF` (`uniLocVCF`); #like above, tells SQL that the uniLoc column ties in to another table, only this time the father's locus column
ALTER TABLE {FAMILY}_genotemp2 ADD INDEX (uniLoc), ADD INDEX (geneList);
create table {FAMILY}_genotypes as select {FAMILY}_genotemp2.*, 
		{FAMILY}_2VCF.GenotypeVCF dad_geno, {FAMILY}
/* DELIMITER GO */
 /* 
 NB: This file contains several comments which prevent Liquibase from 
 splitting triggers into their component statements. 
 */
DROP TRIGGER IF EXISTS `HDocument_Update`
GO
CREATE TRIGGER `HDocument_Update`
   BEFORE UPDATE ON `HDocument`
   FOR EACH ROW BEGIN
      IF NEW.revision != OLD.revision THEN
         INSERT INTO HDocumentHistory(document_id,revision,contentType,docId,locale,name,path,lastChanged,last_modified_by_id,obsolete) 
            VALUES (OLD.id,OLD.revision,OLD.contentType,OLD.docId,OLD.locale,OLD.name,OLD.path,OLD.lastChanged,OLD.last_modified_by_id,OLD.obsolete); /* don't GO */
      END IF; /* don't GO */
   END
GO
DROP TRIGGER IF EXISTS `HTextFlow_Update`
GO
CREATE TRIGGER `HTextFlow_Update`
   BEFORE UPDATE on `HTextFlow`
   FOR EACH ROW BEGIN
      IF NEW.revision != OLD.revision THEN
         INSERT INTO HTextFlowHistory(tf_id,revision,content, obsolete, pos)
            VALUES (OLD.id,OLD.revision,OLD.content,OLD.obsolete,OLD.pos); /*
/* wait event latency  last minute
   output looks like
   NAME                      TIME_WAITED WAIT_COUNT      AVGMS
   ------------------------- ----------- ---------- ----------
   log file parallel write         2.538          4      6.345
   log file sync                   2.329          1     23.287
   db file sequential read             0          0
   db file scattered read              0          0
   direct path read                    0          0
   direct path read temp               0          0
   direct path write                   0          0
   direct path write temp              0          0
*/
col name for a25
select -- m.intsize_csec,
       n.name ,
       round(m.time_waited,3) time_waited,
       m.wait_count,
       round(10*m.time_waited/nullif(m.wait_count,0),3) avgms
from v$eventmetric m,
     v$event_name n
where m.event_id=n.event_id
  and n.name in (
                  'db file sequential read',
                  'db file scattered read',
               
-- 6.1.3 (A) --
SELECT model, speed, hd_size 
FROM PC
WHERE (price < 1000)
-- 6.1.3 (B) --
SELECT model, speed AS gigahertz, hd_size AS gigabytes
FROM PC
WHERE (price < 1000)
-- 6.1.3 (C) --
SELECT model
FROM Printer
-- 6.1.3 (D) --
SELECT model, ram, screen_size
FROM Laptop
WHERE (price > 1500)
-- 6.1.3 (E) --
SELECT * 
FROM Printer
WHERE (color = 1)
-- 6.1.3 (F) --
SELECT model, hd_size
FROM PC
WHERE (speed = 3.2) AND (price < 2000)
-- 6.2.2 (A) --
SELECT model, speed
FROM Laptop
WHERE (hd_size >= 30)
-- 6.2.2 (B) --
SELECT DISTINCT PC.model, PC.price, Laptop.model, Laptop.price, Printer.model, Printer.price
FROM Product, PC, Laptop, Printer
WHERE (Product.maker = 'B')
-- 6.2.2 (C) --
SELECT DISTINCT maker
FROM Product P
WHERE (P.ptype = 'pc')
EXCEPT
SELECT DISTINCT maker
FROM Product P
WHERE (P.ptype = 'laptop')
-- 6.2.2 (D) --
SELECT hd_size
FROM PC
GROUP BY hd_size
HAVING COUNT(model) >= 2
-- 6.2.2 (E) --
SELECT PC1.model, PC2.model
FROM PC PC1, PC PC2
WHERE PC1.model < PC2.model 

-- 6.2.2 (F) --
SELECT DISTINCT P1.maker
FROM Product P1, Product P2
WHERE (P1.maker = P2.maker)
AND P1.model IN 
	(SELECT PC.model
	 FROM PC
	 WHERE PC.speed > 3.00
	 UNION
	 SELECT Laptop.model
	 FROM Laptop
     WHERE Laptop.speed > 3.00)
AND P2.model IN 
	(SELECT PC.model
	 FROM PC
	 WHERE PC.speed > 3.00
	 UNION
	 SELECT Laptop.model
	 FROM Laptop
	 WHERE Laptop.speed > 3.00)
AND P1.model <> P2.model
-- 6.3.1 (A) --
SELECT DISTINCT Product.maker
FROM Product, PC
WHERE (Product.ptype = 'pc') AND (Product.model = PC.model AND PC.speed >= 3.0);
-- 6.3.1 (B) --
SELECT model, price 
FROM Printer, 
(SELECT MAX(price) AS maxPrice  
FROM Printer) AS mp 
WHERE price = mp.maxPrice
-- 6.3.1 (C) --
SELECT *
FROM Laptop 
WHERE Laptop.speed < (SELECT MIN(speed) FROM PC)
-- 6.3.1 (D) --
SELECT  model 
FROM (SELECT  model, price 
      FROM PC
      WHERE price = (SELECT MAX(price) 
                     FROM PC)
      UNION
      SELECT model, price 
      FROM Laptop
      WHERE price = (SELECT

                     FROM Laptop)
      UNION
      SELECT model, price 
      FROM Printer
      WHERE price = (SELECT MAX(price) 
                     FROM Printer)
      ) T WHERE price = (SELECT MAX(price) 
						 FROM Laptop);
-- 6.3.1 (E) --
SELECT DISTINCT maker
FROM Product
WHERE model = 
	SELECT MIN(P.model)
	FROM
	(
		SELECT model 
		FROM Printer
		WHERE color = 1
	) P
) AND ptype = 'printer'
-- 6.3.1 (F) -- 
SELECT DISTINCT maker
	FROM Product
	WHERE model = 
	(
		SELECT T.model
		FROM
		(
		SELECT TOP 1 P.model, MAX(P.speed) AS speed
		FROM
		(
			SELECT model, speed 
			FROM PC
			WHERE ram = 
			(
				SELECT MIN(ram) 
				FROM PC
			)
		) P 
		GROUP BY model
		ORDER BY speed DESC
	) T
SELECT P.model, MAX(P.speed) AS speed
FROM
	SELECT model, speed 
	FROM PC
	WHERE ram = 
	(
		SELECT MIN(ram) 
		FROM PC
	)
) P 
GROUP BY model
ORDER BY speed DESC
-- 6.4.6 (A) --
SELECT AVG(speed) as avg_speed
FROM PC
-- 6.4.6 (B) --
SELECT AVG(L.speed) as avg_speed
FROM
	SELECT *
	FROM lap
﻿EXEC bx_Drop 'bx_ThreadCateModelFields';
CREATE TABLE [bx_ThreadCateModelFields] (
	 [FieldID]              int             IDENTITY(1, 1)					NOT NULL    CONSTRAINT [PK_bx_ThreadCateModelFields]                  PRIMARY KEY ([FieldID])
    ,[ModelID]				int                                             NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_ModelID]          DEFAULT (0)
    ,[FieldName]			nvarchar(50)	COLLATE Chinese_PRC_CI_AS_WS	NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_FieldName]        DEFAULT ('')
    ,[Enable]				bit                                             NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_Enable]           DEFAULT (1) 
    ,[SortOrder]			int                                             NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_SortOrder]        DEFAULT (0)
	,[FieldType]			varchar(50)		COLLATE Chinese_PRC_CI_AS_WS	NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_FieldType]        DEFAULT ('')
	,[Description]			nvarchar(1000)

    ,[FieldTypeSetting]	    ntext		    COLLATE Chinese_PRC_CI_AS_WS    NOT NULL	CONSTRAINT [DF_bx_ThreadCateModelFields_FieldSetting]     DEFAULT ('')
    ,[Search]				bit                                             NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_Search]           DEFAULT (0) 
    ,[AdvancedSearch]		bit                                             NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_AdvancedSearch]   DEFAULT (0) 
    ,[DisplayInList]		bit                                             NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_DisplayInList]    DEFAULT (0) 
    ,[MustFilled]			bit                                             NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_MustFilled]       DEFAULT (0)
    --,[ModelID]				int                                             NOT NULL    CONSTRAINT [DF_bx_ThreadCateModelFields_ModelID]          DEFAULT (0) 
);
/*
Name: 分类主题
Columns:
	[Field]		   ID
	[ModelID]	   模板ID
    [FieldName]    名称
    [Enab
/*
1-jan-10,lau@ciysys.com
- This table stores the application log or process log. For example, when a nightly job is running
  it will append a record on when the process starts and stops.
  
*/
if not exists(
	select *
	from sys.objects
	where name = 'tb_log'
begin
	CREATE TABLE tb_log (
		log_id BIGINT NOT NULL,
		log_type_id INT NOT NULL,
		workstation NVARCHAR(255) NOT NULL,
		uid NVARCHAR(255) NOT NULL,
		msg NVARCHAR(MAX) NULL,
		remarks NVARCHAR(255) NULL,
		is_sent INT NOT NULL,
		app_id INT NOT NULL,
		module_id INT NOT NULL,
		
		modified_on DATETIME NOT NULL,
		modified_by NVARCHAR(255) NOT NULL,
		created_on DATETIME NOT NULL,
		created_by NVARCHAR(255) NOT NULL
	);
end
go
if not exists(
	select *
	from sys.objects
	where name = 'PK_tb_log'
begin
	ALTER TABLE tb_log 
	ADD CONSTRAINT PK_tb_log 
	PRIMARY KEY (
		log_id
	);
end
go
if not exists(
	select *
	from sys.indexes
	where name = 'IX_tb_log_2'
begin
	CREATE INDEX IX_tb_log_2 ON tb_log (log_type_id);
end
go
if not exist
﻿/****** Object:  Table [dbo].[fr_Forum_LastRead]    Script Date: 27/06/2014 12:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fr_Forum_LastRead]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[fr_Forum_LastRead](
	[Id] [uniqueidentifier] NOT NULL,
	[ApplicationId] [uniqueidentifier] NOT NULL,
	[ContentId] [uniqueidentifier] NOT NULL,
	[UserId] [int] NOT NULL,
	[LastReadContentId] [uniqueidentifier] NOT NULL,
	[LastReadReplyCount] [int] NOT NULL,
	[LastReadDate] [datetime] NOT NULL,
 CONSTRAINT [PK_fr_Forum_LastRead] PRIMARY KEY CLUSTERED 
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [dbo].[fr_Forum_LastRead] ADD  CONSTRAINT [DF_fr_Forum_LastRead_Id]  DEFAULT (newid()) FOR [Id]
CREATE UNIQUE NONCLUSTERED INDEX [IX_fr_Forum_LastRead_Application_Content_User] ON [dbo].[fr
set linesize 160
set pagesize 50
col currently_used format a16
col host format a25
spool /home/oracle/amchecks/dba_licence.txt APPEND
SELECT d.name as database, (select host_name from v$instance) as host, dfus.name, dfus.detected_usages, dfus.currently_used, dfus.version
FROM   dba_feature_usage_statistics dfus, v$database d
WHERE  version = (SELECT MAX(dfus2.version) FROM dba_feature_usage_statistics dfus2
                                         WHERE dfus2.name = dfus.name)
AND    detected_usages > 0
AND    d.dbid = dfus.dbid
AND    (dfus.name in ('Partitioning (user)', 'Active Data Guard - Real-Time Query on Physical Standby', 'Transparent Data Encryption', 'Data Redaction',
                      'SecureFile Encryption (user)', 'SecureFile Compression (user)', 'SecureFile Deduplication (user)', 'Backup HIGH Compression', 'Backup LOW Compression',
                      'Backup MEDIUM Compression', 'Backup ZLIB Compression', 'HeapCompression', 'Hybrid Columnar Compression')
    OR (d
-- Drop the existing table (if any)
DROP TABLE "CS414S16"."QUESTION_TAKEN";
--------------------------------------------------------
--  DDL for Table QUESTION_TAKEN
--------------------------------------------------------
  CREATE TABLE "CS414S16"."QUESTION_TAKEN" 
   (	"QUESTION_TAKEN_ID" NUMBER, 
	"TEST_TAKEN_ID" NUMBER, 
	"QUESTION_ID" NUMBER, 
	"POINTS_EARNED" NUMBER, 
	 CONSTRAINT "QUESTION_TAKEN_PK" PRIMARY KEY ("QUESTION_TAKEN_ID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 PCTTHRESHOLD 50;
--------------------------------------------------------
--  DDL for Index QUESTION_TAKEN_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "CS414S16"."QUESTION_TAKEN_PK" ON "CS414S16"."QUESTION_TAKEN" ("QUESTION_T

  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table QUESTION_TAKEN
--------------------------------------------------------
  ALTER TABLE "CS414S16"."QUESTION_TAKEN" ADD CONSTRAINT "QUESTION_TAKEN_PK" PRIMARY KEY ("QUESTION_TAKEN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "CS414S16"."QUESTION_TAKEN" MODIFY ("POINTS_EARNED" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."QUESTION_TAKEN" MODIFY ("QUESTION_ID" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."QUESTION_TAKEN" MODIFY ("TEST_
SELECT 
            p.id, p.name, p.keywords, br.name AS brand, v.ean, v.price, 
            routing_parser(p.slug) AS routing, v.sku AS reference,
            util_loc.city AS town,
            city_expanded_parser(util_loc.city, util_loc.postcode) AS city_expanded,
            coordinate_parser(util_loc.latitude, util_loc.longitude) AS coordinate,
            cat.title AS category,
            cat.parent_ids AS category_ids,
            cat.parent_ids AS category_path,
            nav.label AS navigation,
            nav.parent_ids AS navigation_ids,
            nav.parent_ids AS navigation_path,
            p.description AS content,
            image_url_parser(p.gallery) AS image,
            p.status, p.is_saleable as saleable, 
            v.stock, 
            availability_parser(p.available_for_mail_order,
            p.available_in_my_shop) AS availability,
            ss.idShop AS shops,
            v.special_price AS special_price, v.id AS special_price_variant_id, 
        

        FROM 
            product AS p 
        INNER JOIN 
            (
            SELECT  
                v1.*, MIN(v1.price) minprice
            FROM    
                variant AS v1
            GROUP BY 
                v1.product_id
        ) AS v
            ON p.id = v.product_id AND v.price = minprice
        LEFT JOIN 
            products_categories AS pc
            ON p.id = pc.product_id
        LEFT JOIN 
            category AS cat
            ON pc.category_id = cat.id
        LEFT JOIN 
            navigations_categories AS nc
            ON nc.category_id = cat.id
        LEFT JOIN 
            navigation AS nav
            ON nav.id = nc.navigation_id
        LEFT JOIN     
            products_shops AS ps
            ON p.id = ps.product_id
        LEFT JOIN 
            shop_shop AS ss
            ON ps.shop_id = ss.idShop
        LEFT JOIN 
            util_location AS util_loc
            ON ss.idLocation = util_loc.idLocation
        LEFT JOIN 
           
INSERT INTO os.ao_queue
        (queue_id, status, queue_date, start_date, end_date, error_message, num_rows,
        id, refresh_type,                 
        target_schema_name, target_table_name, target_append_only, target_compressed, target_row_orientation,
        source_type, source_server_name, source_instance_name, source_port, source_database_name, 
        source_schema_name, source_table_name, source_user_name, source_pass,
        column_name, sql_text, snapshot)
SELECT  queue_id, status, queue_date, start_date, end_date, error_message, num_rows,
        id, refresh_type,                 
        (target).schema_name, (target).table_name, false as append_only, false as target_compressed, true as target_row_orientation,
        (source).type, (source).server_name, (source).instance_name, (source).port, (source).database_name, 
        (source).schema_name, (source).table_name, (source).user_name, (source).pass,
        column_name, sql_text, coalesce(snapshot, false) AS sna
IF OBJECT_ID('dbo.wsp_newEmailEasyStepGuide') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newEmailEasyStepGuide
    IF OBJECT_ID('dbo.wsp_newEmailEasyStepGuide') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newEmailEasyStepGuide >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newEmailEasyStepGuide >>>'
END
go
 /***********************************************************************
**
** CREATION:
**   Author:  Jack Veiga
**   Date:  October 18 2002
**   Description:  Inserts row into EmailEasyStepGuide
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
*************************************************************************/
CREATE PROCEDURE wsp_newEmailEasyStepGuide
 @email CHAR(129)
,@userId NUMERIC(12,0)
AS
DECLARE @return INT
SELECT @email = UPPER(@email)
IF NOT EXISTS (SELECT 1 FROM EmailEasyStepGuide WHERE email = @email)
	BEGIN
		DECLARE @dateCreated DATETIME
		EXEC @return = wsp_GetDateGMT @dateCreated OUTPUT
		IF @return != 0
    
--------------------------------------------------------
--  DDL for Index PK_TERMINER_ETAPE
--------------------------------------------------------
  CREATE UNIQUE INDEX "G11_FLIGHT"."PK_TERMINER_ETAPE" ON "G11_FLIGHT"."TERMINER_ETAPE" ("TOUR_ANNEE", "PART_NUM", "ETAPE_NUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA"  LOCAL
 (PARTITION "TERMINER_ETAPE_2012" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2013" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PA

  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2015" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2016" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2017" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST 
/* user */
create table user(
	id int unsigned primary key auto_increment,
	name varchar(20) default '',
	nickname varchar(20) default '',
	anoy_name varchar(20) default '',
	created int unsigned default 0,
	last_login_time int unsigned default 0,
	last_login_ip int unsigned default 0,
	status tinyint default 1
);
create table userinfo(
	uid int unsigned default 0,
	sex tinyint unsigned default 0,
	sex_pub tinyint unsigned default 1,
	birth varchar(10) default '',
	birth_pub tinyint unsigned default 0,
	from_id varchar(10) default '',
	live_id varchar(10) default '',
	married tinyint unsigned default 1,
	married_pub tinyint unsigned default 1,
	job varchar(255) default '',
	sign varchar(255) default '',
	n_bbs_post int unsigned default 0,
	n_bbs_cmt int unsigned default 0,
	n_bbs_mark int unsigned default 0
);
/* bbs */
drop table if exists bbs_post;
create table bbs_post(
	id int unsigned primary key auto_increment,
	nid int default 0 comment '结点id',
	title varchar(255),
	uid int defa

	content text,
	ctime int default 0,
	n_mark int default 0,
	n_click int default 0,
	n_cmt int default 0,
	n_like int default 0,
	is_show tinyint default 1,
	status tinyint default 1 comment '1-未审核，0-已审核',
	last_cmt_ctime int unsigned default 0,
	last_cmt_userid int unsigned default 0,
	last_cmt_username varchar(20) default ''
);
drop table if exists bbs_append;
create table bbs_append(
	id int unsigned primary key auto_increment,
	pid int unsigned default 0,
	content text,
	ctime int unsigned default 0,
	is_show tinyint default 1,
	status tinyint default 1 comment '1-未审核，0-已审核'
);
drop table if exists bbs_node;
create table bbs_node(
	id int unsigned primary key auto_increment,
	name varchar(50) default '',
	n_post int unsigned default 0,
	unique name(name)
);
drop table if exists bbs_mark;
create table bbs_mark
	uid int unsigned default 0,
	pid int unsigned default 0,
	ctime int unsigned default 0,
	unique uni(uid, pid)
);
drop table if exists bbs_like;
create table bbs_like
	uid in

	pid int unsigned default 0,
	ctime int unsigned default 0,
	unique uni(uid, pid)
);
drop table if exists bbs_cmt;
create table bbs_cmt(
	id int unsigned primary key auto_increment,
	pid int unsigned default 0,
	uid int unsigned default 0,
	content text,
	n_like int unsigned default 0,
	ctime int unsigned default 0,
	is_show tinyint default 1,
	status tinyint default 1
);
drop table if exists bbs_cmt_like;
create table bbs_cmt_like
	uid int unsigned default 0,
	cid int unsigned default 0,
	ctime int unsigned default 0,
	unique uni(uid, pid)
);
drop table if exists bbs_notice;
create table bbs_notice(
	id int unsigned primary key auto_increment,
	suid int unsigned default 0,
	ruid int unsigned default 0,
	pid int unsigned default 0,
	cid int unsigned default 0,
	ctime int unsigned default 0,
	has_read tinyint unsigned default 0
);
/* site */
drop table if exists site_setting;
create table site_setting(
	k varchar(20) default '',
	v varchar(255) default '',
	unique k(k) 
);
drop table i
-- ============================
-- This file was created using Derby's dblook utility.
-- Timestamp: 2013-08-03 20:08:42.546
-- Source database is: ACMEDatabase
-- Connection URL is: jdbc:derby://localhost:1527/ACMEDatabase;user=dbuser;password=secret
-- Specified schema is: ACMEBANK
-- appendLogs: false
-- ----------------------------------------------
-- DDL Statements for schemas
-- ----------------------------------------------
CREATE SCHEMA "ACMEBANK";
-- ----------------------------------------------
-- DDL Statements for tables
-- ----------------------------------------------
CREATE TABLE "ACMEBANK"."EMPLOYEE" ("ID_EMPLOYEE" INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), "FIRSTNAME" VARCHAR(100), "LASTNAME" VARCHAR(100));
-- ----------------------------------------------
-- DDL Statements for keys
-- ----------------------------------------------
-- primary/unique
ALTER TABLE "ACMEBANK"."EMPLOYEE" ADD CONSTRAINT "SQL130803190026350" PRIMARY KEY ("
--------------------------------------------------------
-- Archivo creado  - viernes-abril-04-2014   
--------------------------------------------------------
DROP TABLE "REFERENCIA"."TPRY_RESPONSABLES" cascade constraints;
--------------------------------------------------------
--  DDL for Table TPRY_RESPONSABLES
--------------------------------------------------------
  CREATE TABLE "REFERENCIA"."TPRY_RESPONSABLES" 
   (	"RESP_ID" NUMBER, 
	"RESP_NOMBRE" VARCHAR2(10 BYTE), 
	"RESP_AP_PATERNO" VARCHAR2(10 BYTE), 
	"RESP_AP_MATERNO" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA" ;
REM INSERTING into REFERENCIA.TPRY_RESPONSABLES
SET DEFINE OFF;
Insert into REFERENCIA.TPRY_RESPONSABLES (RESP_ID,RESP_NOMBRE,RESP_

Insert into REFERENCIA.TPRY_RESPONSABLES (RESP_ID,RESP_NOMBRE,RESP_AP_PATERNO,RESP_AP_MATERNO) values (2,'Manuel','Ortegon','Quintana');
Insert into REFERENCIA.TPRY_RESPONSABLES (RESP_ID,RESP_NOMBRE,RESP_AP_PATERNO,RESP_AP_MATERNO) values (3,'Mara','Rodelo','López');
Insert into REFERENCIA.TPRY_RESPONSABLES (RESP_ID,RESP_NOMBRE,RESP_AP_PATERNO,RESP_AP_MATERNO) values (4,'Guillermo','Perea','Rivera');
Insert into REFERENCIA.TPRY_RESPONSABLES (RESP_ID,RESP_NOMBRE,RESP_AP_PATERNO,RESP_AP_MATERNO) values (5,'Hansi','Martínez','Salinas');
--------------------------------------------------------
--  DDL for Index TPRY_RESPONSABLES_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "REFERENCIA"."TPRY_RESPONSABLES_PK" ON "REFERENCIA"."TPRY_RESPONSABLES" ("RESP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FL
--如果模块卸载不干净可以尝试以下SQL语句清理
--模块 字段 Sql约束
select * from ir_model_fields where model like 'xz.%';
select * from ir_model_constraint where model in (select id from ir_model where model like 'xz.%');
select * from ir_model_relation where model in (select id from ir_model where model like 'xz.%');
select * from ir_model where model like 'xz.%';
--视图 动作
select * from ir_ui_view where model like 'xz.%';
select * from ir_act_window where res_model like 'xz.%';
--
select * from ir_act_window_view where view_id in (select id from ir_ui_view where model like 'xz.%');
select * from ir_act_window_view where act_window_id in (select id from ir_act_window where res_model like 'xz.%');
--
select * from ir_ui_menu order by id desc limit 50;
select * from ir_values order by id desc limit 50;
--清除数据
delete from ir_model_fields where model like 'xz.%';
delete from ir_model_constraint where model in (select id from ir_model where model like 'xz.%');
delete from ir_model_relation where model in (select id fro
-- 
-- Customers Data to be inserted into table customer
-- 
insert into customer(customer_password,customer_phone_no,customer_first_name,customer_last_name, customer_address,customer_postcode)
	values(1234,95200813,"Peter","Conforto","12 Cassandra Crescent Heathcote", 2233);
insert into customer(customer_password,customer_phone_no,customer_first_name,customer_last_name, customer_address,customer_postcode)
	values(1234,94323452,"Connor", "Sorensen", "64 Berambing Crescent Michinbury", 2770);
insert into customer(customer_password,customer_phone_no,customer_first_name,customer_last_name, customer_address,customer_postcode)
	values(1234,94320412, "Caleb", "Cusack", "80 Marley Point Road Suggan Buggan", 3885 );
insert into customer(customer_password,customer_phone_no,customer_first_name,customer_last_name, customer_address,customer_postcode)
	values(1234, 94356543, "Jacob", "Nickle", "5 Holthouse Road Birdwood", 5234);
insert into customer(customer_password,customer_phone_no,customer_firs

	values(1234, 94325643, "Archer", "Becher", "18 Magnolia Drive Padstow", 2211);
insert into customer(customer_password,customer_phone_no,customer_first_name,customer_last_name, customer_address,customer_postcode)
	values(1234, 94872647, "Callum", "Shenton", "88 Shirley Street Stapylton", 4207);
insert into customer(customer_password,customer_phone_no,customer_first_name,customer_last_name, customer_address,customer_postcode)
	values(1234, 93425213, "Jaxon", "Carlile", "52 Ranworth Road Willagee", 6153 );
insert into customer(customer_password,customer_phone_no,customer_first_name,customer_last_name, customer_address,customer_postcode)
	values(1234, 93212345, "Lola", "Carrodus", "45 Cornish Street Deer Park", 3012);
insert into customer(customer_password,customer_phone_no,customer_first_name,customer_last_name, customer_address,customer_postcode)
	values(1234, 94323456, "Marcus", "Heane", "16 Pelican Road Lindisfarine", 7015 );
insert into customer(customer_password,customer_phone_no,c
/********************************************************************************
 Title:			Disk Usage
 Created by:	Mark S. Rasmussen <mark@improve.dk>
 License:		CC BY 3.0
 Usage:
 List of all disks on which there are files, including overall usage statistics.
 ********************************************************************************/
WITH TMP AS
	SELECT
		f.type_desc AS [Type],
		SUBSTRING(f.physical_name, 1, 1) AS [Drive Letter],
		s.size_on_disk_bytes / 1024 / 1024 AS [Size in MB],
		CAST(CAST(s.io_stall_read_ms AS FLOAT) / CAST(s.num_of_reads AS FLOAT) AS DECIMAL(10, 2)) AS [Read Latency in MS],
		CAST(CAST(s.io_stall_write_ms AS FLOAT) / CAST(s.num_of_writes AS FLOAT) AS DECIMAL(10, 2)) AS [Write Latency in MS],
		s.num_of_reads AS [Num Reads],
		s.num_of_bytes_read / s.num_of_reads AS [Avg Bytes Per Read],
		s.num_of_bytes_read / 1024 / 1024 AS [Total Reads in MB],
		s.num_of_writes AS [Num Writes],
		s.num_of_bytes_written / s.num_of_writes AS [Avg Bytes Per Write],
		s.
DELETE FROM EmergencyContact
INSERT INTO EmergencyContact
SELECT ReachID,
 'Contact ' + cast(ReachID as varchar(10)), --NameOfContact varchar(50),
 cast(ABS(Checksum(NewID()) % 100000) + 1 as varchar(10)) + ' Main St.', --StreetAddress1 varchar(50),
 'Level ' + cast(ABS(Checksum(NewID()) % 2) + 1 as varchar(10)), --StreetAddress2 varchar(50),
 'Apt. ' + cast(ABS(Checksum(NewID()) % 49) + 1 as varchar(2)), --StreetAddress3 varchar(50),
 City, --City varchar(50),
 State, --State varchar(30),
 Zip, --Zip varchar(50),
 cast(ABS(Checksum(NewID()) % 8998) + 1000 as varchar(4)), --Zip4 varchar(50),
 cast(ABS(Checksum(NewID()) % 898) + 100 as varchar(3)) + cast(ABS(Checksum(NewID()) % 898) + 100 as varchar(3)) + cast(ABS(Checksum(NewID()) % 8988) + 1000 as varchar(4)), --Phone varchar(50),
 NULL --PhoneWork varchar(50)
FROM Patient
UPDATE EmergencyContact
SET PhoneWork = left(Phone, 3) + + cast(ABS(Checksum(NewID()) % 898) + 100 as varchar(3)) + cast(ABS(Checksum(NewID()) % 8988) + 1000 as var
CREATE TABLE &ppxuser..orders_range (
    order_id                                 NUMBER(12)   NOT NULL
  , order_date                               TIMESTAMP(6) NOT NULL
  , order_mode                               VARCHAR2(8)
  , customer_id                              NUMBER(12) NOT NULL
  , order_status                             NUMBER(2)
  , order_total                              NUMBER(8,2)
  , sales_rep_id                             NUMBER(6)
  , promotion_id                             NUMBER(6)
  , warehouse_id                             NUMBER(6)
  , delivery_type                            VARCHAR2(15)
  , cost_of_delivery                         NUMBER(6)
  , wait_till_all_available                  VARCHAR2(15)
  , delivery_address_id                      NUMBER(12)
  , customer_class                           VARCHAR2(30)
  , card_id                                  NUMBER(12)
  , invoice_address_id                       NUMBER(12)
PARTITION BY RANGE (order_date) 
CREATE TABLE "COUNTERS"."WEBREQEST" 
   (	"WEBREQESTID" NUMBER(18,0) NOT NULL ENABLE, 
	"ID_BD" NUMBER(5,0) NOT NULL ENABLE, 
	"PROCESSED" NUMBER(1,0) DEFAULT 0, 
	"CCURR" VARCHAR2(1) DEFAULT '0', 
	"CHOUR" VARCHAR2(1) DEFAULT '0', 
	"C24" VARCHAR2(1) DEFAULT '0', 
	"CSUM" VARCHAR2(1) DEFAULT '0', 
	"DFROMHOUR" DATE, 
	"DFROM24" DATE, 
	"DTOHOUR" DATE, 
	"DTO24" DATE, 
	 CONSTRAINT "WEBREQUEST_PK" PRIMARY KEY ("WEBREQESTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "WEBREQEST_BDEV" FOREIGN KEY ("ID_BD")
	  REFERENCES "COUNTERS"."BDEVICES" ("ID_BD") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCRE

  TABLESPACE "USERS" ;
  CREATE UNIQUE INDEX "COUNTERS"."WEBREQUEST_PK" ON "COUNTERS"."WEBREQEST" ("WEBREQESTID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
  ALTER TABLE "COUNTERS"."WEBREQEST" ADD CONSTRAINT "WEBREQUEST_PK" PRIMARY KEY ("WEBREQESTID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "COUNTERS"."WEBREQEST" MODIFY ("ID_BD" NOT NULL ENABLE);
  ALTER TABLE "COUNTERS"."WEBREQEST" MODIFY ("WEBREQESTID" NOT NULL ENABLE);
   COMMENT ON COLUMN "COUNTERS"."WEBREQEST"."ID_BD" IS '->BDEVICES';
   COMMENT ON COLUMN "CO
-- Usuarios
-- begin
CREATE TRIGGER agregar_usuario_docente
AFTER INSERT ON docente
FOR EACH ROW
INSERT INTO users(email,password,tipoUsuario,nroId,estado,created_at)
values (NEW.email,NEW.password,'Docente',NEW.id,NEW.estado,NOW());
CREATE TRIGGER agregar_usuario_personal
AFTER INSERT ON personal
FOR EACH ROW
INSERT INTO users(email,password,tipoUsuario,nroId,estado,created_at)
values (NEW.email,NEW.password,'Personal',NEW.id,NEW.estado,NOW());
CREATE TRIGGER agregar_usuario_alumno
AFTER INSERT ON alumno
FOR EACH ROW
INSERT INTO users(email,password,tipoUsuario,nroId,estado,created_at)
values (NEW.email,NEW.password,'Alumno',NEW.id,NEW.estado,NOW());
-- end
-- Nota Matricula Curso de Carrera tecnica
-- begin
CREATE TRIGGER agregar_notas_ct
AFTER INSERT ON matricula_ct
FOR EACH ROW
INSERT INTO nota_ct(codMatricula_ct,notaa,notab,notac)
values (NEW.id,0,0,0);
-- end
-- Nota Matricula Curso Libre
-- begin
CREATE TRIGGER agregar_notas_cl
AFTER INSERT ON matricula_cl
FOR EACH ROW
INSERT IN
DROP EXTERNAL FUNCTION CREATEDBF;
DROP EXTERNAL FUNCTION CLOSEDBF;
DROP EXTERNAL FUNCTION OpenDBF;
DROP EXTERNAL FUNCTION StateDBF;
DROP EXTERNAL FUNCTION RecNoDBF;
DROP EXTERNAL FUNCTION RecordCountDBF;
DROP EXTERNAL FUNCTION SetRecNoDBF;
DROP EXTERNAL FUNCTION NextInDBF;
DROP EXTERNAL FUNCTION PrevInDBF;
DROP EXTERNAL FUNCTION FirstInDBF;
DROP EXTERNAL FUNCTION LastInDBF;
DROP EXTERNAL FUNCTION EofInDBF;;
DROP EXTERNAL FUNCTION EditDBF;
DROP EXTERNAL FUNCTION PostDBF;
DROP EXTERNAL FUNCTION AppendDBF;
DROP EXTERNAL FUNCTION DeleteDBF;
DROP EXTERNAL FUNCTION CancelDBF;
DROP EXTERNAL FUNCTION PackDBF;
DROP EXTERNAL FUNCTION FieldCountDBF;
DROP EXTERNAL FUNCTION FieldExistsDBF;
DROP EXTERNAL FUNCTION GetFieldNameDBFByIndex;
DROP EXTERNAL FUNCTION GetValueDBFFieldByName;
DROP EXTERNAL FUNCTION SETVALUEDBFFIELDBYNAME;
DROP EXTERNAL FUNCTION ADDFIELDDBF;
DROP EXTERNAL FUNCTION CreateTableDBF;
-- 1.1.3
DROP EXTERNAL FUNCTION ValueIsNullDBF;
-- 1.3
DROP EXTERNAL FUNCTION SetFormatDBF;
DROP E
USE VIvaldi
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF  EXISTS (
	SELECT * FROM dbo.sysobjects 
	WHERE 	id = OBJECT_ID(N'[dbo].[spS_Worst3Scenarios]') AND 
		OBJECTPROPERTY(id,N'IsProcedure') = 1
	)
DROP PROCEDURE [dbo].[spS_Worst3Scenarios]
GO
CREATE PROCEDURE [dbo].[spS_Worst3Scenarios] 
	@RefDate datetime
AS
SET NOCOUNT ON;
SELECT	ScensA.ReportId
		, ScensA.FundId
		, ScensA.ReportDate
--		, ScensA.PortPerf
		, RANK() OVER (PARTITION BY ScensA.FundId ORDER BY ScensA.PortPerf ASC) AS RankNo
INTO	#RankedSc
FROM		tbl_ScenReports AS ScensA 
WHERE		ScensA.ReportDate = @RefDate
			AND ScensA.PortPerf IS NOT NULL
SELECT	Scenarios.ReportId
		, Scenarios.FundId
		, Scenarios.ReportDate
		, Scenarios.MktVal
		, (Scenarios.Portperf*Scenarios.MktVal/NaVs.CostNAV)/100 AS PortPerf
		, Scenarios.BenchPerf/100 AS BenchPerf
		, (Scenarios.Portperf*Scenarios.MktVal/NaVs.CostNAV - Scenarios.BenchPerf)/100 AS RelativePerf
		, Ranked.RankNo
		, Funds.FundCode
		, RepDets.ScenLabel
		, (CASE 
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_talent`;
CREATE TABLE `character_talent` (
  `guid` int(10) unsigned NOT NULL,
  `spell` mediumint(8) unsigned NOT NULL,
  `spec` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guid`,`spell`,`spec`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `character_talent` WRITE;
/*!40000 ALTER TABLE `character_talent` DISABLE KEYS */;
/*!40000 ALTER TABLE `character
CREATE TABLE [mdm].[tblModelVersionFlag]
[ID] [int] NOT NULL IDENTITY(1, 1),
[MUID] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [df_tblModelVersionFlag_MUID] DEFAULT (newid()),
[Model_ID] [int] NOT NULL,
[Name] [nvarchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
[Description] [nvarchar] (500) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
[Status_ID] [tinyint] NOT NULL CONSTRAINT [df_tblModelVersionFlag_Status_ID] DEFAULT ((1)),
[CommittedOnly_ID] [tinyint] NULL,
[EnterDTM] [datetime2] (3) NOT NULL CONSTRAINT [df_tblModelVersionFlag_EnterDTM] DEFAULT (getutcdate()),
[EnterUserID] [int] NOT NULL,
[LastChgDTM] [datetime2] (3) NOT NULL CONSTRAINT [df_tblModelVersionFlag_LastChgDTM] DEFAULT (getutcdate()),
[LastChgUserID] [int] NOT NULL,
[LastChgTS] [timestamp] NOT NULL
) ON [PRIMARY]
GO
ALTER TABLE [mdm].[tblModelVersionFlag] ADD CONSTRAINT [ck_tblModelVersionFlag_CommittedOnly_ID] CHECK (([CommittedOnly_ID]>=(0) AND [CommittedOnly_ID]<=(2)))
GO
ALTER TABLE [mdm].[tblModelVer
DROP TABLE IF EXISTS aff_aff1s;
DROP TABLE IF EXISTS aff_aff2s;
DROP TABLE IF EXISTS aff_aff3s;
DROP TABLE IF EXISTS aff_aff4s;
DROP TABLE IF EXISTS anr_anr1s;
DROP TABLE IF EXISTS anr_anr2s;
DROP TABLE IF EXISTS apt_apts;
DROP TABLE IF EXISTS apt_atts;
DROP TABLE IF EXISTS apt_rwys;
DROP TABLE IF EXISTS apt_arss;
DROP TABLE IF EXISTS apt_rmks;
DROP TABLE IF EXISTS arb_arbs;
DROP TABLE IF EXISTS ats_ats1s;
DROP TABLE IF EXISTS ats_ats2s;
DROP TABLE IF EXISTS ats_ats3s;
DROP TABLE IF EXISTS ats_ats4s;
DROP TABLE IF EXISTS ats_ats5s;
DROP TABLE IF EXISTS ats_rmks;
DROP TABLE IF EXISTS awos_awos1s;
DROP TABLE IF EXISTS awos_awos2s;
DROP TABLE IF EXISTS awy_awy1s;
DROP TABLE IF EXISTS awy_awy2s;
DROP TABLE IF EXISTS awy_awy3s;
DROP TABLE IF EXISTS awy_awy4s;
DROP TABLE IF EXISTS awy_awy5s;
DROP TABLE IF EXISTS awy_rmks;
DROP TABLE IF EXISTS com_coms;
DROP TABLE IF EXISTS fix_fix1s;
DROP TABLE IF EXISTS fix_fix2s;
DROP TABLE IF EXISTS fix_fix3s;
DROP TABLE IF EXISTS fix_fix4s;
DROP TABLE IF

DROP TABLE IF EXISTS fss_fsss;
DROP TABLE IF EXISTS harfix_harfixs;
DROP TABLE IF EXISTS hpf_hp1s;
DROP TABLE IF EXISTS hpf_hp2s;
DROP TABLE IF EXISTS hpf_hp3s;
DROP TABLE IF EXISTS hpf_hp4s;
DROP TABLE IF EXISTS ils_ils1s;
DROP TABLE IF EXISTS ils_ils2s;
DROP TABLE IF EXISTS ils_ils3s;
DROP TABLE IF EXISTS ils_ils4s;
DROP TABLE IF EXISTS ils_ils5s;
DROP TABLE IF EXISTS ils_ils6s;
DROP TABLE IF EXISTS lid_1s;
DROP TABLE IF EXISTS lid_2s;
DROP TABLE IF EXISTS lid_3s;
DROP TABLE IF EXISTS mtr_mtr1s;
DROP TABLE IF EXISTS mtr_mtr2s;
DROP TABLE IF EXISTS mtr_mtr3s;
DROP TABLE IF EXISTS mtr_mtr4s;
DROP TABLE IF EXISTS mtr_mtr5s;
DROP TABLE IF EXISTS natfix_natfixs;
DROP TABLE IF EXISTS nav_nav1s;
DROP TABLE IF EXISTS nav_nav2s;
DROP TABLE IF EXISTS nav_nav3s;
DROP TABLE IF EXISTS nav_nav4s;
DROP TABLE IF EXISTS nav_nav5s;
DROP TABLE IF EXISTS nav_nav6s;
DROP TABLE IF EXISTS pfr_pfr1s;
DROP TABLE IF EXISTS pfr_pfr2s;
DROP TABLE IF EXISTS pja_pja1s;
DROP TABLE IF EXISTS pja_pja2s;
DROP TABLE 
﻿SET NAMES utf8;
ALTER TABLE `hotels` DROP COLUMN `description`;
CREATE TABLE `regions` (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
	`title` VARCHAR(255) NOT NULL,
	`territory_id` BIGINT NOT NULL,
	`health_factors` VARCHAR(255) NULL,
PRIMARY KEY (`id`));
  
CREATE TABLE `resort_zones` (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
	`title` VARCHAR(255) NOT NULL,
	`territory_id` BIGINT NOT NULL,
	`health_factors` VARCHAR(255) NULL,
PRIMARY KEY (`id`));
ALTER TABLE `countries` 
	CHANGE COLUMN `title` `title` VARCHAR(255) NOT NULL,
	CHANGE COLUMN `territory_id` `territory_id` BIGINT(20) NOT NULL,
	ADD COLUMN `health_factors` VARCHAR(255) NULL AFTER `territory_id`;
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('20', 'Основная информация', '', 2, 1, 1, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('21', 'Государство, населе

INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('22', 'Природные лечебные факторы', 'health-factors', 2, 3, 0, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('23', 'Курортная медицина', 'medicine', 2, 4, 0, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('24', 'Курорты', 'resorts', 2, 5, 0, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('25', 'Как проехать на курорты', 'resorts-map', 2, 6, 0, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('26', 'Достопримечательности', 'sights', 2, 7, 0, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `ur

INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('28', 'Основная информация', '', 3, 1, 1, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('29', 'Природные лечебные факторы', 'health-factors', 3, 2, 0, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('30', 'Курорты', 'resorts', 3, 3, 0, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('31', 'Достопримечательности', 'sights', 3, 4, 0, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `order_number`, `show_gallery`, `show_map`, `show_in_anounce`) VALUES ('32', 'Основная информация', '', 4, 1, 1, 0, 0);
INSERT INTO `fieldsets` (`id`, `title`, `url`, `entity_type`, `or
use wigi;
drop view if exists view_user_cellphones;
CREATE VIEW view_user_cellphones AS
SELECT user_id,mobile_id,cellphone from user_mobile where status = '1';
drop view if exists view_credit_cards;
CREATE VIEW view_credit_cards AS
SELECT user_credit_card_id as id,user_id,last4,description,'1' as `type` from user_credit_card;
drop view if exists view_bank_accounts;
CREATE VIEW view_bank_accounts AS
SELECT user_bank_account_id as id,user_id,last4,description,'2' as `type` from user_bank_account;
drop view if exists view_account_summary;
CREATE VIEW view_account_summary AS
SELECT user_id,mobile_id,cellphone,sum(balance) as balance,sum(temp_balance) as temp_balance from user_mobile group by mobile_id,user_id,cellphone;
drop view if exists view_unconfirmed_bank_accounts;
CREATE VIEW view_unconfirmed_bank_accounts AS
SELECT * from user_bank_account where status = '0';
drop view if exists view_unconfirmed_credit_cards;
CREATE VIEW view_unconfirmed_credit_cards AS
SELECT * from user_credit_ca
﻿CREATE VIEW dbo.v_BasicRole
AS
SELECT          Id, Code, Name
FROM              dbo.v_BasicRole_ican5
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
       

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  

      End
      Begin Tables = 
         Begin Table = "v_BasicRole_ican5"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 122
               Right = 203
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'v_BasicRole';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'd
-- Start of generated script for 10.12.2.193-afa-AFA (afa)
--  Jul-25-2008 at 14:35:10
--#QSCOMMAND
  EXPORT TO './RCC_REKBAL.ixf'
  OF IXF
  SELECT * FROM "AFA"."RCC_REKBAL";
--#SYNC 10;
DROP TABLE "AFA"."RCC_REKBAL";
--#SYNC 20;
CREATE TABLE "AFA"."RCC_REKBAL"
 ("BJEDTE"  VARCHAR(8)      NOT NULL,
  "BSPSQN"  VARCHAR(12)     NOT NULL,
  "BRSFLG"  VARCHAR(1),
  "TRCCO"   VARCHAR(7),
  "NCCWKDAT"VARCHAR(8),
  "TRCDAT"  VARCHAR(8),
  "TRCNO"   VARCHAR(8),
  "SNDMBRCO"VARCHAR(10),
  "RCVMBRCO"VARCHAR(10),
  "SNDBNKCO"VARCHAR(10),
  "SNDBNKNM"VARCHAR(60),
  "RCVBNKCO"VARCHAR(10),
  "RCVBNKNM"VARCHAR(60),
  "CUR"     VARCHAR(3),
  "LBDCFLG" VARCHAR(1),
  "LSTDTBAL"DECIMAL(15, 2),
  "NTTDCFLG"VARCHAR(1),
  "NTTBAL"  DECIMAL(15, 2),
  "BALDCFLG"VARCHAR(1),
  "TODAYBAL"DECIMAL(15, 2),
  "AVLBAL"  DECIMAL(15, 2),
  "NTODAYBAL"DECIMAL(15, 2),
  "CHKRST"  VARCHAR(1),
  "BOJEDT"  VARCHAR(8),
  "BOSPSQ"  VARCHAR(12),
  "PRCCO"   VARCHAR(8),
  "STRINFO" VARCHAR(60),
  "NOTE1"   VARCHAR(10),
  "NOTE

  "NOTE3"   VARCHAR(60),
  "NOTE4"   VARCHAR(60)
 )
  DATA CAPTURE NONE
 IN "AFA_DATA"
 INDEX IN "AFA_IDX";
--#SYNC 30;
ALTER TABLE "AFA"."RCC_REKBAL"
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;
--#SYNC 40;
--#QSCOMMAND
  IMPORT FROM './RCC_REKBAL.ixf'
  OF IXF
  MODIFIED BY COMPOUND=5
              NOCHECKLENGTHS
  COMMITCOUNT 1000
--RESTARTCOUNT xxx
  INSERT
  INTO "AFA"."RCC_REKBAL"
   ("BJEDTE",
    "BSPSQN",
    "BOJEDT",
    "BOSPSQ",
    "NCCWKDAT",
    "TRCDAT",
    "TRCNO",
    "SNDBNKCO",
    "TRCCO",
    "RCVBNKCO",
    "CUR",
    "LBDCFLG",
    "LSTDTBAL",
    "NTTDCFLG",
    "NTTBAL",
    "BALDCFLG",
    "TODAYBAL",
    "AVLBAL",
    "NTODAYBAL",
    "CHKRST",
    "PRCCO",
    "STRINFO",
    "NOTE1",
    "NOTE2",
    "NOTE3",
    "NOTE4"
   );
--#SYNC 50;
CREATE UNIQUE INDEX "AFA"."RCC_REKBAL_IDX1"
  ON "AFA"."RCC_REKBAL"
 ("TRCDAT"   ASC,
  "TRCNO"    ASC,
  "SNDBNKCO" ASC
 )
  PCTFREE 10
  ALLOW REVERSE SCANS;
--#SYNC 60;
ALTER TABLE "AFA"."RCC_REKBAL"
  ADD CONSTRAINT 
﻿CREATE VIEW dbo.v_BasicRole_ican5
AS
SELECT          para_no AS Id, para_phsiname AS Code, para_dispname AS Name
FROM              iCAN5.dbo.ican_para
WHERE          (para_code = 'p_user')
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[14] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
      

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ican_para (iCAN5.dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 207
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 12
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         So
PROC $sc_$cpu_sc_appoffend
;*******************************************************************************
;  Test Name:  sc_appoffend
;  Test Level: Build Verification
;  Test Type:  Functional
;  Test Description
;	This procedure creates an ATS Append table load image file containing a
;	full table of commands with the last command going over the end of the 
;	table buffer.
;  Change History
;	Date		   Name		Description
;	01/28/11	Walt Moleski	Original Procedure.
;       10/24/16        Walt Moleski    Added hostCPU variable used to indicate
;                                       the proper CPU for the table load
;  Arguments
;	None.
;  Procedures Called
;	Name			Description
;**********************************************************************
local logging = %liv (log_procedure)
%liv (log_procedure) = FALSE
#include "sc_platform_cfg.h"
;**********************************************************************
; Define local variables
;***********************************************

LOCAL rawcmd, stream
LOCAL cmdCtr, errcnt
LOCAL atsPktId,atsAppId
local SCAppName = "SC"
local ATSAppendATblName = SCAppName & "." & SC_APPEND_TABLE_NAME
local hostCPU = "$CPU"
;; Set the pkt and app Ids for the appropriate CPU
;; CPU1 is the default
atsPktId = "0FBB"
atsAppId = 4027
if ("$CPU" = "CPU2") then
  atsPktId = "0FD9"
  atsAppId = 4057
elseif ("$CPU" = "CPU3") then
  atsPktId = "0FF9"
  atsAppId = 4089
endif
write ";***********************************************************************"
write ";  Create a table load containing as many valid commands that will fit. "
write ";***********************************************************************"
;; Using the RDL, populate the ATS data stream with the data you desire
;;
local i,j,atsCmdCtr,nextCmd,nextCRC
;; Setup the command word and CRC word buffers
;; CPU1 is the default
nextCmd = x'18A9'
nextCRC = x'0982'
if ("$CPU" = "CPU2") then
  nextCmd = x'19A9'
  nextCRC = x'0983'
elseif ("$CPU" = "CPU3") then
  nextCmd = x'1AA9'


endif
;; JumpATS Command example = '0005 000F 4B6D 1AA9 C000 0005 093A 000F 4DF8'
;; ATS Command entry size = 9 words
;; Loop for each word in the ATS Buffer
j = 1
atsCmdCtr = 1
for i = 1 to SC_APPEND_BUFF_SIZE - 18  do
  if (j = 1) then
    $SC_$CPU_SC_ATSAPPENDDATA[i] = atsCmdCtr 
    atsCmdCtr = atsCmdCtr + 1
  elseif (j = 4) then
    $SC_$CPU_SC_ATSAPPENDDATA[i] = nextCmd
  elseif (j = 5) then
    $SC_$CPU_SC_ATSAPPENDDATA[i] = x'C000'
  elseif (j = 6) then
    $SC_$CPU_SC_ATSAPPENDDATA[i] = x'0005'
  elseif (j = 7) then
    $SC_$CPU_SC_ATSAPPENDDATA[i] = nextCRC
  else
    $SC_$CPU_SC_ATSAPPENDDATA[i] = 0
  endif
  j = j + 1
  if (j = 10) then
    j = 1
  endif
enddo
;; Create the last command to be longer than the remaining words in the buffer
$SC_$CPU_SC_ATSAPPENDDATA[i] = 0
i = i + 1
$SC_$CPU_SC_ATSAPPENDDATA[i] = atsCmdCtr
i = i + 1
$SC_$CPU_SC_ATSAPPENDDATA[i] = 0
i = i + 1
$SC_$CPU_SC_ATSAPPENDDATA[i] = 0
i = i + 1
$SC_$CPU_SC_ATSAPPENDDATA[i] = x'192B'
i = i + 1
$SC_$CPU_S
--------------------------------------------------------
-- Archivo creado  - viernes-diciembre-09-2016   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table FASE
--------------------------------------------------------
  CREATE TABLE "femxa"."FASE" 
   (	"FASE_ID" NUMBER, 
	"FECHDE_C" DATE, 
	"FECHE_F" DATE, 
	"NOMBRE" VARCHAR2(20 BYTE), 
	"ESTADO" VARCHAR2(20 BYTE), 
	"PROYECTO_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PROYECTO
--------------------------------------------------------
  CREATE TABLE "femxa"."PROYECTO" 
   (	"PROYECTO_ID" NUMBER, 
	"CODIGO" NUMB

	"DESCRIPCION" VARCHAR2(50 BYTE), 
	"HORAS_ESTIMADAS" NUMBER, 
	"NOMBRE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table RECURSOS
--------------------------------------------------------
  CREATE TABLE "femxa"."RECURSOS" 
   (	"RECURSO_ID" NUMBER, 
	"NOMBRE" VARCHAR2(20 BYTE), 
	"COSTE" NUMBER, 
	"TP_ID" NUMBER, 
	"FASE_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
-------
-- Copyright (c) 2003 by Jeff Weisberg
-- Author: Jeff Weisberg <jaw @ tcp4me.com>
-- Date: 2003-May-03 14:24 (EDT)
-- Function: 
--
-- $Id: eqmt-init.sql,v 1.7 2010/01/15 18:13:19 jaw Exp $
select mi_g_object_type__new( 'eqmt/facility',
			   'eqmt/view-facility',
			   'mi_facility',
			   'fac_id',
			   'mi_facility_name',
			   NULL,
			   NULL );
select mi_g_object_type__new( 'eqmt/eqmt',
			   'eqmt/view-eqmt',
			   'mi_eqmt',
			   'eqmt_id',
			   'mi_eqmt_name',
			   NULL,
			   NULL );
select mi_g_object_type__new( 'eqmt/iface',
			   'eqmt/view-iface',
			   'mi_interface',
			   'iface_id',
			   'mi_iface_name',
			   NULL,
			   NULL);
select mi_fac_type__new( 'telco CO' );
select mi_fac_type__new( 'colo facility' );
select mi_fac_type__new( 'server room' );
select mi_fac_type__new( 'office' );
select mi_fac_type__new( 'other' );
select mi_hw_type__new('unk',  'unknown');
select mi_hw_type__new('srvr', 'server');
select mi_hw_type__new('gw',   'router');
select mi_hw_t

select mi_hw_type__new('csu',  'csu/dsu');
select mi_hw_type__new('chbk', 'channel bank');
select mi_hw_type__new('mux',  'circuit mux');
select mi_hw_type__new('lb',   'load balancer');
select mi_hw_type__new('fw',   'firewall');
select mi_hw_type__new('hub',  'ethernet hub');
select mi_hw_type__new('fr',   'frame switch');
select mi_hw_type__new('atm',  'atm switch');
select mi_hw_type__new('cvtr', 'media converter');
select mi_hw_type__new('wkst', 'desktop computer');
select mi_hw_type__new('opsw', 'optical switch');
select mi_hw_type__new('opmx', 'optical mux');
select mi_hw_type__new('dax',  'digital cross connect');
select mi_hw_type__new('lptp', 'laptop');
select mi_hw_type__new('pda',  'pda');
select mi_hw_type__new('ts',   'terminal server');
select mi_hw_type__new('pwr',  'power strip');
select mi_hw_type__new('wap',  'wireless access point');
select mi_hw_type__new('nas',  'network attached storage');
select mi_hw_type__new('dpy',  'display system');
select mi_hw_type__new(

select mi_manufacturer__new( 'unknown');
select mi_manufacturer__new( 'cisco' );
select mi_manufacturer__new( 'lucent' );
select mi_manufacturer__new( 'sun' );
select mi_manufacturer__new( 'intel' );
select mi_manufacturer__new( 'dell' );
select mi_manufacturer__new( '3com' );
select mi_manufacturer__new( 'HP' );
select mi_manufacturer__new( 'juniper' );
select mi_manufacturer__new( 'bay' );
select mi_manufacturer__new( 'adtran' );
select mi_manufacturer__new( 'generic pc' );
select mi_manufacturer__new( 'nortel' );
select mi_importance__new( 'ghetto',	10 );
select mi_importance__new( 'normal',	20 );
select mi_importance__new( 'special - VIP',30 );
select mi_importance__new( 'critical',	40 );
select mi_eqmt_status__new( 'pending install' );
select mi_eqmt_status__new( 'active' );
select mi_eqmt_status__new( 'pending termination' );
select mi_eqmt_status__new( 'decommsioned' );
select mi_eqmt_status__new( 'out for repair' );
select mi_operating_system__new( 'Solaris' );
select mi_opera
questZone	escortShipType	escortPath	numAttackShipLists	attackShips1	attackShips2	attackShips3	attackShips4	attackShips5	attackShips6	attackShips7	attackShips8	attackPeriod	attackListType	numResponses	damageMultiplier	hateModifier	triggerEvent	triggerSplitCondition	triggerArg	triggerArg2	triggerOn	triggerEndsMission	triggerDelay	noDistancePolling	customDistanceMessages	destroyIsSuccess	autoReward	questDelay	_DESIGNER NOTES_	questSeries
s	s	s	i	s	s	s	s	s	s	s	s	i	e(sequential=0,random=1)[sequential]	i	i	i	e(none=0,splitquest=1,surpriseattack=2)[none]	e(triggerOn=0,success=1,failure=2,both=3)[triggerOn]	s	s	i	i	i	i	i	i	i	i	s	s
space_tatooine	freightermedium_tier5	space_tatooine:no_rank2_01_04_nav_01	3	nova_orion_krask_pirate	nova_orion_krask_pirate	nova_orion_krask_pirate						120	sequential	5	0	1000	none	success			0	0	0	0	0	0	0	0		nova_orion
		space_tatooine:no_rank2_01_04_nav_02		nova_orion_krask_pirate	nova_orion_krask_pirate	nova_orion_krask_pirate																								
		space_tatoo
-- Sale
SELECT dropIfExists('VIEW', 'api_sale', 'xtpos');
CREATE VIEW xtpos.api_sale
AS
  SELECT 
    salehead_number AS sale_number,
    CASE WHEN (salehead_type='S') THEN 'Sale'
         WHEN (salehead_type='Q') THEN 'Quote'
         WHEN (salehead_type='R') THEN 'Return'
         ELSE 'Error' 
    END AS type,
    CASE 
      WHEN (salehead_closed OR salehead_type IN ('S','R')) THEN
        salehead_closed
      ELSE
        xtpos.checkStatus(salehead_id)
    END AS closed,
    cust_number AS customer_number,
    c.cntct_number AS contact_number,
    c.cntct_honorific AS honorific,
    c.cntct_first_name AS first,
    c.cntct_middle AS middle,
    c.cntct_last_name AS last,
    c.cntct_suffix AS suffix,
    c.cntct_title AS job_title,
    c.cntct_phone AS voice,
    c.cntct_phone2 AS alternate,
    c.cntct_fax AS fax,
    c.cntct_email AS email,
    c.cntct_webaddr AS web,
    ''::text AS contact_change,
    a.addr_number AS address_number,
    a.addr_line1 AS address1,
    a.addr_l

    a.addr_line3 AS address3,
    a.addr_city AS city,
    a.addr_state AS state,
    a.addr_postalcode AS postalcode,
    a.addr_country AS country,
    ''::text AS address_change,
    salehead_time AS date,
    salesrep_number AS sales_rep,
    salehead_notes AS notes,
    warehous_code AS site,
    terminal_number AS terminal,
    taxzone_code AS tax_zone,
    coalesce((sum(round(abs(saleitem_qty) * saleitem_unitprice,2))),0) AS subtotal,
    xtpos.saletax(salehead_id) AS tax,
    coalesce((sum(round((abs(saleitem_qty) * saleitem_unitprice) + abs(xtpos.saletax(salehead_id)), 2))),0) AS total
  FROM xtpos.salehead
    JOIN site() ON (salehead_warehous_id=warehous_id)
    JOIN xtpos.terminal ON (salehead_terminal_id=terminal_id)
    LEFT OUTER JOIN custinfo ON (salehead_cust_id=cust_id)
    LEFT OUTER JOIN cntct c ON (cust_cntct_id=c.cntct_id)
    LEFT OUTER JOIN addr a ON (cntct_addr_id=a.addr_id)
    LEFT OUTER JOIN salesrep ON (salehead_salesrep_id=salesrep_id)
    LEFT OUTER JOIN

    LEFT OUTER JOIN taxzone ON (salehead_taxzone_id=taxzone_id)
  GROUP BY salehead_id, salehead_number,salehead_type,salehead_closed,cust_number,
    c.cntct_number,c.cntct_honorific,c.cntct_first_name,c.cntct_middle,
    c.cntct_last_name,c.cntct_suffix,c.cntct_title,c.cntct_phone,c.cntct_phone2,
    c.cntct_fax,c.cntct_email,c.cntct_webaddr,a.addr_number,a.addr_line1,a.addr_line2,
    a.addr_line3,a.addr_city,a.addr_state,a.addr_postalcode,a.addr_country,salehead_time,
    warehous_code,salesrep_number,terminal_number,salehead_notes,taxzone_code
  ORDER BY salehead_number;
GRANT ALL ON TABLE xtpos.api_sale TO xtrole;
COMMENT ON VIEW xtpos.api_sale IS 'Sale';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO xtpos.api_sale DO INSTEAD
  INSERT INTO xtpos.salehead (
    salehead_number,
    salehead_warehous_id,
    salehead_type,
    salehead_cust_id,
    salehead_time,
    salehead_terminal_id,
    salehead_notes,
    salehead_salesrep_id,
    salehead_taxzone_id )
  VALU
new google.maps.LatLng(40.608531, -73.957395),
new google.maps.LatLng(40.609406, -73.947669),
new google.maps.LatLng(40.608856, -73.943112),
new google.maps.LatLng(40.606877, -73.940726),
new google.maps.LatLng(40.608284, -73.938015),
new google.maps.LatLng(40.609641, -73.935845),
new google.maps.LatLng(40.611152, -73.933554),
new google.maps.LatLng(40.612455, -73.931526),
new google.maps.LatLng(40.614129, -73.928932),
new google.maps.LatLng(40.614405, -73.927027),
new google.maps.LatLng(40.614655, -73.923963),
new google.maps.LatLng(40.61486, -73.920904),
new google.maps.LatLng(40.61484, -73.91957),
new google.maps.LatLng(40.616565, -73.915026),
new google.maps.LatLng(40.617191, -73.911035),
new google.maps.LatLng(40.615772, -73.90916),
new google.maps.LatLng(40.612288, -73.906697),
new google.maps.LatLng(40.609829, -73.907086),
new google.maps.LatLng(40.606711, -73.909969),
new google.maps.LatLng(40.604599, -73.913274),
new google.maps.LatLng(40.606791, -73.916037),
new google.maps.L
REPLACE INTO `teksten` (`string`, `tekst`, `timestamp`, `lease_configuratie_id`) VALUES
('checklistwizard.aandachtspunten', 'Aandachtspunten', '2013-08-31 15:33:50', 0),
('checklistwizard.aanwezigheid', 'Controleniveau', '2013-08-31 15:33:50', 0),
('checklistwizard.checklist.actief', 'actief', '2013-09-03 12:10:58', 0),
('checklistwizard.checklist.gedeeltelijk-actief', 'gedeeltelijk actief', '2013-09-09 19:19:42', 0),
('checklistwizard.checklist.in-gebruik', 'in gebruik', '2013-09-03 12:10:07', 0),
('checklistwizard.checklist.lang.actief', 'checklist is actief!', '2013-09-03 12:21:26', 0),
('checklistwizard.checklist.lang.in-gebruik', 'checklist is in gebruik!', '2013-09-03 12:21:23', 0),
('checklistwizard.checklist.lang.niet-actief', 'checklist is niet actief', '2013-09-03 12:24:00', 0),
('checklistwizard.checklist.lang.niet-in-gebruik', 'checklist is niet in gebruik', '2013-09-03 12:24:37', 0),
('checklistwizard.checklist.niet-actief', 'niet-actief', '2013-09-03 12:11:13', 0),
('chec

('checklistwizard.checklist.status', 'Checklist status:', '2013-09-16 16:33:10', 0),
('checklistwizard.default-afwijkingen', 'wijkt af', '2013-09-03 12:54:07', 0),
('checklistwizard.fase', 'Fase', '2013-08-31 15:33:50', 0),
('checklistwizard.headers.checklisten', 'Checklisten', '2013-09-07 18:45:12', 0),
('checklistwizard.headers.checklistgroepen', 'Checklistgroepen', '2013-09-07 18:44:44', 0),
('checklistwizard.headers.checklistgroep_defaults', 'Checklistgroep bewerken', '2013-09-07 18:47:47', 0),
('checklistwizard.headers.checklistgroep_nieuw', 'Checklistgroep toevoegen', '2013-09-07 18:47:55', 0),
('checklistwizard.headers.checklistgroep_volgorde', 'Checklistgroep volgorde', '2013-09-07 18:46:11', 0),
('checklistwizard.headers.checklist_defaults', 'Checklist bewerken', '2013-09-07 18:48:15', 0),
('checklistwizard.headers.checklist_nieuw', 'Checklist toevoegen', '2013-09-07 18:48:06', 0),
('checklistwizard.headers.checklist_volgorde', 'Checklist volgorde', '2013-09-07 18:46:19', 0),

('checklistwizard.headers.hoofdgroepen', 'Hoofdgroepen', '2013-09-07 18:45:16', 0),
('checklistwizard.headers.hoofdgroep_defaults', 'Hoofdgroep bewerken', '2013-09-07 18:48:33', 0),
('checklistwizard.headers.hoofdgroep_nieuw', 'Hoofdgroep toevoegen', '2013-09-07 18:48:26', 0),
('checklistwizard.headers.hoofdgroep_volgorde', 'Hoofdgroep volgorde', '2013-09-07 18:46:28', 0),
('checklistwizard.headers.vraag_defaults', 'Vraag bewerken', '2013-09-07 18:48:47', 0),
('checklistwizard.headers.vraag_nieuw', 'Vraag toevoegen', '2013-09-07 18:48:40', 0),
('checklistwizard.headers.vraag_volgorde', 'Vraag volgorde', '2013-09-07 18:46:35', 0),
('checklistwizard.headers.vragen', 'Vragen', '2013-09-07 18:45:19', 0),
('checklistwizard.herstel-standaard-set', 'Herstel standaard', '2013-09-03 18:16:31', 0),
('checklistwizard.hoofdthema', 'Hoofdthema', '2013-08-31 15:33:50', 0),
('checklistwizard.integreerbaar', 'Integreerbaarheid', '2013-09-03 13:36:49', 0),
('checklistwizard.lijst.kopieer', 'kopieer', 
-- ViewName : PhotoListView
start transaction;
# module
SELECT @FKModule := IDModule FROM lkp_module WHERE ModuleName = 'Media';
# delete columns
SELECT @idView := ifnull((SELECT IDListView FROM listview_master WHERE ViewName = 'VideoThumbnailView'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((SELECT FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# UPDATE sequence
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDList

UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewCriteria),0) FROM listview_criteria) WHERE seq_name = 'ListCriteria_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewFieldMapping),0) FROM listview_fieldmapping) WHERE seq_name = 'ListFieldMapping_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListView),0) FROM listview_master WHERE IsCustomList = 0) WHERE seq_name = 'ListBox_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewSortby),0) FROM listview_sortoption) WHERE seq_name = 'ListSortby_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListColumn),0) FROM listview_columns) WHERE seq_name = 'ListColumn_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDProductViewMenu),0) FROM cnf_productviewmenu) WHERE seq_name = 'CNF_ProductViewMenu_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListActionItem),0) FROM listview_actionlinks) WHERE seq_name = 'ListAction_SE

UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewFilterBy),0) FROM listview_filteroption) WHERE seq_name = 'ListFilterby_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewGroupby),0) FROM listview_groupbyoption) WHERE seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
SELECT @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) FROM listview_fieldmaster;
SELECT @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) FROM listview_criteria;
SELECT @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) FROM listview_fieldmapping;
SELECT @IDListView := ifnull(max(IDListView), 0) FROM listview_master;
SELECT @IDListViewSortby := ifnull(max(IDListViewSortby), 0) FROM listview_sortoption;
SELECT @IDListColumn := ifnull(max(IDListColumn), 0) FROM listview_columns;
SELECT @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) FROM cnf_productviewmenu;
SELECT @IDListActionItem := ifnull(max(IDListActionItem), 0) FROM li
/*1.Write a query to get all the goal for a given gradeId  */
SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;
	select kg.GoalId,kg.Goal_Number,kg.Goal from kg_goals as kg
		join grades g
			on kg.GradeId=g.GradeId;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ ;
/*2.Write a query to get all the goal details for a given AssignmentId*/
SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;
	select * from kg_goals as kg
		join assignment_assigned aa
			on kg.GoalId=aa.GoalId
		join student_assignments sa
			on aa.AssignmentId= sa.AssignmentId;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ ;
/*3.Write a query to get all the goal details for a given StudentProfileId*/
SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED ;
	select  * from kg_goals as kg
		join student_assignments sa
			on kg.GoalId=sa.GoalId
		 join student_profiles sp
			on sa.ProfileId = sp.ProfileId;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ ;
/*4.Write a query to get a
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_reputation`;
CREATE TABLE `character_reputation` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier',
  `faction` smallint(5) unsigned NOT NULL DEFAULT '0',
  `standing` int(11) NOT NULL DEFAULT '0',
  `flags` smallint(5) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guid`,`faction`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Player Sys
/***********************************************************************************
 * X2Engine Open Source Edition is a customer relationship management program developed by
 * X2 Engine, Inc. Copyright (C) 2011-2017 X2 Engine Inc.
 * 
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License version 3 as published by the
 * Free Software Foundation with the addition of the following permission added
 * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
 * IN WHICH THE COPYRIGHT IS OWNED BY X2ENGINE, X2ENGINE DISCLAIMS THE WARRANTY
 * OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Affe

 * this program; if not, see http://www.gnu.org/licenses or write to the Free
 * Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301 USA.
 * 
 * You can contact X2Engine, Inc. P.O. Box 610121, Redwood City,
 * California 94061, USA. or at email address contact@x2engine.com.
 * 
 * The interactive user interfaces in modified source and object code versions
 * of this program must display Appropriate Legal Notices, as required under
 * Section 5 of the GNU Affero General Public License version 3.
 * 
 * In accordance with Section 7(b) of the GNU Affero General Public License version 3,
 * these Appropriate Legal Notices must retain the display of the "Powered by
 * X2 Engine" logo. If the display of the logo is not reasonably feasible for
 * technical reasons, the Appropriate Legal Notices must display the words
 * "Powered by X2 Engine".
 **********************************************************************************/
INSERT INTO `x2_auth_item_child`

(`parent`,`child`)
VALUES
('GeneralAdminSettingsTask','AdminManageActionPublisherTabs'),
('GeneralAdminSettingsTask','AdminFlowSettings'),
('GeneralAdminSettingsTask','AdminEmailDropboxSettings'),
('GeneralAdminSettingsTask','AdminViewLog'),
('GeneralAdminSettingsTask','AdminLockApp'),
('GeneralAdminSettingsTask','AdminX2CronSettings'),
('GeneralAdminSettingsTask','AdminSecuritySettings'),
('GeneralAdminSettingsTask','AdminPackager'),
('GeneralAdminSettingsTask','AdminDisableUser'),
('GeneralAdminSettingsTask','AdminBanIp'),
('GeneralAdminSettingsTask','AdminWhitelistIp'),
('GeneralAdminSettingsTask','AdminExportLoginHistory'),
('GeneralAdminSettingsTask','AdminImportPackage'),
('GeneralAdminSettingsTask','AdminPreviewPackageImport'),
('GeneralAdminSettingsTask','AdminExportPackage'),
('GeneralAdminSettingsTask','AdminBeginPackageRevert'),
('GeneralAdminSettingsTask','AdminFinishPackageRevert'),
('GeneralAdminSettingsTask','AdminRevertPackage'),
('ReportsReadOnlyAccess','ReportsActivi
﻿USE [B2BProductCatalog]
GO
/****** Object:  Table [dbo].[MarketingInfo]    Script Date: 02/03/2011 10:42:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MarketingInfo_Backup](
	[pkId] [int] IDENTITY(1,1) NOT NULL,
	[StyleNumber] [varchar](18) NOT NULL,
	[SalesOrg] [varchar](4) NULL,
	[DistributionChannel] [varchar](2) NULL,
	[MarketingDescEn] [varchar](4000) NULL,
	[MarketingDescFr] [varchar](4000) NULL,
	[StyleKeywords] [varchar](1000) NULL,
	[StyleSizeRun] [varchar](75) NULL,
	[NavCategory1] [varchar](100) NULL,
	[NavCategory2] [varchar](100) NULL,
	[NavCategory3] [varchar](100) NULL,
	[NavCategory4] [varchar](100) NULL,
	[NavCategoryFr1] [varchar](100) NULL,
	[NavCategoryFr2] [varchar](100) NULL,
	[NavCategoryFr3] [varchar](100) NULL,
	[NavCategoryFr4] [varchar](100) NULL,
	[Flag1] [varchar](75) NULL,
	[Flag2] [varchar](75) NULL,
	[Flag3] [varchar](75) NULL,
	[Flag4] [varchar](75) NULL,
	[Flag5] [varchar](75) NULL,
	[Flag6] [va
create table customer (
  id                        bigint auto_increment not null,
  first_name                varchar(255),
  last_name                 varchar(255),
  constraint pk_customer primary key (id))
create table customer_email (
  id                        bigint auto_increment not null,
  customer_id               bigint,
  email                     varchar(255),
  constraint pk_customer_email primary key (id))
create table customer_phone (
  id                        bigint auto_increment not null,
  customer_id               bigint,
  phone_number              varchar(255),
  constraint pk_customer_phone primary key (id))
alter table customer_email add constraint fk_customer_email_customer_1 foreign key (customer_id) references customer (id) on delete restrict on update restrict;
create index ix_customer_email_customer_1 on customer_email (customer_id);
alter table customer_phone add constraint fk_customer_phone_customer_2 foreign key (customer_id) references customer (i
SET DEFINE OFF;
CREATE TABLE L_BRANDS
  BRANDID         VARCHAR2(10 BYTE),
  BRANDNAME       VARCHAR2(50 BYTE),
  SELLMETHODS     VARCHAR2(500 BYTE),
  AIRSERVER       VARCHAR2(100 BYTE),
  AIRSERVERPORT   VARCHAR2(100 BYTE),
  CARSERVER       VARCHAR2(100 BYTE),
  CARSERVERPORT   VARCHAR2(20 BYTE),
  RAILSERVER      VARCHAR2(100 BYTE),
  RAILSERVERPORT  VARCHAR2(100 BYTE),
  FMMARKET        VARCHAR2(10 BYTE),
  QCURRENCY       VARCHAR2(20 BYTE),
  ADDITIONALDATA  VARCHAR2(2000 BYTE),
  WHOSTAMP        VARCHAR2(50 BYTE),
  DATESTAMP       DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLE
--------------------------------------------------------
--  DDL for Table DETAIL
--------------------------------------------------------
  CREATE TABLE "KEYFOOD"."DETAIL" 
   (	"ITEMID" NUMBER, 
	"PACK" NUMBER, 
	"ITEM_SIZE" NUMBER, 
	"LIST_COST" NUMBER, 
	"SR_UNITS" NUMBER, 
	"SR_PRICE" NUMBER(10,2), 
	"SR_BRAND" NUMBER, 
	"DI_AMOUNT" NUMBER(10,2), 
	"DI_SDATE" DATE, 
	"DI_EDATE" DATE, 
	"OI_AMOUNT" NUMBER(10,2), 
	"OI_SDATE" DATE, 
	"OI_EDATE" DATE, 
	"REVALUE" NUMBER(10,2), 
	"RW_UNITS" NUMBER, 
	"RW_PRICE" NUMBER(10,2), 
	"CLIMIT" NUMBER, 
	"MIN_PURCHASE" NUMBER(10,2), 
	"CTYPE" NUMBER, 
	"ADDRESS1" VARCHAR2(80 BYTE), 
	"ADDRESS2" VARCHAR2(80 BYTE), 
	"CITY" VARCHAR2(80 BYTE), 
	"STATE" VARCHAR2(80 BYTE), 
	"ZIPCODE" VARCHAR2(5 BYTE), 
	"DETAILID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL

  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DETAIL_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "KEYFOOD"."DETAIL_PK" ON "KEYFOOD"."DETAIL" ("DETAILID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table DETAIL
--------------------------------------------------------
  ALTER TABLE "KEYFOOD"."DETAIL" ADD CONSTRAINT "DETAIL_PK" PRIMARY KEY ("DETAILID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  T
﻿CREATE VIEW dbo.v_GroupSeme
AS
SELECT          Value, Name
FROM              dbo.v_GroupSeme_ican5
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2[66] 3) )"
      End
      Begin PaneConfiguration = 6
         Nu

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 5
   End
   Begin DiagramPane = 
      PaneHidden = 
      Begin Origin = 

         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "v_GroupSeme_ican5"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 104
               Right = 203
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      PaneHidden = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         O
-- Help information.
--
-- $Id$
DELETE FROM help;
COPY "help" FROM stdin;
ADDFLAG	1	Adds the specified flag to the specified user. Possible flags:\na - Can manage users for local server/group\nb - Can block/unblock channels\nc - Can add/delete notes for channels\nf - Can perform manual chanfix\no - Can do anything\nu - Can manage users globally\nNote: You can only add one flag at a time.
ADDHOST	1	Adds the specified hostmask to the user's list of hostmasks.
ADDNOTE	1	Adds a note to the specified channel.
ADDUSER	1	Adds a new user, without flags, and optionally with the specified hostmask.
ALERT	1	Puts a channel on ALERT status\nChannels in alert status have information contained in notes that should be considered before fixing the channel. These channels also require the OVERRIDE flag to manually fix them.
BLOCK	1	Blocks a channel from being fixed, both automatically and manually.\nThe reason will be shown when doing INFO <channel>.
CANFIX	1	Lists the ops that can fix the specified cha

CHECK	1	Shows the number of ops and total clients in the specified channel.
CSCORE	1	Shows the same as SCORE, but in a compact output. See /msg C HELP SCORE.
CHANFIX	1	Performs a manual fix on the specified channel. Append OVERRIDE, YES, or an exclamation mark (!) to force a manual fix. Append CONTACT if you wish that the top 10 ops for the channel be noticed about the fix before the fix happens.
DELFLAG	1	Removes the specified flag from a user. See /msg C HELP ADDFLAG.
DELHOST	1	Deletes the specified hostmask from a user's list of hostmasks.
DELNOTE	1	Deletes a note matching the specified id from the specified channel. You can only delete the notes you have added.
DELUSER	1	Deletes the specified user.
QUOTE	1	This command should never be used.\nUsing it would be bad.\nHow bad?\nTry to imagine all life stopping instantaneously, and every molecule in your body exploding at the speed of light.
HELP	1	Shows help about the specified command. With no command specified, all commands that yo

HISTORY	1	Shows the times that the specified channel has been manually fixed.
INFO	1	Shows all notes of the specified channel and whether the channel is actively blocked.
LASTCOM	1	Shows all the last commands which where issued to the bot.
LISTBLOCKED	1	Lists all of the channels that chanfix will not score.
LISTHOSTS	1	With no username specified, it lists the hostmasks chanfix recognizes you by. Otherwise, it views the specified username's host list.\nNOTE: Server admins (+a) can only view host lists of users within their own server group. Users lower than server admin status can only view their own host lists.
LISTTEMPBLOCKED	1	Lists all of the channels that chanfix will not score temporarly.
OPLIST	1	Shows the top 10 op accounts and their scores for the specified channel. Possible flags\n-all (or ALL or !) - Lists all scores.\n-days - Displays a small bar of the 2 week scoring period showing when a person was opped (. means never opped, 0 means 0-10%, 9 means 91-100%)
OPNICKS	1	Show
--------------------------------------------------------
--  Constraints for Table EPI_REL
--------------------------------------------------------
  ALTER TABLE "EPI_REL" ADD CONSTRAINT "AK_PK_EPRE_EPI_REL" UNIQUE ("EPI_REL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "EPI_REL" ADD CONSTRAINT "AK_UK_EPRE_EPI_REL" UNIQUE ("EPI_ID1", "EPI_ID2", "REL_TYPE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "EPI_REL" MODIFY ("STATUS_ID" NOT NULL ENABLE);
  ALTER TABLE "EPI_REL" MODIFY ("EPI_
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (390, "Plugin Name", "4.1", "4.3", "3.0.1", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (6135, 390, "wp_expand_autoplay_music_jquery", "/plugin-main.php", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (6136, 390, "append_music_to_body", "/plugin-main.php", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (6137, 390, "weautomusic_register_settings", "/plugin-main.php", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (6138, 390, "weautomusic_validate_options", "/plugin-main.php", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (6139, 390, "add_wexpand_automusic_options_framwrork", "/plugin-mai

insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (6140, 390, "wexpand_automusic_options_framwrork", "/plugin-main.php", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (6141, 390, "wp_expand_autoplay_music_all_files", "/plugin-main.php", now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (3557, 390, "wp_footer", "'append_music_to_body'", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (3558, 390, "admin_menu", "'add_wexpand_automusic_options_framwrork'", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (3559, 390, "admin_init", "'weautomusic_register_settings'", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) value
-- ViewName : ContactByProject
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'Site Instruction';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'ContactByProject'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq_count = (select ifnul

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
CREATE SEQUENCE model.seq_client
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE model.seq_client
  OWNER TO postgres;
CREATE SEQUENCE model.seq_order
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE model.seq_order
  OWNER TO postgres;
CREATE SEQUENCE model.seq_order_item
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE model.seq_order_item
  OWNER TO postgres;
CREATE SEQUENCE model.seq_product
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE model.seq_product
  OWNER TO postgres;
CREATE SEQUENCE model.seq_purchase
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE model.seq_purchase
  OWNER TO postgres;
CREATE SEQUENCE model.seq_role
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE model.seq_role
  OWNER TO postgres;
CREATE SEQUENCE mode

  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE model.seq_user
  OWNER TO postgres;
CREATE TABLE model.role
  id bigint NOT NULL,
  name character varying(256) NOT NULL,
  CONSTRAINT role_pkey PRIMARY KEY (id ),
  CONSTRAINT role_name_key UNIQUE (name )
WITH (
  OIDS=FALSE
);
ALTER TABLE model.role
  OWNER TO postgres;
CREATE TABLE model."user"
  id bigint NOT NULL,
  password character varying(255) NOT NULL,
  username character varying(256) NOT NULL,
  CONSTRAINT user_pkey PRIMARY KEY (id ),
  CONSTRAINT user_username_key UNIQUE (username )
WITH (
  OIDS=FALSE
);
ALTER TABLE model."user"
  OWNER TO postgres;
  
CREATE TABLE model.client
  id bigint NOT NULL,
  firstname character varying(256) NOT NULL,
  lastname character varying(256) NOT NULL,
  user_id bigint NOT NULL,
  credit double precision NOT NULL DEFAULT 0,
  CONSTRAINT client_pkey PRIMARY KEY (id ),
  CONSTRAINT fkaf12f3cbee5fde3a FOREIGN KEY (user_id)
      REFERENCES model."use

      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT client_user_id_key UNIQUE (user_id )
WITH (
  OIDS=FALSE
);
ALTER TABLE model.client
  OWNER TO postgres;
  
CREATE TABLE model.product
  id bigint NOT NULL,
  amount integer NOT NULL,
  name character varying(256) NOT NULL,
  photourl character varying(1000),
  price double precision NOT NULL,
  provider character varying(256),
  priority integer NOT NULL DEFAULT 0,
  CONSTRAINT product_pkey PRIMARY KEY (id )
WITH (
  OIDS=FALSE
);
ALTER TABLE model.product
  OWNER TO postgres;
CREATE TABLE model."order"
  id bigint NOT NULL,
  orderdate timestamp without time zone NOT NULL,
  client_id bigint NOT NULL,
  CONSTRAINT order_pkey PRIMARY KEY (id ),
  CONSTRAINT fk651874e3113463a FOREIGN KEY (client_id)
      REFERENCES model.client (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
WITH (
  OIDS=FALSE
);
ALTER TABLE model."order"
  OWNER TO postgres;
CREATE TABLE model.order_item
  id bigint NOT NULL,
  amount inte
ALTER TABLE `page-DEFAULT_STARTPAGE-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_PROCESS-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_PRESS_AREA-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_PAGE_1-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_OVERVIEW-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_LOCATION_C-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NUL

ALTER TABLE `page-DEFAULT_IFRAME-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_FORM-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_EXTERNAL-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_EVENT_OVERVIEW-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_EVENTS-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_EVENT-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTE

ALTER TABLE `page-DEFAULT_DOWNLOAD_CENTER-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_COURSES-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `page-DEFAULT_COLLECTION-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `global-DEFAULT_COURSE_OVERVIEW-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `global-DEFAULT_PRODUCT_OVERVIEW-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `shortdescription`;
ALTER TABLE `global-DEFAULT_PRODUCT-1-Instances` ADD `read_more_text` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_
/* This query obtains the percentage of old/new authors on 2013 for each conference */
SELECT 
	conference.conference_name as conference_name,
	IFNULL(old.authors, 0) + IFNULL(new.authors, 0) as total_authors,
	IFNULL(old.authors, 0) as old_authors,
	IFNULL(new.authors, 0) as new_authors,
	IFNULL(ROUND((old.authors/(IFNULL(old.authors, 0) + IFNULL(new.authors, 0))) * 100, 2), 0) as percetange_old_authors,
	IFNULL(ROUND((new.authors/(IFNULL(old.authors, 0) + IFNULL(new.authors, 0))) * 100, 2), 0) as percetange_new_authors
FROM
	(SELECT 
		pn.source as conference_name
	FROM 
		dblp.dblp_pub_new pn
	WHERE
		pn.type='inproceedings' 
	GROUP BY
		pn.source) as conference
	LEFT JOIN
		(SELECT 
			pn.source as conference,
			COUNT(DISTINCT(man.author)) as authors
		FROM 
			dblp.dblp_authorid_ref_new airn, /* to get the author id */
			dblp.dblp_main_aliases_new man,  /* to get the main alias of the author */
			dblp.dblp_pub_new pn
		WHERE
			pn.type='inproceedings' AND airn.id = pn.id AND ai
-- UserOnlineService.offline()
CREATE
    TRIGGER `trigger_sys_user_off_online` AFTER DELETE ON `sys_user_online`
    FOR EACH ROW BEGIN
   IF OLD.`user_id` IS NOT NULL THEN
      IF NOT EXISTS(SELECT `user_id` FROM `sys_user_last_online` WHERE `user_id` = OLD.`user_id`) THEN
        INSERT INTO `sys_user_last_online`
                  (`user_id`, `username`, `uid`, `host`, `user_agent`, `system_host`,
                   `last_login_timestamp`, `last_stop_timestamp`, `login_count`, `total_online_time`)
                VALUES
                   (OLD.`user_id`,OLD.`username`, OLD.`id`, OLD.`host`, OLD.`user_agent`, OLD.`system_host`,
                    OLD.`start_timestamp`, OLD.`last_access_time`,
                    1, (OLD.`last_access_time` - OLD.`start_timestamp`));
      ELSE
        UPDATE `sys_user_last_online`
          SET `username` = OLD.`username`, `uid` = OLD.`id`, `host` = OLD.`host`, `user_agent` = OLD.`user_agent`,
            `system_host` = OLD.`system_host`, `last_lo
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[Switch_CurrencyConvert]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Switch_CurrencyConvert]
	-- Add the parameters for the stored procedure here
	 @param_strClientID nvarchar(50)
	,@param_fValueToConvert float
	,@param_strFundCurrency nchar(3)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
    SELECT  @param_fValueToConvert * (SELECT ExchangeRate/(SELECT ExchangeRate FROM NavGlobalDBwwwGUID.dbo.Currency WHERE Currency = (SELECT Currency FROM NavGlobalDBwwwGUID.dbo.Client where ClientID = @param_strClientID)) AS RelativeExch FROM NavGlobalDBwww
--Extent Trimming with UNIFORM vs. AUTOALLOCATE Locally-Managed Tablespaces
drop tablespace lmt_auto including contents and datafiles;
drop tablespace lmt_uniform including contents and datafiles;
create tablespace lmt_uniform
datafile '/u01/dbfile/ORA12CR1/lmt_uniform.dbf' size 1048640K reuse
autoextend on next 100m
extent management local
UNIFORM SIZE 100m;
create tablespace lmt_auto
datafile '/u01/dbfile/ORA12CR1/lmt_auto.dbf' size 1048640K reuse
autoextend on next 100m
extent management local
AUTOALLOCATE;
create table uniform_test
  parallel
  tablespace lmt_uniform
  as
  select * from big_table_et;
create table autoallocate_test
  parallel
  tablespace lmt_auto
  as
  select * from big_table_et;
select sid, serial#, qcsid, qcserial#, degree from v$px_session;
column segment_name format a20
select segment_name, blocks, extents
  from user_segments
  where segment_name in ( 'UNIFORM_TEST', 'AUTOALLOCATE_TEST' );
exec show_space( 'UNIFORM_TEST' );
exec show_space( 'AUTOALLOCATE_TES
[{"pk": 1, "model": "contenttypes.contenttype", "fields": {"model": "logentry", "name": "log entry", "app_label": "admin"}}, {"pk": 2, "model": "contenttypes.contenttype", "fields": {"model": "permission", "name": "permission", "app_label": "auth"}}, {"pk": 3, "model": "contenttypes.contenttype", "fields": {"model": "group", "name": "group", "app_label": "auth"}}, {"pk": 4, "model": "contenttypes.contenttype", "fields": {"model": "user", "name": "user", "app_label": "auth"}}, {"pk": 5, "model": "contenttypes.contenttype", "fields": {"model": "contenttype", "name": "content type", "app_label": "contenttypes"}}, {"pk": 6, "model": "contenttypes.contenttype", "fields": {"model": "session", "name": "session", "app_label": "sessions"}}, {"pk": 7, "model": "contenttypes.contenttype", "fields": {"model": "task", "name": "task", "app_label": "server"}}, {"pk": 8, "model": "contenttypes.contenttype", "fields": {"model": "post", "name": "post", "app_label": "server"}}, {"pk": 9, "model": "conten
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (13, 'flash/episode_instance', 'prod', 'Episode Instance', '{project}', 'episode_instance', 'pyasm.flash.FlashEpisodeInstance', 'Episode Instance', 'public');
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (29, 'prod/series', 'prod', 'Series', 'flash', '{public}.series', 'pyasm.prod.biz.Series', 'Series', 'public');
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (30, 'flash/asset', 'flash', 'Asset', '{project}', 'asset', 'pyasm.flash.FlashAsset', 'Asset', 'public');
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (31, 'flash/design_pack', 'flash', 'Design Pack', '{project}', 'funpack', 'pyasm.flash.FlashFunpack', 'Design P

INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (32, 'flash/funpack', 'flash', 'Funpack', '{project}', 'funpack', 'pyasm.flash.FlashFunpack', 'Funpack', 'public');
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (33, 'flash/shot_instance', 'flash', 'Flash Instance', '{project}', 'instance', 'pyasm.flash.FlashShotInstance', 'Flash Instance', 'public');
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (34, 'flash/shot', 'flash', 'Flash Shot', '{project}', 'shot', 'pyasm.flash.FlashShot', 'Flash Shot', 'public');
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (35, 'flash/layer', 'flash', 'LFlash Layers', '{project}', 'layer', 'pyasm.flash.FlashLayer', 'LFlash Layers', 'publ

INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (42, 'flash/script', 'flash', 'Scripts', '{project}', 'script', 'pyasm.search.SObject', 'Scripts', 'public');
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (43, 'flash/storyboard', 'flash', 'Storyboards', '{project}', 'storyboard', 'pyasm.search.SObject', 'Storyboards', 'public');
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (80, 'flash/leica', 'flash', 'Leica', '{project}', '{public}.leica', 'pyasm.search.SObject', '', 'public');
INSERT INTO search_object (id, search_type, namespace, description, "database", table_name, class_name, title, "schema") VALUES (84, 'flash/nat_pause', 'flash', 'Nat Pause', '{project}', 'nat_pause', 'pyasm.flash.NatPause', 'Nat Pause', 'public');
INSERT INTO search_obje
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `account_data`;
CREATE TABLE `account_data` (
  `accountId` int(10) unsigned NOT NULL DEFAULT '0',
  `type` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `time` int(10) unsigned NOT NULL DEFAULT '0',
  `data` blob NOT NULL,
  PRIMARY KEY (`accountId`,`type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `account_data` WRITE;
/*!40000 ALTER TABLE `account_data` DISABLE KEYS */;
/*!
CREATE TABLE dmFlash(
lockedBy nvarchar(250) NULL DEFAULT NULL ,
lastupdatedby nvarchar(250) NOT NULL DEFAULT '' ,
flashPlay bit NOT NULL DEFAULT 1 ,
flashQuality nvarchar(250) NULL DEFAULT 'high' ,
flashWidth decimal(10,2) NULL DEFAULT 0 ,
flashBgcolor nvarchar(250) NULL DEFAULT '#FFFFFF' ,
metaKeywords nvarchar(250) NULL DEFAULT NULL ,
status nvarchar(250) NULL DEFAULT NULL ,
flashAlign nvarchar(250) NULL DEFAULT 'center' ,
teaser nvarchar(MAX) NULL ,
displayMethod nvarchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
ObjectID nvarchar(50) NOT NULL DEFAULT '' ,
flashMenu bit NOT NULL DEFAULT 0 ,
flashMovie nvarchar(250) NULL DEFAULT NULL ,
label nvarchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime2(3) NOT NULL DEFAULT {ts '2216-09-26 14:09:31'} ,
flashLoop bit NOT NULL DEFAULT 0 ,
flashURL nvarchar(250) NULL DEFAULT NULL ,
flashVersion nvarchar(250) NULL DEFAULT '8,0,0,0' ,
createdby nvarchar(250) NOT NULL DEFAULT '' ,
datetimecreated datetime2(3) NOT NULL DEFAULT {ts '221
Insert ignore into m_role values(0,'selfcare','selfcare only');
Create table if not exists del_temp (permission_name varchar(50));
Insert ignore into del_temp values ('CHANGEPLAN_ORDER');
Insert ignore into del_temp values ('CREATE_ALLOCATION');
Insert ignore into del_temp values ('CREATE_CLIENT');
Insert ignore into del_temp values ('CREATE_MEDIAASSET');
Insert ignore into del_temp values ('CREATE_ORDER');
Insert ignore into del_temp values ('CREATE_PAYMENT');
Insert ignore into del_temp values ('CREATE_SELFCARE');
Insert ignore into del_temp values ('CREATE_TICKET');
Insert ignore into del_temp values ('EMAILVERIFICATION_SELFCARE');
Insert ignore into del_temp values ('GENERATENEWPASSWORD_SELFCARE');
Insert ignore into del_temp values ('ONLINE_PAYMENTGATEWAY');
Insert ignore into del_temp values ('READ_ADDRESS');
Insert ignore into del_temp values ('READ_ALLOCATION');
Insert ignore into del_temp values ('READ_BILLMASTER');
Insert ignore into del_temp values ('READ_CLIENT');
Insert ig

Insert ignore into del_temp values ('READ_MEDIAASSET');
Insert ignore into del_temp values ('READ_ORDER');
Insert ignore into del_temp values ('READ_PAYMENTGATEWAYCONFIG');
Insert ignore into del_temp values ('READ_PRICE');
Insert ignore into del_temp values ('READ_SELFCARE');
Insert ignore into del_temp values ('READ_TICKET');
Insert ignore into del_temp values ('READ_USER');
Insert ignore into del_temp values ('REGISTER_SELFCARE');
Insert ignore into del_temp values ('RENEWAL_ORDER');
Insert ignore into del_temp values ('SELFREGISTRATION_ACTIVATE');
Insert ignore into del_temp values ('UPDATE_ORDER');
Insert ignore into del_temp values ('UPDATE_SELFCARE');
Insert ignore into del_temp values ('READ_CLIENTIDENTIFIER');
Insert ignore into del_temp values ('DISCONNECT_ORDER');
Insert ignore into del_temp values ('DELETERECURRINGBILLING_PAYMENTGATEWAY');
Insert ignore into del_temp values ('UPDATE_CLIENT');
Insert ignore into m_role_permission 
Select (Select id from m_role where name='s
﻿USE [LCCHPDev]
GO
DECLARE	@return_value int
EXEC	@return_value = [dbo].[usp_upFamilyWebScreen]
		@Family_ID = 2846,
		@isNewAddress = 1,
		@New_Last_Name = NULL,
		@PropertyID = 11302,
		@New_ConstructionType = 2,
		@New_AreaID = 29,
		@New_isinHistoricDistrict = 1,
		@New_isRemodeled = 1,
		@New_RemodelDate = '2013',
		@New_isinCityLimits = 1,
		@New_Address_Line1 = N'1459 West Glacier Road',
		@New_Address_Line2 = 'Apt B',
		@New_CityName = N'MiniKaga',
		@New_County = N'Miniwaska',
		@New_StateAbbr = N'MN',
		@New_ZipCode = N'54889',
		@New_Year_Built = NULL,
		@New_Owner_id = NULL,
		@New_is_Owner_Occupied = 1,
		@New_ReplacedPipesFaucets = 0,
		@New_TotalRemediationCosts = 5897,
		@New_PropertyNotes = NULL,
		@New_is_Residential = 0,
		@New_isCurrentlyBeingRemodeled = 0,
		@New_has_Peeling_Chipping_Patin = 0,
		@New_is_Rental = 1,
		@New_HomePhone = NULL,
		@New_WorkPhone = NULL,
		@New_Number_of_Smokers = 1,
		@New_Primary_Language_ID = 1,
		@New_Family_Notes = NULL,
		@New_Pets
UPDATE CUSTOMER_MST_/*$domainId*/
SET
CUSTOMER_NAME=/*customerName*/
,CUSTOMER_KANA=/*customerKana*/
,CUSTOMER_OFFICE_NAME=/*customerOfficeName*/
,CUSTOMER_OFFICE_KANA=/*customerOfficeKana*/
,CUSTOMER_ABBR=/*customerAbbr*/
,CUSTOMER_DEPT_NAME=/*customerDeptName*/
,CUSTOMER_ZIP_CODE=/*customerZipCode*/
,CUSTOMER_ADDRESS_1=/*customerAddress1*/
,CUSTOMER_ADDRESS_2=/*customerAddress2*/
,CUSTOMER_PC_POST=/*customerPcPost*/
,CUSTOMER_PC_NAME=/*customerPcName*/
,CUSTOMER_PC_KANA=/*customerPcKana*/
,CUSTOMER_PC_PRE_CATEGORY=/*customerPcPreCategory*/
,CUSTOMER_TEL=/*customerTel*/
,CUSTOMER_FAX=/*customerFax*/
,CUSTOMER_EMAIL=/*customerEmail*/
,CUSTOMER_BUSINESS_CATEGORY=/*customerBusinessCategory*/
,CUSTOMER_JOB_CATEGORY=/*customerJobCategory*/
,CUSTOMER_RO_CATEGORY=/*customerRoCategory*/
,CUSTOMER_RANK_CATEGORY=/*customerRankCategory*/
,CUSTOMER_UPD_FLAG=/*customerUpdFlag*/
,SALES_CM_CATEGORY=/*SalesCmCategory*/
,TAX_SHIFT_CATEGORY=/*taxShiftCategory*/
,MAX_CREDIT_LIMIT=/*maxCreditLimit*/
,CUT
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (95, 'GRN');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (96, 'Accounts Payable');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (97, 'PostingDates');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (98, 'PurchaseAnalysis');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (99, 'AccountSummary');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (100, 'AccountCategory');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (101, 'ChartOfAccounts');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (102, 'Payment Journals');
INSERT INTO sysAccessTypes (TypeID, TypeName) VALUES (103, 'General Ledger Menu');
UPDATE sysAccessTypes SET SequenceNo = 1, Category = '09: Backend - General Ledger' WHERE TypeID = 99;
UPDATE sysAccessTypes SET SequenceNo = 2, Category = '09: Backend - General Ledger' WHERE TypeID = 100;
UPDATE sysAccessTypes SET SequenceNo = 3, Category = '09: Backend - General Ledger' WHERE TypeID

UPDATE sysAccessTypes SET SequenceNo = 4, Category = '09: Backend - General Ledger' WHERE TypeID = 97;
UPDATE sysAccessTypes SET SequenceNo = 5, Category = '09: Backend - General Ledger' WHERE TypeID = 102;
UPDATE sysAccessTypes SET SequenceNo = 6, Category = '09: Backend - General Ledger' WHERE TypeID = 98;
UPDATE sysAccessTypes SET SequenceNo = 7, Category = '09: Backend - General Ledger' WHERE TypeID = 96;
UPDATE sysAccessTypes SET SequenceNo = 8, Category = '09: Backend - General Ledger' WHERE TypeID = 95;
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 95, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 96, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 97, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 98, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUE

INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 100, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 101, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 102, 1, 1);
INSERT INTO sysAccessGroupRights (GroupID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 103, 1, 1);
INSERT INTO sysAccessRights (UID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 95, 1, 1);
INSERT INTO sysAccessRights (UID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 96, 1, 1);
INSERT INTO sysAccessRights (UID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 97, 1, 1);
INSERT INTO sysAccessRights (UID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 98, 1, 1);
INSERT INTO sysAccessRights (UID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 99, 1, 1);
INSERT INTO sysAccessRights (UID, TranTypeID, AllowRead, AllowWrite) VALUES (1, 100, 1, 1);
INSERT INTO sysAccessRights (UID, TranTypeID, Al
CREATE TABLE task_status_deltas (
    id INT NOT NULL PRIMARY KEY DEFAULT (nextval('deltas')),
    change_id INTEGER NOT NULL,
    task_status_id INTEGER NOT NULL,
    new INTEGER,
    status VARCHAR,
    rank INTEGER,
    def INTEGER,
    UNIQUE(change_id,task_status_id), -- one change per change
    FOREIGN KEY(change_id) REFERENCES changes(id) ON DELETE CASCADE
    FOREIGN KEY(task_status_id) REFERENCES task_status(id) ON DELETE CASCADE,
    CONSTRAINT def_constraint CHECK (
        def = 1 OR def IS NULL
    )
);
CREATE TRIGGER
    task_status_deltas_ai_1
AFTER INSERT ON
    task_status_deltas
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_id,
        NEW.task_status_id,
        NEW.status,
        NEW.rank,
        NEW.def
    );
    UPDATE
        changes
    SET
        ucount = ucount + 1
    WHERE
        id = NEW.change_id
    ;
    UPDATE
        topics
    SET
        last_change_id = NEW.change_id
    WHERE
        id = NEW.task_status_id
    ;
    UPDATE
        

    SET
        terms = terms || (
            SELECT
                '-' || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    '  _: task_status' || x'0A'
                ELSE
                    '  _: task_status_delta' || x'0A'
                END
                || '  def: ' || COALESCE(NEW.def, '~') || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    '  project_uuid: ' || p.uuid || x'0A'
                ELSE
                    ''
                END
                || '  rank: ' || COALESCE(NEW.rank, '~') || x'0A'
                || CASE WHEN
                    NEW.status = '-'
                THEN
                    '  status: ''-''' || x'0A'
                ELSE
                    '  status: ' || COALESCE(NEW.status, '~') || x'0A'
                END
                || CASE WHEN
                    NEW.new
                THEN
                    '  topic_uuid: ' || t

                ELSE
                    '  task_status_uuid: ' || topics.uuid || x'0A'
                END
            FROM
                topics
            INNER JOIN
                task_status ts
            ON
                ts.id = NEW.task_status_id
            INNER JOIN
                topics p
            ON
                p.id = ts.project_id
            WHERE
                topics.id = NEW.task_status_id
        )
    WHERE
        change_id = NEW.change_id
    ;
    INSERT INTO
        project_changes(
            change_id,
            project_id
        )
    SELECT
        NEW.change_id,
        project_id
    FROM
        task_status
    WHERE
        id = NEW.task_status_id
    ;
    INSERT OR IGNORE INTO
        task_status_tomerge(task_status_id)
    VALUES
        (NEW.task_status_id)
    ;
    UPDATE
        task_status_tomerge
    SET
        status = status + (NEW.status IS NOT NULL),
        rank   = rank + (NEW.rank IS NOT NULL),
        def    = def + (
﻿CREATE VIEW dbo.v_GroupMember
AS
SELECT          GroupId, MemberId, GroupRoleValue, GroupRoleExtensionValue, Enabled, RoleCode, IsSurveyTarget
FROM              dbo.v_GroupMember_ican5
WHERE          (Enabled = 1)
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[24] 4[37] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
   

         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
 

      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "v_GroupMember_ican5"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 140
               Right = 275
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1965
         Alias = 1965
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder =
--------------------------------------------------------
--  File created - Monday-July-14-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table CUSTOMERS
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."CUSTOMERS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE , 
	"FIRST_NAME" VARCHAR2(20 BYTE), 
	"LAST_NAME" VARCHAR2(20 BYTE), 
	"PHONE_NUMBER" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into SYSTEM.CUSTOMERS
SET DEFINE OFF;
--------------------------------------------------------
--  Const
SET XACT_ABORT ON
insert into [SPD-NAV].[IntegrationDB_SPD].[dbo].[t_IntegrationItems] (
  [id]
  , [IDAnalitType]
  , [SessionId]
  , [SentDate])
SELECT an.id, an.IDAnalitType,NEWID(),GETDATE()
--Получаем СПДшные записи, которые есть в НСИ
 FROM NaviconMDM.dbo.CodesMappingDetails cd
JOIN [SPD-NAV].[GL_SPD].dbo.Analit an
ON cd.ClientId = CAST(an.id AS nvarchar(MAX))
--Делаем LEFT JOIN с IntegrationItems, затем выбираем те, что не сджойнились (Т.е. те, которых еще нет в интеграц. таблице)
LEFT JOIN [SPD-NAV].[IntegrationDB_SPD].[dbo].[t_IntegrationItems] itItems
ON itItems.id = an.id AND itItems.IDAnalitType = an.IDAnalitType
--Выбираем только те справочники, у которых PublisherName = 'SPD'
JOIN [SPD-NAV].[IntegrationDB_SPD].[dbo].[t_AnalitType] anType
ON anType.IDAnalitType = itItems.IDAnalitType AND anType.PublisherName = 'SPD'
WHERE cd.ClientName = 'SPD' 
AND itItems.id IS NULL 
--Кроме курсов валют. Они где-то не в Analit лежат.
AND cd.EntityName <> 'ExchangeRate'
UPDATE itItems
SET
--------------------------------------------------------
--  Constraints for Table PRT_IC_ITEM
--------------------------------------------------------
  ALTER TABLE "PRT_IC_ITEM" ADD CONSTRAINT "AK_UK_PICI_PRT_IC_I" UNIQUE ("IC_ID", "ORDER_NO", "IC_VALUE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PRT_IC_ITEM" ADD CONSTRAINT "PK_ PICI" UNIQUE ("IC_ITEM_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DENT_MDB"  ENABLE;
  ALTER TABLE "PRT_IC_ITEM" MODIFY ("IC_ITEM_ID" NOT NULL DISABLE);
  ALTER TABLE "PRT_IC_ITEM" M
IF OBJECT_ID('dbo.wsp_getCitiesOfJurisdictionNew') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_getCitiesOfJurisdictionNew
    IF OBJECT_ID('dbo.wsp_getCitiesOfJurisdictionNew') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_getCitiesOfJurisdictionNew >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_getCitiesOfJurisdictionNew >>>'
END
go
create proc wsp_getCitiesOfJurisdictionNew
@jurisdictionId smallint
as
begin
   set nocount on
   select cityId, cityName
   from City_new, Jurisdiction, Country
   where City_new.jurisdictionId = Jurisdiction.jurisdictionId
   and City_new.jurisdictionId = @jurisdictionId
   and Jurisdiction.jurisdictionId = @jurisdictionId
   and Jurisdiction.parentId = @jurisdictionId
   and City_new.secondJurisdictionId = -1
   and City_new.countryId = Country.countryId
   and City_new.population >= Country.minPopulation
   order by cityName
end
go
GRANT EXECUTE ON dbo.wsp_getCitiesOfJurisdictionNew TO web
go
IF OBJECT_ID('dbo.wsp_getCit
# 06 Apr 2006     [Tam Wei Xiang]       1) Add in new alert DOCUMENT_RESEND_EXHAUSTED
#                                       2) Modfied template "DOCUMENT_RECEIVED_BY_PARTNER_EMAIL" 
USE userdb;
#Alert TYPE
DELETE FROM alert_type WHERE Name='DOCUMENT_RESEND_EXHAUSTED';
INSERT INTO alert_type (UID, Name, Description, Version, CanDelete) VALUES (21,'DOCUMENT_RESEND_EXHAUSTED','Document Resend Exhausted',1,0);
#Msg-Template
DELETE FROM message_template WHERE NAME='DOCUMENT_RECEIVED_BY_PARTNER_EMAIL';
INSERT INTO message_template (UID, Name, ContentType, MessageType, FromAddr, ToAddr, CcAddr, Subject, Message, Location, Append, Version, CanDelete) VALUES (-10,'DOCUMENT_RECEIVED_BY_PARTNER_EMAIL','Text','EMail','<#USER=admin#>','<#USER=admin#>',NULL,'Document <%GridDocument.U_DOC_FILENAME%> has been received by Partner <%GridDocument.R_PARTNER_ID%>','Document <%GridDocument.U_DOC_FILENAME%> has been received by Partner <%GridDocument.R_PARTNER_ID%> on <%GridDocument.DT_TRANSACTION_COMPLETE

DELETE FROM message_template WHERE NAME='DOCUMENT_RESEND_EXHAUSTED';
INSERT INTO message_template (UID, Name, ContentType, MessageType, FromAddr, ToAddr, CcAddr, Subject, Message, Location, Append, Version, CanDelete) VALUES (-29,'DOCUMENT_RESEND_EXHAUSTED','Text','EMail','<#USER=admin#>','<#USER=admin#>','','Document <%GridDocument.U_DOC_FILENAME%> resend count has exhausted','Document <%GridDocument.U_DOC_FILENAME%> has reached its maximum resend.\r\n\r\nDocument Details:\r\n-----------------\r\nDocument Type      : <%GridDocument.U_DOC_DOC_TYPE%>\r\nFile Type          : <%GridDocument.U_DOC_FILE_TYPE%>\r\nGridDoc ID         : <%GridDocument.G_DOC_ID%>\r\nFolder             : <%GridDocument.FOLDER%>\r\nPartner Name       : <%GridDocument.R_PARTNER_NAME%>\r\nChannel            : <%GridDocument.R_CHANNEL_NAME%>',NULL,NULL,1,0);
#Alert
DELETE FROM alert WHERE UID=-22;
INSERT INTO alert (UID, Name, AlertType, Category, TriggerCond, Description, Version, CanDelete) VALUES (-22,'DOCUMENT_
alter table rwikihistory drop index name;
alter table rwikihistory add index name_idx(name);
update rwikihistory 
	set 
	rwikihistory.ownerRead = 0,
	rwikihistory.ownerWrite = 0,
	rwikihistory.ownerAdmin = 0,
	rwikihistory.groupRead = 0,
	rwikihistory.groupWrite = 0,
	rwikihistory.groupAdmin = 0,
	rwikihistory.publicRead = 0,
	rwikihistory.publicWrite = 0;
update rwikihistory, rwikiobject 
	set 
	rwikihistory.name = rwikiobject.name,
	rwikihistory.realm = rwikiobject.realm,
	rwikihistory.referenced = rwikiobject.referenced,
	rwikihistory.owner = rwikiobject.owner,
	rwikihistory.ownerRead = rwikiobject.ownerRead,
	rwikihistory.ownerWrite = rwikiobject.ownerWrite,
	rwikihistory.ownerAdmin = rwikiobject.ownerAdmin,
	rwikihistory.groupRead = rwikiobject.groupRead,
	rwikihistory.groupWrite = rwikiobject.groupWrite,
	rwikihistory.groupAdmin = rwikiobject.groupAdmin,
	rwikihistory.publicRead = rwikiobject.publicRead,
	rwikihistory.publicWrite = rwikiobject.publicWrite,
	rwikihistory.rwikiobje

  where rwikihistory.rwobjectid = rwikiobject.id and rwikihistory.rwikiobjectid is null;
update rwikihistory 
	set 
	revision = -1
	where revision is null;
update rwikihistory 
	set 
	rwikiobjectid = rwobjectid
	where rwikiobjectid is null;
update rwikihistory 
	set 
	rwikiobjectid = -1
	where rwikiobjectid is null;
message update rwikihistory set rwobjectid = null;
message You may want to execute alter table rwikihistory drop rwobjectid;
alter table rwikihistory add index rwikiobjectid_idx(rwikiobjectid);
update rwikiobject set 
 	rwikiobject.revision = (select max(rwikihistory.revision)+1 from rwikihistory where rwikihistory.rwikiobjectid = rwikiobject.id )
 	where rwikiobject.revision is null;
insert into rwikicurrentcontent ( id, rwikiid, content )  select id,id,content from rwikiobject ;
insert into rwikihistorycontent ( id, rwikiid, content )  select id, id, content from rwikihistory ;
message You may want to execute alter table rwikiobject drop content; 
message You may want to
/*
	Still missing user's pantry and shopping cart.
*/
create table users (
	uid SERIAL,
	uname varchar(20),
	email varchar(40),
	password varchar(25),
	bio text,
	picture varchar(25), -- file name, append suffix+extension (nameLarge.png)
	primary key (uid),
	unique(email)
	);
/*
	several ways to store allergens:
		- single varchar[0,1,1,0,1], where each entry corresponds to an allergen (probably not)
		- BOOL entry for each allergen
		- nutrition estimates. May want to store in a joint table, rather than holding empty 
*/
create table recipes(
	rid SERIAL,
	-- set DEFAULT 0, or not??? later replace null values with 0
	name varchar(75),
	ingredients text ARRAY,
	instructions text,
	totalTime int,
	servings int,
	flavor_piquant real DEFAULT 0,
	flavor_bitter real DEFAULT 0,
	flavor_sweet real DEFAULT 0,
	flavor_meaty real DEFAULT 0,
	flavor_salty real DEFAULT 0,
	flavor_sour real DEFAULT 0,
	rating real DEFAULT 2.5,	-- consider changing to real or float to average rating over time, then 
-- Add new table for Survey Login functionality
CREATE TABLE `redcap_surveys_login` (
`ts` datetime DEFAULT NULL,
`response_id` int(10) DEFAULT NULL,
`login_success` tinyint(1) NOT NULL DEFAULT '1',
KEY `response_id` (`response_id`),
KEY `ts_response_id_success` (`ts`,`response_id`,`login_success`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
ALTER TABLE `redcap_surveys_login`
	ADD FOREIGN KEY (`response_id`) REFERENCES `redcap_surveys_response` (`response_id`) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE  `redcap_projects` ADD  `survey_auth_enabled` INT( 1 ) NOT NULL DEFAULT  '0' AFTER  `survey_queue_custom_text`;
ALTER TABLE  `redcap_surveys` ADD  `survey_auth_enabled_single` INT( 1 ) NOT NULL DEFAULT  '0'
	COMMENT  'Enable Survey Login for this single survey?' AFTER  `promis_skip_question`;
ALTER TABLE  `redcap_surveys_participants`
	ADD  `access_code` VARCHAR( 9 ) NULL DEFAULT NULL AFTER  `legacy_hash` ,
	ADD UNIQUE (`access_code`);
-- Add new table for Survey 

CREATE TABLE `redcap_surveys_short_codes` (
`ts` datetime DEFAULT NULL,
`participant_id` int(10) DEFAULT NULL,
`code` varchar(6) COLLATE utf8_unicode_ci DEFAULT NULL,
UNIQUE KEY `code` (`code`),
KEY `participant_id_ts` (`participant_id`,`ts`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
ALTER TABLE `redcap_surveys_short_codes`
	ADD FOREIGN KEY (`participant_id`) REFERENCES `redcap_surveys_participants` (`participant_id`) ON DELETE CASCADE ON UPDATE CASCADE;
-- Add new cron job
INSERT INTO redcap_crons (cron_name, cron_description, cron_enabled, cron_frequency, cron_max_run_time, cron_instances_max, cron_instances_current, cron_last_run_end, cron_times_failed, cron_external_url) VALUES
('ClearSurveyShortCodes', 'Clear all survey short codes older than X minutes.',  'ENABLED',  300,  60,  1,  0, NULL , 0, NULL);
-- Remove the column end_survey_redirect_url_append_id in redcap_surveys table
update redcap_surveys s set s.end_survey_redirect_url_append_id = 0, s.end_survey
//words_numbers Include Library.
get_word: 
  string text 
  string dec_points
  number digits 
  indicator decimals 
  indicator tens
  indicator hundreds 
  indicator thousands
  indicator t_thousands
  indicator h_thousands
  indicator millions
  indicator t_millions
  indicator h_millions
  indicator jump
   
  indicate tens false
  indicate hundreds false
  indicate thousands false
  indicate t_thousands false
  indicate h_thousands false
  indicate millions false
  indicate t_millions false
  indicate h_millions false
  indicate decimals false 
  indicate jump false
   
  right numb to digits 5 
  if digits gt 0.99 indicate tens true 
  right numb to digits 6  
  if digits gt 99.99 indicate hundreds true 
  right numb to digits 7 
  if digits gt 999.99 indicate thousands true 
  right numb to digits 8 
  if digits gt 9999.99 indicate t_thousands true 
  right numb to digits 9 
  if digits gt 99999.99 indicate h_thousands true 
  right numb to digits 10 
  if digits gt 999999.99 i

  right numb to digits 11 
  if digits gt 9999999.99 indicate t_millions true 
  right numb to digits 12  
  if digits gt 99999999.99 indicate h_millions true 
  move "" to word_1
  move 0 to digits 
h_m:
  [h_millions] begin
     mid numb to digits 1 1 
     gosub a_word
     append word_1 text " HUNDRED"
     if NOT [t_millions] begin  
        if NOT [millions] append word_1 " MILLION" 
     end 
   end 
t_m:
  [t_millions] begin
     mid numb to digits 2 2 
     gosub a_word
     [h_millions] append word_1 " AND" 
     trim word_1 to word_1 
     append word_1 " " text " MILLION"
     goto h_t // to avoid getting millions twice!
  end
m:
  [millions] begin
     mid numb to digits 1 3  
     gosub a_word
     [h_millions] append word_1 " AND" 
     append word_1 " " text " MILLION" 
  end
h_t:
  [h_thousands] begin
     mid numb to digits 1 4 
     gosub a_word
     append word_1 " " text " HUNDRED"  
     if NOT [t_thousands] begin  
       if NOT [thousands] begin
         append

         goto h 
       end 
     end 
   end
t_t:
  [t_thousands] begin
     mid numb to digits 2 5 
     gosub a_word
     [h_millions] indicate jump true
     [millions]   indicate jump true
     [t_millions] indicate jump true
     [h_thousands] indicate jump true
     [jump] begin
       append word_1 " AND"
     end 
       append word_1 " " text " THOUSAND"
     goto h
   end
t:
   [thousands] begin   
     mid numb to digits 1 6 
     gosub a_word
     [h_millions] indicate jump true
     [t_millions] indicate jump true
     [millions]   indicate jump true
     [h_thousands] indicate jump true
     [jump] begin
       append word_1 " AND" 
     end
     append word_1 " " text " THOUSAND" 
   end 
h:
  [hundreds] begin
     mid numb to digits 1 7 
     gosub a_word
     append word_1 " " text " HUNDRED" 
   end
ts:
  [tens] begin
     mid numb to digits 2 8 
     gosub a_word
     [h_millions] indicate jump true
     [t_millions] indicate jump true
     [millions]   indicate ju
delimiter $$
INSERT INTO `role`
(`Name`)
VALUES
('Pending');$$
INSERT INTO `role`
(`Name`)
VALUES
('Active');$$
INSERT INTO `role`
(`Name`)
VALUES
('Administrator');$$
INSERT INTO `role`
(`Name`)
VALUES
('KioskAdministrator');$$
INSERT INTO `role`
(`Name`)
VALUES
('Inactive');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadMyVolunteerInfo');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadOthersVolunteerInfo');$$
INSERT INTO `right`
(`Code`)
VALUES
('UpdateMyVolunteerInfo');$$
INSERT INTO `right`
(`Code`)
VALUES
('UpdateOthersVolunteerInfo');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadInterestAreas');$$
INSERT INTO `right`
(`Code`)
VALUES
('UpdateInterestAreas');$$
INSERT INTO `right`
(`Code`)
VALUES
('CreateInterestAreas');$$
INSERT INTO `right`
(`Code`)
VALUES
('DeleteInterestAreas');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadMyInterests');$$
INSERT INTO `right`
(`Code`)
VALUES
('CreateMyInterests');$$
INSERT INTO `right`
(`Code`)
VALUES
('UpdateMyInterests');$$
INSERT INTO `right`
(`Cod

VALUES
('DeleteMyInterests');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadOtherInterests');$$
INSERT INTO `right`
(`Code`)
VALUES
('CreateOthersInterests');$$
INSERT INTO `right`
(`Code`)
VALUES
('UpdateOthersInterests');$$
INSERT INTO `right`
(`Code`)
VALUES
('DeleteOthersInterests');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadMyHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('CreateMyHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('UpdateMyHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('DeleteMyHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadOthersHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('CreateOthersHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('UpdateOthersHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('DeleteOthersHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadMyFamilyHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadOthersFamilyHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('ViewAdminTab');$$
INSERT INTO `right`
(`Code`)
VALUES
('CreateAccessToken');$$

INSERT INTO `right`
(`Code`)
VALUES
('ReadAllHours');$$
INSERT INTO `right`
(`Code`)
VALUES
('ViewHoursTab');$$
INSERT INTO `right`
(`Code`)
VALUES
('UpdateOthersVolunteerRole');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadAllVolunteerInfo');$$
INSERT INTO `right`
(`Code`)
VALUES
('CreateMyProfile');$$
INSERT INTO `right`
(`Code`)
VALUES
('ReadKioskCheckIn');$$
INSERT INTO `right`
(`Code`)
VALUES
('CreateKioskCheckIn');$$
INSERT INTO `right`
(`Code`)
VALUES
('UpdateKioskCheckIn');$$
INSERT INTO `roletoright`
(`Role_PK`, `Right_PK`)
SELECT ro.Role_PK, ri.Right_PK
FROM `role` ro
CROSS JOIN `right` ri
WHERE ro.Name = 'Pending'
AND ri.Code IN
('ReadMyVolunteerInfo',
'UpdateMyVolunteerInfo',
'ReadInterestAreas',
'ReadMyInterests',
'CreateMyInterests',
'UpdateMyInterests',
'DeleteMyInterests',
'CreateAccessToken',
'ReadRights',
'ViewHoursTab',
'CreateMyProfile');$$
INSERT INTO `roletoright`
(`Role_PK`, `Right_PK`)
SELECT ro.Role_PK, ri.Right_PK
FROM `role` ro
CROSS JOIN `right` ri
WHERE ro.
set echo on
set termout off
drop table my_all_objects;
create table my_all_objects
nologging
as
select * from all_objects
union all
select * from all_objects
union all
select * from all_objects
insert /*+ APPEND */ into my_all_objects 
select * from my_all_objects;
commit;
insert /*+ APPEND */ into my_all_objects 
select * from my_all_objects;
commit;
analyze table my_all_objects compute statistics;
set autotrace on
set timing on
select owner, count(*) from my_all_objects group by owner;
set timing off
set autotrace traceonly
select owner, count(*) from my_all_objects group by owner;
set autotrace off
grant query rewrite to tkyte;
alter session set query_rewrite_enabled=true;
alter session set query_rewrite_integrity=enforced;
create materialized view my_all_objects_aggs
build immediate
refresh on commit
enable query rewrite
as
select owner, count(*)
  from my_all_objects
 group by owner
analyze table my_all_objects_aggs compute statistics;
set timing on
select owner, count(*)
  from m
/****** Object:  Table [dbo].[NewsInfo]    Script Date: 06/24/2013 20:03:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[NewsInfo](
	[NewsId] [numeric](8, 0) IDENTITY(1,1) NOT NULL,
	[NewsTitle] [varchar](50) NULL,
	[NewsPubDate] [datetime] NULL,
	[NewsAuthor] [varchar](10) NULL,
	[NewsCategory] [int] NULL,
	[NewsIndustry] [varchar](10) NULL,
	[NewsSource] [varchar](30) NULL,
	[NewsContents] [text] NULL,
	[NewsStatus] [char](1) NULL,
	[NavCreateAt] [datetime] NULL,
	[NavCreateBy] [varchar](10) NULL,
	[NavUpdateDT] [datetime] NULL,
	[NavUpdateBy] [varchar](10) NULL,
 CONSTRAINT [PK_NEWSINFO] PRIMARY KEY CLUSTERED 
	[NewsId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
ALTER TABLE [dbo].[NewsInfo] ADD  DEFAULT ('A') FOR [NewsStatus]
GO
ALTER TABLE [dbo].[NewsInfo] ADD  DEFAU
-- POST INSTALLATION INSERTS
-- INSERT DSTs
insert into _db_pref_DST values (1, 'Africa / Egypt', 39312000, 52531200, 5, 5, 5, 4, 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=-15', 'FREQ=1;INTERVAL=1;BYMONTH=9;BYDAY=-14');
insert into _db_pref_DST values (2, 'Africa / Namibia', 52531200, 39312000, 1, 0, 1, 0, 'FREQ=1;INTERVAL=1;BYMONTH=9;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=10');
insert into _db_pref_DST values (3, 'Asia / USSR (former) - most states', 36633600, 55123200, 5, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (4, 'Asia / Iraq', 39312000, 55123200, 0, 0, 0, 0, 'FREQ=1;INTERVAL=1;BYMONTH=4;BYMONTHDAY=1', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYMONTHDAY=1');
insert into _db_pref_DST values (5, 'Asia / Lebanon, Kirgizstan', 36633600, 55123200, 5, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (6, 'Asia / Syria', 39312000, 55123200, 0

insert into _db_pref_DST values (7, 'Australasia / Australia, New South Wales', 55123200, 36633600, 5, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10', 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10');
insert into _db_pref_DST values (8, 'Australasia / Australia - Tasmania', 55123200, 36633600, 1, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10');
insert into _db_pref_DST values (9, 'Australasia / New Zealand, Chatham', 55123200, 36633600, 1, 0, 3, 0, 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=30');
insert into _db_pref_DST values (10, 'Australasia / Tonga', 57801600, 31536000, 1, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=11;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=1;BYDAY=-10');
insert into _db_pref_DST values (11, 'Europe / European Union, UK, Greenland', 36633600, 55123200, 5, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=-10', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (12, 'Europe / Russia', 

insert into _db_pref_DST values (13, 'North America / United States, Canada, Mexico', 39312000, 55123200, 1, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (14, 'North America / Cuba', 39312000, 55123200, 0, 0, 5, 0, 'FREQ=1;INTERVAL=1;BYMONTH=4;BYMONTHDAY=1', 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=-10');
insert into _db_pref_DST values (15, 'South America / Chile', 55123200, 36633600, 2, 6, 2, 6, 'FREQ=1;INTERVAL=1;BYMONTH=10;BYDAY=26', 'FREQ=1;INTERVAL=1;BYMONTH=3;BYDAY=26');
insert into _db_pref_DST values (16, 'South America / Paraguay', 52531200, 39312000, 1, 0, 1, 0, 'FREQ=1;INTERVAL=1;BYMONTH=9;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=10');
insert into _db_pref_DST values (17, 'South America / Falklands', 53136000, 39744000, 1, 0, 1, 0, 'FREQ=1;INTERVAL=1;BYMONTH=9;BYDAY=10', 'FREQ=1;INTERVAL=1;BYMONTH=4;BYDAY=10');
-- DEFAULT CALENDAR 
insert into _db_pref_Calendars (title,type,options,owner,descrip
DELIMITER $$
	DROP TRIGGER IF EXISTS `cohort_for_table1`$$
	CREATE TRIGGER `cohort_for_table1` AFTER UPDATE ON flat_table1
	FOR EACH ROW BEGIN
    SET @eligible = (SELECT earliest_start_date FROM flat_table1 WHERE patient_id = new.patient_id);
    IF @eligible IS NOT NULL THEN
      SET @age_at_initiation = (SELECT age_at_initiation FROM earliest_start_date WHERE patient_id = new.patient_id);
    	SET @record_exists = (SELECT id FROM flat_cohort_table WHERE patient_id = new.patient_id);
    		IF @record_exists IS NULL THEN
					INSERT INTO flat_cohort_table ( patient_id, gender, birthdate, earliest_start_date, date_enrolled, age_at_initiation, age_in_days, death_date, reason_for_starting, ever_registered_at_art, date_art_last_taken, taken_art_in_last_two_months, extrapulmonary_tuberculosis, pulmonary_tuberculosis, pulmonary_tuberculosis_last_2_years, kaposis_sarcoma,extrapulmonary_tuberculosis_v_date, pulmonary_tuberculosis_v_date, pulmonary_tuberculosis_last_2_years_v_date, kaposis_sa

				ELSE
					UPDATE flat_cohort_table SET earliest_start_date = new.earliest_start_date, date_enrolled = new.date_enrolled, gender =	new.gender, birthdate = new.dob, age_at_initiation = new.age_at_initiation, age_in_days = new.age_in_days WHERE patient_id = new.patient_id;
					CALL proc_update_cohort_flat_table(
						new.patient_id,
						new.reason_for_eligibility,
						new.ever_registered_at_art_clinic,
						new.date_art_last_taken,
						new.taken_art_in_last_two_months,
						new.extrapulmonary_tuberculosis,
						new.pulmonary_tuberculosis,
						new.pulmonary_tuberculosis_last_2_years,
						new.kaposis_sarcoma,
						new.extrapulmonary_tuberculosis_v_date,
						new.pulmonary_tuberculosis_v_date,
						new.pulmonary_tuberculosis_last_2_years_v_date,
						new.kaposis_sarcoma_v_date,
						new.reason_for_starting_v_date,
						new.ever_registered_at_art_v_date,
						new.date_art_last_taken_v_date,
						new.taken_art_in_last_two_months_v_date );
				END IF;
		END IF;
	END$
﻿CREATE VIEW dbo.v_Tick_Volts
AS
SELECT     StartDate, Diff / NULLIF ((AskMax + BidMax) / 2 - (AskMin + BidMin) / 2, 0) AS Volts, (AskAvg + BidAvg) / 2 AS Price
FROM         dbo.v_Tick_40
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[10] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
        

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "v_Tick_40"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 210
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 2460
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 05. März 2002 um 11:36
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_vers2`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `SubNav`
CREATE TABLE SubNav (
  ID int(11) NOT NULL default '0',
  CreatedBy int(11) NOT NULL default '0',
  CreatedDateTime float(16,4) NOT NULL default '0.0000',
  ChangedBy int(11) NOT NULL default '0',
  ChangedDateTime float(16,4) NOT NULL default '0.0000',
  active int(1) NOT NULL default '0',
  HeadNavID int(11) NOT NULL default '0',
  NameDE varchar(255) NOT NULL default '',
  Name_en varchar(255) NOT NULL default '',
  Name_fr varchar(255) NOT NULL default '',
  Name_es varchar(255) NOT NULL default '0',
  Name_it varchar(255) NOT NULL default '',
  TextID int(11) NOT NULL default '0',
  GruppenID int(11) NOT NULL default '0',
 
SET DEFINE OFF;
CREATE TABLE F_TRIP_FILL
  PRODUCT_CODE          VARCHAR2(50 BYTE),
  DETAILS_UPDATED_DATE  NUMBER,
  MASK                  VARCHAR2(20 BYTE),
  PROD_CODE_SEQ         NUMBER,
  ACTIVE_PAX            NUMBER,
  DEPARTURE_DATE        DATE,
  HAS_BOOKINGS_IND      CHAR(1 BYTE),
  ACTUAL_PAX            NUMBER,
  ACTUAL_REV            NUMBER,
  ACTUAL_COST           NUMBER,
  ACTUAL_COMMISSION     NUMBER
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX F_TRIP_FILL_PK ON F_TRIP_FILL
(PRODUCT_CODE, DETAILS_UPDATED_DATE, DEPARTURE_DATE)
LOGGING
TABLESP
CREATE TABLE host_deltas (
    id INT NOT NULL PRIMARY KEY DEFAULT (nextval('deltas')),
    change_id INTEGER NOT NULL,
    host_id INTEGER NOT NULL,
    name VARCHAR,
    new INTEGER,
    FOREIGN KEY(change_id) REFERENCES changes(id) ON DELETE CASCADE,
    FOREIGN KEY(host_id) REFERENCES hosts(id) ON DELETE CASCADE
);
CREATE TRIGGER
    host_deltas_ai_1
AFTER INSERT ON
    host_deltas
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_id,
        NEW.host_id,
        NEW.name
    );
    UPDATE
        changes
    SET
        ucount = ucount + 1
    WHERE
        id = NEW.change_id
    ;
    UPDATE
        topics
    SET
        last_change_id = NEW.change_id
    WHERE
        id = NEW.host_id
    ;
    UPDATE
        changes_pending
    SET
        terms = terms || (
            SELECT
                '-' || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    '  _: host' || x'0A'
                ELSE
                    '  _: ho
INSERT INTO ecs_brand
  brand_name,
  brand_logo,
  brand_desc,
  site_url,
  sort_order,
  is_show
VALUES
  'Fresh',
  'fresh.jpg',
  'Fresh',
  '',
  50,
  TRUE
);
INSERT INTO `ecs_category` ( `cat_id`, `cat_name`, `keywords`, `cat_desc`, `parent_id`, `sort_order`, `template_file`, `measure_unit`, `show_in_nav`, `style`, `is_show`, `grade`, `filter_attr` ) VALUES  ('29', '美妆品牌', '', '', '16', '50', '', '', '0', '', '1', '0', '');
INSERT INTO `ecs_category` ( `cat_id`, `cat_name`, `keywords`, `cat_desc`, `parent_id`, `sort_order`, `template_file`, `measure_unit`, `show_in_nav`, `style`, `is_show`, `grade`, `filter_attr` ) VALUES  ('30', 'Fresh 馥蕾诗', '', '', '29', '50', '', '', '0', '', '1', '0', '');
INSERT INTO `ecs_category` ( `cat_id`, `cat_name`, `keywords`, `cat_desc`, `parent_id`, `sort_order`, `template_file`, `measure_unit`, `show_in_nav`, `style`, `is_show`, `grade`, `filter_attr` ) VALUES  ('31', '面膜', '', '', '30', '50', '', '', '0', '', '1', '0', '');
INSERT INTO `ecs_cate

INSERT INTO `ecs_category` ( `cat_id`, `cat_name`, `keywords`, `cat_desc`, `parent_id`, `sort_order`, `template_file`, `measure_unit`, `show_in_nav`, `style`, `is_show`, `grade`, `filter_attr` ) VALUES  ('33', '面霜', '', '', '30', '50', '', '', '0', '', '1', '0', '');
INSERT INTO `ecs_category` ( `cat_id`, `cat_name`, `keywords`, `cat_desc`, `parent_id`, `sort_order`, `template_file`, `measure_unit`, `show_in_nav`, `style`, `is_show`, `grade`, `filter_attr` ) VALUES  ('34', '眼霜', '', '', '30', '50', '', '', '0', '', '1', '0', '');
INSERT INTO `ecs_category` ( `cat_id`, `cat_name`, `keywords`, `cat_desc`, `parent_id`, `sort_order`, `template_file`, `measure_unit`, `show_in_nav`, `style`, `is_show`, `grade`, `filter_attr` ) VALUES  ('35', '精华', '', '', '30', '50', '', '', '0', '', '1', '0', '');
INSERT INTO `ecs_category` ( `cat_id`, `cat_name`, `keywords`, `cat_desc`, `parent_id`, `sort_order`, `template_file`, `measure_unit`, `show_in_nav`, `style`, `is_show`, `grade`, `filter_attr` ) 

INSERT INTO `ecs_category` ( `cat_id`, `cat_name`, `keywords`, `cat_desc`, `parent_id`, `sort_order`, `template_file`, `measure_unit`, `show_in_nav`, `style`, `is_show`, `grade`, `filter_attr` ) VALUES  ('37', '唇部护理', '', '', '30', '50', '', '', '0', '', '1', '0', '');
INSERT INTO `ecs_category` ( `cat_id`, `cat_name`, `keywords`, `cat_desc`, `parent_id`, `sort_order`, `template_file`, `measure_unit`, `show_in_nav`, `style`, `is_show`, `grade`, `filter_attr` ) VALUES  ('38', '磨砂', '', '', '30', '50', '', '', '0', '', '1', '0', '');
INSERT INTO `ecs_goods` (`goods_id`, `cat_id`, `goods_sn`, `goods_name`, `goods_name_style`, `click_count`, `brand_id`, `provider_name`, `goods_number`, `goods_weight`, `market_price`, `shop_price`, `promote_price`, `promote_start_date`, `promote_end_date`, `warn_number`, `keywords`, `goods_brief`, `goods_desc`, `goods_thumb`, `goods_img`, `original_img`, `is_real`, `extension_code`, `is_on_sale`, `is_alone_sale`, `is_shipping`, `integral`, `add_time`, `sor
DROP VIEW IF EXISTS transactions.receipt_view;
CREATE VIEW transactions.receipt_view
AS
SELECT
    transactions.transaction_master.transaction_master_id as tran_id,
    transactions.transaction_master.office_id,
    office.offices.office_code,
    transactions.transaction_master.transaction_master_id,
    transactions.transaction_master.transaction_code,
    transactions.transaction_master.transaction_ts,
    transactions.transaction_master.value_date,
    office.users.user_name AS entered_by,
    transactions.transaction_master.reference_number,
    transactions.transaction_master.statement_reference,
    core.verification_statuses.verification_status_name AS status,
    transactions.transaction_master.verification_reason,
    verified_by_user.user_name AS verified_by,
    transactions.customer_receipts.party_id AS customer_id,
    core.parties.party_code AS customer_code,
    core.parties.party_name AS customer_name,
    core.append_if_not_null(core.parties.address_line_1, '&lt;br /&

    core.parties.pan_number,
    core.parties.sst_number,
    core.parties.cst_number,
    core.parties.email,
    transactions.customer_receipts.currency_code,
    transactions.customer_receipts.amount,
    transactions.customer_receipts.er_debit,
    office.offices.currency_code AS home_currency_code,
    transactions.customer_receipts.amount * transactions.customer_receipts.er_debit AS amount_in_home_currency,
    transactions.customer_receipts.er_credit,
    core.parties.currency_code AS base_currency_code,
    transactions.customer_receipts.amount * transactions.customer_receipts.er_debit * transactions.customer_receipts.er_credit AS amount_in_base_currency
FROM transactions.customer_receipts
INNER JOIN transactions.transaction_master
ON transactions.transaction_master.transaction_master_id = transactions.customer_receipts.transaction_master_id
INNER JOIN core.parties
ON core.parties.party_id = transactions.customer_receipts.party_id
INNER JOIN core.verification_statuses
ON trans
-- upgrade database from 4.0.3 to 4.0.4
-- fix bug 1026: need to drop views in order to increase column length
DROP VIEW view_biz_event_defect_network_time_by_app_server;
DROP VIEW view_biz_event_defect_network_time_by_web_server;
DROP VIEW view_biz_event_defect_network_time_by_slowest_lowest_back_comp;
DROP VIEW view_biz_event_defect_network_time_by_slowest_lowest_comp;
DROP VIEW view_biz_event_defect_network_time_by_usergroup;
DROP VIEW view_biz_event_defect_time_by_app_server;
DROP VIEW view_biz_event_defect_time_by_web_server;
DROP VIEW view_biz_event_defect_time_by_slowest_lowest_back_comp;
DROP VIEW view_biz_event_defect_time_by_slowest_lowest_comp;
DROP VIEW view_biz_event_defect_time_by_usergroup;
DROP VIEW view_biz_event_defect_time_by_user_agent;
DROP VIEW view_biz_event_defect_network_time_by_user_agent;
DROP VIEW view_biz_event_defect_app_time_by_app_server;
DROP VIEW view_biz_event_defect_app_time_by_web_server;
DROP VIEW view_biz_event_defect_app_time_by_slowest_lowest_ba

DROP VIEW view_biz_event_defect_app_time_by_slowest_lowest_comp;
DROP VIEW view_biz_event_defect_app_time_by_user_agent;
DROP VIEW view_biz_event_defect_app_time_by_usergroup;
DROP VIEW view_biz_event_defect_logic_time_by_app_server;
DROP VIEW view_biz_event_defect_logic_time_by_web_server;
DROP VIEW view_biz_event_defect_logic_time_by_slowest_lowest_back_comp;
DROP VIEW view_biz_event_defect_logic_time_by_slowest_lowest_comp;
DROP VIEW view_biz_event_defect_logic_time_by_user_agent;
DROP VIEW view_biz_event_defect_backend_time_by_app_server;
DROP VIEW view_biz_event_defect_backend_time_by_web_server;
DROP VIEW view_biz_event_defect_backend_time_by_slowest_lowest_back_comp;
DROP VIEW view_biz_event_defect_backend_time_by_slowest_lowest_comp;
DROP VIEW view_biz_event_defect_backend_time_by_user_agent;
DROP VIEW view_biz_event_defect_backend_time_by_usergroup;
DROP VIEW view_biz_event_defect_web_time_by_app_server;
DROP VIEW view_biz_event_defect_web_time_by_web_server;
DROP VIEW view_b
DROP PROCEDURE IF EXISTS RedKey2_GiveAllRedKey;
DROP PROCEDURE IF EXISTS SLET_poster_fra_TurDeltager_hvor_turen_er_slettet;
DROP PROCEDURE IF EXISTS RedKey1_AddMissingMembersToVintervedligehold;
DROP PROCEDURE IF EXISTS  Antal_ture;
DROP VIEW IF EXISTS qBoatsReserveret;
DROP VIEW IF EXISTS qBoatsSkadet;
DROP VIEW IF EXISTS qBoatsOnWater;
DROP VIEW IF EXISTS qBoatsOnWater2;
DROP VIEW IF EXISTS qBoatsOnWater3;
DROP VIEW IF EXISTS qAvailableboats;
DROP VIEW IF EXISTS qBoatsSkader;
DROP VIEW IF EXISTS Active_Mp_og_8gp;
DROP VIEW IF EXISTS AlleTurRettelser;
DROP VIEW IF EXISTS FindFejlture_1;
DROP VIEW IF EXISTS FindFejlture_2;
DROP VIEW IF EXISTS FindFejlture_3;
DROP VIEW IF EXISTS RetTur_subquery;
DROP VIEW IF EXISTS RetTurDeltagere;
DROP VIEW IF EXISTS RetTurDeltagere_subquery;
DROP VIEW IF EXISTS Rostat_BeregnRodistance;
DROP VIEW IF EXISTS Rostat_BeregnRodistance_kajak;
DROP VIEW IF EXISTS Rostat_BeregnRodistance_robaad;
DROP VIEW IF EXISTS Rostat_Rangorden;
DROP VIEW IF EXISTS Rostat_
--  
--  $Id$
--  
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--  
--  Copyright (C) 1998-2012 OpenLink Software
--  
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--  
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--  
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--  
--  
echo BOTH "\nSTARTED: string session tests (tstrses.sql)\n";
SET ARGV[0] 0;
SET ARGV[1] 0;
drop table tb;
create table tb (ch long

ECHO BOTH $IF $EQU $STATE OK "PASSED" "***FAILED";
SET ARGV[$LIF] $+ $ARGV[$LIF] 1;
ECHO BOTH ": create table tb : STATE=" $STATE " MESSAGE=" $MESSAGE "\n";
create procedure fill (inout _read any)
   http (repeat ('a', 2000) || '\r\n', _read);
   http (repeat ('b', 2000) || '\r\n', _read);
   http (repeat ('c', 2000) || '\r\n', _read);
   http (repeat ('c', 2000) || '\r\n', _read);
   http (repeat ('d', 2000) || '\r\n', _read);
   http (repeat ('e', 2000) || '\r\n', _read);
   http (repeat ('f', 2000) || '\r\n', _read);
create procedure t1n ()
   declare _read any;
   declare _res varchar;
   _read := string_output ();
   fill (_read);
   _res :=  string_output_string (_read);
   return length (_res);
select t1n ();
ECHO BOTH $IF $EQU $LAST[1] 14014 "PASSED" "***FAILED";
SET ARGV[$LIF] $+ $ARGV[$LIF] 1;
ECHO BOTH ": using memory session : STATE=" $STATE "\n";
create procedure t1 ()
   declare _read any;
   declare _res varchar;
   _read := string_output (5000);
   fill (_read);
   _re

   return length (_res);
select t1 ();
ECHO BOTH $IF $EQU $LAST[1] 14014 "PASSED" "***FAILED";
SET ARGV[$LIF] $+ $ARGV[$LIF] 1;
ECHO BOTH ": using limited session session : STATE=" $STATE " LAST=" $LAST[1] "\n";
create procedure t2 ()
   declare _read any;
   _read := string_output (5000);
   fill (_read);
   insert into tb values (_read);
select t2 ();
ECHO BOTH $IF $EQU $STATE OK "PASSED" "***FAILED";
SET ARGV[$LIF] $+ $ARGV[$LIF] 1;
ECHO BOTH ": insert into table tb : STATE=" $STATE " MESSAGE=" $MESSAGE "\n";
select length(ch) from tb;
ECHO BOTH $IF $EQU $LAST[1] 14014 "PASSED" "***FAILED";
SET ARGV[$LIF] $+ $ARGV[$LIF] 1;
ECHO BOTH ": select length(ch) from tb; : STATE=" $STATE " LAST=" $LAST[1] "\n";
create procedure t3 ()
   declare _read, _res any;
   _read := string_output (5000);
   fill (_read);
   string_to_file ('test_file', _read, -2);
   _res := file_to_string ('test_file');
   return length(_res);
select t3();
ECHO BOTH $IF $EQU $LAST[1] 14014 "PASSED" "***FAILED";
SET 
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_behavior' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_behavior' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_behavior`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_group' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_group' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_group`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_keyword' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_keyword' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_keyword`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_logs' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_logs' ORDER BY id 

DROP TABLE IF EXISTS `wp_youaskservice_logs`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_user' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_user' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_user`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_wechat_enddate' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_wechat_enddate' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_wechat_enddate`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_wechat_grouplist' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='youaskservice_wechat_grouplist' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_youaskservice_wechat_grouplist`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='youaskservice_wxlogs' ORDER
create or replace procedure PP_DOGNOM_REPORT
-- Îò÷åò ïî îäíîèìåííîé íîìåíêëàòóðå òîâàðîâ, ðàáîò, óñëóã
(nyear in number) is
  i number;
begin
  prsg_excel.PREPARE;
  prsg_excel.SHEET_SELECT('Ëèñò1');
  prsg_excel.LINE_DESCRIBE('Ñòðîêà');
  for i in 1 .. 5 loop
    prsg_excel.LINE_CELL_DESCRIBE('Ñòðîêà', 'Ä' || i);
  end loop;
  for c in (select rownum, a.*, edv.str_value || '. ' || edv.note snomengroup
              from (select a.scode, --
                           sum(decode(a.nquarter, 1, a.nsumm, null)) ndog1,
                           sum(decode(a.nquarter, 2, a.nsumm, null)) ndog2,
                           sum(decode(a.nquarter, 3, a.nsumm, null)) ndog3,
                           sum(decode(a.nquarter, 4, a.nsumm, null)) ndog4
                      from (select dpv.str_value scode, fp_quarter(f.doc_date) nquarter, f.summ nsumm
                              from govcntr g, govcntrfin f, docs_props dp, docs_props_vals dpv
                             where g.rn = dpv.unit_rn

﻿--DateTimeLastRead, TotalReads, DateTimeLastStoryPublished
IF NOT EXISTS(
	SELECT * FROM sys.tables [table] INNER JOIN sys.columns [column] ON [table].object_id = [column].object_id 	
	WHERE [table].name = 'MixmagRead' 
	AND	[column].name = 'DateTimeLastRead'
) BEGIN
ALTER TABLE dbo.MixmagRead ADD
	DateTimeLastRead datetime NULL
EXECUTE sp_addextendedproperty N'MS_Description', N'Date/time the issue was last read.', N'SCHEMA', N'dbo', N'TABLE', N'MixmagRead', N'COLUMN', N'DateTimeLastRead'
END
IF NOT EXISTS(
	SELECT * FROM sys.tables [table] INNER JOIN sys.columns [column] ON [table].object_id = [column].object_id 	
	WHERE [table].name = 'MixmagRead' 
	AND	[column].name = 'TotalReads'
) BEGIN
ALTER TABLE dbo.MixmagRead ADD
	TotalReads int NULL
EXECUTE sp_addextendedproperty N'MS_Description', N'Total number of reads.', N'SCHEMA', N'dbo', N'TABLE', N'MixmagRead', N'COLUMN', N'TotalReads'
END
IF NOT EXISTS(
	SELECT * FROM sys.tables [table] INNER JOIN sys.columns [column] ON [table].obj
﻿-- --------------------------------------------------
-- drop all Views
-- -------------------------------------------------- 
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_Product]'))
	DROP VIEW [dbo].[View_Product]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_Banner]'))
	DROP VIEW [dbo].[View_Banner]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_Link]'))
	DROP VIEW [dbo].[View_Link]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_News]'))
	DROP VIEW [dbo].[View_News]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_Member]'))
	DROP VIEW [dbo].[View_Member]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_User]'))
	DROP VIEW [dbo].[View_User]
GO
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[View_UserPermission]'))
	DROP VIEW [dbo].[View_UserPermission]
GO
IF  E
CALL moduleAddNewByPath("CsvImport", 1, 1, "administrator/headmod_Kuwasys/modules/mod_Classes/CsvImport/CsvImport.php", "Classes",
	"root/administrator/Kuwasys/Classes", @newId);
INSERT INTO `GroupModuleRights` (groupId, moduleId) VALUES
	(3, @newId);
CALL moduleAddNewByPath("FileUploadForm", 1, 1, "administrator/headmod_Kuwasys/modules/mod_Classes/CsvImport/FileUploadForm.php", "CsvImport",
	"root/administrator/Kuwasys/Classes/CsvImport", @newId);
INSERT INTO `GroupModuleRights` (groupId, moduleId) VALUES
	(3, @newId);
CALL moduleAddNewByPath("Review", 1, 1, "administrator/headmod_Kuwasys/modules/mod_Classes/CsvImport/Review.php", "CsvImport",
	"root/administrator/Kuwasys/Classes/CsvImport", @newId);
INSERT INTO `GroupModuleRights` (groupId, moduleId) VALUES
	(3, @newId);
CALL moduleAddNewByPath("ImportExecute", 1, 1, "administrator/headmod_Kuwasys/modules/mod_Classes/CsvImport/ImportExecute.php", "CsvImport",
	"root/administrator/Kuwasys/Classes/CsvImport", @newId);
INSERT INTO `Grou

	(3, @newId);
CALL moduleAddNewByPath("CsvImport", 1, 1, "administrator/headmod_Kuwasys/modules/mod_Classteachers/CsvImport/CsvImport.php", "Classteachers",
	"root/administrator/Kuwasys/Classteachers", @newId);
INSERT INTO `GroupModuleRights` (groupId, moduleId) VALUES
	(3, @newId);
CALL moduleAddNewByPath("FileUploadForm", 1, 1, "administrator/headmod_Kuwasys/modules/mod_Classteachers/CsvImport/FileUploadForm.php", "CsvImport",
	"root/administrator/Kuwasys/Classteachers/CsvImport", @newId);
INSERT INTO `GroupModuleRights` (groupId, moduleId) VALUES
	(3, @newId);
CALL moduleAddNewByPath("Review", 1, 1, "administrator/headmod_Kuwasys/modules/mod_Classteachers/CsvImport/Review.php", "CsvImport",
	"root/administrator/Kuwasys/Classteachers/CsvImport", @newId);
INSERT INTO `GroupModuleRights` (groupId, moduleId) VALUES
	(3, @newId);
CALL moduleAddNewByPath("ImportExecute", 1, 1, "administrator/headmod_Kuwasys/modules/mod_Classteachers/CsvImport/ImportExecute.php", "CsvImport",
	"root/admin
USE Vivaldi
GO
IF  EXISTS (
SELECT 	* FROM dbo.sysobjects 
WHERE 	id = OBJECT_ID(N'[dbo].[vw_TotalVaRByFundByDatePORT]') AND 
	OBJECTPROPERTY(id, N'IsView') = 1
DROP VIEW [dbo].[vw_TotalVaRByFundByDatePORT]
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vw_TotalVaRByFundByDatePORT]
AS
SELECT 	VaRReports.ReportId AS ReportId
	, Reports.ShortName AS ReportShortName
	, Reports.LongName AS ReportLongName
	, VaRReports.FundId AS FundId
	, Funds.FundCode AS FundShortName
	, Benchs.ID AS BenchMarkId
	, Benchs.ShortName AS BenchShort
	, Benchs.LongName AS BenchLong
	, VaRReports.ReportDate AS VaRDate
	, VaRReports.NumSec AS PositionsNumber
	, VaRReports.MarketValThousands AS FundNMVThousands
	, NAVs.CostNaV AS NAV
	, NAVs.TotalPL AS PL
	, VaRModels.ShortName AS VaRModel
	, Funds.ConfidenceInt AS VaRConfidence
	, Funds.Horizon AS VaRHorizon
	, VaRReports.VaR AS DollarVaR
--	, VaRReports.VaR/VaRReports.MarketValThousands/1000
--	, VaRreports.VaRPerc/100 AS PercentVaRv2
	, Va
/* This file redefines trigger bi_queueEvents for updating from versions that
   did not have queuename. */
USE asterisk;
DROP TRIGGER IF EXISTS `asterisk`.`bi_queueEvents`;
DELIMITER //
CREATE TRIGGER `asterisk`.`bi_queueEvents` BEFORE INSERT ON `asterisk`.`queue_log`
FOR EACH ROW BEGIN
IF NEW.event = 'ADDMEMBER' THEN
INSERT INTO agent_status (agentId,agentStatus,timestamp,callid,queue) VALUES (NEW.agent,'READY',FROM_UNIXTIME(NEW.time),NULL,NEW.queuename) ON DUPLICATE KEY UPDATE agentStatus = "READY", timestamp = FROM_UNIXTIME(NEW.time), callid = NULL, queue = NEW.queuename;
ELSEIF NEW.event = 'REMOVEMEMBER' THEN
INSERT INTO `agent_status` (agentId,agentStatus,timestamp,callid,queue) VALUES (NEW.agent,'LOGGEDOUT',FROM_UNIXTIME(NEW.time),NULL,NEW.queuename) ON DUPLICATE KEY UPDATE agentStatus = "LOGGEDOUT", timestamp = FROM_UNIXTIME(NEW.time), callid = NULL, queue = NEW.queuename;
ELSEIF NEW.event = 'AGENTLOGIN' THEN
INSERT INTO `agent_status` (agentId,agentStatus,timestamp,callid,queu

ELSEIF NEW.event = 'AGENTLOGOFF' THEN
INSERT INTO `agent_status` (agentId,agentStatus,timestamp,callid,queue) VALUES (NEW.agent,'LOGGEDOUT',FROM_UNIXTIME(NEW.time),NULL,NEW.queuename) ON DUPLICATE KEY UPDATE agentStatus = "LOGGEDOUT", timestamp = FROM_UNIXTIME(NEW.time), callid = NULL, queue = NEW.queuename;
ELSEIF NEW.event = 'PAUSE' THEN
INSERT INTO agent_status (agentId,agentStatus,timestamp,callid,queue) VALUES (NEW.agent,'PAUSE',FROM_UNIXTIME(NEW.time),NULL,NEW.queuename) ON DUPLICATE KEY UPDATE agentStatus = "PAUSE", timestamp = FROM_UNIXTIME(NEW.time), callid = NULL, queue = NEW.queuename;
ELSEIF NEW.event = 'UNPAUSE' THEN
INSERT INTO `agent_status` (agentId,agentStatus,timestamp,callid,queue) VALUES (NEW.agent,'READY',FROM_UNIXTIME(NEW.time),NULL,NEW.queuename) ON DUPLICATE KEY UPDATE agentStatus = "READY", timestamp = FROM_UNIXTIME(NEW.time), callid = NULL, queue = NEW.queuename;
ELSEIF NEW.event = 'ENTERQUEUE' THEN
REPLACE INTO `call_status` VALUES
(NEW.callid,
replace(repla

, '|', ''),
'inQue',
FROM_UNIXTIME(NEW.time),
NEW.queuename,
'',
'',
'',
'',
0);
ELSEIF NEW.event = 'CONNECT' THEN
UPDATE `call_status` SET
callid = NEW.callid,
status = NEW.event,
timestamp = FROM_UNIXTIME(NEW.time),
queue = NEW.queuename,
holdtime = replace(substring(substring_index(NEW.data, '|', 1), length(substring_index(NEW.data, '|', 1 - 1)) + 1), '|', '')
where callid = NEW.callid;
INSERT INTO agent_status (agentId,agentStatus,timestamp,callid,queue) VALUES
(NEW.agent,NEW.event,
FROM_UNIXTIME(NEW.time),
NEW.callid,
NEW.queuename)
ON DUPLICATE KEY UPDATE
agentStatus = NEW.event,
timestamp = FROM_UNIXTIME(NEW.time),
callid = NEW.callid,
queue = NEW.queuename;
ELSEIF NEW.event in ('COMPLETECALLER','COMPLETEAGENT') THEN
UPDATE `call_status` SET
callid = NEW.callid,
status = NEW.event,
timestamp = FROM_UNIXTIME(NEW.time),
queue = NEW.queuename,
originalPosition = replace(substring(substring_index(NEW.data, '|', 3), length(substring_index(NEW.data, '|', 3 - 1)) + 1), '|', ''),
holdt
USE Vivaldi
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF  EXISTS (
	SELECT * FROM dbo.sysobjects 
	WHERE 	id = OBJECT_ID(N'[dbo].[spS_GetScenariosByIdByDate]') AND 
		OBJECTPROPERTY(id,N'IsProcedure') = 1
	)
DROP PROCEDURE [dbo].[spS_GetScenariosByIdByDate]
GO
CREATE PROCEDURE [dbo].[spS_GetScenariosByIdByDate] 
	@RefDate datetime,
	@ScenarioId integer
AS
SET NOCOUNT ON;
SELECT	ScenView.*
	, ScenData.ReportDate
	, F.FundCode
	, F.FundName
	, ScenData.PortPerf*ScenData.MktVal/NaVs.CostNav/100 AS PortPerf
	, ScenData.BenchPerf/100 AS BenchPerf
	, ScenData.PortPerf*ScenData.MktVal/NaVs.CostNav/100 - ScenData.BenchPerf/100 AS RelPerf
FROM	tbl_ScenReports AS ScenData LEFT JOIN
		tbl_EnumScen AS ScenView ON (
			ScenData.ReportId = ScenView.Id
			) LEFT JOIN
		tbl_FundsNaVsAndPLs AS NaVs ON (
			NaVs.FundId = ScenData.FundId
			AND NaVs.NaVPLDate = ScenData.ReportDate
		) LEFT JOIN
		tbl_Funds AS F ON (ScenData.FundId = F.Id)
WHERE	ScenData.ReportDate = @RefDate
	AND	ScenView.Id= @
INSERT INTO `new_schema`.`users` (`login`, `password`) VALUES ('admin', 'admin');
INSERT INTO `new_schema`.`users` (`login`, `password`) VALUES ('pinkman_j', 'pinkman_j');
INSERT INTO `new_schema`.`users` (`login`, `password`) VALUES ('annihilator', 'annihilator');
INSERT INTO `new_schema`.`lots` (`name`) VALUES ('Gold');
INSERT INTO `new_schema`.`lots` (`name`) VALUES ('Silver');
INSERT INTO `new_schema`.`lots` (`name`) VALUES ('Titanium');
INSERT INTO `new_schema`.`lots` (`name`) VALUES ('Coal');
INSERT INTO `new_schema`.`lots` (`name`) VALUES ('Iron');
INSERT INTO `new_schema`.`lots` (`name`) VALUES ('Kryptonite');
INSERT INTO `new_schema`.`lots` (`name`) VALUES ('Spice');
INSERT INTO `new_schema`.`lots` (`name`) VALUES ('Tiberium');
INSERT INTO `new_schema`.`bets` (`price`, `lot_id`, `user_id`) VALUES ('100', '1', '3');
INSERT INTO `new_schema`.`bets` (`price`, `lot_id`, `user_id`) VALUES ('150', '2', '1');
INSERT INTO `new_schema`.`bets` (`price`, `lot_id`, `user_id`) VALUES ('50'
USE Vivaldi
GO
IF  EXISTS (
SELECT 	* FROM dbo.sysobjects 
WHERE 	id = OBJECT_ID(N'[dbo].[vw_TotalVaRByFundByDate]') AND 
	OBJECTPROPERTY(id, N'IsView') = 1
DROP VIEW [dbo].[vw_TotalVaRByFundByDate]
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vw_TotalVaRByFundByDate]
AS
SELECT 	VaRReports.ReportId AS ReportId
	, Reports.ShortName AS ReportShortName
	, Reports.LongName AS ReportLongName
	, VaRReports.FundId AS FundId
	, Funds.FundCode AS FundShortName
	, Benchs.ID AS BenchMarkId
	, Benchs.ShortName AS BenchShort
	, Benchs.LongName AS BenchLong
	, VaRReports.ReportDate AS VaRDate
	, VaRReports.NumSec AS PositionsNumber
	, VaRReports.MarketValThousands AS FundNMVThousands
	, NAVs.CostNaV AS NAV
	, NAVs.TotalPL AS PL
	, VaRModels.ShortName AS VaRModel
	, Funds.ConfidenceInt AS VaRConfidence
	, Funds.Horizon AS VaRHorizon
	, VaRReports.VaR AS DollarVaR
--	, VaRReports.VaR/VaRReports.MarketValThousands/1000
--	, VaRreports.VaRPerc/100 AS PercentVaRv2
	, VaRReports.VaR
--------------------------------------------------------
--  ÆÄÀÏÀÌ »ý¼ºµÊ - ¸ñ¿äÀÏ-2¿ù-02-2017   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table MEMBER
--------------------------------------------------------
  CREATE TABLE "SCOTT"."MEMBER" 
   (	"EMAIL" VARCHAR2(40 BYTE), 
	"PASSWORD" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(20 BYTE), 
	"PHONE" NUMBER, 
	"ADDRESS" VARCHAR2(50 BYTE), 
	"MEMBERID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MEMBER_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "SCOTT"."MEMBER_PK" ON "SCOTT"."MEMBER"
--
-- Triggers `user`
--
DELIMITER //
CREATE TRIGGER `newuser` AFTER INSERT ON `user`
 FOR EACH ROW BEGIN
IF NEW.user_level=0 THEN
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'admin',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'department',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'institute',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'report',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'mask',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'treeview',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'restree',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'resaccess',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'user',7);
INSERT

INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'happyhour_assoc',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'project',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'proj_assoc',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'price',7);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'blacklist',7);
END IF;
IF new.user_level=1 THEN
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'user',5);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'department',5);
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'institute',5);
END IF;
IF new.user_level=2 THEN
INSERT INTO admin (admin_user, admin_table, admin_permission) VALUES (new.user_id,'user',1);
INSERT INTO resaccess (resaccess_user, resaccess_table, res
﻿create or replace procedure u1.ETLT_PKB_REPORT
      is
      v_last_date date;
      vLast_load_date date;
      vStrDate date := sysdate;
      s_mview_name varchar2(30) := 'T_PKB_REPORT';
      begin
        if to_number(to_char(sysdate,'hh24')) between 0 and 7 then
             v_last_date:=trunc(sysdate); --для ежедневного
          else
            select min(last_date)
            into v_last_date
            from T_RDWH_INCREMENT_TABLES_LOAD
            where object_name in ('T_RFO_Z#KAS_PKB_CI','T_RFO_Z#PKB_REPORT','T_RFO_Z#FDOC','T_RFO_Z#KAS_STRING_250');
            --для онлайн
        end if;
        --Дата последней загрузки
        select last_date
          into vLast_load_date
          from T_RDWH_INCREMENT_TABLES_LOAD tl
         where tl.object_name = s_mview_name;
        delete from T_PKB_REPORT_GT;
        --Собираем id по которым будем удалять
        insert into T_PKB_REPORT_GT
        (
        select /*+ driving_site*/ distinct id
         from s01.s$Z#PKB_R

         where src_commit_date >= vLast_load_date
         );
        insert into T_PKB_REPORT_GT
        (
         select /*+ driving_site*/distinct p.id
         from s01.s$Z#KAS_PKB_CI@rdwh_exd  s
         join s01.Z#KAS_PKB_CI@rdwh_exd c on c.id = s.id
         join s01.z#pkb_report@rdwh_exd p on c.collection_id = p.c_ci
                                          or c.collection_id = p.c_closed_ci
         where src_commit_date >= vLast_load_date);
        insert into T_PKB_REPORT_GT
        (
         select /*+ driving_site*/
                distinct p.id
        from s01.s$Z#KAS_STRING_250@rdwh_exd se
        join s01.Z#KAS_STRING_250@rdwh_exd s on  s.id = se.id
        join s01.z#pkb_report@rdwh_exd p on s.collection_id = p.c_agre_statuses
        where src_commit_date >= vLast_load_date);
        insert into T_PKB_REPORT_GT
          (
          select /*+ driving_site*/
                 distinct r.id
          from s01.s$Z#fdoc@rdwh_exd f
          join s01.z#pkb_report@rdwh
-- phpMyAdmin SQL Dump
-- version 2.11.0
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Feb 15, 2008 at 11:36 AM
-- Server version: 5.0.45
-- PHP Version: 5.2.5
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
-- --------------------------------------------------------
--
-- Table structure for table `filehandler_append_file`
--
CREATE TABLE IF NOT EXISTS `filehandler_append_file` (
  `id` int(11) NOT NULL auto_increment,
  `intranet_id` int(11) NOT NULL default '0',
  `date_created` datetime NOT NULL default '0000-00-00 00:00:00',
  `date_updated` datetime NOT NULL default '0000-00-00 00:00:00',
  `belong_to_key` int(11) NOT NULL default '0',
  `belong_to_id` int(11) NOT NULL default '0',
  `file_handler_id` int(11) NOT NULL default '0',
  `description` varchar(255) NOT NULL default '',
  `active` int(1) NOT NULL default '1',
  PRIMARY KEY  (`id`),
  KEY `intranet_id` (`intranet_id`,`belong_to_id`,`file_handler_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- -------------

--
-- Table structure for table `file_handler`
--
CREATE TABLE IF NOT EXISTS `file_handler` (
  `id` int(11) NOT NULL auto_increment,
  `intranet_id` int(11) NOT NULL default '0',
  `user_id` int(11) NOT NULL default '0',
  `date_created` datetime NOT NULL default '0000-00-00 00:00:00',
  `date_changed` datetime NOT NULL default '0000-00-00 00:00:00',
  `description` text NOT NULL,
  `file_name` varchar(100) NOT NULL default '',
  `server_file_name` varchar(255) NOT NULL default '',
  `file_size` int(11) NOT NULL default '0',
  `file_type_key` int(11) NOT NULL default '0',
  `accessibility_key` int(11) NOT NULL default '0',
  `access_key` varchar(255) NOT NULL default '',
  `width` int(11) default NULL,
  `height` int(11) default NULL,
  `active` int(11) NOT NULL default '1',
  `temporary` int(11) NOT NULL default '0',
  PRIMARY KEY  (`id`),
  KEY `intranet_id` (`intranet_id`,`access_key`,`active`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- --------------------------------------------

--
-- Table structure for table `file_handler_instance`
--
CREATE TABLE IF NOT EXISTS `file_handler_instance` (
  `id` int(11) NOT NULL auto_increment,
  `intranet_id` int(11) NOT NULL default '0',
  `file_handler_id` int(11) NOT NULL default '0',
  `type_key` int(11) NOT NULL default '0',
  `date_created` datetime NOT NULL default '0000-00-00 00:00:00',
  `date_changed` datetime NOT NULL default '0000-00-00 00:00:00',
  `server_file_name` varchar(255) NOT NULL default '',
  `width` int(255) NOT NULL default '0',
  `height` int(255) NOT NULL default '0',
  `file_size` varchar(20) NOT NULL default '',
  `crop_parameter` varchar(255) NOT NULL,
  `active` int(11) NOT NULL default '1',
  PRIMARY KEY  (`id`),
  KEY `intranet_id` (`intranet_id`,`file_handler_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- --------------------------------------------------------
--
-- Table structure for table `file_handler_instance_type`
--
CREATE TABLE IF NOT EXISTS `file_handler_instance_type` (
  `id` in
SET DEFINE OFF;
CREATE TABLE BREF_VAL
  BREF_SK               NUMBER(15),
  BOOKING_REF           NUMBER(18),
  DETAILS_UPDATED_DATE  NUMBER(8)
TABLESPACE NASA_DATA
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE TABLE BREF_VAL_INV
  BREF_SK               NUMBER(22),
  BOOKING_REF           NUMBER(18),
  SERVICE_SEQ           NUMBER(18),
  DETAILS_UPDATED_DATE  NUMBER(8),
  CREF                  NUMBER(22),
  CBOOK                 NUMBER(18),
  UUPD                  NUMBER
TABLESPACE NASA_DATA
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
        

            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE INDEX IDX$BREF_BOOK ON BREF_VAL
(BOOKING_REF)
LOGGING
TABLESPACE NASA_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;
CREATE INDEX IDX$BREF_DATE ON BREF_VAL
(DETAILS_UPDATED_DATE)
LOGGING
TABLESPACE NASA_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
         

            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;
CREATE INDEX IDX$BREF_INV_CBOOK ON BREF_VAL_INV
(CBOOK)
LOGGING
TABLESPACE NASA_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;
CREATE INDEX IDX$BREF_LINK ON BREF_VAL
(BREF_SK)
LOGGING
TABLESPACE NASA_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_
INSERT INTO `#__extensions` (`extension_id`, `name`, `type`, `element`, `folder`, `client_id`, `enabled`, `access`, `protected`, `manifest_cache`, `params`, `custom_data`, `system_data`, `checked_out`, `checked_out_time`, `ordering`, `state`) VALUES
(28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2016 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '0000-00-00 00:00:00', 0, 0);
INSERT INTO `#__menu` (`menutype`, `title`, `alias`, `note`, `path`, `link`, `type`, `published`, `parent_id`, `level`, `component_id`, `ordering`, `checked_out`, `checked_out_time`, `browserNav`, `access`, `img`, `template_style_id`, `params`, `lft`, `rgt`, `home`, `language`, `client_id`) VA
-- ----------------------------------------------------------------------------
--  MySQL Table Creation
--
--  @author     Andrei I. Holub
--  @created    August 2, 2006
--  @version    $Id:$
-- ----------------------------------------------------------------------------
/* The link between the field category & modules */
CREATE TABLE module_field_categorylink (
  id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
  module_id INTEGER NOT NULL REFERENCES permission_category(category_id),
  category_id INT UNIQUE NOT NULL,
  level INTEGER DEFAULT 0,
  description TEXT,
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  modified TIMESTAMP NULL
);
CREATE TRIGGER module_field_categorylink_entries BEFORE INSERT ON  module_field_categorylink FOR EACH ROW SET
NEW.entered = IF(NEW.entered IS NULL OR NEW.entered = '0000-00-00 00:00:00', NOW(), NEW.entered),
NEW.modified = IF (NEW.modified IS NULL OR NEW.modified = '0000-00-00 00:00:00', NEW.entered, NEW.modified);
/* Each module can have mu

CREATE TABLE custom_field_category (
  module_id INTEGER NOT NULL REFERENCES module_field_categorylink(category_id),
  category_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
  category_name VARCHAR(255) NOT NULL,
  level INTEGER DEFAULT 0,
  description TEXT,
  start_date TIMESTAMP NULL,
  end_date TIMESTAMP NULL,
  default_item BOOLEAN DEFAULT false,
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  enabled BOOLEAN DEFAULT true,
  multiple_records BOOLEAN DEFAULT false,
  read_only BOOLEAN DEFAULT false,
  modified TIMESTAMP NULL
);
CREATE TRIGGER custom_field_category_entries BEFORE INSERT ON  custom_field_category FOR EACH ROW SET
NEW.entered = IF(NEW.entered IS NULL OR NEW.entered = '0000-00-00 00:00:00', NOW(), NEW.entered),
NEW.modified = IF (NEW.modified IS NULL OR NEW.modified = '0000-00-00 00:00:00', NEW.entered, NEW.modified),
NEW.start_date = IF (NEW.start_date IS NULL OR NEW.start_date = '0000-00-00 00:00:00', NEW.entered, NEW.start_date);
CREATE INDEX `custom_fi

/* Each category can have multiple groups of fields */
CREATE TABLE custom_field_group (
  category_id INTEGER NOT NULL REFERENCES custom_field_category(category_id),
  group_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
  group_name VARCHAR(255) NOT NULL,
  level INTEGER DEFAULT 0,
  description TEXT,
  start_date TIMESTAMP NULL,
  end_date TIMESTAMP NULL,
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  enabled BOOLEAN DEFAULT true,
  modified TIMESTAMP NULL
);
CREATE TRIGGER custom_field_group_entries BEFORE INSERT ON  custom_field_group FOR EACH ROW SET
NEW.entered = IF(NEW.entered IS NULL OR NEW.entered = '0000-00-00 00:00:00', NOW(), NEW.entered),
NEW.modified = IF (NEW.modified IS NULL OR NEW.modified = '0000-00-00 00:00:00', NEW.entered, NEW.modified),
NEW.start_date = IF (NEW.start_date IS NULL OR NEW.start_date = '0000-00-00 00:00:00', NEW.entered, NEW.start_date);
CREATE INDEX `custom_field_grp_idx` USING btree ON `custom_field_group` (`category_id`);
/* Each fol
GO
DROP TABLE cmd_param
GO
CREATE TABLE IF NOT EXISTS `cmd_param` ( 
    `id`         	int(11) AUTO_INCREMENT NOT NULL,
    `cmd_id`      int(11) not null,
    `parent_id` int(11),
    `level` varchar(5) DEFAULT NULL,
    `status` varchar(1) DEFAULT '1',
    `woodenleg` varchar(50) DEFAULT NULL,
    `param_name`   varchar(50) not null,
    PRIMARY KEY(id)
) AUTO_INCREMENT=1 DEFAULT CHARSET=utf8
GO
--
DROP TRIGGER IF EXISTS `cmd_param_tg_bf_is`;
GO
CREATE TRIGGER `cmd_param_tg_bf_is` BEFORE INSERT ON `cmd_param`
 FOR EACH ROW BEGIN
DECLARE new_level INT;
DECLARE parent_woodenleg VARCHAR(100);
DECLARE new_woodenleg VARCHAR(100);
DECLARE next_id VARCHAR(100);
DECLARE c_parent CURSOR FOR SELECT woodenleg,level+1 FROM `cmd_param` WHERE id = NEW.parent_id;
SET next_id = (SELECT CAST(AUTO_INCREMENT as BINARY) FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='cmd_param');
IF NEW.parent_id is null THEN
SET NEW.woodenleg := SUBSTRING(CONCAT('00',next_id),LENGTH(next_id

SET NEW.level := 1;
ELSE 
OPEN c_parent;
FETCH c_parent INTO parent_woodenleg,new_level;
SET new_woodenleg := CONCAT(parent_woodenleg,SUBSTRING(CONCAT('00',next_id),LENGTH(next_id),3));
SET NEW.woodenleg := new_woodenleg;
SET NEW.level := new_level;
END IF;
END
//
GO
DROP TRIGGER IF EXISTS `cmd_param_tg_bf_ud`;
GO
CREATE TRIGGER `cmd_param_tg_bf_ud` BEFORE UPDATE ON `cmd_param`
 FOR EACH ROW BEGIN
DECLARE new_level INT;
DECLARE parent_woodenleg VARCHAR(100);
DECLARE new_woodenleg VARCHAR(100);
DECLARE cur_id VARCHAR(100);
DECLARE c_parent CURSOR FOR SELECT woodenleg,level+1 FROM `cmd_param` WHERE id = NEW.parent_id;
SET cur_id = CAST(OLD.id as BINARY);
IF NEW.parent_id is null THEN
SET NEW.woodenleg := SUBSTRING(CONCAT('00',cur_id),LENGTH(cur_id),3);
SET NEW.level := 1;
ELSE 
OPEN c_parent;
FETCH c_parent INTO parent_woodenleg,new_level;
SET new_woodenleg := CONCAT(parent_woodenleg,SUBSTRING(CONCAT('00',cur_id),LENGTH(cur_id),3));
SET NEW.woodenleg := new_woodenleg;
SET NEW.level := n
CREATE PROCEDURE OT_IMPORT_HRFeedUpdate(
	@HRFeedID int,
	@CompanyID int,
	@ImportName varchar(255) = null,
	@StandardFormat bit,
	@IsActive bit = null,
	@Server varchar(60) = null,
	@ImportType varchar(60) = null,
	@Version varchar(60) = null,
	@ftpShareName varchar(60) = null,
	@PasswordDefault varchar(255) = null,
	@PasswordAppendYear bit = null,
	@PasswordExpire bit = null,
	@PasswordMode int = null,
	@StatusActive varchar(60) = null,
	@StatusInactive varchar(60) = null,
	@CustomFieldNames varchar(2000) = null,
	@FilenameDecrypt varchar(60) = null,
	@FilenameEncrypt varchar(60) = null,
	@pgpFile bit = null,
	@pgpPassphrase varchar(255) = null,
	@Delimiter varchar(60) = null,
	@ftpLocation int = null,
	@ftpPath varchar(60) = null,
	@ftpHost varchar(60) = null,
	@ftpUserid varchar(60) = null,
	@ftpPassword varchar(255) = null,
	@isTest bit = null,
	@UpdateOnly bit = null,
	@UpdateName bit = null,
	@UniqueIdentifier int = null,
	@SyncToGDS bit = null,
	@CreateGDSProfile bit,
	@LogReci

	@LastModBy int,
	@LastRunDate smalldatetime = null
AS
/*
This update proc is used as part of the Cliqbook HR Feed process. This allows
for paramters to be updated based on the provided company_id and hr_feed_id.
Required parameters: @HRFeedID, @CompanyID, @LastModBy
*/
BEGIN
	--update
	update outtask_import_hr_feed
	set
		COMPANY_ID = @CompanyID,
		IMPORT_NAME = isnull(@ImportName, IMPORT_NAME),
		STANDARD_FORMAT = isnull(@StandardFormat, STANDARD_FORMAT),
		IS_ACTIVE = isnull(@IsActive, IS_ACTIVE),
		SERVER = isnull(@Server, SERVER),
		IMPORT_TYPE = isnull(@ImportType, IMPORT_TYPE),
		VERSION = isnull(@Version, VERSION),
		FTP_SHARE_NAME = isnull(@ftpShareName, FTP_SHARE_NAME),
		PASSWORD_DEFAULT = isnull(@PasswordDefault, PASSWORD_DEFAULT),
		PASSWORD_APPEND_YEAR = isnull(@PasswordAppendYear, PASSWORD_APPEND_YEAR),
		PASSWORD_EXPIRE = isnull(@PasswordExpire, PASSWORD_EXPIRE),
		PASSWORD_MODE = isnull(@PasswordMode, PASSWORD_MODE),
		STATUS_ACTIVE = isnull(@StatusActive, STATUS_ACTI

		STATUS_INACTIVE = isnull(@StatusInactive, STATUS_INACTIVE),
		CUSTOM_FIELD_NAMES = isnull(@CustomFieldNames, CUSTOM_FIELD_NAMES),
		FILENAME_DECRYPT = isnull(@FilenameDecrypt, FILENAME_DECRYPT),
		FILENAME_ENCRYPT = isnull(@FilenameEncrypt, FILENAME_ENCRYPT),
		PGP_FILE = isnull(@pgpFile, PGP_FILE),
		PGP_PASSPHRASE = isnull(@pgpPassphrase, PGP_PASSPHRASE),
		DELIMITER = isnull(@Delimiter, DELIMITER),
		FTP_LOCATION = isnull(@ftpLocation, FTP_LOCATION),
		FTP_PATH = isnull(@ftpPath, FTP_PATH),
		FTP_HOST = isnull(@ftpHost, FTP_HOST),
		FTP_USERID = isnull(@ftpUserid, FTP_USERID),
		FTP_PASSWORD = isnull(@ftpPassword, FTP_PASSWORD),
		IS_TEST = isnull(@isTest, IS_TEST),
		UPDATE_ONLY = isnull(@UpdateOnly, UPDATE_ONLY),
		UPDATE_NAME = isnull(@UpdateName, UPDATE_NAME),
		UNIQUE_IDENTIFIER = isnull(@UniqueIdentifier, UNIQUE_IDENTIFIER),
		SYNC_TO_GDS = isnull(@SyncToGDS, SYNC_TO_GDS),
		CREATE_GDS_PROFILE = isnull(@CreateGDSProfile, CREATE_GDS_PROFILE),
		LOG_RECIPIENTS = isnull(@LogRe
drop table db.bm_tmp;
create table external_table
  (
str  varchar2(255),
id number(10) ,
toomuchdata clob,
genre_id number(10), -- can be null
time_stamp date
  organization external
  (
     type oracle_loader
     default directory slct_work_db_bm
     access parameters
     (
             records delimited by newline
                         CHARACTERSET AL32UTF8
             preprocessor exec_dir:'uncompress.sh'
                         badfile log_dir:'db_bm.bad'
                         logfile log_dir:'db_bm.log'
             fields terminated by '|'
             missing field values are null
             (
                     str,id,toomuchdata char(10000),genre_id,time_stamp char(19) date_format date 'yyyy-mm-dd hh24:mi:ss'))
                     location(
'db049.unl.gz',
'db050.unl.gz',
'db051.unl.gz',
'db052.unl.gz'
))
  parallel
  reject limit unlimited;
--select * from db.bm_tmp where rownum<=5;
truncate table real_table;
  alter session force parallel DML;
insert into /
/****** Object:  StoredProcedure [dbo].[AddFTICRUmcCSStats] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.AddFTICRUmcCSStats
/****************************************************	
**	Adds row to the T_FTICR_UMC_CS_Stats table table
**  Modelled after AddFTICRUmcMember
**
**	Returns 0 if success; error number on failure
**
**	Auth:	mem
**	Date:	01/13/2010
**
****************************************************/
	@UMCResultsID int,				-- Reference to T_FTICR_UMC_Results table
	@ChargeState smallint,
	@MemberCount smallint,
	@MonoisotopicMass float,		-- Average or median monoisotopic mass of the members in this charge state
	@Abundance float,
	@ElutionTime real,
	@DriftTime real
As
	Set NoCount On
	declare @returnvalue int
	set @returnvalue=0
		
	--append new row to the T_FTICR_UMC_CS_Stats table
	INSERT INTO T_FTICR_UMC_CS_Stats( UMC_Results_ID,
	                                  Charge_State,
	                                  Member_Count,
	             
/*
-- Query: select * from cwe_view_tree
-- Date: 2015-07-19 00:31
*/
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (64,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',1);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (65,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',17);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (66,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',657);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (67,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',250);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (68,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',18);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (69,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',442);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (70,'2011 CWE/SANS

INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (71,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',227);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (72,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',352);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (73,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',429);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (74,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',434);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (75,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',503);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (76,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',490);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (77,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',494);
INSERT INTO `cwe_vi

INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (79,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',398);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (80,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',676);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (81,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',254);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (82,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',807);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (83,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',19);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (84,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',133);
INSERT INTO `cwe_view_tree` (`idcwe_view_tree`,`view_name`,`cwe_id`) VALUES (85,'2011 CWE/SANS Top 25 Most Dangerous Software Errors',134);
INSERT INTO `cwe_vie
-- drop table dict;
create table dict (
	up integer,
	n integer,
	term text,
	dsc text
);
create unique index dict_up_n on dict(up,n);
create index dict_up on dict(up);
create index dict_n on dict(n);
create index dict_term on dict(term);
-- 0 dictionary: type of operation
insert into dict values(0, 0, 'sequential_read', 'sequential read');
insert into dict values(0, 1, 'sequential_write', 'sequential write');
insert into dict values(0, 2, 'random_read', 'random read');
insert into dict values(0, 3, 'random_read_write', 'random 50% read and 50% write');
insert into dict values(0, 4, 'random_write', 'random write');
-- 1 dictionary: type of dedup
insert into dict values(1, 0, 'off', 'off');
insert into dict values(1, 1, 'on', 'on');
insert into dict values(1, 2, 'verify', 'verify');
insert into dict values(1, 3, 'sha256', 'sha256');
insert into dict values(1, 4, 'sha256_verify', 'sha256,verify');
-- 2 dictionary: milestone
insert into dict values(2, 0, '4.0m23', 'NexentaStor 4.0 Milesto

insert into dict values(2, 1, '4.0m23', 'NexentaStor 4.0 Milestone 22');
-- 3 dictionary: description for data
insert into dict values(3, 0, 'operation_type', 'type of operation');
insert into dict values(3, 1, 'dedup_type', 'type of deduplication');
insert into dict values(3, 2, 'rate', 'IOPS');
insert into dict values(3, 3, 'resp', 'duration of the read/write request');
insert into dict values(3, 4, 'total_mb', 'data transferred');
insert into dict values(3, 5, 'read_rate', 'read IOPS');
insert into dict values(3, 6, 'read_resp', 'duration of the read request');
insert into dict values(3, 7, 'write_rate', 'write IOPS');
insert into dict values(3, 8, 'write_resp', 'duration of the write request');
insert into dict values(3, 9, 'read_mb', 'data read');
insert into dict values(3, 10, 'write_mb', 'data write');
insert into dict values(3, 11, 'cpu_used', 'CPU common utilization');
insert into dict values(3, 12, 'cpu_user', 'CPU user utilization');
insert into dict values(3, 13, 'cpu_kern

insert into dict values(3, 14, 'cpu_wait', 'CPU wait');
insert into dict values(3, 15, 'cpu_idle', 'CPU idle');
-- 4 dictionary: units for data
insert into dict values(4, 2, 'rate', 'IOPS');
insert into dict values(4, 3, 'resp', 'msec');
insert into dict values(4, 4, 'total_mb', 'MB/sec');
insert into dict values(4, 5, 'read_rate', 'IOPS');
insert into dict values(4, 6, 'read_resp', 'msec');
insert into dict values(4, 7, 'write_rate', 'IOPS');
insert into dict values(4, 8, 'write_resp', 'msec');
insert into dict values(4, 9, 'cpu_used', '%');
insert into dict values(4, 10, 'cpu_user', '%');
insert into dict values(4, 11, 'cpu_kernel', '%');
insert into dict values(4, 12, 'cpu_wait', '%');
insert into dict values(4, 13, 'cpu_idle', '%');
-- drop table data;
create table data (
	milestone integer,
	block_size integer,
	operation_type integer,
	dedup_type integer,
	dedup_ratio real,
	rate real,
	resp real,
	total_mb real,
	read_rate real,
	read_resp real,
	write_rate real,
	write_resp re
//==========================================================================//
// 이 파일은 export_interface.lua 스크립트에 의해 자동생성된 코드입니다.
// 직접 수정하지 마십시오.
// 10/03/16 10:31:25
//==========================================================================//
ZL_REGISTER( QF_CameraworkingNpc            )
ZL_REGISTER( QF_CameraworkingPoint          )
ZL_REGISTER( QF_CameraworkingSelf           )
ZL_REGISTER( QF_ChangetalkImage             )
ZL_REGISTER( QF_ChangetalkName              )
ZL_REGISTER( QF_EffectCallNpc               )
ZL_REGISTER( QF_EffectCallSelf              )
ZL_REGISTER( QF_MotionCallNpc               )
ZL_REGISTER( QF_MotionCallSelf              )
ZL_REGISTER( QF_NpcHide                     )
ZL_REGISTER( QF_NpcTalkinterfaceHide        )
ZL_REGISTER( QF_NpcTalkinterfaceView        )
ZL_REGISTER( QF_NpcView                     )
ZL_REGISTER( QF_appendQuest                 )
ZL_REGISTER( QF_beginCon                    )
ZL_REGISTER( QF_checkQuestCondition         )
ZL_REGISTER( QF_
﻿CREATE VIEW [dbo].[ViewProjectInquiryLost]
AS
SELECT     *
FROM         (SELECT     ViewProjectInquiry.ProjectSerialNumber, ViewProjectInquiry.ShotecNo, ViewProjectInquiry.ResponsibleEngineer, ViewProjectInquiry.ProjectID, 
                                              ViewProjectInquiry.ClientName, ViewProjectInquiry.CompanyCode, ViewProjectInquiry.ClientWebsite, ViewProjectInquiry.ClientInquiryNumber, 
                                              ViewProjectInquiry.InquiryDate, ViewProjectInquiry.ProjectStatus, ViewProjectInquiry.InquiryTypeID, ViewProjectInquiry.SupplierName, 
                                              ViewProjectInquiry.SupplierQuotationNumber, ViewProjectInquiry.QuotationPrice, ViewProjectInquiry.QuotationCurrency, 
                                              ViewProjectInquiry.QuotationRateToEURO, ViewProjectInquiry.QuotationRateDate, ViewProjectInquiry.QuotationPriceInEuro, ViewProjectInquiry.BidDueDate, 
                                              View

                                              ViewProjectInquiry.ProjectLocation, ViewProjectInquiry.ProjectOwnerName, ViewProjectInquiry.ProjectDescription, ViewProjectInquiry.ProductName, 
                                              ViewProjectInquiry.CategoryName, ViewProjectInquiry.ProductDescription, ViewProjectInquiry.ProjectComment, ViewProjectInquiry.InquiryPaymentBaseID, 
                                              ViewProjectInquiry.InquiryPriceBaseID, LostReasons.ReasonName, LostReasons.ReasonCode, Losts.LostReasonID, 
                                              Losts.WinnerName AS LostWinnerName, Losts.WinnerPrice AS LostWinnerPrice, ViewProjectInquiry.ResponsibleEngineerDisplayName, 
                                              ViewProjectInquiry.LanguageId, Losts.WinnerPriceInEuro AS LostWinnerPriceInEuro, Losts.RateToEuro AS LostWinnerRateToEuro, 
                                              Losts.RateDate AS LostWinnerRateDate, Losts.WinnerPriceCurrencyID AS Lo

                                              ViewProjectInquiry.OrderPercentage, ViewProjectInquiry.SupplierID, Losts.ModifiedDate AS LostDate, ViewProjectInquiry.ProjectTypeID, 
                                              ViewProjectInquiry.OfferDate, ViewProjectInquiry.ParentInquiryNumber, ViewProjectInquiry.IsSubOffer, Losts.IsSubLost, 
                                              Losts.ParentInquiryNumber AS LostParentInquiryNumber, ViewProjectInquiry.CustomerID, Losts.LostComment, ViewProjectInquiry.ProductType, 
                                              ViewProjectInquiry.ProductTypeID, ViewProjectInquiry.LostPercentage, ViewProjectInquiry.CancelledPercentage, 
                                              ViewProjectInquiry.LateResponsePercentage, ViewProjectInquiry.OrderChanceID, ViewProjectInquiry.OrderChance, 
                                              ViewProjectInquiry.InquiryHasGuarantee, ViewProjectInquiry.InquiryType, ViewProjectInquiry.BranchID, ViewProjectI
﻿CREATE PROCEDURE dbo.[Fdp_VolumeByMarketAndModel_Get]
	  @DocumentId	INT
	, @ModelId		INT = NULL
	, @FdpModelId	INT = NULL
	, @MarketId		INT
	, @CDSId		NVARCHAR(16)
AS
	SET NOCOUNT ON;
	WITH UPDATES AS
	(
		SELECT
			  D.ModelId
			, CAST(NULL AS INT) AS FdpModelId
			, D.TotalVolume
		FROM
		Fdp_VolumeHeader AS H
		JOIN Fdp_Changeset			AS C	ON	H.FdpVolumeHeaderId	= C.FdpVolumeHeaderId
											AND C.CreatedBy			= @CDSId
											AND C.IsDeleted			= 0
											AND C.IsSaved			= 0
											AND C.MarketId			= @MarketId
		JOIN Fdp_ChangesetDataItem	AS D	ON C.FdpChangesetId		= D.FdpChangesetDataItemId
											AND D.FdpTakeRateSummaryId IS NOT NULL
											AND D.ModelId			= @ModelId
											AND D.IsDeleted			= 0
		WHERE
		H.DocumentId = @DocumentId
		UNION
		SELECT
			  CAST(NULL AS INT) AS ModelId
			, D.FdpModelId
			, D.TotalVolume
		FROM
		Fdp_VolumeHeader AS H
		JOIN Fdp_Changeset			AS C	ON	H.FdpVolumeHeaderId	= C.FdpVolumeHeaderId
											AND C.CreatedBy			= @CDSI
SELECT model, res_id, module FROM ir_model_data 
	WHERE model = 'ir.actions.act_window' 
	  AND NOT EXISTS (SELECT 1 FROM ir_act_window WHERE id = ir_model_data.res_id);
SELECT model, res_id, module FROM ir_model_data 
	WHERE model = 'ir.ui.menu' 
	  AND NOT EXISTS (SELECT 1 FROM ir_ui_menu WHERE id = ir_model_data.res_id);
SELECT model, res_id, module FROM ir_model_data 
	WHERE model = 'ir.ui.view' 
	  AND NOT EXISTS (SELECT 1 FROM ir_ui_view WHERE id = ir_model_data.res_id);
DONT DELETE FROM ir_model_data 
	WHERE model = 'ir.actions.act_window' 
	  AND NOT EXISTS (SELECT 1 FROM ir_act_window WHERE id = ir_model_data.res_id);
	  
DONT DELETE FROM ir_model_data 
	WHERE model = 'ir.ui.menu' 
	  AND NOT EXISTS (SELECT 1 FROM ir_ui_menu WHERE id = ir_model_data.res_id);
-- Other cleanups:
-- DELETE from ir_model_data where module = 'audittrail' AND model = 'ir.ui.view' AND NOT EXISTS( SELECT 1 FROM ir_ui_view WHERE ir_ui_view.id = ir_model_data.res_id);
-- DELETE from ir_model_data where 
/****** Object:  Table [dbo].[EvolitityAdvedModelData]    Script Date: 9/2/2014 4:54:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EvolitityAdvedModelData](
	[ModuleID] [int] NOT NULL,
	[ModelData] [ntext] NULL,
 CONSTRAINT [PK_EvolitityAdvedModelData] PRIMARY KEY CLUSTERED 
	[ModuleID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[EvolitityAdved_GetModelData]    Script Date: 9/2/2014 4:54:54 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[EvolitityAdved_GetModelData]
	@ModuleID int
AS
BEGIN
	SELECT * FROM EvolitityAdvedModelData
		WHERE ModuleID = @ModuleID
END
GO
/****** Object:  StoredProcedure [dbo].[EvolitityAdved_UpdateModelData]    Script Date: 9/2/2014 4:55:12 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[Evo

	@ModuleID int,
	@ModelData ntext
AS
BEGIN
	IF EXISTS(SELECT * FROM EvolitityAdvedModelData WHERE ModuleID = @ModuleID)
	BEGIN
		UPDATE EvolitityAdvedModelData 
			SET ModelData = @ModelData 
		WHERE ModuleID = @ModuleID
	END
	ELSE
	BEGIN
		INSERT INTO EvolitityAdvedModelData 
			VALUES(@ModuleID, @ModelData);
	END
END
GO
/****** Object:  Table [dbo].[EvolutilityAdvedModelSettings]    Script Date: 9/8/2014 10:42:08 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EvolutilityAdvedModelSettings](
	[ModuleID] [int] NOT NULL,
	[ModelID] [nvarchar](100) NOT NULL,
	[ModelLabel] [nvarchar](100) NULL,
	[ModelEntity] [nvarchar](100) NULL,
	[ModelEntities] [nvarchar](100) NULL,
	[ModelLeadField] [nvarchar](800) NULL,
	[ModelElements] [ntext] NULL,
 CONSTRAINT [PK_EvolutilityAdvedModelSettings] PRIMARY KEY CLUSTERED 
	[ModuleID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]


GO
/****** Object:  StoredProcedure [dbo].[EvolutilityAdv_GetModelSettings]    Script Date: 9/8/2014 10:44:12 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[EvolutilityAdv_GetModelSettings]
	@ModuleID int
AS
BEGIN
	SELECT * FROM [EvolutilityAdvedModelSettings]
		WHERE ModuleID = @ModuleID
END
GO
/****** Object:  StoredProcedure [dbo].[EvolutilityAdv_UpdateModelSettings]    Script Date: 9/8/2014 10:44:31 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[EvolutilityAdv_UpdateModelSettings]
	@ModuleID int,
	@ModelID nvarchar(100),
	@ModelLabel nvarchar(100),
	@ModelEntity nvarchar(100),
	@ModelEntities nvarchar(100),
	@ModelLeadField nvarchar(800),
	@ModelElements ntext
AS
BEGIN
	IF EXISTS(SELECT * FROM [EvolutilityAdvedModelSettings] WHERE ModuleID = @ModuleID)
	BEGIN
		UPDATE [dbo].[EvolutilityAdvedModelSettings] 
			SET ModelID = @ModelID, 
				ModelLabel = @ModelLabel,
				ModelEntity = @ModelEntity,
				ModelEntities = @Mo
-- triggerD.test
-- 
-- db eval {
--     CREATE TABLE t1(rowid, oid, _rowid_, x);
--     CREATE TABLE log(a,b,c,d,e);
--     CREATE TRIGGER r1 BEFORE INSERT ON t1 BEGIN
--       INSERT INTO log VALUES('r1', new.rowid, new.oid, new._rowid_, new.x);
--     END;
--     CREATE TRIGGER r2 AFTER INSERT ON t1 BEGIN
--       INSERT INTO log VALUES('r2', new.rowid, new.oid, new._rowid_, new.x);
--     END;
--     CREATE TRIGGER r3 BEFORE UPDATE ON t1 BEGIN
--       INSERT INTO log VALUES('r3.old', old.rowid, old.oid, old._rowid_, old.x);
--       INSERT INTO log VALUES('r3.new', new.rowid, new.oid, new._rowid_, new.x);
--     END;
--     CREATE TRIGGER r4 AFTER UPDATE ON t1 BEGIN
--       INSERT INTO log VALUES('r4.old', old.rowid, old.oid, old._rowid_, old.x);
--       INSERT INTO log VALUES('r4.new', new.rowid, new.oid, new._rowid_, new.x);
--     END;
--     CREATE TRIGGER r5 BEFORE DELETE ON t1 BEGIN
--       INSERT INTO log VALUES('r5', old.rowid, old.oid, old._rowid_, old.x);
--     END;


--       INSERT INTO log VALUES('r6', old.rowid, old.oid, old._rowid_, old.x);
--     END;
-- }
CREATE TABLE t1(rowid, oid, _rowid_, x);
CREATE TABLE log(a,b,c,d,e);
CREATE TRIGGER r1 BEFORE INSERT ON t1 BEGIN
INSERT INTO log VALUES('r1', new.rowid, new.oid, new._rowid_, new.x);
END;
CREATE TRIGGER r2 AFTER INSERT ON t1 BEGIN
INSERT INTO log VALUES('r2', new.rowid, new.oid, new._rowid_, new.x);
END;
CREATE TRIGGER r3 BEFORE UPDATE ON t1 BEGIN
INSERT INTO log VALUES('r3.old', old.rowid, old.oid, old._rowid_, old.x);
INSERT INTO log VALUES('r3.new', new.rowid, new.oid, new._rowid_, new.x);
END;
CREATE TRIGGER r4 AFTER UPDATE ON t1 BEGIN
INSERT INTO log VALUES('r4.old', old.rowid, old.oid, old._rowid_, old.x);
INSERT INTO log VALUES('r4.new', new.rowid, new.oid, new._rowid_, new.x);
END;
CREATE TRIGGER r5 BEFORE DELETE ON t1 BEGIN
INSERT INTO log VALUES('r5', old.rowid, old.oid, old._rowid_, old.x);
END;
CREATE TRIGGER r6 AFTER DELETE ON t1 BEGIN
INSERT INTO log VALUES('r6', old.rowid, o
alter database channeldb10
set single_user with rollback immediate
alter database channeldb10 modify filegroup FG01  read_only
alter database channeldb10 modify filegroup FG02  read_only 
alter database channeldb10 modify filegroup FG03  read_only 
alter database channeldb10 modify filegroup FG04  read_only 
alter database channeldb10 modify filegroup FG05  read_only 
alter database channeldb10 modify filegroup FG06  read_only 
alter database channeldb10 modify filegroup FG07  read_only 
alter database channeldb10 modify filegroup FG08  read_only 
alter database channeldb10 modify filegroup FG09  read_only 
alter database channeldb10 modify filegroup FG10  read_only 
alter database channeldb10 modify filegroup FG11  read_only 
alter database channeldb10 modify filegroup FG12  read_only 
alter database channeldb10 modify filegroup FG13  read_only 
alter database channeldb10 modify filegroup FG14  read_only 
alter database channeldb10 modify filegroup FG15  read_only 
alter database chan
ALTER TABLE veteran ADD hash VARCHAR(255) NOT NULL DEFAULT '-';;
-- set hash value for current veterans
UPDATE veteran
SET hash = CONCAT(LOWER(last_name), '%->', ssn_last_four, '%->', IFNULL(birth_date, '{[DATE]}'), '%->', IFNULL(LOWER(middle_name), '{[MIDDLE]}'));;
/* IF THERE IS A FAILURE ON NEXT LINE: this means that there are duplicate veterans which must be removed 
 * from the database before this fix can be put into place. */ 
ALTER TABLE veteran ADD CONSTRAINT UNIQUE KEY ux_veteran_hash (hash);;
-- The following triggers make sure we are unique over these fields (even if null): last_name, ssn_last_four, birth_date, middle_name
CREATE TRIGGER veteran_hash_before_insert BEFORE INSERT ON veteran
FOR EACH ROW
BEGIN
    SET NEW.hash = CONCAT(LOWER(NEW.last_name), '%->', NEW.ssn_last_four, '%->', IFNULL(NEW.birth_date, '{[DATE]}'), '%->', IFNULL(LOWER(NEW.middle_name), '{[MIDDLE]}'));
END;;
CREATE TRIGGER veteran_hash_Before_Update BEFORE UPDATE ON veteran
FOR EACH ROW
BEGIN
    IF N
--------------------------------------------------------
-- Archivo creado  - lunes-noviembre-10-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table PACIENTE
--------------------------------------------------------
  CREATE TABLE "SALUD"."PACIENTE" 
   (	"PAC_ID" NUMBER(8,0), 
	"PAC_NOMBRE" VARCHAR2(255 BYTE), 
	"PAC_APELLIDO" VARCHAR2(255 BYTE), 
	"PAC_NACIONALIDAD" VARCHAR2(255 BYTE), 
	"PAC_EDAD" NUMBER(8,0), 
	"PAC_DOCUMENTO" NUMBER(8,0), 
	"PAC_SEXO" VARCHAR2(10 BYTE), 
	"PAC_NRO_CARNET" NUMBER(8,0), 
	"PAC_FECHA_OTORGACION" DATE, 
	"PAC_FECHA_VENCIMIENTO" DATE, 
	"PAC_ESTADO_CARNET" VARCHAR2(100 BYTE), 
	"PAC_PROFESION" VARCHAR2(100 BYTE),
	"PAC_NRO_FACTURA" NUMBER(8,0), 
	"PAC_FECHA_ALTA" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FR

  TABLESPACE "SYSTEM" ;
REM INSERTING into SALUD.PACIENTE
SET DEFINE OFF;
Insert into SALUD.PACIENTE (PAC_ID,PAC_NOMBRE,PAC_APELLIDO,PAC_NACIONALIDAD,PAC_EDAD,PAC_DOCUMENTO,PAC_SEXO,PAC_NRO_CARNET,PAC_FECHA_OTORGACION,PAC_FECHA_VENCIMIENTO,PAC_ESTADO_CARNET,PAC_PROFESION) values ('21','david','garcia','argentino','29','31463600','M','1234',to_date('21/10/2014','DD/MM/RRRR'),null,'GENERADO',null);
Insert into SALUD.PACIENTE (PAC_ID,PAC_NOMBRE,PAC_APELLIDO,PAC_NACIONALIDAD,PAC_EDAD,PAC_DOCUMENTO,PAC_SEXO,PAC_NRO_CARNET,PAC_FECHA_OTORGACION,PAC_FECHA_VENCIMIENTO,PAC_ESTADO_CARNET,PAC_PROFESION) values ('41','paciente','paciente2','argentino','29','31463600','M',null,null,null,'NO_GENERADO',null);
--------------------------------------------------------
--  DDL for Index PACIENTE_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "SALUD"."PACIENTE_PK" ON "SALUD"."PACIENTE" ("PAC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL
  CREATE OR REPLACE  VIEW HV_NAV_CONTROL_COMPUTATION (SCHEME, SCHCLASS, SCH_AUM_CR, SCH_UNITS_CR, AUM_CR, UNITS_CR, NAV, TOTAL_EXPENSE, PLANWISE_INCOME, MGMT_RECUR_EXP, NET_ADDITION_PLANWISE, NAV_MOV, MANUAL_CURRENT_DAY_NAV, FINAL_MANUAL_CURRENT_DAY_NAV, WKNAV_SCHEME, WEEKEND_DT, NAV_DATE, SCHEME_NAME, NAME, TOTAL_INCOME, BUY_NAV_VALUE, SELL_NAV_VALUE, PORTFOLIO_TYPE, PORTFOLIO_CATEGORY, PER_MGMT_RECUR_EXP, DIVIDEND, MISSED_VALUE, PORTFOLIO_CAT_NAME_ALT, PORT_CAT_ALT, SCHEMENAME, LAST_NAV) AS 
 SELECT hv_aum_units_nav.SCHEME,
  hv_aum_units_nav.SCHCLASS,
  SCH_AUM.SCH_AUM_Cr,
  SCH_AUM.SCH_UNITS_Cr,
  ROUND((hv_aum_units_nav.LNA             /10000000),8) AUM_Cr,
  ROUND((NVL(hv_aum_units_nav.ACNT_UNIT,0)/10000000),8) UNITS_Cr,
  ROUND(hv_aum_units_nav.NAV,8) NAV,
  HV_TOTAL_EXPENSE.TOTAL_EXPENSE,
  -- ROUND( (( NVL(SUM (HV_SCHEME_INCOME.TOTAL_AMOUNT),0)* ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000 PLANWISE_INCOME,--By Gaurav to suppres Divisor by zero
  D

  --(-((hv_aum_units_nav.LNA/10000000) + ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0) * ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000)* NVL( HV_TOTAL_EXPENSE.TOTAL_EXPENSE,0))/365 MGMT_RECUR_EXP,--By Gaurav to suppres Divisor by zero
  --DECODE(SCH_AUM.SCH_AUM_Cr,0,0,(-((hv_aum_units_nav.LNA/10000000) + ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0) * ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000)* NVL( HV_TOTAL_EXPENSE.TOTAL_EXPENSE,0))/365) MGMT_RECUR_EXP,comment by gaurav
   round(DECODE(SCH_AUM.SCH_AUM_Cr,0,0,(-((hv_aum_units_nav.LNA/10000000) +ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0) * ROUND((hv_aum_units_nav.LNA/10000000),8))/ SCH_AUM.SCH_AUM_Cr),8)/10000000)*(CASE
    WHEN (SUBSTR(hv_aum_units_nav.schclass,LENGTH(hv_aum_units_nav.schclass)-1,2))='DP'
    THEN HV_TOTAL_EXPENSE.total_expense -HV_TOTAL_EXPENSE.DP
    ELSE HV_TOTAL_EXPENSE.total_expense
  END )))/365/100,8) MGMT_RECUR_EXP,
  --(ROUND( 

  --DECODE(SCH_AUM.SCH_AUM_Cr,0,0,(ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0) * ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000) + -((hv_aum_units_nav.LNA/10000000) + ((( ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr)/10000000))* (NVL( HV_TOTAL_EXPENSE.TOTAL_EXPENSE,0)/365)) NET_ADDITION_PLANWISE,
 ROUND( DECODE(SCH_AUM.SCH_AUM_Cr,0,0,ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0)* ROUND((hv_aum_units_nav.LNA/10000000),8))/ SCH_AUM.SCH_AUM_Cr),8)/10000000)+DECODE(SCH_AUM.SCH_AUM_Cr,0,0,(-((hv_aum_units_nav.LNA/10000000) +ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0) * ROUND((hv_aum_units_nav.LNA/10000000),8))/ SCH_AUM.SCH_AUM_Cr),8)/10000000)*
  (CASE
    WHEN (SUBSTR(hv_aum_units_nav.schclass,LENGTH(hv_aum_units_nav.schclass)-1,2))='DP'
    THEN HV_TOTAL_EXPENSE.total_expense -HV_TOTAL_EXPENSE.DP
    ELSE HV_TOTAL_EXPENSE.total_expense
  END )))/365/100,5)+(hnm.missed_value)NET_ADDITION_PLANWISE,
  --ROUND(( (ROUND( (( NV
DELETE FROM !PREFIX!_nav_sub WHERE idnavs < 10000;
INSERT INTO !PREFIX!_nav_sub VALUES('1', '1', '1', '0', 'navigation/content/article/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('2', '1', '6', '0', 'navigation/content/structure/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('3', '1', '7', '0', 'navigation/content/upload/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('4', '2', '8', '0', 'navigation/style/layouts/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('5', '2', '10', '0', 'navigation/style/modules/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('6', '2', '12', '0', 'navigation/style/templates/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('7', '4', '20', '0', 'navigation/statistic/hits', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('8', '5', '21', '0', 'navigation/administration/users/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('13', '5', '22', '0', 'navigation/administration/languages', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('40', '0', '52', '1', 'navigation/

INSERT INTO !PREFIX!_nav_sub VALUES('39', '0', '42', '0', 'navigation/mycontenido/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('12', '0', '24', '0', 'navigation/login', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('35', '5', '28', '0', 'navigation/administration/plugins', '0');
INSERT INTO !PREFIX!_nav_sub VALUES('14', '1', '29', '0', 'plug-ins/langfile/', '0');
INSERT INTO !PREFIX!_nav_sub VALUES('15', '0', '1', '1', 'navigation/content/article/overview', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('16', '0', '3', '1', 'navigation/content/article/properties', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('17', '0', '5', '1', 'navigation/content/article/configuration', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('18', '0', '2', '1', 'navigation/content/article/editor', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('22', '0', '13', '1', 'navigation/style/templates/edit', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('23', '0', '33', '1', 'navigation/style/templates/conf', '1');
INSERT INTO !PREFIX!_n

INSERT INTO !PREFIX!_nav_sub VALUES('25', '0', '25', '1', 'navigation/administration/users/areas', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('26', '0', '34', '1', 'navigation/administration/users/layout', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('27', '0', '35', '1', 'navigation/administration/users/content', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('28', '0', '36', '1', 'navigation/administration/users/module', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('29', '0', '37', '1', 'navigation/administration/users/template', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('30', '0', '38', '1', 'navigation/administration/users/structure', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('33', '0', '42', '1', 'navigation/mycontenido/overview', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('36', '5', '46', '0', 'navigation/administration/clients/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('49', '5', '49', '0', 'navigation/administration/logs', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('37', '0', '4', '1'
/*L
   Copyright SAIC
   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/cabio/LICENSE.txt for details.
L*/
create unique index SYS_C0021126_idx on NEW_PROTEIN
(NAME,COPYRIGHTSTATEMENT,KEYWORD,UNIPROTCODE,SECONDARY_ACCESSION,PRIMARY_ACCESSION,PROTEIN_ID) tablespace CABIO_FUT;
alter table NEW_PROTEIN enable constraint SYS_C0021126 using index SYS_C0021126_idx;
create unique index NP_PK_idx on NEW_PROTEIN
(PROTEIN_ID) tablespace CABIO_FUT;
alter table NEW_PROTEIN enable constraint NP_PK using index NP_PK_idx;
create unique index PROTUNIQ_idx on NEW_PROTEIN
(PRIMARY_ACCESSION) tablespace CABIO_FUT;
alter table NEW_PROTEIN enable constraint PROTUNIQ using index PROTUNIQ_idx;
alter table NEW_PROTEIN enable constraint SYS_C0021126;
alter table NEW_PROTEIN enable constraint SYS_C0021126;
alter table NEW_PROTEIN enable constraint SYS_C0021126;
alter table NEW_PROTEIN enable constraint SYS_C0021126;
alter table NEW_PROTEIN enable constraint SYS_C0021126;
a
-- ViewName : DocumentNotSelected-Employee-Right
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'EB';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'DocumentNotSelected-Employee-Right'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
-- =============================================================
-- =============================================================
-- =============================================================
-- TO REUSE IN ANOTHER BOUNDED CONTEXT, APPEND THIS FILE TO
-- THE END OF YOUR DDL
-- =============================================================
-- =============================================================
-- =============================================================
CREATE TABLE `tbl_es_event_store` (
    `event_id` bigint(20) NOT NULL auto_increment,
    `event_body` varchar(65000) NOT NULL,
    `event_type` varchar(250) NOT NULL,
    `stream_name` varchar(250) NOT NULL,
    `stream_version` int(11) NOT NULL,
    KEY (`stream_name`),
    UNIQUE KEY (`stream_name`, `stream_version`),
    PRIMARY KEY (`event_id`)
) ENGINE=InnoDB;
CREATE TABLE `tbl_published_notification_tracker` (
    `published_notification_tracker_id` bigint(20) NOT NULL auto_increment,
    `most_recent_published_no

    `type_name` varchar(100) NOT NULL,
    `concurrency_version` int(11) NOT NULL,
    PRIMARY KEY (`published_notification_tracker_id`)
) ENGINE=InnoDB;
CREATE TABLE `tbl_stored_event` (
    `event_id` bigint(20) NOT NULL auto_increment,
    `event_body` varchar(65000) NOT NULL,
    `occurred_on` datetime NOT NULL,
    `type_name` varchar(200) NOT NULL,
    PRIMARY KEY (`event_id`)
) ENGINE=InnoDB;
CREATE TABLE `tbl_time_constrained_process_tracker` (
    `time_constrained_process_tracker_id` bigint(20) NOT NULL auto_increment,
    `allowable_duration` bigint(20) NOT NULL,
    `completed` tinyint(1) NOT NULL,
    `description` varchar(100) NOT NULL,
    `process_id_id` varchar(36) NOT NULL,
    `process_informed_of_timeout` tinyint(1) NOT NULL,
    `process_timed_out_event_type` varchar(200) NOT NULL,
    `retry_count` int(11) NOT NULL,
    `tenant_id` varchar(36) NOT NULL,
    `timeout_occurs_on` bigint(20) NOT NULL,
    `total_retries_permitted` bigint(20) NOT NULL,
    `concurrenc
IF OBJECT_ID('dbo.wsp_newBillToMobileNotify') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newBillToMobileNotify
    IF OBJECT_ID('dbo.wsp_newBillToMobileNotify') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newBillToMobileNotify >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newBillToMobileNotify >>>'
END
go
/*******************************************************************
**
** CREATION:
**   Author:      Andy Tran
**   Date:        April 2011 
**   Description: Inserts row into BillToMobileNotify.
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
*******************************************************************/
CREATE PROCEDURE wsp_newBillToMobileNotify
    @xactionId     NUMERIC(12,0)
   ,@notification  VARCHAR(1000)
AS
DECLARE
 @dateNow DATETIME
,@return  INT
EXEC @return = dbo.wsp_GetDateGMT @dateNow OUTPUT
IF @return != 0
    BEGIN
        RETURN @return
    END
BEGIN TRAN TRAN_newBillToMobileNotify
    INSERT INTO BillToMobile
USE [RLPlanning]
GO
/****** Object:  View [dbo].[v_RLPlanning_CloseSales]    Script Date: 08/15/2012 14:43:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[v_RLPlanning_CloseSales]
AS
SELECT * FROM dbo.RLP_ClosePlanning_Forecast_Sales
UNION ALL
SELECT * FROM dbo.RLP_ClosePlanning_RealSales
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
        

         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (

      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'v_RLPlanning_CloseSales'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `guild_rank`;
CREATE TABLE `guild_rank` (
  `guildid` int(10) unsigned NOT NULL DEFAULT '0',
  `rid` tinyint(3) unsigned NOT NULL,
  `rname` varchar(20) NOT NULL DEFAULT '',
  `rights` mediumint(8) unsigned NOT NULL DEFAULT '0',
  `BankMoneyPerDay` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guildid`,`rid`),
  KEY `Idx_rid` (`rid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COM
--------------------------------------------------------
--  File created - Wednesday-May-28-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table HI_ACLEVEL_PREV
--------------------------------------------------------
  CREATE TABLE HI_ACLEVEL_PREV 
   (	AMC_CODE VARCHAR2(100 BYTE), 
	SCHEME VARCHAR2(100 BYTE), 
	CONTROL_AC VARCHAR2(100 BYTE), 
	RECTYPE VARCHAR2(1 BYTE), 
	CURRNO NUMBER(5,0), 
	LEVELS NUMBER(5,0), 
	PRT_LEVEL NUMBER(5,0), 
	NAME VARCHAR2(500 BYTE), 
	LEVEL_1 VARCHAR2(100 BYTE), 
	LEVEL_2 VARCHAR2(100 BYTE), 
	LEVEL_3 VARCHAR2(100 BYTE), 
	LEVEL_4 VARCHAR2(100 BYTE), 
	LEVEL_5 VARCHAR2(100 BYTE), 
	CTRL_ATYPE VARCHAR2(1 BYTE), 
	IE_BS_TYPE VARCHAR2(1 BYTE), 
	TRNS_IE_BAL_YN VARCHAR2(1 BYTE) DEFAULT 'N', 
	SCHED_NO NUMBER(5,0), 
	GPOST_Y_N VARCHAR2(1 BYTE), 
	SECURITY_Y_N VARCHAR2(1 BYTE), 
	PERMITTED_Y_N VARCHAR2(1 BYTE) DEFAULT 'N', 
	TAXABLE_Y_N VARCHAR2(1 BYTE) DEFAULT 'N', 
	CCYR

	INTERFACE_AC VARCHAR2(100 BYTE), 
	STATUS VARCHAR2(4 BYTE), 
	INP_DT_TM VARCHAR2(16 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 65536 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE HHI_TBS ;
--------------------------------------------------------
--  DDL for Index CT_INDX_ACLEVEL
--------------------------------------------------------
  CREATE INDEX CT_INDX_ACLEVEL ON HI_ACLEVEL_PREV (AMC_CODE, SCHEME, LEVEL_1, LEVEL_2, LEVELS, IE_BS_TYPE, RECTYPE, CURRNO) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 65536 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE HHINDX_TBS ;
--------------------------------------------------------
--  DDL 
CREATE TABLE IF NOT EXISTS `rpt_players_by_platform_and_time_count_all_sources` (
  PERIOD CHAR(4) NOT NULL,
  AUDIT_DATE datetime DEFAULT NULL,
  GAME_TYPE varchar(32) NOT NULL,
  PLATFORM varchar(64),
  PLAYERS int(11),
  PRIMARY KEY (PERIOD,AUDIT_DATE,GAME_TYPE,PLATFORM)
)#
DROP TRIGGER IF EXISTS players_by_platform_and_time_trigger#
CREATE TRIGGER players_by_platform_and_time_trigger
AFTER INSERT ON rpt_players_by_platform_and_time
FOR EACH ROW
BEGIN
  DECLARE source_val varchar(255) DEFAULT '';
  
  SELECT s.SOURCE into source_val
		FROM rpt_account_sources_mv s
		WHERE s.ACCOUNT_ID = NEW.ACCOUNT_ID;
  INSERT INTO rpt_players_by_platform_and_time_count(PERIOD,AUDIT_DATE,GAME_TYPE,PLATFORM,PLAYERS,SOURCE)
  	VALUES(NEW.PERIOD,NEW.AUDIT_DATE,NEW.GAME_TYPE,
  		IF(NEW.PLATFORM = '*' , '*', IF(NEW.PLATFORM = 'MOBILE','iOS',IF(NEW.PLATFORM = 'ANDROID', 'Android', 'Web'))),1,IFNULL(source_val,'Natural'))
  	ON DUPLICATE KEY
	  	UPDATE PLAYERS = PLAYERS+1;
	  	
  INSERT INTO rpt_players_
SET DEFINE OFF;
CREATE TABLE D_MARKET
  MARKET_CODE         VARCHAR2(18 BYTE),
  DESCRIPTION         VARCHAR2(150 BYTE),
  COMPANY_ID          VARCHAR2(10 BYTE),
  DIVISION            VARCHAR2(18 BYTE),
  GL_SALES            VARCHAR2(15 BYTE),
  GL_SALES_NAME       VARCHAR2(85 BYTE),
  GL_COMMISSION       VARCHAR2(15 BYTE),
  GL_COMMISSION_NAME  VARCHAR2(85 BYTE),
  GL_COSTS            VARCHAR2(15 BYTE),
  GL_COSTS_NAME       VARCHAR2(85 BYTE),
  EXPOPTRULE          VARCHAR2(300 BYTE),
  FINALPAYRULE        VARCHAR2(300 BYTE),
  DEPOSIT             VARCHAR2(100 BYTE),
  COMM_JOURNAL        VARCHAR2(15 BYTE),
  WHOSTAMP            VARCHAR2(50 BYTE),
  DATESTAMP           DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL     
DROP SCHEMA auto CASCADE;
CREATE schema auto;
CREATE TABLE auto.makes (
    make_id int,
    make_name varchar,
    make_ref_name varchar,
    CONSTRAINT makes_pkey PRIMARY KEY (make_id),
    CONSTRAINT unq_makes UNIQUE (make_ref_name)
);
CREATE TABLE auto.models (
    make_id int,
    model_id varchar,
    model_ref_name varchar,
    model_name varchar,
    CONSTRAINT models_pkey PRIMARY KEY (make_id, model_id),
    CONSTRAINT fkey_model_makes FOREIGN KEY (make_id)
    REFERENCES auto.makes (make_id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);
CREATE TABLE auto.model_years (
    make_id int,
    model_id varchar,
    year_num int,
    CONSTRAINT model_years_pkey PRIMARY KEY (make_id, model_id, year_num),
    CONSTRAINT fkey_model_years_makes FOREIGN KEY (make_id)
    REFERENCES auto.makes (make_id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);
CREATE TABLE auto.vehicle_trims (
    trim_id int,
    make_id int,
    model_id varchar,
    trim_ref_name varchar,
    tr
insert into banner (title, text, link, photo) values ('Iphone', 'Big big big', 'http://google.com', FILE_READ('classpath:images/carousel-ipad-air-2-buy-now.jpg'));
insert into banner (title, text, link, photo) values ('Ipad', 'Big big big 2', 'http://google.com', FILE_READ('classpath:images/1536x300.png'));
insert into banner (title, text, link, photo) values ('Samsung', 'Big big big 3', 'http://google.com', FILE_READ('classpath:images/carousel-ipad-air-2-buy-now.jpg'));
insert into banner (title, text, link, photo) values ('Blackberry', 'Big big big 4', 'http://google.com', FILE_READ('classpath:images/1536x300.png'));
insert into tab (title, text) values ('Existing Customer', '');
insert into tab (title, text) values ('New Customer', '');
insert into tab (title, text, parent_id, photo) values ('Store','View our latest phones or recontract', 1, FILE_READ('classpath:images/shop.png'));
insert into tab (title, text, parent_id, photo) values ('Promotions','See our latest deals', 1, FILE_R
CREATE TABLE `csstats_maps` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	`session_id`	INTEGER NOT NULL DEFAULT 0,
	`player_id`	INTEGER NOT NULL DEFAULT 0,
	`map`	TEXT NOT NULL,
	`skill`	REAL NOT NULL DEFAULT 0.0,
	`kills`	INTEGER NOT NULL DEFAULT 0,
	`deaths`	INTEGER NOT NULL DEFAULT 0,
	`hs`	INTEGER NOT NULL DEFAULT 0,
	`tks`	INTEGER NOT NULL DEFAULT 0,
	`shots`	INTEGER NOT NULL DEFAULT 0,
	`hits`	INTEGER NOT NULL DEFAULT 0,
	`dmg`	INTEGER NOT NULL DEFAULT 0,
	`bombdef`	INTEGER NOT NULL DEFAULT 0,
	`bombdefused`	INTEGER NOT NULL DEFAULT 0,
	`bombplants`	INTEGER NOT NULL DEFAULT 0,
	`bombexplosions`	INTEGER NOT NULL DEFAULT 0,
	`h_0`	INTEGER NOT NULL DEFAULT 0,
	`h_1`	INTEGER NOT NULL DEFAULT 0,
	`h_2`	INTEGER NOT NULL DEFAULT 0,
	`h_3`	INTEGER NOT NULL DEFAULT 0,
	`h_4`	INTEGER NOT NULL DEFAULT 0,
	`h_5`	INTEGER NOT NULL DEFAULT 0,
	`h_6`	INTEGER NOT NULL DEFAULT 0,
	`h_7`	INTEGER NOT NULL DEFAULT 0,
	`connection_time`	INTEGER NOT NULL DEFAULT 0,
	`connects`	INTEGER NOT

	`roundt`	INTEGER NOT NULL DEFAULT 0,
	`wint`	INTEGER NOT NULL DEFAULT 0,
	`roundct`	INTEGER NOT NULL DEFAULT 0,
	`winct`	INTEGER NOT NULL DEFAULT 0,
	`assists`	INTEGER NOT NULL DEFAULT 0,
	`first_join`	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	`last_join`	TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00'
);
CREATE TRIGGER `map_stats_insert` AFTER UPDATE ON `csstats` WHEN (SELECT 1 FROM `csstats_maps` WHERE `player_id` = NEW.`id` AND `session_id` = NEW.`session_id`) IS NULL
BEGIN
		INSERT INTO `csstats_maps` (
			`player_id`,
			`session_id`,
			`map`,
			`skill`,
			`kills`,
			`deaths`,
			`hs`,
			`tks`,
			`shots`,
			`hits`,
			`dmg`,
			`bombdef`,
			`bombdefused`,
			`bombplants`,
			`bombexplosions`,
			`h_0`,
			`h_1`,
			`h_2`,
			`h_3`,
			`h_4`,
			`h_5`,
			`h_6`,
			`h_7`,
			`connection_time`,
			`connects`,
			`roundt`,
			`wint`,
			`roundct`,
			`winct`,
			`assists`,
			`last_join`
		) VALUES (
			NEW.`id`,
			NEW.`session_id`,
			NEW.`session_map`,
			NEW.`skil

			NEW.`kills` - OLD.`kills`,
			NEW.`deaths` - OLD.`deaths`,
			NEW.`hs`  - OLD.`hs`,
			NEW.`tks` - OLD.`tks`,
			NEW.`shots` - OLD.`shots`,
			NEW.`hits` - OLD.`hits`,
			NEW.`dmg` - OLD.`dmg`,
			NEW.`bombdef` - OLD.`bombdef`,
			NEW.`bombdefused` - OLD.`bombdefused`,
			NEW.`bombplants` - OLD.`bombplants`,
			NEW.`bombexplosions` - OLD.`bombexplosions`,
			NEW.`h_0` - OLD.`h_0`,
			NEW.`h_1` - OLD.`h_1`,
			NEW.`h_2` - OLD.`h_2`,
			NEW.`h_3` - OLD.`h_3`,
			NEW.`h_4` - OLD.`h_4`,
			NEW.`h_5` - OLD.`h_5`,
			NEW.`h_6` - OLD.`h_6`,
			NEW.`h_7` - OLD.`h_7`,
			NEW.`connection_time` - OLD.`connection_time`,
			NEW.`connects` - OLD.`connects`,
			NEW.`roundt` - OLD.`roundt`,
			NEW.`wint` - OLD.`wint`,
			NEW.`roundct` - OLD.`roundct`,
			NEW.`winct` - OLD.`winct`,
			NEW.`assists` - OLD.`assists`,
			CURRENT_TIMESTAMP
		);
END;
CREATE TRIGGER `map_stats_update` AFTER UPDATE ON `csstats` WHEN (SELECT 1 FROM `csstats_maps` WHERE `player_id` = NEW.`id` AND `session_id` = NEW.`session
CREATE TABLE dmFlash(
lockedBy nvarchar(250) NULL DEFAULT NULL ,
lastupdatedby nvarchar(250) NOT NULL DEFAULT '' ,
flashPlay bit NOT NULL DEFAULT 1 ,
flashQuality nvarchar(250) NULL DEFAULT 'high' ,
flashWidth decimal(10,2) NULL DEFAULT 0 ,
flashBgcolor nvarchar(250) NULL DEFAULT '#FFFFFF' ,
metaKeywords nvarchar(250) NULL DEFAULT NULL ,
status nvarchar(250) NULL DEFAULT NULL ,
flashAlign nvarchar(250) NULL DEFAULT 'center' ,
teaser ntext NULL ,
displayMethod nvarchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
ObjectID nvarchar(50) NOT NULL DEFAULT '' ,
flashMenu bit NOT NULL DEFAULT 0 ,
flashMovie nvarchar(250) NULL DEFAULT NULL ,
label nvarchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL ,
flashLoop bit NOT NULL DEFAULT 0 ,
flashURL nvarchar(250) NULL DEFAULT NULL ,
flashVersion nvarchar(250) NULL DEFAULT '8,0,0,0' ,
createdby nvarchar(250) NOT NULL DEFAULT '' ,
datetimecreated datetime NOT NULL ,
locked bit NOT NULL DEFAULT 0 ,
flashParams nvarchar(250) NULL DE
/*
 * kwc 05/08/2009
 *
 * Copied from a script done by Ali Asad Lotia to reflect the
 * changes made to the code in SVN r53972.
 */
/*
 * These changes must be made to the database before
 * code implementing OERDEV-162 (the "lite" fix edition)
 * is run on the system.
 * We aren't deleting any values, so it apparently isn't
 * a big deal to make this change.
 */
/*
 * I verified that altering the enum with a new value
 * "in the middle" does not change existing values,
 * as long as the existing values remain in the new
 * enum list.
 */
ALTER TABLE `ocw_claims_commission` MODIFY COLUMN `status` 
      ENUM (
       'new',
       'request sent',
       'in progress',
       'done' ) 
     NOT NULL default 'new' collate utf8_unicode_ci;
UPDATE `ocw_claims_commission` SET
       `status`='request sent' WHERE
       `status`='new';
ALTER TABLE `ocw_claims_fairuse` MODIFY COLUMN `status` 
      ENUM (
       'new',
       'request sent',
       'in progress',
       'ip review',
       '
-- Split inflection 84 ('invariabil') in two. We need this so that each inflection is only used in one model type. Currently, model types I and T share inflection 84.
insert into Inflection set description = 'Formă unică';
update ModelDescription set inflectionId = 85 where modelId = 2;
update Lexem, InflectedForm set InflectedForm.inflectionId = 85 where Lexem.id = lexemId and inflectionId = 84 and modelType = 'T';
-- Add a modelType column to Inflection (many-to-one).
alter table Inflection add modelType varchar(10), add rank int, add key(rank);
update Inflection set modelType = 'M', rank = id - 0 where id between 1 and 8;
update Inflection set modelType = 'F', rank = id - 8 where id between 9 and 16;
update Inflection set modelType = 'N', rank = id - 16 where id between 17 and 24;
update Inflection set modelType = 'A', rank = id - 24 where id between 25 and 40;
update Inflection set modelType = 'P', rank = id - 40 where id between 41 and 48;
update Inflection set modelType = 'V', ra
/*
 * $Id$
 *
 * Sample/Template for writing an HTML Report
 */
-- Populate sample data
create table t (i integer, vc varchar(20));
insert into t values(1, 'one');
insert into t values(2, 'two');
insert into t values(3, 'three');
insert into t values(4, 'four');
insert into t values(5, 'five');
commit;
-- IMPORTANT:  \o will append by default.  If you want to write a new file,
-- it's your responsibility to check that a file of the same name does not
-- already exist (or remove it).
-- Follow the following examples to use your own HTML fragment files.
-- * *TOP_HTMLFRAG_FILE = /tmp/top.html
-- * *BOTTOM_HTMLFRAG_FILE = /tmp/bottom.html
-- The default TOP_HTMLFRAG_FILE has a reference to this PL variable.
* REPORT_TITLE = Blaine's Sample Report
-- The default will also override its CSS style settings with your own if you
-- put them in a file named "overrides.css" in same directory alongside your
-- reports ("report.html" in this example).
-- You can add references to ${system.propertie
--
-- Copyright (c) 2008--2012 Red Hat, Inc.
--
-- This software is licensed to you under the GNU General Public License,
-- version 2 (GPLv2). There is NO WARRANTY for this software, express or
-- implied, including the implied warranties of MERCHANTABILITY or FITNESS
-- FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
-- along with this software; if not, see
-- http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
--
-- Red Hat trademarks are not licensed under GPLv2. No permission is
-- granted to use or replicate Red Hat trademarks that are incorporated
-- in this software or its documentation.
--
CREATE TABLE rhnActionKickstartGuest
    id                   NUMBER NOT NULL,
    action_id            NUMBER NOT NULL
                             CONSTRAINT rhn_actionks_xenguest_aid_fk
                                 REFERENCES rhnAction (id)
                                 ON DELETE CASCADE,
    append_string        VARCHAR2(1024),
    ks_session_id        NUMBER


                                 REFERENCES rhnKickstartSession (id)
                                 ON DELETE CASCADE,
    guest_name           VARCHAR2(256),
    mem_kb               NUMBER,
    vcpus                NUMBER,
    disk_gb              NUMBER,
    cobbler_system_name  VARCHAR2(256),
    disk_path            VARCHAR2(256),
    virt_bridge          VARCHAR2(256),
    kickstart_host       VARCHAR2(256),
    created              timestamp with local time zone
                             DEFAULT (current_timestamp) NOT NULL,
    modified             timestamp with local time zone
                             DEFAULT (current_timestamp) NOT NULL,
    mac_address          VARCHAR2(17)
ENABLE ROW MOVEMENT
CREATE UNIQUE INDEX rhn_actionks_xenguest_aid_uq
    ON rhnActionKickstartGuest (action_id)
    TABLESPACE [[8m_tbs]];
CREATE INDEX rhn_actionks_xenguest_id_idx
    ON rhnActionKickstartGuest (id)
    TABLESPACE [[4m_tbs]];
CREATE SEQUENCE rhn_actionks_xenguest_id_seq;
ALTER
if exists (select 1 from  sysobjects where  id = object_id('PRD_HemSeq') and   type = 'U')
	drop table PRD_HemSeq
go
create table PRD_HemSeq
   Id                   bigint               identity,
   No					varchar(100)		 null,
   OrderNo              varchar(50)          null,
   Flow					varchar(50)			 null,
   GroupNo				varchar(50)          null,
   VanSeries            varchar(50)        	 null,
   ProdCode				varchar(50)			 null,
   ProdSeq				varchar(50)			 null,
   Seq					bigint				 null,
   Item			        varchar(50)        	 null,
   ItemDesc			    varchar(100)         null,
   OrderQty				decimal(18,8)		 not null,
   HemOrderNo			varchar(50)			 null,
   CreateDate			datetime			 null,
   LastModifyDate		datetime			 null
go
insert into sys_menu values
('Url_OpReferenceBalance_View','工位溢出量','Menu.Procurement.Info',5,'工位溢出量','~/OpReferenceBalance/Index','~/Content/Images/Nav/Default.png',1)
insert into acc_permission values
('Url_OpReferenceBalance_View','工位溢出量','Procurement')
g
--------------------------------------------------------
--  Constraints for Table TERMINER_ETAPE
--------------------------------------------------------
  ALTER TABLE "G11_FLIGHT"."TERMINER_ETAPE" ADD CONSTRAINT "PK_TERMINER_ETAPE" PRIMARY KEY ("TOUR_ANNEE", "PART_NUM", "ETAPE_NUM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA"  LOCAL
 (PARTITION "TERMINER_ETAPE_2012" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2013" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE

 PARTITION "TERMINER_ETAPE_2014" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2015" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2016" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2017" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  P

  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2018" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2019" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" , 
 PARTITION "TERMINER_ETAPE_2020" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" )  ENABLE;
  ALTER TABLE "G11_FLIGHT"."TERMINER_ETAPE" MODIFY ("TOUR_ANNEE" NOT NULL ENABLE);
  ALTER TABLE "G11_FLIGHT"."
alter table INV_CycloidAmount alter column ItemDesc varchar(100) null
alter table PRD_ProdLineLayOut add VanSeries varchar(50) null
go
insert into sys_menu values
('Menu.CKD.Trans.CKDProcurement','CKD采购','Menu.CKD.Trans',490,'CKD采购',null,'~/Content/Images/Nav/Default.png',1)
update sys_menu set Parent='Menu.CKD.Trans.CKDProcurement' 
where code in('URL_CkdBase_View','Url_CkdCaseBill_View','Url_CkdContainerBill_View','Url_CkdLadingBill_View','Url_CkdMMOCaseBill_View')
insert into sys_menu values
('Url_CKDProcurement_View','CKD采购查询','Menu.CKD.Trans.CKDProcurement',50,'CKD采购查询','~/CKDProcurement/Index','~/Content/Images/Nav/Default.png',1)
if not exists(select * from sys_menu where code='Url_CKDProcurement_View')
	insert into acc_permission values('Url_CKDProcurement_View','CKD采购查询','CKD')
go
alter table PRD_MultiSupplySupplier add [Version] int
go
update PRD_MultiSupplySupplier set [Version] = 1
go
alter table PRD_MultiSupplySupplier alter column [Version] int not null
go
alter table SAP
--------------------------------------------------------
--  File created - ïÿòíèöà-ôåâðàëÿ-19-2016   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Index COMPANIES_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "COMPANIES_PK" ON "COMPANIES" ("COMPANY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COMPANIES_UK1
--------------------------------------------------------
  CREATE UNIQUE INDEX "COMPANIES_UK1" ON "COMPANIES" ("NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 

  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PAYMENTS_INDEX_DAY
--------------------------------------------------------
  CREATE INDEX "PAYMENTS_INDEX_DAY" ON "PAYMENTS" ("DAY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PAYMENTS_INDEX_STATUS
--------------------------------------------------------
  CREATE INDEX "PAYMENTS_INDEX_STATUS" ON "PAYMENTS" ("COMPANY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
------------------

--  DDL for Index PAYMENTS_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "PAYMENTS_PK" ON "PAYMENTS" ("PAYMENT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PURPOSES_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "PURPOSES_PK" ON "PURPOSES" ("PURPOSE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PURPOSES_UK1
--------------------------
/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;
/* Delete all liquibase changelog locks */
TRUNCATE liquibasechangeloglock;
/* Add a new lock */
INSERT INTO liquibasechangeloglock (ID, LOCKED, LOCKGRANTED, LOCKEDBY) VALUES (1, 0, NULL, NULL);
/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CL
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Candidates_Exists' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Candidates_Exists', 'Client Candidates Exists',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Candidates_Search' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Candidates_Search', 'Client Candidates Search',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Candidates_SelectAll' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Candidates_SelectAll', 'Client Candidates SelectAll',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Candidates_SelectBy_CandidateId' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Candidates_SelectBy_CandidateId', 'Client Candidates SelectBy CandidateId',1

IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Candidates_SelectBy_ContentInspectionId' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Candidates_SelectBy_ContentInspectionId', 'Client Candidates SelectBy ContentInspectionId',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Candidates_SelectBy_OrganizationId' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Candidates_SelectBy_OrganizationId', 'Client Candidates SelectBy OrganizationId',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Candidates_SelectBy_ProposedByUserId' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Candidates_SelectBy_ProposedByUserId', 'Client Candidates SelectBy ProposedByUserId',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Candidates_SelectBy_ConfirmedB

	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Candidates_SelectBy_ConfirmedByUserId', 'Client Candidates SelectBy ConfirmedByUserId',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Locations_Exists' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Locations_Exists', 'Client Locations Exists',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Locations_Search' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Locations_Search', 'Client Locations Search',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Locations_SelectAll' )
	INSERT INTO [Auth].[Permission] ([PermissionName],[Title],[IsRead]) VALUES ('Client_Locations_SelectAll', 'Client Locations SelectAll',1);
IF NOT EXISTS(SELECT * FROM [Auth].[Permission] WHERE [PermissionName] = 'Client_Locations_SelectBy_LocationI
/* Formatted on 21.07.2014 13:53:42 (QP5 v5.227.12220.39754) */
CREATE TABLE my_udr_btk_report
AS
   SELECT ROWID rwd, a.*
     FROM udr_lt a
    WHERE 1 = 0;
DECLARE
   v_date      DATE;
   v_cust_id   INTEGER;
BEGIN
   FOR c1
      IN (SELECT *
            FROM ro_agile.my_btk_report_5
           WHERE     (   DELIVERED_100TL = 'NO'
                      OR DELIVERED_100TL = 'YES' AND DELIVERED_250TL = 'NO')
                 AND DATE_100TL > TO_DATE ('01.01.2014', 'dd.mm.yyyy')
                 AND REFUND_TL IS NULL)
   LOOP
      IF c1.DELIVERED_100TL = 'NO'
      THEN
         v_date := c1.DATE_100TL;
      ELSE
         IF c1.DELIVERED_100TL = 'YES' AND c1.DELIVERED_250TL = 'NO'
         THEN
            v_date := c1.DATE_250TL;
         END IF;
      END IF;
      SELECT customer_id
        INTO v_cust_id
        FROM contract_all
       WHERE co_id = c1.co_id;
      INSERT /*+ APPEND_VALUES */
            INTO  my_udr_btk_report
         SELECT a.ROWID rwd, a.*
           FROM u

          WHERE     v_cust_id = cust_info_customer_id
                AND c1.CO_ID = cust_info_contract_id
                AND   START_TIME_TIMESTAMP
                    + NVL ( (START_TIME_OFFSET * 1 / 86400), 0) >= v_date
                AND   START_TIME_TIMESTAMP
                    + NVL ( (START_TIME_OFFSET * 1 / 86400), 0) >= v_date
                AND   START_TIME_TIMESTAMP
                    + NVL ( (START_TIME_OFFSET * 1 / 86400), 0) <
                       c1.bucket_end_date
                AND   START_TIME_TIMESTAMP
                    + NVL ( (START_TIME_OFFSET * 1 / 86400), 0) >=
                       TO_DATE ('01.01.2014', 'dd.mm.yyyy')
                AND (   (    CALL_TYPE IN (11, 12, 13)
                         AND XFILE_IND = 'V'                   -- data roaming
                         AND TARIFF_INFO_SNCODE = 63)
                     OR (    TARIFF_INFO_SNCODE = 63
                         AND TARIFF_INFO_ZNCODE IN (1008) ----- KKTC data roaming
              
CREATE SEQUENCE flash.semestre_semestre_id_seq;
CREATE TABLE flash.semestre (
                semestre_id INTEGER NOT NULL DEFAULT nextval('flash.semestre_semestre_id_seq'),
                ano INTEGER NOT NULL,
                semestre INTEGER NOT NULL,
                CONSTRAINT semestre_id_pk PRIMARY KEY (semestre_id)
);
ALTER SEQUENCE flash.semestre_semestre_id_seq OWNED BY flash.semestre.semestre_id;
CREATE SEQUENCE flash.tipo_espaco_tipo_id_seq;
CREATE TABLE flash.tipo_espaco (
                tipo_id INTEGER NOT NULL DEFAULT nextval('flash.tipo_espaco_tipo_id_seq'),
                descricao VARCHAR NOT NULL,
                CONSTRAINT tipo_espaco_pk PRIMARY KEY (tipo_id)
);
ALTER SEQUENCE flash.tipo_espaco_tipo_id_seq OWNED BY flash.tipo_espaco.tipo_id;
CREATE SEQUENCE flash.espaco_espaco_id_seq;
CREATE TABLE flash.espaco (
                espaco_id INTEGER NOT NULL DEFAULT nextval('flash.espaco_espaco_id_seq'),
                bloco VARCHAR NOT NULL,
                numero INT

                tipo_id INTEGER NOT NULL,
                CONSTRAINT espaco_pk PRIMARY KEY (espaco_id)
);
ALTER SEQUENCE flash.espaco_espaco_id_seq OWNED BY flash.espaco.espaco_id;
CREATE SEQUENCE flash.dia_semana_dia_semana_id_seq;
CREATE TABLE flash.dia_semana (
                dia_semana_id INTEGER NOT NULL DEFAULT nextval('flash.dia_semana_dia_semana_id_seq'),
                nome_dia VARCHAR NOT NULL,
                CONSTRAINT dia_semana_id PRIMARY KEY (dia_semana_id)
);
ALTER SEQUENCE flash.dia_semana_dia_semana_id_seq OWNED BY flash.dia_semana.dia_semana_id;
CREATE SEQUENCE flash.area_conhecimento_area_conhecimento_id_seq;
CREATE TABLE flash.area_conhecimento (
                area_conhecimento_id INTEGER NOT NULL DEFAULT nextval('flash.area_conhecimento_area_conhecimento_id_seq'),
                descricao VARCHAR NOT NULL,
                CONSTRAINT area_conhecimento_pk PRIMARY KEY (area_conhecimento_id)
);
ALTER SEQUENCE flash.area_conhecimento_area_conhecimento_id_seq OWNE

CREATE SEQUENCE flash.sub_area_conhecimento_area_conhecimento_id_seq;
CREATE TABLE flash.sub_area (
                area_conhecimento_id INTEGER NOT NULL DEFAULT nextval('flash.sub_area_conhecimento_area_conhecimento_id_seq'),
                sub_area_conhecimento_id INTEGER NOT NULL,
                CONSTRAINT sub_area_pk PRIMARY KEY (area_conhecimento_id, sub_area_conhecimento_id)
);
ALTER SEQUENCE flash.sub_area_conhecimento_area_conhecimento_id_seq OWNED BY flash.sub_area.area_conhecimento_id;
CREATE SEQUENCE flash.curso_curso_id_seq;
CREATE TABLE flash.curso (
                curso_id INTEGER NOT NULL DEFAULT nextval('flash.curso_curso_id_seq'),
                nome VARCHAR NOT NULL,
                regime VARCHAR NOT NULL,
                duracao INTEGER NOT NULL,
                sigla VARCHAR NOT NULL,
                CONSTRAINT curso_pk PRIMARY KEY (curso_id)
);
ALTER SEQUENCE flash.curso_curso_id_seq OWNED BY flash.curso.curso_id;
CREATE SEQUENCE flash.horario_horario_id_seq;
﻿CREATE TABLE [dbo].[carrot_Content] (
    [ContentID]        UNIQUEIDENTIFIER CONSTRAINT [DF_carrot_Content_ContentID] DEFAULT (newid()) NOT NULL,
    [Root_ContentID]   UNIQUEIDENTIFIER NOT NULL,
    [Parent_ContentID] UNIQUEIDENTIFIER NULL,
    [IsLatestVersion]  BIT              NOT NULL,
    [TitleBar]         NVARCHAR (256)   NULL,
    [NavMenuText]      NVARCHAR (256)   NULL,
    [PageHead]         NVARCHAR (256)   NULL,
    [PageText]         NVARCHAR (MAX)   NULL,
    [LeftPageText]     NVARCHAR (MAX)   NULL,
    [RightPageText]    NVARCHAR (MAX)   NULL,
    [NavOrder]         INT              NOT NULL,
    [EditUserId]       UNIQUEIDENTIFIER NULL,
    [EditDate]         DATETIME         CONSTRAINT [DF_carrot_Content_EditDate] DEFAULT (getdate()) NOT NULL,
    [TemplateFile]     NVARCHAR (256)   NULL,
    [MetaKeyword]      NVARCHAR (1024)  NULL,
    [MetaDescription]  NVARCHAR (1024)  NULL,
    [CreditUserId]     UNIQUEIDENTIFIER NULL,
    CONSTRAINT [PK_carrot_Content] PRIMA
-- MySQL dump 10.13  Distrib 5.6.12, for osx10.8 (x86_64)
--
-- Host: localhost    Database: message_board
-- ------------------------------------------------------
-- Server version	5.6.12
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_S
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans - Summary(Pentaho)', 'Active Loans - Summary(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans by Disbursal Period(Pentaho)', 'Active Loans by Disbursal Period(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans in last installment Summary(Pentaho)', 'Active Loans in last installment Summary(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans in last installment(Pentaho)', 'Active Loans in last installment(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans Passed Final Maturity(Pentaho)', 'Active Loans Passed Final Maturity(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Aging Detail(Pentaho)', 'Aging Detail(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Aging Summary (Arrears in Months)(Pentaho)', 'Aging Summary (Arrears in Months)(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Aging Summary (Arrears in Weeks)(Pentaho)', 'Aging Summary (Arrears in Weeks)(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Client Listing

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Client Loan Account Schedule', 'Client Loan Account Schedule', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Client Loans Listing(Pentaho)', 'Client Loans Listing(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Client Saving Transactions', 'Client Saving Transactions', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Client Savings Summary', 'Client Savings Summary', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_ClientSummary ', 'ClientSummary ', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `en
import studio
import f1
program randezvous #auto
[[gospoda] [gospoda ada]]
[[gospoda *task]
	[var [pieczywo 0] [mieso 0]]
	[task *task [gospoda dostarczmieso dostarczpieczywo status exit]
		[FOREVER
			[show "ready...."]
			[pieczywo : *p] [mieso : *m]
			[SELECT
				[[*task select status [*p *m] [show "pieczywo = " *p] [show "mieso = " *m]]]
				[[*task select exit []] [*task] [timeout]]
				[[*task select dostarczpieczywo [*pieczywo] [pieczywo *pieczywo] [show "Dostalem pieczywo [" *pieczywo "]"]]]
				[[*task select dostarczmieso [*mieso] [mieso *mieso] [show "Dostalem mieso [" *mieso "]"]]]
				[[greater *p 0] [greater *m 0] [*task select gospoda [*pk]
					[rnd *time 1000 5000] [write "gotuje => " [*time]] [wait *time] [write " mieso\n"]
					[sum *m *p *pk]
					[wait 4000]
					[pieczywo 0] [mieso 0]
				]]
				[[*task wait]]
			]
			[show "..... loop"]
		]
	]
[[train *task] [task *task[exit status]]]
[[train] [train ada]]
[[a]  [crack [ada accept exit [1 2 3] [show "processing.

[[s]  [crack [ada select exit [1 2 3] [show "selecting...."] [wait 2000] [show "....selected"]] [show "accepted"]]]
[[ss] [crack [ada select status [5 6 7] [show "status selecting....."] [wait 2000] [show "....status selected"]] [show "accepted"]]]
[[b]  [crack [ada enter exit 1 *x 3] [show *x]]]
[[bs] [crack [ada enter status : *x] [show *x]]]
end := [[set_colors 16776960 0] [auto_atoms] [command]] .
auto := [
	[VARIABLE kanapki] [kanapki 0]
	[VARIABLE pieczywo] [pieczywo 0]
	[VARIABLE mieso] [mieso 0]
	]
[[gotujmieso *m]
	[rnd *time 100 5000]
	[mieso : *m]
	[write "gotuje => "] [wait *time] [show "mieso " [*time *m]]
	[mieso 0]
	]
[[robkanapki *k]
	[pieczywo : *p]
	[mieso : *mieso]
	[less 0 *mieso] [less 0 *p]
	[gotujmieso *m]
	[add *m *p *k]
	[pieczywo 0]
	[kanapki *k]
	]
[[robkanapki] [write "		Nie moge zrobic kanapek.\n"]]
[[status]
	[mieso : *m] [pieczywo : *p] [kanapki : *k]
	[show "mieso " [*m] " pieczywo " [*p] " kanapki " [*k]]
	]
[[akceptuj_pieczywo *task 0]
	[accept *task 
--------------------------------------------------------
--  DDL for Index PK_POINT_PASSAGE
--------------------------------------------------------
  CREATE UNIQUE INDEX "G11_FLIGHT"."PK_POINT_PASSAGE" ON "G11_FLIGHT"."POINT_PASSAGE" ("TOUR_ANNEE", "ETAPE_NUM", "PT_PASS_NUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND"  LOCAL
 (PARTITION "POINT_PASSAGE_2012" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2013" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITI

  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2015" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2016" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_IND" , 
 PARTITION "POINT_PASSAGE_2017" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS
CREATE VIEW [dbo].[V_PAYOUT_INVOICE]
AS
SELECT     invoice_num, SUM(total_profit) AS total_profit
FROM         dbo.V_PROFIT_ITEM_DETAILS
GROUP BY invoice_num
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "V_PROFIT_ITEM_DETAILS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_PAYOUT_INVOICE';
GO
EXECUTE sp_addextendedprope
--this test only tests the sintax
--the semantic should also be tested after the syntax test
create table t_3_1 (id int, name varchar(1024));
create table t_3_2 (id int, name varchar(1024));
--test when trigger event is UPDATE
insert into t_3_1 values(10, 'monetdb');
insert into t_3_1 values(20, 'monet');
create trigger test_3_1
	after update on t_3_1 referencing old row as old_row
	for each row insert into t_3_2 values(0, 'update_old_row');
create trigger test_3_2
	after update on t_3_1 referencing old row old_row
	for each row insert into t_3_2 values(1, 'update_old_row');
create trigger test_3_3
	after update on t_3_1 referencing old as old_row
	for each row insert into t_3_2 values(2, 'update_old_row');
create trigger test_3_4
	after update on t_3_1 referencing old old_row
	for each row insert into t_3_2 values(3, 'update_old_row');
update t_3_1 set name = 'mo' where id = 10;
select * from t_3_1;
select * from t_3_2;
delete from t_3_1 where id > -1;
delete from t_3_2 where id > -1;

drop trigger test_3_1;
drop trigger test_3_2;
drop trigger test_3_3;
drop trigger test_3_4;
--test when trigger event is DELETE
insert into t_3_1 values(10, 'monetdb');
insert into t_3_1 values(20, 'monet');
create trigger test_3_1
	after delete on t_3_1 referencing old row as old_row
	for each row insert into t_3_2 values(0, 'delete_old_row');
create trigger test_3_2
	after delete on t_3_1 referencing old row old_row
	for each row insert into t_3_2 values(1, 'delete_old_row');
create trigger test_3_3
	after delete on t_3_1 referencing old as old_row
	for each row insert into t_3_2 values(2, 'delete_old_row');
create trigger test_3_4
	after delete on t_3_1 referencing old old_row
	for each row insert into t_3_2 values(3, 'delete_old_row');
delete from t_3_1 where id >-1;
select * from t_3_1;
select * from t_3_2;
drop trigger test_3_1;
drop trigger test_3_2;
drop trigger test_3_3;
drop trigger test_3_4;
delete from t_3_2 where id >-1;
--test error messages
--old row and old table are n

insert into t_3_1 values(10, 'monetdb');
create trigger test_3_1
	after insert on t_3_1 referencing old row as old_row
	for each row insert into t_3_2 values(0, 'insert_old_row');
create trigger test_3_2
	after insert on t_3_1 referencing old row old_row
	for each row insert into t_3_2 values(1, 'insert_old_row');
create trigger test_3_3
	after insert on t_3_1 referencing old as old_row
	for each row insert into t_3_2 values(2, 'insert_old_row');
create trigger test_3_4
	after insert on t_3_1 referencing old old_row
	for each row insert into t_3_2 values(3, 'insert_old_row');
insert into t_3_1 values(20, 'monet');
select * from t_3_1;
select * from t_3_2;
delete from t_3_1 where id >-1;
delete from t_3_2 where id >-1;
drop trigger test_3_1;
drop trigger test_3_2;
drop trigger test_3_3;
drop trigger test_3_4;
--test with old row and old table and mixed 
insert into t_3_1 values(10, 'monetdb');
insert into t_3_1 values(20, 'monet');
create trigger test_3_1
	after update on t_3_1 referen
CALL moduleAddNewByPath(
	"ShowBooklist", 1, 1,
	"administrator/headmod_Schbas/modules/mod_Booklist/ShowBooklist.php",
	"Booklist", "root/administrator/Schbas/Booklist",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"EditBook", 1, 1,
	"administrator/headmod_Schbas/modules/mod_Booklist/EditBook.php",
	"Booklist", "root/administrator/Schbas/Booklist",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"DeleteBook", 1, 1,
	"administrator/headmod_Schbas/modules/mod_Booklist/DeleteBook.php",
	"Booklist", "root/administrator/Schbas/Booklist",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"CreateBook", 1, 1,
	"administrator/headmod_Schbas/modules/mod_Booklist/CreateBook.php",
	"Booklist", "root/administrator/Schbas/Booklist",
	@newModuleId
);
INSERT INTO SystemG
  --Item View
  SELECT dropIfExists('VIEW', 'item', 'api');
  CREATE OR REPLACE VIEW api.item AS
  SELECT
    item_number::varchar AS item_number,
    item_active AS active,
    item_descrip1 AS description1,
    item_descrip2 AS description2,
    CASE
      WHEN item_type = 'P' THEN
        'Purchased'
      WHEN item_type = 'M' THEN
        'Manufactured'
      WHEN item_type = 'J' THEN
        'Job'
      WHEN item_type = 'K' THEN
        'Kit'
      WHEN item_type = 'F' THEN
        'Phantom'
      WHEN item_type = 'R' THEN
        'Reference'
      WHEN item_type = 'S' THEN
        'Costing'
      WHEN item_type = 'T' THEN
        'Tooling'
      WHEN item_type = 'O' THEN
        'Outside Process'
      WHEN item_type = 'L' THEN
        'Planning'
      WHEN item_type = 'B' THEN
        'Breeder'
      WHEN item_type = 'C' THEN
        'Co-Product'
      WHEN item_type = 'Y' THEN
        'By-Product'
    END AS item_type,
    item_maxcost AS maximum_desired_cost,
    classcode_cod

    i.uom_name AS inventory_uom,
    item_picklist AS pick_list_item,
    item_fractional AS fractional,
    item_config AS configured,
    item_sold AS item_is_sold,
    prodcat_code AS product_category,
    item_exclusive AS exclusive,
    item_listprice AS list_price,
    item_listcost AS list_cost,
    p.uom_name AS list_price_uom,
    item_upccode AS upc_code,
    item_prodweight AS product_weight,
    item_packweight AS packaging_weight,
    item_comments AS notes,
    item_extdescrip AS ext_description
  FROM item
         LEFT OUTER JOIN prodcat ON (item_prodcat_id=prodcat_id), 
         classcode, uom AS i, uom AS p
  WHERE ((item_classcode_id=classcode_id)
  AND (item_inv_uom_id=i.uom_id)
  AND (item_price_uom_id=p.uom_id))
  ORDER BY item_number;
GRANT ALL ON TABLE api.item TO xtrole;
COMMENT ON VIEW api.item IS 'Item';
  --Rules
  CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.item DO INSTEAD
  INSERT INTO item
	   (item_number,
	    item_active,
	    item_descri

	    item_descrip2,
	    item_type,
	    item_maxcost,
	    item_classcode_id,
	    item_inv_uom_id,
	    item_picklist,
	    item_fractional,
	    item_config,
	    item_sold,
	    item_prodcat_id,
	    item_exclusive,
	    item_listprice,
	    item_listcost,
	    item_price_uom_id,
	    item_upccode,
	    item_prodweight,
	    item_packweight,
	    item_comments,
	    item_extdescrip)
	   VALUES
	   (UPPER(NEW.item_number),
	    COALESCE(NEW.active,TRUE),
	    COALESCE(NEW.description1,''),
	    COALESCE(NEW.description2,''),
	    CASE
	      WHEN NEW.item_type = 'Purchased' THEN
	        'P'
	      WHEN NEW.item_type = 'Manufactured' THEN
	        'M'
	      WHEN NEW.item_type = 'Job' THEN
	        'J'
	      WHEN NEW.item_type = 'Kit' THEN
	        'K'
	      WHEN NEW.item_type = 'Phantom' THEN
	        'F'
	      WHEN NEW.item_type = 'Reference' THEN
	        'R'
	      WHEN NEW.item_type = 'Costing' THEN
	        'S'
	      WHEN NEW.item_type = 'Tooling' THEN
	        'T'
	     
#	lists
lists:keymember(Key,N,TupleList)	bif_keymember3
lists:keysearch(Key,N,TupleList)	bif_keysearch3
lists:keyfind(Key,N,TupleList)		bif_keyfind3
lists:member(Elem,List)				bif_member2
lists:reverse(Ls,Hs)				bif_reverse2
erlang:++(List1,List2)				bif_plusplus2
erlang:--(List1,List2)				bif_minusminus2
erlang:make_tuple(N,InitValue)				bif_make_tuple2
erlang:make_tuple(N,DefValue,InitList)		bif_make_tuple3
erlang:setelement(N,Tuple,Value)			bif_setelement3
erlang:append_element(Tuple,Elem)			bif_append_element2
erlang:tuple_to_list(Tuple)					bif_tuple_to_list1
erlang:list_to_tuple(List)					bif_list_to_tuple1
erlang:binary_to_term(Bin)				bif_binary_to_term1
erlang:term_to_binary(Term)				bif_term_to_binary1
erlang:binary_to_list(Bin)				bif_binary_to_list1
erlang:binary_to_list(Bin,Start,Stop)	bif_binary_to_list3
erlang:list_to_binary(List)				bif_list_to_binary1
erlang:atom_to_list(Atom)			bif_atom_to_list1
erlang:float_to_list(Float)			bif_float_to_list1
erlang:register(RegName,

erlang:unregister(RegName)			bif_unregister1
erlang:whereis(RegName)				bif_whereis1
erlang:spawn(Module,Function,Args)	bif_spawn3
erlang:spawn(Fun)					bif_spawn1
erlang:!(Pid,Msg)					bif_send_msg2
erlang:error(Reason)				bif_error1
erlang:error(Reason,Args)			bif_error2
erlang:throw(Reason)				bif_throw1
erlang:exit(Reason)					bif_exit1
erlang:exit(Pid,Reason)				bif_exit2
erlang:put(Key,Value)		bif_put2
erlang:erase()				bif_erase0
erlang:erase(Key)			bif_erase1
erlang:get()				bif_get0
erlang:get(Key)				bif_get1
erlang:now()			bif_now0
erlang:date()			bif_date0
erlang:time()			bif_time0
erlang:localtime()		bif_localtime0
erlang:universaltime()	bif_universaltime0
erlang:property(Term,Opt)		bif_property2
erlang:property(Term,Opt,Val)	bif_property3
erlang:close(Oid)				bif_close1
erlang:statistics(What)		bif_statistics1
erlang:display(Iolist)		bif_display1
erlang:daemonize()			bif_daemonize0
code:is_loaded(Module)				bif_is_loaded1
code:load_module(Where)				bif_load_module1
code:
alter table PRD_ShiftDet add IsOvernight bit
go
update PRD_ShiftDet set IsOvernight = 0
go
alter table PRD_ShiftDet alter column IsOvernight bit not null
go
alter table PRD_WorkingCalendar add DayOfWeek tinyint
go
update PRD_WorkingCalendar set DayOfWeek = 0
go
alter table PRD_WorkingCalendar alter column DayOfWeek tinyint not null
go
--↓2012-11-21 库位工位物料对照  增加 库位 字段
alter table MD_LocationLayOut add Rack varchar(50)
--↑2012-11-21 库位工位物料对照  增加 库位 字段
insert into acc_permission values('Url_ProductionReceipt_View','生产收货单','Production')
insert into sys_menu values('Url_ProductionReceipt_View','生产收货单','Url_OrderMstr_Production','200','生产收货单','~/ProductionReceipt/Index','~/Content/Images/Nav/Default.png','1')
alter table kb_kanbanscan add OrderNo varchar(50)
update sys_menu set imageurl='~/Content/Images/Nav/Quality.png' where code='Menu.Quality'   
update sys_menu set imageurl='~/Content/Images/Nav/Info.png' where code='Menu.Quality.Info'   
update sys_menu set imageurl='~/Content/Images/Na
--
-- PostgreSQL database dump
--
SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET search_path = public, pg_catalog;
--
-- Name: get_kwh_meter_locations; Type: VIEW; Schema: public; Owner: eileen
--
CREATE VIEW get_kwh_meter_locations AS
    SELECT "MeterData".meter_name, "MeterData".util_device_id, "MeterData".mac_id, "MeterData".meter_data_id, "Reading".value, "Reading".uom, "Reading".channel, "IntervalReadData".start_time, "IntervalReadData".end_time, "LocationRecords".service_pt_longitude, "LocationRecords".service_pt_latitude, "LocationRecords".service_pt_height, "LocationRecords".device_status FROM (((("MeterData" JOIN "IntervalReadData" ON (("MeterData".meter_data_id = "IntervalReadData".meter_data_id))) JOIN "Interval" ON (("IntervalReadData".interval_read_data_id = "Interval".interval_read_data_id))) JOIN "Reading" ON (("Interval".interval_id = "Reading".inte
/*Caleb Meador meadorjc at gmail.com*/
use MyGuitarShop;
declare @newcustomer xml;
set @newcustomer = 
'<NewCustomers>
	<Customer EmailAddress="izzychan@yahoo.com" Password="" FirstName="Isabella" LastName="Chan" />
	<Customer EmailAddress="johnprine@gmail.com" Password="" FirstName="John" LastName="Prine" />
	<Customer EmailAddress="kathykitchen@sbcglobal.net" Password="" FirstName="Kathy" LastName="Kitchen" />
</NewCustomers>';
insert customers(EmailAddress, Password, FirstName, LastName)
values ( @newcustomer.value('(/NewCustomers/Customer/@emailaddress)[1]', 'varchar(50)'),
 @newcustomer.value('(/NewCustomers/Customer/@password)[1]', 'varchar(50)'),
 @newcustomer.value('(/NewCustomers/Customer/@firstname)[1]', 'varchar(50)'),
 @newcustomer.value('(/NewCustomers/Customer/@lastname)[1]', 'varchar(50)')
 ),
 ( @newcustomer.value('(/NewCustomers/Customer/@emailaddress)[2]', 'varchar(50)'),
 @newcustomer.value('(/NewCustomers/Customer/@password)[2]', 'varchar(50)'),
 @newcustomer.value(
-- ViewName : BidListNotificationView-Summary
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'BQM';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'BidListNotificationView-Summary'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq_coun

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
use {db_name} ;
INSERT INTO `{table_prefix}admin` (`id`, `username`, `password`, `role`) VALUES
(1, 'firede', '123456', 1),
(2, 'radeye', '123456', 0),
(4, 'daxiniu', 'jimogu', 1);
INSERT INTO `{table_prefix}attachment` (`id`, `url`, `uuid`, `file_size`, `use_type`, `status`, `file_type`) VALUES
(1, '1', '1', 0, 0, 0, '11');
INSERT INTO `{table_prefix}post` (`id`, `uuid`, `title`, `cate_id`, `pub_time`, `update_time`, `pre_content`, `content`, `user_id`, `status`, `read_count`, `operation_id`, `reference`, `source`, `operation_desc`, `flag`, `swap`) VALUES
(0, '3', '这里是标题', 1, '2010-11-24 08:18:46', '0000-00-00 00:00:00', '这是内容，我要预览效果啊', '', '3', 1, 0, 'admin', NULL, NULL, 'xiaodang', '0,', '2'),
(4, '3', '换个标题名', 1, '2010-11-24 08:40:57', '0000-00-00 00:00:00', '33', 'lalala', '3', 0, 0, '3', NULL, NULL, NULL, '0,', ''),
(5, '3', '少林足球中，火云邪神的大绝招是啥？', 1, '2010-11-24 08:40:59', '0000-00-00 00:00:00', '33', 'lalala', '3', 0, 0, '3', NULL, NULL, NULL,

(6, '3', '教你怎样才能百分百发挥出如来神掌的威力', 1, '2010-11-24 08:41:00', '0000-00-00 00:00:00', '33', 'lalala', '3', 2, 0, '3', NULL, NULL, NULL, '0,', ''),
(7, '3', '足球比赛中如何施展功夫而不被罚黄牌', 1, '2010-11-24 08:41:02', '0000-00-00 00:00:00', '参考中国足球', 'lalala', '3', 0, 0, '3', NULL, NULL, NULL, '0,', ''),
(8, '3', '少林足球中，谁演的那个尼姑', 1, '2010-11-24 08:41:04', '0000-00-00 00:00:00', '33', 'lalala', '3', 5, 0, '3', NULL, NULL, NULL, '0,', ''),
(9, '3', '不是吧，标题全是3', 1, '2010-11-24 08:41:59', '0000-00-00 00:00:00', '33', 'lalala', '3', 0, 0, '3', NULL, NULL, NULL, '0,', ''),
(10, '3', '一二三四五六七八九十一二三四五六七八九十测试', 1, '2010-11-24 09:15:07', '0000-00-00 00:00:00', '测试', 'lalala', '3', 0, 1, '3', NULL, NULL, NULL, '0,', ''),
(11, '3', '没有标题可不行啊', 1, '2010-11-24 09:15:22', '0000-00-00 00:00:00', '33', 'lalala', '3', 1, 1, '3', NULL, NULL, NULL, '1,2,3', ''),
(12, '3', '文章一定得要有标题', 1, '2010-11-25 08:18:46', '0000-00-00 00:00:00', '这是内容', 'pre内容', '1', 1, 20, 'admin', NULL, NULL, 'firede', '0,1,2', '2'),
(13, '3', '蓝蓝路与上校

(14, '3', '教你如何唱蓝蓝路之歌', 1, '2010-11-27 08:18:46', '0000-00-00 00:00:00', '这是内容', 'pre内容', '1', 1, 20, 'admin', NULL, NULL, 'firede', '0,2,3', '2'),
(15, '3', '神说，要有光', 1, '2010-11-28 08:18:46', '0000-00-00 00:00:00', '这是内容', 'pre内容', '1', 1, 20, 'admin', NULL, NULL, 'firede', '0,1', '2'),
(16, '3', '制造测试数据的全攻略', 1, '2010-11-29 08:18:46', '0000-00-00 00:00:00', '这是内容', 'pre内容', '1', 1, 20, 'admin', NULL, NULL, 'firede', '0,1,3', '2'),
(17, '3', '文章一定得要有标题', 1, '2010-11-25 08:18:46', '0000-00-00 00:00:00', '这是内容', 'pre内容', '1', 1, 20, 'admin', NULL, NULL, 'firede', '0,3', '2'),
(18, '3', '一二三四五六七八九十一二三四五六七八九十测试', 1, '2010-11-26 08:18:46', '0000-00-00 00:00:00', '这是内容', 'pre内容', '3', 1, 20, 'admin', NULL, NULL, 'firede', '0,', '2'),
(19, '3', '教你如何唱蓝蓝路之歌', 1, '2010-11-27 08:18:46', '0000-00-00 00:00:00', '这是内容', 'pre内容', '1', 1, 20, 'admin', NULL, NULL, 'firede', '0,', '2'),
(20, '3', '神说，要有光', 1, '2010-11-28 08:18:46', '0000-00-00 00:00:00', '这是内容', 'pre内容', '1', 1, 20, 'admin', NULL, N
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table company_model (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_company_model primary key (id))
create table computer_model (
  id                        bigint not null,
  name                      varchar(255),
  introduced                timestamp,
  discontinued              timestamp,
  company_id                bigint,
  constraint pk_computer_model primary key (id))
create sequence company_model_seq;
create sequence computer_model_seq;
alter table computer_model add constraint fk_computer_model_company_1 foreign key (company_id) references company_model (id) on delete restrict on update restrict;
create index ix_computer_model_company_1 on computer_model (company_id);
# --- !Downs
SET REFERENTIAL_INTEGRITY FALSE;
drop table if exists company_model;
drop table if exists computer_model;
SET REFERENT
INSERT INTO jc_resource_table(id,res_name_en,module,res_name_zh,remark)VALUES 
('r_5247d5d8501bd7.28940716','admin_index_index','admin','admin_index_index','系统扫描权限');
('r_5247d5d8501bd8.20755612','admin_index_left','admin','admin_index_left','系统扫描权限');
('r_5247d5d853ec69.49354669','admin_index_right','admin','admin_index_right','系统扫描权限');
('r_5247d5d853ec64.74960868','admin_nav_index','admin','admin_nav_index','系统扫描权限');
('r_5247d5d853ec64.94840933','admin_nav_edit','admin','admin_nav_edit','系统扫描权限');
('r_5247d5d853ec68.00188592','admin_nav_editin','admin','admin_nav_editin','系统扫描权限');
('r_5247d5d853ec65.70387835','admin_nav_delete','admin','admin_nav_delete','系统扫描权限');
('r_5247d5d853ec69.06779736','admin_resource_index','admin','admin_resource_index','系统扫描权限');
('r_5247d5d853ec64.93431680','admin_resource_auto','admin','admin_resource_auto','系统扫描权限');
('r_5247f21540d999.71027263','admin_resource_edit','admin','admin_resource_edit','系统扫描权限');
('r_5247d5d857bcf4.55766052','admin_staff_i

('r_5247d5d857bcf7.81572121','admin_staff_edit','admin','admin_staff_edit','系统扫描权限');
('r_5247d5d857bcf4.46023073','admin_staff_editin','admin','admin_staff_editin','系统扫描权限');
('r_5247d5d857bcf4.90099300','admin_staff_delete','admin','admin_staff_delete','系统扫描权限');
('r_5247d5d857bcf2.26703347','default_error_error','default','default_error_error','系统扫描权限');
('r_5247d5d857bcf5.71462224','default_index_index','default','default_index_index','系统扫描权限');
('r_5247d5d857bcf5.06596159','login_index_index','login','login_index_index','系统扫描权限');
('r_5247d5d85b8d81.68891201','login_index_do','login','login_index_do','系统扫描权限');
('r_5247d5d85b8d81.22732158','login_index_logout','login','login_index_logout','系统扫描权限');
('r_5247d5d85b8d81.60678358','member_index_index','member','member_index_index','系统扫描权限');
('r_5247d5d85b8d80.96227763','member_index_list','member','member_index_list','系统扫描权限');
('r_5247d5d85f5e11.45105080','sharesession_index_index','sharesession','sharesession_index_index','系统扫描权限

('r_5247d5d85f5e18.19570569','system_backup_index','system','system_backup_index','系统扫描权限');
('r_5247d5d85f5e15.65797540','system_department_index','system','system_department_index','系统扫描权限');
('r_5247d5d8632ea7.39488086','system_department_add','system','system_department_add','系统扫描权限');
('r_5247d5d8632ea0.31192883','system_department_save','system','system_department_save','系统扫描权限');
('r_5247d5d866ff32.04139860','system_department_delete','system','system_department_delete','系统扫描权限');
('r_5247d5d866ff39.70454208','userext_index_index','userext','userext_index_index','系统扫描权限');
('r_5247d5d866ff36.89826785','userext_index_add','userext','userext_index_add','系统扫描权限');
('r_5247d5d86acfc4.27632274','weixin_module_index','weixin','weixin_module_index','系统扫描权限');
('r_5247d5d86acfc4.83212666','weixin_module_edit','weixin','weixin_module_edit','系统扫描权限');
('r_5247f21544aa28.61118497','admin_resource_editin','admin','admin_resource_editin','系统扫描权限');
('r_5247f21544aa23.37842921','admin_resour
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/_tables.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/addElement.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/arest_service.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/aws_monitoring.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/checkForbiddenChars.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/chestToRawData.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/entityPermission.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/columnDatatype.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/csv.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/csv_service.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/csvPost.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/entityDescription.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/entityIdAndType.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/ETag.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/fk

read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/getCollection.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/getEntity.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/getQuery.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/getRecordByXid.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/gut.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/gutFindObject.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/gutGet.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/gutPut.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/gut_service.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/isColumn.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/link.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/make.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/news.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/parseColumns.sql;
read /Users/%YourUserNameHere%/Sites/ASA.rest/sql/parseEntity.sql;
read /Users/%YourUserNameHere%/Si
ALTER TABLE `[#DB_PREFIX#]users` DROP `user_type`;
ALTER TABLE `[#DB_PREFIX#]users` DROP `user_status`;
ALTER TABLE `[#DB_PREFIX#]topic` DROP `add_uid`;
ALTER TABLE `[#DB_PREFIX#]users` DROP `edit_count`;
ALTER TABLE `[#DB_PREFIX#]users` DROP `topic_count`;
ALTER TABLE `[#DB_PREFIX#]users` DROP `ext_group_ids`;
INSERT INTO `[#DB_PREFIX#]system_setting` (`varname`, `value`) VALUES ('username_rule', 's:1:"1";');
INSERT INTO `[#DB_PREFIX#]system_setting` (`varname`, `value`) VALUES ('username_length_min', 's:1:"2";');
INSERT INTO `[#DB_PREFIX#]system_setting` (`varname`, `value`) VALUES ('username_length_max', 's:2:"14";');
INSERT INTO `[#DB_PREFIX#]system_setting` (`varname`, `value`) VALUES ('category_enable', 's:1:"Y";');
CREATE TABLE IF NOT EXISTS `[#DB_PREFIX#]nav_menu` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(128) DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `type` varchar(16) DEFAULT NULL,
  `type_id` int(11) DEFAULT '0',
  `link` varchar(2
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table applicant_model (
  applicant_id              bigint auto_increment not null,
  applicant_email           varchar(255),
  applicant_title           varchar(255),
  applicant_first_name      varchar(255),
  applicant_last_name       varchar(255),
  applicant_city            varchar(255),
  applicant_password        varchar(255),
  gcm_id                    longtext,
  logged_into_app           integer,
  cv_file_path              varchar(255),
  cv_file_name              varchar(255),
  profile_image             varchar(255),
  intro_video_path          varchar(255),
  date_of_signup            datetime,
  constraint pk_applicant_model primary key (applicant_id))
create table assigned_task_model (
  assigned_task_id          bigint auto_increment not null,
  emp_employee_id           bigint,
  job_app_job_application_id bigint,
  constraint pk_assigned_task_m

create table employee_model (
  employee_id               bigint auto_increment not null,
  employee_user_name        varchar(255),
  employee_password         varchar(255),
  employee_first_name       varchar(255),
  employee_last_name        varchar(255),
  constraint pk_employee_model primary key (employee_id))
create table interview_question_model (
  question_id               bigint auto_increment not null,
  question                  longtext,
  job_job_id                bigint,
  constraint pk_interview_question_model primary key (question_id))
create table job_application_model (
  job_application_id        bigint auto_increment not null,
  status                    varchar(255),
  interview_done            integer,
  is_complete               integer,
  date                      datetime,
  app_applicant_id          bigint,
  job_job_id                bigint,
  assigned_task_assigned_task_id bigint,
  constraint pk_job_application_model primary key (job_application_id))
creat

  job_id                    bigint auto_increment not null,
  job_sector                varchar(255),
  job_company               varchar(255),
  job_title                 varchar(255),
  job_type                  varchar(255),
  job_location              varchar(255),
  job_salary                double,
  job_description           longtext,
  job_criteria              longtext,
  constraint pk_job_listing_model primary key (job_id))
alter table assigned_task_model add constraint fk_assigned_task_model_emp_1 foreign key (emp_employee_id) references employee_model (employee_id) on delete restrict on update restrict;
create index ix_assigned_task_model_emp_1 on assigned_task_model (emp_employee_id);
alter table assigned_task_model add constraint fk_assigned_task_model_jobApp_2 foreign key (job_app_job_application_id) references job_application_model (job_application_id) on delete restrict on update restrict;
create index ix_assigned_task_model_jobApp_2 on assigned_task_model (job_app_jo
insert sys_menu(Code,Name,Parent,Seq,Desc1,PageUrl,ImageUrl,IsActive) values
('Url_CabGuideHomeMadeSubView_View','自制驾驶室出库分线视图','Menu.Production.Trans',202,'自制驾驶室出库分线视图','~/CabGuide/HomeMadeSubViewIndex','~/Content/Images/Nav/Default.png',1)
go
insert into acc_permission values('Url_CabGuideHomeMadeSubView_View','自制驾驶室出库分线视图','Production')
go
insert sys_menu(Code,Name,Parent,Seq,Desc1,PageUrl,ImageUrl,IsActive) values
('Url_CabGuideOutSoureSubView_View','外购驾驶室出库分线视图','Menu.Production.Trans',203,'外购驾驶室出库分线视图','~/CabGuide/OutSoureSubViewIndex','~/Content/Images/Nav/Default.png',1)
go
insert into acc_permission values('Url_CabGuideOutSoureSubView_View','外购驾驶室出库分线视图','Production')
go
insert into sys_codemstr values('DateOption','日期选项',0)
go
insert into sys_codedet values('DateOption','EQ','等于',1,1)
insert into sys_codedet values('DateOption','GT','大于',0,2)
insert into sys_codedet values('DateOption','GE','大于等于',0,3)
insert into sys_codedet values('DateOption','LT','小于',0,4)
insert into sys_
-- Add option conditions for Priest trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (3642,3643,3644,3645,4466,4467,4468,4521,4522,4523,4531,4532,4533,4543,4544,4545,4558,4559,4572,4573,4574,4665,4666,4679,4680,4691,4692,4801,6649,7265,7349,7438);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,3642,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3642,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3642,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3643,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3643,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3643,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3644,0,0,15,16,0,0,0,'','Show gossip option if

(15,3644,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3644,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3645,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3645,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3645,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4466,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4466,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4466,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4467,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4467,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4467,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4468,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4468,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4468,2,0,15,16,0,0,0,'','Show gossip option if

(15,4521,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4521,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4521,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4522,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4522,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4522,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4523,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4523,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4523,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4531,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4531,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4531,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4532,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4532,1,0,15,16,0,0,0,'','Show gossip option if
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(2, 1, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(2, 3, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(2, 4, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(3, 2, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(4, 1, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(4, 2, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(4, 3, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(4, 4, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(5, 2, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(5, 1, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(5, 3, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(5, 4, 'chorus');SHOW WARNINGS;
INSERT INTO 

VALUES(6, 4, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(6, 1, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(7, 4, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(7, 2, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(7, 3, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(8, 1, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(8, 2, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(8, 3, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(8, 4, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(9, 1, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(9, 3, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(10, 3, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(10, 1, 

INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(10, 2, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(11, 1, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(11, 2, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(11, 3, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(11, 4, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(12, 1, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(12, 2, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(12, 3, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(12, 4, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(13, 2, 'lead');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(13, 1, 'chorus');SHOW WARNINGS;
INSERT INTO Vocals (SongId, Bandmate, Type) 
VALUES(13, 3, 'chorus');SHOW WARNING
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (4239, "Double your Email Subscribers + Double your Sharing by SumoMe", "4.0", "4.5", "3.0.1", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (74374, 4239, "sumome_plugin_settings_link", "/sumome.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (525606, 4239, "WP_Plugin_SumoMe", "deactivate", "/sumome.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (525607, 4239, "WP_Plugin_SumoMe", "append_admin_script_code", "/sumome.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (525608, 4239, "WP_Plugin_SumoMe", "sanitize_site_id", "/sumome.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc

insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (525610, 4239, "WP_Plugin_SumoMe", "settings_field_site_id", "/sumome.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (525611, 4239, "WP_Plugin_SumoMe", "__construct", "/sumome.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (525612, 4239, "WP_Plugin_SumoMe", "append_script_code", "/sumome.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (525613, 4239, "WP_Plugin_SumoMe", "check_generate_site_id", "/sumome.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (525614, 4239, "WP_Plugin_SumoMe", "admin_menu", "/sumome.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, cre
-- Table definitions for the tournament project.
--
-- Put your SQL 'create table' statements in this file; also 'create view'
-- statements if you choose to use it.
--
-- You can write comments in this file by starting them with two dashes, like
-- these lines here.
--
-- Author: Michael Werts, mcwerts@gmail.com
DROP DATABASE IF EXISTS tournament;
CREATE DATABASE tournament;
\c tournament;
CREATE TABLE players (
	id SERIAL primary key,
	name TEXT);
CREATE TABLE matches (
	winner INTEGER references players(id),
    loser INTEGER references players(id));
CREATE VIEW win_view(player, wins) AS 
	SELECT winner, count(winner) AS wins FROM matches GROUP BY winner;
CREATE VIeW winx_view(player, name, wins) AS
	SELECT players.id, players.name, COALESCE(win_view.wins, 0)
	FROM players LEFT OUTER JOIN win_view
	ON players.id = win_view.player;
CREATE VIEW loss_view(player, losses) AS 
	SELECT loser, count(loser) AS losses FROM matches GROUP BY loser;
CREATE VIEW lossx_view(player, name, losses) 
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `instance_encounters`;
CREATE TABLE `instance_encounters` (
  `entry` int(10) unsigned NOT NULL COMMENT 'Unique entry from DungeonEncounter.dbc',
  `creditType` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `creditEntry` int(10) unsigned NOT NULL DEFAULT '0',
  `lastEncounterDungeon` smallint(5) unsigned NOT NULL DEFAULT '0' COMMENT 'If not 0, LfgDungeon.dbc entry for the instance it 
insert into ccm_permission(ID ,moduleno,permission,name,deppageperms,depapiperms,remark)
Values
(wbc_central.GetSequenceByID('011'),'water.charge.base.paymethod','query','查询','#query,#read',null,null),
(wbc_central.GetSequenceByID('011'),'water.charge.base.paymethod','create','新增','#create,#duplicate',null,null),
(wbc_central.GetSequenceByID('011'),'water.charge.base.paymethod','edit','编辑','#edit',null,null),
(wbc_central.GetSequenceByID('011'),'water.charge.base.paymethod','delete','删除','#delete',null,null),
(wbc_central.GetSequenceByID('011'),'water.charge.base.paymethod','enable','启用','#enable',null,null);
call p_bs_tablechangestamp('ccm_permission',0,unix_timestamp(now())*1000);
--
insert into ccm_pagepermission(ID ,moduleno,permission,name,deppageperms,depapiperms,remark)
Values
(wbc_central.GetSequenceByID('012'),'water.charge.base.paymethod','query','查询',null,'#query',null),
(wbc_central.GetSequenceByID('012'),'water.charge.base.paymethod','read','读取',null,'#read',null),
(wbc_ce
  SELECT dropIfExists('VIEW', 'employee', 'api');
  CREATE OR REPLACE VIEW api.employee AS 
  SELECT 
    e.emp_code::varchar		AS code, 
    e.emp_number::varchar 	AS number, 
    e.emp_active 		AS active, 
    e.emp_startdate 		AS start_date, 
    cntct.cntct_number 	AS contact_number, 
    cntct.cntct_honorific 	AS honorific, 
    cntct.cntct_first_name 	AS first, 
    cntct.cntct_middle 	AS middle, 
    cntct.cntct_last_name 	AS last, 
    cntct.cntct_suffix 	AS suffix, 
    cntct.cntct_title 		AS job_title, 
    cntct.cntct_phone 		AS voice, 
    cntct.cntct_phone2 	AS alternate, 
    cntct.cntct_fax 		AS fax, 
    cntct.cntct_email 		AS email, 
    cntct.cntct_webaddr 	AS web, 
    (''::TEXT) 			AS contact_change, 
    addr.addr_number 		AS address_number, 
    addr.addr_line1 		AS address1, 
    addr.addr_line2 		AS address2, 
    addr.addr_line3 		AS address3, 
    addr.addr_city 			AS city, 
    addr.addr_state 		AS state, 
    addr.addr_postalcode 	AS postalcode, 
    addr.add

    (''::TEXT) 				AS address_change, 
    whsinfo.warehous_code 	AS site, 
    m.emp_code 				AS manager_code, 
    
    CASE WHEN (e.emp_wage_type = 'H')		THEN 'Hourly'
         WHEN (e.emp_wage_type = 'S')		THEN 'Salaried'
         WHEN e.emp_wage_type IS NULL THEN NULL
		 ELSE 'Error'
    END AS wage_type, 
    e.emp_wage 	AS wage, 
    curr_symbol.curr_abbr AS wage_currency, 
    CASE WHEN (e.emp_wage_period = 'H') 	THEN 'Hour'
         WHEN (e.emp_wage_period = 'D') 	THEN 'Day'
         WHEN (e.emp_wage_period = 'W') 	THEN 'Week'
         WHEN (e.emp_wage_period = 'BW') 	THEN 'Biweek'
         WHEN (e.emp_wage_period = 'M') 	THEN 'Month'
         WHEN (e.emp_wage_period = 'Y') 	THEN 'Year'
         WHEN (e.emp_wage_period IS NULL) 	THEN NULL
         ELSE 'Error'
    END AS wage_period, 
    dept.dept_number AS department, 
    shift.shift_number AS shift, 
    crmacct_usr_username IS NOT NULL AS is_user,
    salesrep.salesrep_id IS NOT NULL AS is_salesrep,
    vendinfo.vend_id 

    e.emp_notes AS notes,
    image.image_name AS image,
    e.emp_extrate AS rate,
    curr_symbol.curr_abbr AS billing_currency, 
    CASE WHEN (e.emp_extrate_period = 'H') 	THEN 'Hour'
         WHEN (e.emp_extrate_period = 'D') 	THEN 'Day'
         WHEN (e.emp_extrate_period = 'W') 	THEN 'Week'
         WHEN (e.emp_extrate_period = 'BW') THEN 'Biweek'
         WHEN (e.emp_extrate_period = 'M') 	THEN 'Month'
         WHEN (e.emp_extrate_period = 'Y') 	THEN 'Year'
         WHEN (e.emp_extrate_period IS NULL) THEN NULL
         ELSE 'Error'
   	END AS billing_period
  FROM emp e
         JOIN crmacct           ON (e.emp_id = crmacct_emp_id)
   	 LEFT JOIN cntct 	ON (e.emp_cntct_id = cntct.cntct_id)
   	 LEFT JOIN addr 	ON (cntct.cntct_addr_id = addr.addr_id)
   	 LEFT JOIN whsinfo 	ON (e.emp_warehous_id = whsinfo.warehous_id)
   	 LEFT JOIN emp m 	ON (e.emp_mgr_emp_id = m.emp_id)
   	 LEFT JOIN dept 	ON (e.emp_dept_id = dept.dept_id)
   	 LEFT JOIN shift 	ON (e.emp_shift_id = shift.sh
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='vote' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='vote' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_vote`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='vote_log' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='vote_log' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_vote_log`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='vote_option' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='vote_option' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_vote_option`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_vote' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_vote' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_vote`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='s
rename table models to Model;
alter table Model
  change model_id id int not null auto_increment,
  change model_type modelType char(2) not null,
  change model_no number char(8) not null,
  change model_descr description text not null,
  change model_exponent exponent char(50) not null,
  change model_flag flag int not null;
rename table LOC_4_1.models to LOC_4_1.Model;
alter table LOC_4_1.Model
  change model_id id int not null auto_increment,
  change model_type modelType char(2) not null,
  change model_no number char(8) not null,
  change model_descr description text not null,
  change model_exponent exponent char(50) not null,
  change model_flag flag int not null;
rename table LOC_4_0.models to LOC_4_0.Model;
alter table LOC_4_0.Model
  change model_id id int not null auto_increment,
  change model_type modelType char(2) not null,
  change model_no number char(8) not null,
  change model_descr description text not null,
  change model_exponent exponent char(50) not null,
  chang
/*
** TERRITORIO NO EQUIPAMENTO DO CLIENTE
*/
ALTER TABLE CLI_EQUIP ADD TERRITORIO STR01;
ALTER TABLE MOVIMENTOS ADD TERRITORIO STR01;
SET TERM ^ ;
ALTER TRIGGER MOVIMENTOS_VENDEDOR_INS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  /* NOME DO VENDEDOR */
  SELECT
    NOME
  FROM
    CLIENTES
  WHERE
    CODIGO = NEW.CODVENDEDOR
  INTO
    NEW.NOME_VENDEDOR;
  /* TERRITORIO DA OS */
  SELECT FIRST 1
    CE.TERRITORIO
  FROM
    CLI_EQUIP CE
  WHERE
    CE.CODCLIENTE = NEW.CODCLIENTE AND
    CE.CODMARCA = NEW.CODMARCA AND
    CE.CODMODELO = NEW.CODMODELO AND
    CE.SERIE = NEW.SERIE
  INTO
    NEW.TERRITORIO;
END
SET TERM ; ^
SET TERM ^ ;
ALTER TRIGGER MOVIMENTOS_VENDEDOR_UPD
ACTIVE BEFORE UPDATE POSITION 0
AS
BEGIN
  /* NOME DO VENDEDOR */
  SELECT
    NOME
  FROM
    CLIENTES
  WHERE
    CODIGO = NEW.CODVENDEDOR
  INTO
    NEW.NOME_VENDEDOR;
  /* LINHA DO CLIENTE */
  SELECT
    CL.CODLINHA
  FROM
    CLIENTES CL
  WHERE
    CL.CODIGO = NEW.CODCLIENTE
  INTO
    NEW.CODLINHA;
  /* TERRITO
SET DEFINE OFF;
CREATE TABLE L_MARKETS
  MARKETCODE    VARCHAR2(18 BYTE),
  DESCRIPTION   VARCHAR2(150 BYTE),
  COMPANYID     VARCHAR2(10 BYTE),
  GLSALES       VARCHAR2(15 BYTE),
  GLSALESNAME   VARCHAR2(85 BYTE),
  GLCOMM        VARCHAR2(15 BYTE),
  GLCOMMNAME    VARCHAR2(85 BYTE),
  GLCOSTS       VARCHAR2(15 BYTE),
  GLCOSTSNAME   VARCHAR2(85 BYTE),
  EXPOPTRULE    VARCHAR2(300 BYTE),
  FINALPAYRULE  VARCHAR2(300 BYTE),
  DEPOSIT       VARCHAR2(100 BYTE),
  COMMJOURNAL   VARCHAR2(15 BYTE),
  WHOSTAMP      VARCHAR2(50 BYTE),
  DATESTAMP     DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPAR
select COUNT(D.Vphd_View_SSPI)
from 
( 
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date,  Vphd_View_Event_Origin_Date, Vphd_View_System_EventId, Vphd_View_Event_Description, Vphd_View_Last_Entry_Date
	from dbo.VSPC_ProcessHistoryArchive_View
WHERE Vphd_View_System_EventId = '19' AND Vphd_View__Program_Number = '102'
--WHERE Vphd_View_Event_Description = 'post disposition processing' AND Vphd_View__Program_Number = '102'
union
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date, Vphd_View_Event_Origin_Date, Vphd_View_System_EventId, Vphd_View_Event_Description, Vphd_View_Last_Entry_Date
    from dbo.VSPC_ProcessHistoryDetail_View
--WHERE Vphd_View_Event_Description = 'post disposition processing' AND Vphd_View__Program_Number = '102'
WHERE Vphd_View_System_EventId = '19' AND Vphd_View__Program_Number = '102'
) AS D
--WHERE D.Vphd_View_Event_Origin_Date BETWEEN '2012-06-01' AND '2012-10-01'
INNER JOIN dbo.SSPI
    ON SSPI_IDNT = D.Vphd_View_SSPI
--    AND
--    SSPICurrentStatusFK NOT IN (99

where 
D.Vphd_View_Last_Entry_Date between '2013-03-01' and '2013-03-31'
--D.Vphd_View_Event_Origin_Date between '2013-03-01' and '2013-03-31'
----------
-----------
select 
    D.Vphd_View_SSPI AS CASE_NUM, 
    D.Vphd_View_System_EventId AS QUEUE_NUM, 
    D.Vphd_View_Event_Description AS QUEUE,
    D.Vphd_View_Event_Origin_Date AS ORIG_DATE,
    D.Vphd_View_Last_Entry_Date AS ENTRY_DATE,
    D.Vphd_View_Last_Exit_Date AS EXIT_DATE, 
    SSPICurrentStatusFK AS STATUS
from 
( 
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date,  Vphd_View_Event_Origin_Date, Vphd_View_System_EventId, Vphd_View_Event_Description, Vphd_View_Last_Entry_Date
	from dbo.VSPC_ProcessHistoryArchive_View
WHERE Vphd_View_System_EventId = '19' AND Vphd_View__Program_Number = '102'
--WHERE Vphd_View_Event_Description = 'post disposition processing' AND Vphd_View__Program_Number = '102'
union
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date, Vphd_View_Event_Origin_Date, Vphd_View_System_EventId, Vphd_View_Event_Descri
USE SQL#Presentation
GO
SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
DECLARE @row_count int;
-- Output a query to a file
EXEC SQL#.DB_BulkExport
	@Query = 'SELECT * FROM AdventureWorks.Production.Product',
	@TextQualifier = '"',  
	@TextQualifyAllColumns = 0, -- 1 = qualify all columns, 0 = qualify only character, date, and uniqueidentifer data types
	@ColumnHeaderHandling = 'Results', -- Always, Results, Never  (NULL or empty string = Always)
	@BitHandling = 'Number', -- Word (default)(True or False), Letter (T or F), Number (1,0)
	@FirstRow = 0, -- The first result row to export (0 = ignore)
	@LastRow = 0, -- The last result row to export (0 = ignore)
	@FieldTerminator = '|',
	@RowTerminator = NULL,  -- can be any characters, but default (NULL) = CR/LF \r\n
	@OutputFilePath = 'C:\users\sumlin\desktop\products.txt',
	@FileEncoding = 'ASCII',
	@AppendFile = 0,  -- 0 = if file exists, file will be replaced.  1 = if file exists, file will be appended.
	@RowsExported = @row_count OUT; -- 
--------------------------------------------------------
-- Archivo creado  - viernes-abril-04-2014   
--------------------------------------------------------
DROP TABLE "REFERENCIA"."TPRY_DIVISION" cascade constraints;
--------------------------------------------------------
--  DDL for Table TPRY_DIVISION
--------------------------------------------------------
  CREATE TABLE "REFERENCIA"."TPRY_DIVISION" 
   (	"DIVS_ID" NUMBER, 
	"DIVS_NOMBRE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA" ;
REM INSERTING into REFERENCIA.TPRY_DIVISION
SET DEFINE OFF;
Insert into REFERENCIA.TPRY_DIVISION (DIVS_ID,DIVS_NOMBRE) values (1,'Centro México');
Insert into REFERENCIA.TPRY_DIVISION (DIVS_ID,DIVS_NOMBRE) values (2,'Corp

Insert into REFERENCIA.TPRY_DIVISION (DIVS_ID,DIVS_NOMBRE) values (3,'Chihuahua');
Insert into REFERENCIA.TPRY_DIVISION (DIVS_ID,DIVS_NOMBRE) values (4,'Guadalajara');
Insert into REFERENCIA.TPRY_DIVISION (DIVS_ID,DIVS_NOMBRE) values (5,'Hermosillo');
Insert into REFERENCIA.TPRY_DIVISION (DIVS_ID,DIVS_NOMBRE) values (6,'Monterrey');
Insert into REFERENCIA.TPRY_DIVISION (DIVS_ID,DIVS_NOMBRE) values (7,'Veracruz');
--------------------------------------------------------
--  DDL for Index TGENDIVISION_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "REFERENCIA"."TGENDIVISION_PK" ON "REFERENCIA"."TPRY_DIVISION" ("DIVS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  Constraint
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SDR61I', 3, 'BMW 5-Series', 5);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SCO0394V', 33, 'Cadillac ATS/ELR', 2);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SGR03J', 40, 'Scion xB', 3);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SYB65U', 9, 'Dodge Durango', 2);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('STR5024S', 33, 'Dodge Grand Caravan', 3);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SWK46R', 19, 'Kia Soul', 5);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SFQ4698Y', 4, 'Ford Edge', 2);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SGE65E', 23, 'Dodge Grand Caravan', 6);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SQP413E', 37, 'Buick Regal', 3);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SP

INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SFA02D', 37, 'Toyota Yaris', 2);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SCH6890R', 34, 'Kia Cadenza', 2);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SMH2134M', 43, 'Kia Soul', 5);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SAM370I', 13, 'Ford Explorer', 4);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SUQ036S', 19, 'Honda Accord', 2);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SHC14S', 12, 'Cadillac CTS', 5);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SFN9997A', 26, 'Mercedes-Benz E-Class', 5);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SNE32P', 45, 'BMW 2/3/4-Series', 2);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SDW755A', 33, 'Volvo XC70', 6);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUE

INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SYM024I', 49, 'Toyota FJ Cruiser', 2);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SSB08G', 54, 'Subaru Impreza', 6);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SRF134U', 30, 'Subaru Outback', 3);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SQI188A', 15, 'Acura RLX', 3);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SWL32V', 37, 'Toyota Land Cruiser', 6);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SYX9152K', 40, 'Mini Cooper Hatch', 4);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SWG938R', 37, 'Honda CR-V', 5);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SZA3936C', 43, 'Honda Civic', 6);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) VALUES ('SJY97Q', 5, 'Kia Sorento', 4);
INSERT INTO Vehicle (PlateNo, ProfileID, Model, NumOfSeats) 
﻿-- WYZWALACZE
/* CREATE TRIGGER nowy_id_powiat
  BEFORE INSERT
  ON powiaty
  FOR EACH ROW
  EXECUTE PROCEDURE fun_new_id();
CREATE TRIGGER nowy_id_miej
  BEFORE INSERT
  ON miejscowosci
  FOR EACH ROW
  EXECUTE PROCEDURE fun_new_id();
CREATE  TRIGGER nowy_id_wojewodz
  BEFORE INSERT
  ON wojewodztwa
  FOR EACH ROW
  EXECUTE PROCEDURE fun_new_id();
CREATE  TRIGGER nowy_id_gmina
  BEFORE INSERT
  ON gminy
  FOR EACH ROW
  EXECUTE PROCEDURE fun_new_id(); */
CREATE TRIGGER nowy_id_epoka
  BEFORE INSERT
  ON epoki
  FOR EACH ROW
  EXECUTE PROCEDURE fun_new_id();
CREATE TRIGGER nowy_id_kultura
  BEFORE INSERT
  ON kultury
  FOR EACH ROW
  EXECUTE PROCEDURE fun_new_id();
CREATE  TRIGGER nowy_id_funkcja
  BEFORE INSERT
  ON funkcje
  FOR EACH ROW
  EXECUTE PROCEDURE fun_new_id();
CREATE  TRIGGER nowy_id_akt
  BEFORE INSERT
  ON aktualnosci
  FOR EACH ROW
  EXECUTE PROCEDURE fun_new_id();
create trigger nowy_id_eksp
  BEFORE INSERT
  ON ekspozycje
  FOR EACH ROW
  EXECUTE PROCEDURE fun_new_id
  CREATE TABLE "SYSTEM"."VILLA_TO_VILLAFEATURES" 
   (	"VILLA_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"FEATURE_ID" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "VILLA_TO_VILLAFEATURES_PK" PRIMARY KEY ("VILLA_ID", "FEATURE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE, 
	 CONSTRAINT "FK_VILLA_ID" FOREIGN KEY ("VILLA_ID")
	  REFERENCES "SYSTEM"."VILLA" ("VILLA_ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "FK_FEATURE_ID" FOREIGN KEY ("FEATURE_ID")
	  REFERENCES "SYSTEM"."VILLA_FEATURES" ("FEATURE_ID") ON DELETE CASCADE ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFA
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE format A19
column CLOSE_DATE format A19
column TERM_COMMENT format A120
column ARTIST_NAME format A160
column ARTIST_KANA format A60
column DATA_FLAG format 99
set linesize 878
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE
DROP TABLE TB_OID_SEQUENCE IF EXISTS;
CREATE TABLE TB_OID_SEQUENCE (OID_VALUE IDENTITY); 
INSERT INTO T_CUSTOMER VALUES('1','2010-03-04 22:17:16.079000000','CustomerA','CustomerA','CustomerA@s-itsolutions.at','2010-03-04 22:17:15.916000000','CustomerA','CustomerA','CustomerA','CustomerA','CustomerA','CustomerA','CustomerA','CustomerA','CustomerA','CustomerA',true, 'A', 0);
INSERT INTO T_CUSTOMER VALUES('2','2010-03-04 22:17:16.119000000','CustomerB','CustomerB','CustomerB@s-itsolutions.at','2010-03-04 22:17:16.115000000','CustomerB','CustomerB','CustomerB','CustomerB','CustomerB','CustomerB','CustomerB','CustomerB','CustomerB','CustomerB',true, 'C', 0);
INSERT INTO T_CUSTOMER VALUES('3','2010-03-04 22:17:16.123000000','CustomerC','CustomerC','CustomerC@s-itsolutions.at','2010-03-04 22:17:16.122000000','CustomerC','CustomerC','CustomerC','CustomerC','CustomerC','CustomerC','CustomerC','CustomerC','CustomerC','CustomerC',true, 'A', 0);
INSERT INTO T_CUSTOMER VALUES('4','2010-03-04 22:17:

INSERT INTO T_CUSTOMER VALUES('5','2010-03-04 22:17:16.127000000','CustomerE','CustomerE','CustomerE@s-itsolutions.at','2010-03-04 22:17:16.127000000','CustomerE','CustomerE','CustomerE','CustomerE','CustomerE','CustomerE','CustomerE','CustomerE','CustomerE','CustomerE',false, 'C', 1000);
INSERT INTO T_CUSTOMER VALUES('6','2010-03-04 22:17:16.130000000','CustomerF','CustomerF','CustomerF@s-itsolutions.at','2010-03-04 22:17:16.129000000','CustomerF','CustomerF','CustomerF','CustomerF','CustomerF','CustomerF','CustomerF','CustomerF','CustomerF','CustomerF',true, 'A', 1000);
INSERT INTO T_CUSTOMER VALUES('7','2010-03-04 22:17:16.135000000','CustomerG','CustomerG','CustomerG@s-itsolutions.at','2010-03-04 22:17:16.133000000','CustomerG','CustomerG','CustomerG','CustomerG','CustomerG','CustomerG','CustomerG','CustomerG','CustomerG','CustomerG',false, 'C', 1000);
INSERT INTO T_CUSTOMER VALUES('8','2010-03-04 22:17:16.138000000','CustomerH','CustomerH','CustomerH@s-itsolutions.at','2010-03-04

INSERT INTO T_CUSTOMER VALUES('9','2010-03-04 22:17:16.147000000','CustomerI','CustomerI','CustomerI@s-itsolutions.at','2010-03-04 22:17:16.144000000','CustomerI','CustomerI','CustomerI','CustomerI','CustomerI','CustomerI','CustomerI','CustomerI','CustomerI','CustomerI',false, 'A', 1000);
INSERT INTO T_CUSTOMER VALUES('10','2010-03-04 22:17:16.150000000','CustomerJ','CustomerJ','CustomerJ@s-itsolutions.at','2010-03-04 22:17:16.150000000','CustomerJ','CustomerJ','CustomerJ','CustomerJ','CustomerJ','CustomerJ','CustomerJ','CustomerJ','CustomerJ','CustomerJ',true, 'A', 1000);
INSERT INTO T_CUSTOMER VALUES('11','2010-03-04 22:17:16.152000000','CustomerK','CustomerK','CustomerK@s-itsolutions.at','2010-03-04 22:17:16.151000000','CustomerK','CustomerK','CustomerK','CustomerK','CustomerK','CustomerK','CustomerK','CustomerK','CustomerK','CustomerK',false, 'A', 1000);
INSERT INTO T_CUSTOMER VALUES('12','2010-03-04 22:17:16.154000000','CustomerL','CustomerL','CustomerL@s-itsolutions.at','2010-03
﻿-- =============================================      
-- Author:  <Vikas J>
-- Create date: <27/01/2013>      
-- Description: <Returns the data of all the version available for the provided modelId. It will have discontinued cars data along with new cars if user chooses for all cars      
-- =============================================      
CREATE PROCEDURE [dbo].[GetCarVersionForComparison] @ModelId1 INT = 0
	,--Model Id of first car selected by user
	@ModelId2 INT = 0
	,--Model Id of second car selected by user
	@ModelId3 INT = 0
	,--Model Id of third car selected by user
	@ModelId4 INT = 0
	,--Model Id of fourth car selected by user
	@OnlyNew INT --Whether only new cars required or discontinued car needed as well
AS
BEGIN
	--Returns the data containing all the version available for models provided as parameter. If any modelId is not provided the default value 0 will be
	--considered and no rows for that will be present in the returning dataset
	IF @OnlyNew = 1
		SELECT Vs.ID AS
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOT
-- Add option conditions for Hunter trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (4008,4009,4010,4011,4012,4017,4023,4101,4472,4473,4474,4506,4524,4549,4550,4551,4647,4648,4657,4675,4693,4695,6652,7262,7368);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,4008,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4008,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4008,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4009,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4009,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4009,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4010,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4010,1,0,15,4,0

(15,4010,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4011,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4011,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4011,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4012,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4012,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4012,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4017,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4017,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4017,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4023,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4023,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4023,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4101,0,0,15,4,0,0,0,'','Show gossip option if player is a H

(15,4101,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4101,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4472,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4472,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4472,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4473,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4473,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4473,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4474,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4474,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4474,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4506,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4506,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4506,2,0,15,4,0,0,0,'','Show gossip option if player is a H
-- Add option conditions for Hunter trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (4008,4009,4010,4011,4012,4017,4023,4101,4472,4473,4474,4506,4524,4549,4550,4551,4647,4648,4657,4675,4693,4695,6652,7262,7368);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,4008,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4008,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4008,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4009,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4009,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4009,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4010,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4010,1,0,15,4,0

(15,4010,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4011,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4011,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4011,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4012,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4012,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4012,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4017,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4017,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4017,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4023,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4023,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4023,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4101,0,0,15,4,0,0,0,'','Show gossip option if player is a H

(15,4101,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4101,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4472,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4472,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4472,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4473,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4473,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4473,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4474,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4474,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4474,2,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4506,0,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4506,1,0,15,4,0,0,0,'','Show gossip option if player is a Hunter'),
(15,4506,2,0,15,4,0,0,0,'','Show gossip option if player is a H
CREATE PROCEDURE markthreadread @userid int, @threadid int, @postindex int, @force int = 0
AS
BEGIN TRANSACTION
	DECLARE @ErrorCode int, @CountPosts int, @LastPostsRead int,  @Private int
	-- Get the current unread post count
	SELECT @CountPosts = CountPosts, @LastPostsRead =  LastPostCountRead, @Private = Private FROM ThreadPostings WITH(UPDLOCK) WHERE UserID = @UserID AND ThreadID = @ThreadID 	
	IF (@force = 0)
	BEGIN
		UPDATE dbo.ThreadPostings SET LastPostCountRead = @postindex
			WHERE UserID = @userid AND ThreadID = @threadid AND (LastPostCountRead IS NULL OR LastPostCountRead < @postindex)
	END
	ELSE
	BEGIN
		UPDATE dbo.ThreadPostings SET LastPostCountRead = @postindex
			WHERE UserID = @userid AND ThreadID = @threadid
	END
	SELECT @ErrorCode = @@ERROR
	IF (@ErrorCode <> 0)
	BEGIN
		ROLLBACK TRANSACTION
		EXEC Error @ErrorCode
		RETURN @ErrorCode
	END
	-- Update the users UnreadPrivateMessageCount if the thread belongs to their private message centre
	IF ( @Private = 1 )
	BEGIN

drop table fg_apt_way;
drop table fg_atc;
drop table fg_apt;
-- airport
create table fg_apt
    apt_id      integer primary key,
    apt_code    varchar(4) not null,
    apt_name    varchar(128),
    heliport    boolean DEFAULT false,
    seaport     boolean DEFAULT false,
    elevation   integer
);
-- runway/taxiway
create table fg_apt_way
    apt_id      integer references fg_apt(apt_id),
    type        char(1) not null check (type = 't' or type = 'r'),
    num         varchar(3),
    lat         float,
    lng         float,
    abslng      float,
    heading     float,
    length      integer,
    width       integer
);
-- ATC types
drop table fg_atc_type;
create table fg_atc_type
    atc_type    integer,
    atc_name    varchar(64),
    
    primary key (atc_type)
);
insert into fg_atc_type (atc_type, atc_name) values (50, 'AWOS/ASOS/ATIS');
insert into fg_atc_type (atc_type, atc_name) values (51, 'Unicom/CTAF/Radio');
insert into fg_atc_type (atc_type, atc_name) values (52, 'Cle

insert into fg_atc_type (atc_type, atc_name) values (53, 'Ground');
insert into fg_atc_type (atc_type, atc_name) values (54, 'Tower');
insert into fg_atc_type (atc_type, atc_name) values (55, 'Approach');
insert into fg_atc_type (atc_type, atc_name) values (56, 'Departure');
-- ATC
create table fg_atc
    apt_id      integer references fg_apt(apt_id),
    atc_type    integer,
    freq        integer,
    name        varchar(32)
);
drop table fg_nav;
drop table fg_nav_type;
drop table fg_nav_channel;
-- Navaids types
create table fg_nav_type
    nav_type    integer,
    nav_name    varchar(32),
    primary key (nav_type)
);
insert into fg_nav_type (nav_type, nav_name) values (2, 'NDB');
insert into fg_nav_type (nav_type, nav_name) values (3, 'VOR/VORTAC/VOR-DME');
insert into fg_nav_type (nav_type, nav_name) values (4, 'LLZ/ILS');
insert into fg_nav_type (nav_type, nav_name) values (5, 'LLZ/LDA/SDF');
insert into fg_nav_type (nav_type, nav_name) values (6, 'GS');
insert into fg_nav_typ

insert into fg_nav_type (nav_type, nav_name) values (8, 'MM');
insert into fg_nav_type (nav_type, nav_name) values (9, 'IM');
insert into fg_nav_type (nav_type, nav_name) values (12, 'DME');
insert into fg_nav_type (nav_type, nav_name) values (13, 'DME');
-- Navaids
create table fg_nav
    nav_type    integer references fg_nav_type(nav_type),
    type_name   varchar(12),
    lat         float,
    lng         float,
    abslng      float,
    elevation   integer,
    freq        integer,
    channelfreq integer,
    range       integer,
    multi       float,
    ident       varchar(8),
    name        varchar(128)
);
-- Nav Channels (TACAN)
create table fg_nav_channel
    channel     varchar(4),
    freq        integer,
    primary key (channel)
);
-- Fixes
drop table fg_fix;
create table fg_fix
    lat         float,
    lng         float,
    abslng      float,
    name        varchar(5),
    primary key (lat, lng, name)
);
-- Airway
drop table fg_awy;
create table fg_awy
    awy_i
create or replace function test_table_sample_async_scan(
    np_streams_qty integer,
    tp_view_name text DEFAULT 'test_table_view'::text,
    tp_host text DEFAULT 'localhost'::text,
    tp_database text DEFAULT current_database()::text,
    tp_user text DEFAULT current_user::text,
    tp_password text DEFAULT '123456'::text)
  returns setof record as
$BODY$
import psycopg2
import select
import math
def wait(conp_conn):
    while 1:
        sv_state = conp_conn.poll()
        if sv_state == psycopg2.extensions.POLL_OK:
            break
        elif sv_state == psycopg2.extensions.POLL_WRITE:
            select.select([], [conp_conn.fileno()], [])
        elif sv_state == psycopg2.extensions.POLL_READ:
            select.select([conp_conn.fileno()], [], [])
        else:
            raise psycopg2.OperationalError("poll() returned %s" % sv_state)
def execute_async(conp_conn, tp_query):
    wait(conp_conn)
    cv_cur = conp_conn.cursor()
    cv_cur.execute(tp_query)
    return cv_cur
d

    for nv_number in range(0, len(conpa_conns)):
        # wait and close connection
        wait(conpa_conns[nv_number])
        cpa_curs[nv_number].close()
        conpa_conns[nv_number].close()
def create_views_async(tp_conn_string, np_streams, tp_name):
    nv_rows = int(plpy.execute("select max(id) as qty from test_table tt")[0]["qty"])
    if nv_rows < np_streams:
        np_streams = nv_rows
    nv_batch_size = math.floor(nv_rows / np_streams)
    conva_conns = []
    cva_curs = []
    tv_union = tv_drop = ""
    # create connections async
    for nv_number in range(0, np_streams):
        conva_conns.append(psycopg2.connect(tp_conn_string, async=1))
    for nv_number in range(0, np_streams):
        tv_matview_query_tail = ""
        if nv_number != (np_streams - 1):
            nv_first_limit = 1 + nv_number * nv_batch_size
            nv_second_limit = 1 + (nv_number + 1) * nv_batch_size - 1
            tv_matview_query_tail += ("between %s and %s" % (nv_first_limit, nv_seco

        else:
            nv_first_limit = 1 + nv_number * nv_batch_size
            tv_matview_query_tail += (">= %s" % nv_first_limit)
        tv_current_view_name = tp_name + "_" + str(nv_number + 1) + "_" + str(np_streams)
        tv_view_query = ("""create materialized view %s as
                            select tt.color,
                                   sum(tt.qty) as qty
                              from test_table tt
                             where tt.id %s
                             group by tt.color;
                         """ % (tv_current_view_name,
                                tv_matview_query_tail))
        cva_curs.append(execute_async(conva_conns[nv_number], tv_view_query))
        tv_union += ("select * from %s union all " % tv_current_view_name)
        tv_drop += ("drop materialized view %s; " % tv_current_view_name)
    wait_operations(conva_conns, cva_curs)
    return tv_union, tv_drop
# build connection string
tv_conn_string = ("host=%s dbname=%s u
##toliets nsn
INSERT INTO `notes` (`name`, `description`,`address`,`latitude`,`longitude`,`tags`) VALUES
('Toilet at Buxton Square carpark','','Buxton Square carpark, Nelson, New Zealand',0,0,'Public Toilet'),
('Montgomery Square Superloo','Montgomery Square Superloo in the Montgomery Square carpark','Montgomery Square carpark, Nelson, New Zealand',0,0,'Public Toilet'),
('Toilet at Nelson i-SITE at Millers Acre','Visitors Center Nelson i-SITE at Millers Acre','Millers Acre, Nelson, New Zealand',0,0,'Public Toilet'),
('Toilet at Anzac Memorial Park','Anzac Memorial Park - accessible toilets','Anzac Memorial Park, Nelson, New Zealand',0,0,'Public Toilet'),
('Toilet at Botanics Sportsfield','Botanics Sportsfield','Botanics Sportsfield, Nelson, New Zealand',0,0,'Public Toilet'),
('Toilet at Broadgreen Gardens','','Broadgreen Gardens, Stoke, New Zealand',0,0,'Public Toilet'),
('Toilet at Greenmeadows','','Greenmeadows, Stoke, New Zealand',0,0,'Public Toilet'),
('Toilet at Isel Park','','Ise

('Toilet at Maitai River Esplanade','','Maitai River Esplanade, Nelson, New Zealand',0,0,'Public Toilet'),
('Toilet at Miyazu Japanese Gardens','','Miyazu Japanese Gardens, Nelson, New Zealand',0,0,'Public Toilet'),
('Toilet at Monaco Reserve','','Monaco Reserve, Stoke, New Zealand',0,0,'Public Toilet'),
('Toilet at Neale Park','','Neale Park, Stoke, New Zealand',0,0,'Public Toilet'),
('Toilet at Nelson marina','','Nelson marina, Nelson, New Zealand',0,0,'Public Toilet'),
('Toilet at Ngawhatu Sportsfield','','Ngawhatu Sportsfield, Stoke, New Zealand',0,0,'Public Toilet'),
('Toilet at Pioneers Park','','Pioneers Park, Richmond, New Zealand',0,0,'Public Toilet'),
('Toilet at Queens Gardens','','Queens Gardens, Richmond, New Zealand',0,0,'Public Toilet'),
('Toilet at Saxton Field','Saxton Field - hockey, netball and soccer pavillions','Saxton Field, Richmond, New Zealand',0,0,'Public Toilet'),
('Toilet at Stoke Public Library','','Stoke Public Library, Stoke, New Zealand',0,0,'Public Toi

('Toilet at Tahunanui Library','','Tahunanui Library, Tahunanui, New Zealand',0,0,'Public Toilet'),
('Toilet at Tahunanui Beach foreshore','','Tahunanui Beach, Stoke, New Zealand',0,0,'Public Toilet'),
('Toilet at Tahunanui Beach recreation reserve','','Tahunanui Beach recreation reserve, Tahunanui, New Zealand',0,0,'Public Toilet'),
('Toilet at Trafalgar Park','','Trafalgar Park, Nelson, New Zealand',0,0,'Public Toilet'),
('Toilet at Victory Square','','Victory Square, Nelson, New Zealand',0,0,'Public Toilet'),
('Toilet at Wakefield Quay Gardens','','Wakefield Quay Gardens, Nelson, New Zealand',0,0,'Public Toilet');
##parks & playgrounds nsn
INSERT INTO `notes` (`name`, `description`,`address`,`latitude`,`longitude`,`tags`) VALUES
('Corder Park in Atawhai','','Atawhai Cresent, Atawhai, Nelson, New Zealand',0,0,'Park'),
('Reserve at Marybank','','Marybank Road, Atawhai, Nelson, New Zealand',0,0,'Reserve'),
('Reserve at Montrose','','Montrose Drive, Atawhai, Nelson, New Zealand',0,0,'R
-- Sale
SELECT dropIfExists('VIEW', 'api_sale', 'retail');
CREATE VIEW xtpos.api_sale
AS
  SELECT 
    salehead_number AS sale_number,
    CASE WHEN (salehead_type='S') THEN 'Sale'
         WHEN (salehead_type='Q') THEN 'Quote'
         WHEN (salehead_type='R') THEN 'Return'
         ELSE 'Error' 
    END AS type,
    CASE 
      WHEN (salehead_closed OR salehead_type IN ('S','R')) THEN
        salehead_closed
      ELSE
        xtpos.checkStatus(salehead_id)
    END AS closed,
    cust_number AS customer_number,
    c.cntct_number AS contact_number,
    c.cntct_honorific AS honorific,
    c.cntct_first_name AS first,
    c.cntct_middle AS middle,
    c.cntct_last_name AS last,
    c.cntct_suffix AS suffix,
    c.cntct_title AS job_title,
    c.cntct_phone AS voice,
    c.cntct_phone2 AS alternate,
    c.cntct_fax AS fax,
    c.cntct_email AS email,
    c.cntct_webaddr AS web,
    ''::text AS contact_change,
    a.addr_number AS address_number,
    a.addr_line1 AS address1,
    a.addr_

    a.addr_line3 AS address3,
    a.addr_city AS city,
    a.addr_state AS state,
    a.addr_postalcode AS postalcode,
    a.addr_country AS country,
    ''::text AS address_change,
    salehead_time AS date,
    salesrep_number AS sales_rep,
    salehead_notes AS notes,
    warehous_code AS site,
    terminal_number AS terminal,
    coalesce((sum(round(abs(saleitem_qty) * saleitem_unitprice,2))),0) AS subtotal,
    abs(coalesce((sum(round(saleitem_tax_ratea + saleitem_tax_rateb + 
			saleitem_tax_ratec, 2))),0)) AS tax,
    coalesce((sum(round((abs(saleitem_qty) * saleitem_unitprice) + abs(saleitem_tax_ratea + 
			saleitem_tax_rateb + saleitem_tax_ratec), 2))),0) AS total
  FROM xtpos.salehead
    JOIN site() ON (salehead_warehous_id=warehous_id)
    JOIN xtpos.terminal ON (salehead_terminal_id=terminal_id)
    LEFT OUTER JOIN custinfo ON (salehead_cust_id=cust_id)
    LEFT OUTER JOIN cntct c ON (cust_cntct_id=c.cntct_id)
    LEFT OUTER JOIN addr a ON (cntct_addr_id=a.addr_id)
    LE

    LEFT OUTER JOIN xtpos.saleitem ON (salehead_id=saleitem_salehead_id)
  GROUP BY salehead_id, salehead_number,salehead_type,salehead_closed,cust_number,
    c.cntct_number,c.cntct_honorific,c.cntct_first_name,c.cntct_middle,
    c.cntct_last_name,c.cntct_suffix,c.cntct_title,c.cntct_phone,c.cntct_phone2,
    c.cntct_fax,c.cntct_email,c.cntct_webaddr,a.addr_number,a.addr_line1,a.addr_line2,
    a.addr_line3,a.addr_city,a.addr_state,a.addr_postalcode,a.addr_country,salehead_time,
    warehous_code,salesrep_number,terminal_number,salehead_notes
  ORDER BY salehead_number;
GRANT ALL ON TABLE xtpos.api_sale TO openmfg;
COMMENT ON VIEW xtpos.api_sale IS 'Sale';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO xtpos.api_sale DO INSTEAD
  INSERT INTO xtpos.salehead (
    salehead_number,
    salehead_warehous_id,
    salehead_type,
    salehead_cust_id,
    salehead_time,
    salehead_terminal_id,
    salehead_notes,
    salehead_salesrep_id )
  VALUES (
    NEW.sale_number,
  
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_goods' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_goods' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_goods`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_collect' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_collect' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_collect`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_cart' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_cart' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_cart`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE 

DELETE FROM `wp_model` WHERE `name`='shop_address' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_address`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_slideshow' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_slideshow' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_slideshow`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_order' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_order' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_order`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_order_log' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_order_log' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_order_log`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_goods_score' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WH
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table company_model (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_company_model primary key (id))
create table computer_model (
  id                        bigint not null,
  name                      varchar(255),
  introduced                timestamp,
  discontinued              timestamp,
  company_id                bigint,
  constraint pk_computer_model primary key (id))
create table flight (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_flight primary key (id))
create table role_model (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_role_model primary key (id))
create table user_model (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_us
CREATE TABLE "shows" ("id" serial8 primary key, "created_at" date, "name" varchar(255), "price" decimal);
INSERT INTO "shows" VALUES (1, '2015-08-23 20:09:41.969902', 'Le Haggis', 12.99);
INSERT INTO "shows" VALUES (2, '2015-08-23 20:09:41.972179', 'Shitfaced Shakespeare', 16.50);
INSERT INTO "shows" VALUES (3, '2015-08-23 20:09:41.972999', 'Camille O''Sullivan', 17.99);
INSERT INTO "shows" VALUES (4, '2015-08-23 20:09:41.971545', 'Game of Thrones - The Musical', 16.50);
INSERT INTO "shows" VALUES (5, '2015-08-23 20:09:41.975610', 'Paul Dabek Mischief ', 12.99);
INSERT INTO "shows" VALUES (6, '2015-08-23 20:09:41.979784', 'Joe Stilgoe: Songs on Film â€“ The Sequel', 16.50);
INSERT INTO "shows" VALUES (7, '2015-08-23 20:09:41.981653', 'Aaabeduation â€“ A Magic Show', 17.99);
INSERT INTO "shows" VALUES (8, '2015-08-23 20:09:41.983556', 'Edinburgh Royal Tattoo', 32.99);
INSERT INTO "shows" VALUES (9, '2015-08-23 20:09:41.987003', 'Best of Burlesque', 7.99);
INSERT INTO "shows" VALUES (10,

INSERT INTO "shows" VALUES (11, '2015-08-23 20:09:41.991271', 'Urinetown', 8.50);
INSERT INTO "shows" VALUES (12, '2015-08-23 20:09:41.992358', 'Two girls, one cup of comedy', 6.00);
INSERT INTO "shows" VALUES (13, '2015-08-23 20:09:41.996721', 'Balletronics', 32.00);
CREATE TABLE "times" ("id" serial8 primary key, "time" varchar(255), "show_id" int2);
INSERT INTO "times" (time, show_id) VALUES ('13:30', 1);
INSERT INTO "times" (time, show_id) VALUES ('19:30', 2);
INSERT INTO "times" (time, show_id) VALUES ('17:15', 3);
INSERT INTO "times" (time, show_id) VALUES ('19:30', 4);
INSERT INTO "times" (time, show_id) VALUES ('12:45', 5);
INSERT INTO "times" (time, show_id) VALUES ('17:15', 6);
INSERT INTO "times" (time, show_id) VALUES ('12:45', 7);
INSERT INTO "times" (time, show_id) VALUES ('22:00', 8);
INSERT INTO "times" (time, show_id) VALUES ('19:30', 9);
INSERT INTO "times" (time, show_id) VALUES ('14:15', 10);
INSERT INTO "times" (time, show_id) VALUES ('20:00', 11);
INSERT INTO "ti

INSERT INTO "times" (time, show_id) VALUES ('20:00', 13);
CREATE TABLE "users" ("id" serial8 primary key, "name" varchar(255));
INSERT INTO "users" (name) VALUES ('Rick Henri'), ('Jay Chetty'), ('Keith Douglas');
INSERT INTO "users" (name) VALUES
('Callum Dougan'),
('Andrew Insley'),
('Daniel Gillespie'),
('Bethany Fraser'),
('Nick Ridell'),
('Evelyn Utterson'),
('Sky Su'),
('Nicholas Hill'),
('Michael McLeod'),
('Callum Hogg'),
('Chris Sloan'),
('Gary Carmichael'),
('Oscar Brooks'),
('Ross Galloway'),
('Paul MacLean'),
('Stuart Ramsay'),
('Peter Forbes'),
('Euan Walls'),
('Aine Dunphy');
CREATE TABLE "shows_users" ("id" serial8 primary key, "show_id" int8, "user_id" int8);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 1);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 2);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 5);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 7);
INSERT INTO "shows_users" (show_id, user_id) VALUES (1, 8);
INSERT INTO "sho
--
-- database_schema_16-17.sql
--
-- Version: $Revision$
--
-- Date:    $Date: 2009-04-23 22:26:59 -0500 (Thu, 23 Apr 2009) $
--
-- The contents of this file are subject to the license and copyright
-- detailed in the LICENSE and NOTICE files at the root of the source
-- tree and available online at
--
-- http://www.dspace.org/license/
--
--
-- SQL commands to upgrade the database schema of a live DSpace 1.6 or 1.6.x
-- to the DSpace 1.7 database schema
--
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
------------------------------------------------------------------
-- Remove unused / obsolete sequence 'dctyperegistry_seq' (DS-729)
------------------------------------------------------------------
DROP SEQUENCE dc
DELIMITER $$
DROP TRIGGER IF EXISTS articlehistorian $$
CREATE TRIGGER articlehistorian 
  BEFORE UPDATE ON jos_content
  FOR EACH ROW
    BEGIN
      IF NEW.version <> OLD.version THEN
        INSERT INTO jos_content_history 
        (revision_date,`id`,  `asset_id`,  `title`,  `alias`,  `introtext`,  
        `fulltext`,  `state`,  `catid`,  `created`,  `created_by`,  
        `created_by_alias`,  `modified`,  `modified_by`,  `checked_out`, 
        `checked_out_time`,  `publish_up`,  `publish_down`,  `images`,  
        `urls`,  `attribs`,  `version`,  `ordering`,  `metakey`,  `metadesc`,  
        `access`,  `hits`,  `metadata`,  `featured`,  `language`,  `xreference`)
         VALUES 
        (now(),OLD.`id`, OLD.`asset_id`, OLD.`title`, OLD.`alias`, 
        OLD.`introtext`, OLD.`fulltext`, OLD.`state`, OLD.`catid`, 
        OLD.`created`, OLD.`created_by`, OLD.`created_by_alias`, 
        OLD.`modified`, OLD.`modified_by`, OLD.`checked_out`, 
        OLD.`checked_out_time`, OLD.

        OLD.`images`, OLD.`urls`, OLD.`attribs`, OLD.`version`, 
        OLD.`ordering`, OLD.`metakey`, OLD.`metadesc`, OLD.`access`, 
        OLD.`hits`, OLD.`metadata`, OLD.`featured`, OLD.`language`, 
        OLD.`xreference`);
       END IF;
    END $$
DELIMITER ;
/*
CREATE TABLE `jos_content_history` (
`id`,  `asset_id`,  `title`,  `alias`,  `introtext`,  `fulltext`,  `state`,  `catid`,  `created`,  `created_by`,  `created_by_alias`,  `modified`,  `modified_by`,  `checked_out`,  `checked_out_time`,  `publish_up`,  `publish_down`,  `images`,  `urls`,  `attribs`,  `version`,  `ordering`,  `metakey`,  `metadesc`,  `access`,  `hits`,  `metadata`,  `featured`,  `language`,  `xreference`, 
  PRIMARY KEY (`revision_date`,`id`),
  KEY `idx_access` (`access`),
  KEY `idx_checkout` (`checked_out`),
  KEY `idx_state` (`state`),
  KEY `idx_catid` (`catid`),
  KEY `idx_createdby` (`created_by`),
  KEY `idx_featured_catid` (`featured`,`catid`),
  KEY `idx_language` (`language`),
  KEY `idx_xre
﻿CREATE VIEW dbo.vTaskPlannerNotice
AS
SELECT DISTINCT TOP 100 PERCENT B.State, B.TaskType, B.TaskID, A.NotifyTo AS Planner, B.CreateTime
FROM  dbo._Notices AS A INNER JOIN
               dbo._TaskList AS B ON A.TaskID = B.TaskID
ORDER BY B.TaskID
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
    

         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Confi

      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "A"
            Begin Extent = 
               Top = 6
               Left = 44
               Bottom = 130
               Right = 516
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "B"
            Begin Extent = 
               Top = 6
               Left = 253
               Bottom = 130
               Right = 418
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder =
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VS_All_Lines_Losses_View_1]'))
DROP VIEW [dbo].[VS_All_Lines_Losses_View_1]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VS_All_Lines_Losses_View_1]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW dbo.VS_All_Lines_Losses_View_1
AS
SELECT     dbo.Latest_All_Lines_Losses_View_1.accountnumber, dbo.Latest_All_Lines_Losses_View_1.Policy_Number, dbo.Latest_All_Lines_Losses_View_1.Claim_Number, 
                      dbo.Latest_All_Lines_Losses_View_1.Coverage_Reporting_group, dbo.Latest_All_Lines_Losses_View_1.Coverage_Form, 
                      dbo.Latest_All_Lines_Losses_View_1.Accident_Year, dbo.Latest_All_Lines_Losses_View_1.Fiscal_AY_Year, 
                      dbo.Latest_All_Lines_Losses_View_1.Type_of_Loss_Desc, dbo.Latest_All_Lines_Losses_View_1.Claim_Desc, dbo.Latest_All_Lines_Losses_View_1.Case_Loss, 
                   

                      dbo.Latest_All_Lines_Losses_View_1.Sal_Subro, dbo.Latest_All_Lines_Losses_View_1.Incurred_Loss_ALAE_with_SS, 
                      dbo.Latest_All_Lines_Losses_View_1.Incurred_Loss_ALAE_with_SS_NonCat, dbo.Latest_All_Lines_Losses_View_1.Incurred_Loss_ALAE_with_SS_CatOnly, 
                      dbo.Latest_All_Lines_Losses_View_1.Reported_Claims, dbo.Latest_All_Lines_Losses_View_1.Open_Claims, 
                      dbo.Latest_All_Lines_Losses_View_1.Closed_With_Pay_Claims, dbo.Latest_All_Lines_Losses_View_1.Closed_Without_Pay_Claims, 
                      dbo.Latest_All_Lines_Losses_View_1.Incurred_Claims, dbo.Latest_All_Lines_Losses_View_1.Coverage_Group, dbo.Latest_All_Lines_Losses_View_1.report_year, 
                      dbo.Latest_All_Lines_Losses_View_1.report_month, dbo.Latest_All_Lines_Losses_View_1.policy_year, dbo.Latest_All_Lines_Losses_View_1.policy_month, 
                      dbo.Latest_All_Lines_Losses_View_1.Type_of_Loss, dbo.Latest_All_Lines_L
USE RentACar
SELECT DatumOd, DatumDo, StatusVozila.Naziv, Proizvodjac.Naziv,
Kategorija.Naziv, Klijent.Ime, Klijent.Prezime
FROM Najam
INNER JOIN StatusVozila ON StatusVozila.IDStatusVozila = Najam.StatusVozilaID
INNER JOIN Klijent ON Klijent.IDKlijent = Najam.KlijentID
INNER JOIN Vozilo ON Vozilo.IDVozilo = Najam.VoziloID
INNER JOIN Kategorija ON Kategorija.IDKategorija = Vozilo.KategorijaID
INNER JOIN Model ON Model.IDModel = Vozilo.ModelID
INNER JOIN Proizvodjac ON Proizvodjac.IDProizvodjac = Model.IDProizvodjac
SELECT IDNajam
FROM Najam
WHERE DatumDo BETWEEN '2014-09-20' AND '2014-09-27'
SELECT Proizvodjac.Naziv
FROM Proizvodjac
LEFT OUTER JOIN Model ON Model.IDProizvodjac = Proizvodjac.IDProizvodjac
WHERE Proizvodjac.IDProizvodjac IS NULL
SELECT Proizvodjac.Naziv
FROM Proizvodjac
WHERE Proizvodjac.IDProizvodjac NOT IN
(SELECT Model.IDProizvodjac FROM Model WHERE Model.IDProizvodjac = Proizvodjac.IDProizvodjac)
SELECT Model.Naziv AS Model, ISNULL(Proizvodjac.Naziv, 'UNKNOWN') AS Pr
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
DROP TABLE IF EXISTS `nav`;
CREATE TABLE IF NOT EXISTS `nav` (
    `navID` int(255) NOT NULL AUTO_INCREMENT,
    `navTitle` text NOT NULL,
    `navLoginForm` tinyint(1) NOT NULL DEFAULT '0',
    PRIMARY KEY (`navID`),
    KEY `navID` (`navID`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8 AUTO_INCREMENT = 2;
INSERT INTO `nav` (`navID`, `navTitle`, `navLoginForm`) VALUES
(1, 'Main navigation, horizontal', 0);
DROP TABLE IF EXISTS `nav-entry`;
CREATE TABLE IF NOT EXISTS `nav-entry` (
    `entryId` int(255) NOT NULL AUTO_INCREMENT,
    `entryOrder` int(255) NOT NULL,
    `entryTitle` text NOT NULL,
    `entryType` int(10) NOT NULL COMMENT '1: page (Name), 2: link',
    `entryParentEntryId` int(255) NOT NULL,
    `entryPageName` varchar(500) DEFAULT NULL,
    `entryLink` varchar(500) DEFAULT NULL,
    `entryNavId` int(255) DEFAULT NULL,
    PRIMARY KEY (`entryId`),
    KEY `navID` (`entryNavId`)
) ENGINE = InnoDB DEFAULT CHARSET 

INSERT INTO `nav-entry` (`entryId`, `entryOrder`, `entryTitle`, `entryType`, `entryParentEntryId`, `entryPageName`, `entryLink`, `entryNavId`) VALUES
(1, 1, 'Home', 1, 0, 'home', NULL, 1),
(2, 2, 'Login', 1, 0, 'login', NULL, 1),
(4, 3, 'SubHome', 1, 1, 'subHome', NULL, 1);
DROP TABLE IF EXISTS `session`;
CREATE TABLE IF NOT EXISTS `session` (
    `sessionId` varchar(40) NOT NULL DEFAULT '',
    `sessionUserId` int(11) DEFAULT NULL,
    `sessionIp` text,
    `sessionLastActivity` bigint(255) NOT NULL,
    `sessionLong` tinyint(1) NOT NULL,
    `sessionData` longtext,
    PRIMARY KEY (`sessionId`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8;
DROP TABLE IF EXISTS `user`;
CREATE TABLE IF NOT EXISTS `user` (
    `userId` int(255) NOT NULL AUTO_INCREMENT,
    `userName` text NOT NULL,
    `userMail` text NOT NULL,
    `userPassword` text NOT NULL,
    `userLastActivity` bigint(255) NOT NULL,
    `userData` varchar(1000) NOT NULL,
    PRIMARY KEY (`userId`)
) ENGINE = InnoDB DEFAULT CHARSET = 
CREATE TABLE users (id INTEGER PRIMARY KEY, username TEXT,
    pass_hash TEXT);
CREATE TABLE games (id INTEGER PRIMARY KEY, name TEXT, 
    owner_id REFERENCES users(id), ctime TEXT, mtime TEXT);
CREATE TABLE periods (id INTEGER PRIMARY KEY, 
    game_id REFERENCES games(id) ON DELETE CASCADE,
    content TEXT, next INTEGER, previous INTEGER, tone TEXT,
    ctime TEXT, mtime TEXT);
    
CREATE TABLE events (id INTEGER PRIMARY KEY, 
    period_id REFERENCES periods(id) ON DELETE CASCADE,
    content TEXT, next INTEGER, previous INTEGER, tone TEXT,
    ctime TEXT, mtime TEXT);
    
CREATE TABLE scenes (id INTEGER PRIMARY KEY, 
    event_id REFERENCES events(id) ON DELETE CASCADE, 
    question TEXT, setting TEXT, answer TEXT, 
    next INTEGER, previous INTEGER, tone TEXT,
    ctime TEXT, mtime TEXT);
CREATE TABLE players (user_id REFERENCES users(id) ON DELETE CASCADE, 
    game_id REFERENCES games(id) ON DELETE CASCADE, 
    UNIQUE (user_id, game_id));
CREATE INDEX period_gameid ON per

CREATE INDEX event_periodid ON events (period_id);
CREATE INDEX scene_eventid ON scenes (event_id);
CREATE TRIGGER game_insert AFTER INSERT ON games BEGIN
    UPDATE games SET ctime = datetime("now") WHERE id = new.id;
    UPDATE games SET mtime = datetime("now") WHERE id = new.id;
END;
CREATE TRIGGER period_insert AFTER INSERT ON periods BEGIN 
    UPDATE periods SET next = new.id WHERE next IS new.next AND id != new.id;
    UPDATE periods SET previous = new.previous WHERE previous IS new.previous
        AND id != new.id;
    UPDATE periods SET ctime = datetime("now") WHERE id = new.id;
    UPDATE periods SET mtime = datetime("now") WHERE id = new.id;
END;
CREATE TRIGGER event_insert AFTER INSERT ON events BEGIN 
    UPDATE events SET next = new.id WHERE next IS new.next AND id != new.id;
    UPDATE events SET previous = new.previous WHERE previous IS new.previous
        AND id != new.id;
    UPDATE events SET ctime = datetime("now") WHERE id = new.id;
    UPDATE events SET mtime =

END;
CREATE TRIGGER scene_insert AFTER INSERT ON scenes BEGIN 
    UPDATE scenes SET next = new.id WHERE next IS new.next AND id != new.id;
    UPDATE scenes SET previous = new.previous WHERE previous IS new.previous
        AND id != new.id;
    UPDATE scenes SET ctime = datetime("now") WHERE id = new.id;
    UPDATE scenes SET mtime = datetime("now") WHERE id = new.id;
END;
CREATE TRIGGER game_update AFTER UPDATE ON games BEGIN
    UPDATE games SET mtime = datetime("now") WHERE id = new.id;
END;
CREATE TRIGGER period_update AFTER UPDATE ON periods BEGIN
    UPDATE games SET mtime = datetime("now") WHERE id = new.game_id;
    UPDATE periods SET mtime = datetime("now") WHERE id = new.id;
END;
CREATE TRIGGER event_update AFTER UPDATE ON events BEGIN
    UPDATE periods SET mtime = datetime("now") WHERE id = new.period_id;
    UPDATE events SET mtime = datetime("now") WHERE id = new.id;
END;
CREATE TRIGGER scene_update AFTER UPDATE ON scenes BEGIN
    UPDATE events SET mtime = datetime("n
﻿USE ITech
/* To prevent any potential data loss issues, you should review this script in detail before running it outside the context of the database designer.*/
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.ItechUsers SET (LOCK_ESCALATION = TABLE)
GO
ALTER TABLE dbo.Dokument SET (LOCK_ESCALATION = TABLE)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ItechUsersDokumentRead](
	[DokId] [int] NOT NULL,
	[UserId] [int] NOT NULL,
	[FirstReadAt] [datetime] NULL,
	[LastReadAt] [datetime] NULL,
	[DokVersion] [int] NOT NULL CONSTRAINT [DF_ItechUsersDokumentRead_DokVersion]  DEFAULT ((0)),
	[ReadCount] [int] NOT NULL CONSTRAINT [DF_ItechUsersDokumentRead_ReadCount]  DEFAULT ((0)),
 CONSTRAINT [PK_ItechUsersDokumentRead_1] PRIMARY KEY CLUSTERED 
	[DokId] ASC,
	[UserId] ASC,
	[DokVersion] ASC
)WITH

) ON [PRIMARY]
GO
ALTER TABLE [dbo].[ItechUsersDokumentRead]  WITH CHECK ADD  CONSTRAINT [FK_ItechUsersDokumentRead_Dokument] FOREIGN KEY([DokId])
REFERENCES [dbo].[Dokument] ([Id])
GO
ALTER TABLE [dbo].[ItechUsersDokumentRead] CHECK CONSTRAINT [FK_ItechUsersDokumentRead_Dokument]
GO
ALTER TABLE [dbo].[ItechUsersDokumentRead]  WITH CHECK ADD  CONSTRAINT [FK_ItechUsersDokumentRead_ItechUsers] FOREIGN KEY([UserId])
REFERENCES [dbo].[ItechUsers] ([id])
GO
ALTER TABLE [dbo].[ItechUsersDokumentRead] CHECK CONSTRAINT [FK_ItechUsersDokumentRead_ItechUsers]
GO
ALTER TABLE dbo.Dokument ADD
	Version int NOT NULL CONSTRAINT DF_Dokument_Version DEFAULT 0
GO
ALTER TABLE dbo.Dokument SET (LOCK_ESCALATION = TABLE)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ItechUsersNewsRead](
	[NewsItemId] [int] NOT NULL,
	[UserId] [int] NOT NULL,
	[FirstReadAt] [datetime] NULL,
	[LastReadAt] [datetime] NULL,
	[ReadCount] [int] NOT NULL CONSTRAINT [DF_ItechUsersNewsRead_ReadCount]  DEFA

 CONSTRAINT [PK_ItechUsersNewsRead] PRIMARY KEY CLUSTERED 
	[NewsItemId] ASC,
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [dbo].[ItechUsersNewsRead]  WITH CHECK ADD  CONSTRAINT [FK_ItechUsersNewsRead_ItechUsers] FOREIGN KEY([UserId])
REFERENCES [dbo].[ItechUsers] ([id])
GO
ALTER TABLE [dbo].[ItechUsersNewsRead] CHECK CONSTRAINT [FK_ItechUsersNewsRead_ItechUsers]
GO
ALTER TABLE dbo.News ADD
	[ItemId] [int] NULL
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[NewsItems](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[NewsText] [nvarchar](max) NOT NULL,
	[ValidEnd] [datetime] NULL,
	[CreateAt] [datetime] NULL,
	[CreateBy] [nvarchar](128) NULL,
	[NewsPriorityId] [int] NOT NULL,
 CONSTRAINT [PK_NewsItems] PRIMARY KEY CLUSTERED 
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_L
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `group_member`;
CREATE TABLE `group_member` (
  `guid` int(11) unsigned NOT NULL,
  `memberGuid` int(11) unsigned NOT NULL DEFAULT '0',
  `memberFlags` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `subgroup` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `roles` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`memberGuid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Groups';

UPDATE `acl_permissions` SET `create`=null, `read`=1, `update`=1, `delete`=1 WHERE `resource_type`='task' AND `entity_value`='faculty:director' AND `assertion`='TaskOwner';
UPDATE `acl_permissions` SET `create`=null, `read`=1, `update`=1, `delete`=1 WHERE `resource_type`='task' AND `entity_value`='pcoordinator' AND `assertion`='TaskOwner';
UPDATE `acl_permissions` SET `create`=1, `read`=null, `update`=null, `delete`=null WHERE `resource_type`='task' AND `entity_value`='faculty:director' AND `assertion`='CourseOwner';
UPDATE `acl_permissions` SET `create`=1, `read`=null, `update`=null, `delete`=null WHERE `resource_type`='task' AND `entity_value`='pcoordinator' AND `assertion`='CourseOwner';
INSERT INTO `acl_permissions` (`resource_type`, `resource_value`, `entity_type`, `entity_value`, `app_id`, `create`, `read`, `update`, `delete`, `assertion`) VALUES
('evaluation', NULL, 'group:role', 'staff:admin', 1, 1, 1, 1, 1, NULL),
('evaluationform', NULL, 'group:role', 'staff:admin', 1, 1, 1, 
SELECT '*perc_full_table_scans', ROUND(1-((P1.VARIABLE_VALUE+P2.VARIABLE_VALUE) /(P1.VARIABLE_VALUE +P2.VARIABLE_VALUE+P3.VARIABLE_VALUE+P4.VARIABLE_VALUE+P5.VARIABLE_VALUE+P6.VARIABLE_VALUE)),2) VARIABLE_VALUE
FROM INFORMATION_SCHEMA.GLOBAL_STATUS P1, INFORMATION_SCHEMA.GLOBAL_STATUS P2, INFORMATION_SCHEMA.GLOBAL_STATUS P3, INFORMATION_SCHEMA.GLOBAL_STATUS P4, INFORMATION_SCHEMA.GLOBAL_STATUS P5, INFORMATION_SCHEMA.GLOBAL_STATUS P6
WHERE P1. VARIABLE_NAME = 'handler_read_rnd_next'
AND P2.VARIABLE_NAME    = 'handler_read_rnd'
AND P3.VARIABLE_NAME    ='handler_read_first'
AND P4.VARIABLE_NAME    = 'handler_read_next'
AND P5.VARIABLE_NAME    ='handler_read_key'
AND P6.VARIABLE_NAME    ='handler_read_prev'
UNION
SELECT '*INNODB_CACHE_HIT_RATIO',ROUND((1 -(GS1.VARIABLE_VALUE / GS2.VARIABLE_VALUE)) * 100,2)
FROM INFORMATION_SCHEMA.GLOBAL_STATUS AS GS1 STRAIGHT_JOIN INFORMATION_SCHEMA.GLOBAL_STATUS AS GS2
WHERE GS1.VARIABLE_NAME = 'INNODB_BUFFER_POOL_READS'
AND GS2.VARIABLE_NAME   = 'INNODB_
---------------------------------------------
-- User
---------------------------------------------
SELECT cm_create_class('User', 'Class', 'MODE: reserved|TYPE: class|DESCR: Users|SUPERCLASS: false|STATUS: active');
SELECT cm_create_class_attribute('User', 'Username', 'varchar(40)', null, true, true, 'MODE: read|DESCR: Username|INDEX: 5|BASEDSP: true|STATUS: active');
SELECT cm_create_class_attribute('User', 'Password', 'varchar(40)', null, false, false, 'MODE: read|DESCR: Password|INDEX: 6|BASEDSP: false|STATUS: active');
SELECT cm_create_class_attribute('User', 'Email', 'varchar(320)', null, false, false, 'MODE: read|DESCR: Email|INDEX: 7');
SELECT cm_create_class_attribute('User', 'Active', 'boolean', 'true', true, false, 'MODE: read|DESCR: Active|INDEX: 8');
---------------------------------------------
-- Role
---------------------------------------------
SELECT cm_create_class('Role', 'Class', 'MODE: reserved|TYPE: class|DESCR: Groups|SUPERCLASS: false|STATUS: active');
SELECT c

SELECT cm_create_class_attribute('Role', 'startingClass', 'regclass', null, false, false, 'MODE: read|DESCR: Starting Class|INDEX: 6|STATUS: active');
SELECT cm_create_class_attribute('Role', 'Email', 'varchar(320)', null, false, false, 'MODE: read|DESCR: Email|INDEX: 7');
SELECT cm_create_class_attribute('Role', 'DisabledModules', 'varchar[]', null, false, false, 'MODE: read');
SELECT cm_create_class_attribute('Role', 'DisabledCardTabs', 'character varying[]', null, false, false, 'MODE: read');
SELECT cm_create_class_attribute('Role', 'DisabledProcessTabs', 'character varying[]', null, false, false, 'MODE: read');
SELECT cm_create_class_attribute('Role', 'HideSidePanel', 'boolean', 'false', true, false, 'MODE: read');
SELECT cm_create_class_attribute('Role', 'FullScreenMode', 'boolean', 'false', true, false, 'MODE: read');
SELECT cm_create_class_attribute('Role', 'SimpleHistoryModeForCard', 'boolean', 'false', true, false, 'MODE: read');
SELECT cm_create_class_attribute('Role', 'Simp

SELECT cm_create_class_attribute('Role', 'ProcessWidgetAlwaysEnabled', 'boolean', 'false', true, false, 'MODE: read');
SELECT cm_create_class_attribute('Role', 'CloudAdmin', 'boolean', 'false', true, false, 'MODE: read');
SELECT cm_create_class_attribute('Role', 'Active', 'boolean', 'true', true, false, 'MODE: read');
---------------------------------------------
-- Map_UserRole
---------------------------------------------
SELECT cm_create_domain('UserRole', 'MODE: reserved|TYPE: domain|CLASS1: User|CLASS2: Role|DESCRDIR: has role|DESCRINV: contains|CARDIN: N:N|STATUS: active');
SELECT cm_create_domain_attribute('UserRole', 'DefaultGroup', 'boolean', '', false, false, 'MODE: read|FIELDMODE: write|DESCR: Default Group|INDEX: 1|BASEDSP: true|STATUS: active');
CREATE UNIQUE INDEX idx_map_userrole_defaultgroup
  ON "Map_UserRole"
  USING btree
  ((
CASE
    WHEN "Status"::text = 'N'::text THEN NULL::regclass
    ELSE "IdClass1"
END), (
CASE
    WHEN "Status"::text = 'N'::text THEN NULL::
--liquibase formatted sql
--This is for the sparrow_dss schema
    
--logicalFilePath: changeLog10DeleteColumnCumCatchAreaSparrowDss.sql
--changeset lmurphy:deletecolumna
CREATE OR REPLACE FORCE VIEW SPARROW_DSS.MODEL_ATTRIB_VW
   SPARROW_MODEL_ID,
   MODEL_REACH_ID,
   IDENTIFIER,
   FULL_IDENTIFIER,
   HYDSEQ,
   FNODE,
   TNODE,
   IFTRAN,
   FRAC,
   REACH_NAME,
   OPEN_WATER_NAME,
   MEANQ,
   MEANV,
   CATCH_AREA,
   TOT_CONTRIB_AREA,
   TOT_UPSTREAM_AREA,
   REACH_LENGTH,
   HUC2,
   HUC4,
   HUC6,
   HUC8,
   HEAD_REACH,
   SHORE_REACH,
   TERM_TRANS,
   TERM_ESTUARY,
   TERM_NONCONNECT,
   EDANAME,
   EDACODE,
   SOURCE,
   HUC2_NAME,
   HUC4_NAME,
   HUC6_NAME,
   HUC8_NAME
AS
   (SELECT model.SPARROW_MODEL_ID SPARROW_MODEL_ID,
           model.MODEL_REACH_ID MODEL_REACH_ID,
           model.IDENTIFIER IDENTIFIER,
           model.FULL_IDENTIFIER FULL_IDENTIFIER,
           model.HYDSEQ HYDSEQ,
           model.FNODE FNODE,
           model.TNODE TNODE,
           model.IFTRA

           model.FRAC FRAC,
           attrib.REACH_NAME REACH_NAME,
           attrib.OPEN_WATER_NAME OPEN_WATER_NAME,
           attrib.MEANQ MEANQ,
           attrib.MEANV MEANV,
           attrib.CATCH_AREA CATCH_AREA,
           attrib.TOT_CONTRIB_AREA TOT_CONTRIB_AREA,
           attrib.TOT_UPSTREAM_AREA TOT_UPSTREAM_AREA,
           attrib.REACH_LENGTH REACH_LENGTH,
           attrib.HUC2 HUC2,
           attrib.HUC4 HUC4,
           attrib.HUC6 HUC6,
           attrib.HUC8 HUC8,
           attrib.HEAD_REACH HEAD_REACH,
           attrib.SHORE_REACH SHORE_REACH,
           attrib.TERM_TRANS TERM_TRANS,
           attrib.TERM_ESTUARY TERM_ESTUARY,
           attrib.TERM_NONCONNECT TERM_NONCONNECT,
           attrib.EDANAME EDANAME,
           attrib.EDACODE EDACODE,
           'model' source,
           attrib.HUC2_NAME HUC2_NAME,
           attrib.HUC4_NAME HUC4_NAME,
           attrib.HUC6_NAME HUC6_NAME,
           attrib.HUC8_NAME HUC8_NAME
      FROM    MODEL_REACH model
  

              MODEL_REACH_ATTRIB attrib
           ON (model.MODEL_REACH_ID = attrib.MODEL_REACH_ID)
    UNION ALL
    SELECT model.SPARROW_MODEL_ID SPARROW_MODEL_ID,
           model.MODEL_REACH_ID MODEL_REACH_ID,
           model.IDENTIFIER IDENTIFIER,
           model.FULL_IDENTIFIER FULL_IDENTIFIER,
           model.HYDSEQ HYDSEQ,
           model.FNODE FNODE,
           model.TNODE TNODE,
           model.IFTRAN,
           model.FRAC FRAC,
           attrib.REACH_NAME REACH_NAME,
           attrib.OPEN_WATER_NAME OPEN_WATER_NAME,
           attrib.MEANQ MEANQ,
           attrib.MEANV MEANV,
           attrib.CATCH_AREA CATCH_AREA,
           NULL TOT_CONTRIB_AREA,
           attrib.CUM_CATCH_AREA TOT_UPSTREAM_AREA,
           attrib.REACH_LENGTH REACH_LENGTH,
           attrib.HUC2 HUC2,
           attrib.HUC4 HUC4,
           attrib.HUC6 HUC6,
           attrib.HUC8 HUC8,
           attrib.HEAD_REACH HEAD_REACH,
           attrib.SHORE_REACH SHORE_REACH,
           attrib.TERM_
﻿--USE [StorageSpace]
--GO
/****** Object:  View [BasicInfo].[InventoryUnitView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryUnitView]'))
DROP VIEW [BasicInfo].[InventoryUnitView]
GO
/****** Object:  View [BasicInfo].[InventorySharedGoodView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventorySharedGoodView]'))
DROP VIEW [BasicInfo].[InventorySharedGoodView]
GO
/****** Object:  View [BasicInfo].[InventoryCurrencyView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCurrencyView]'))
DROP VIEW [BasicInfo].[InventoryCurrencyView]
GO
/****** Object:  View [BasicInfo].[InventoryCompanyView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCompanyView]')

DROP VIEW [BasicInfo].[InventoryCompanyView]
GO
/****** Object:  View [BasicInfo].[InventoryCompanyVesselView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCompanyVesselView]'))
DROP VIEW [BasicInfo].[InventoryCompanyVesselView]
GO
/****** Object:  View [BasicInfo].[InventoryCompanyVesselTankView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCompanyVesselTankView]'))
DROP VIEW [BasicInfo].[InventoryCompanyVesselTankView]
GO
/****** Object:  View [BasicInfo].[InventoryCompanyGoodView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[InventoryCompanyGoodView]'))
DROP VIEW [BasicInfo].[InventoryCompanyGoodView]
GO
/****** Object:  View [BasicInfo].[InventoryCompanyGoodUnitView]    Script Date: 14/5/2014 11:00:55 AM ******/
IF  EXISTS (SEL
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(1,1,'amc');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(2,2,'audi');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(3,3,'bmw');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(4,4,'buick');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(5,4,'cadillac');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(6,5,'capri');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(7,4,'chevrolet');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(8,6,'chrysler');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(9,7,'citroen');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(10,8,'datsun');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(11,6,'dodge');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(12,9,'fiat');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(13,5,'ford');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(14,10,'hi');
INSERT INTO model_list
	(

VALUES
	(15,11,'honda');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(16,12,'mazda');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(17,13,'mercedes');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(18,13,'mercedes-benz');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(19,5,'mercury');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(20,8,'nissan');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(21,4,'oldsmobile');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(22,14,'opel');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(23,15,'peugeot');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(24,6,'plymouth');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(25,4,'pontiac');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(26,16,'renault');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(27,17,'saab');
INSERT INTO model_list
	(ModelId,Maker,Model)
VALUES
	(28,18,'subaru');
INSERT INTO model_list
	(Mode
IF OBJECT_ID('dbo.wsp_newCompensation') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newCompensation
    IF OBJECT_ID('dbo.wsp_newCompensation') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newCompensation >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newCompensation >>>'
END
go
/******************************************************************************
**
** CREATION:
**   Author:  Jack Veiga, Mark Jaeckle
**   Date:  September 22 2003
**   Description:  Inserts row to Compensation
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
******************************************************************************/
CREATE PROCEDURE dbo.wsp_newCompensation
 @compensationId  int
,@usageTypeId  int
,@adminUserId         int
,@dateCompensated     datetime
,@dateUnavailableFrom datetime
,@dateUnavailableTo   datetime
,@userCount           int
,@creditCount         int
,@compensationDesc    varchar(255)
AS
DECLARE @return INT
,@dateCreated DATETI
  CREATE OR REPLACE  VIEW HV_DEPOSIT_OUTSTANDING_DAILY (TRANS_DATE, PORTFOLIO, PORTFOLIO_NAME, ISSUER_NAME, AUM, FD_AMOUNT, AUM_PER) AS 
  SELECT HREP_SECURITY_HOLDING_CURR.TRANS_DATE,HREP_SECURITY_HOLDING_CURR.PORTFOLIO,HREP_SECURITY_HOLDING_CURR.PORTFOLIO_NAME,HREP_SECURITY_HOLDING_CURR.ISSUER_NAME,(HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE/10000000) AUM, SUM(HREP_SECURITY_HOLDING_CURR.MARKET_VALUE_PCY/10000000) FD_AMOUNT,
ROUND( (SUM(HREP_SECURITY_HOLDING_CURR.MARKET_VALUE_PCY)/(HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE))*100,2) AUM_PER
/*,
HREP_DEPOSIT_TRANSACTIONS_CURR.DEPOSIT_ID,
HREP_DEPOSIT_TRANSACTIONS_CURR.TRANS_DATE DEP_TRANS_DATE,
HREP_DEPOSIT_TRANSACTIONS_CURR.IS_MATURED,
HREP_DEPOSIT_TRANSACTIONS_CURR.MATURITY_DATE,
HREP_DEPOSIT_TRANSACTIONS_CURR.COUNTERPARTY_NAME,
HREP_DEPOSIT_TRANSACTIONS_CURR.PORTFOLIO_NAME,
HREP_DEPOSIT_TRANSACTIONS_CURR.PORTFOLIO,
HREP_DEPOSIT_TRANSACTIONS_CURR.BUSINESS_DATE,
HREP_DEPOSIT_TRANSACTIONS_CURR.COMPANY,
(HREP_DEPOSIT_TRANSACTIONS_CURR.NET_AMOUNT_

(HREP_DEPOSIT_TRANSACTIONS_CURR.NOOF_DAYS),
(HREP_DEPOSIT_TRANSACTIONS_CURR.COUPON_RATE)
*/
FROM HREP_SECURITY_HOLDING_CURR  , HREP_NAV_SUMMARY_CURR --, HREP_DEPOSIT_TRANSACTIONS_CURR 
WHERE HREP_SECURITY_HOLDING_CURR.ASSET_CLASS = '25'
/*
AND 
HREP_DEPOSIT_TRANSACTIONS_CURR.PORTFOLIO = HREP_NAV_SUMMARY_CURR.PORTFOLIO
AND
HREP_DEPOSIT_TRANSACTIONS_CURR.COUNTERPARTY (+) =  HREP_SECURITY_HOLDING_CURR.ISSUER
*/
and HREP_NAV_SUMMARY_CURR.PORTFOLIO = HREP_SECURITY_HOLDING_CURR.PORTFOLIO
and HREP_NAV_SUMMARY_CURR.TRANS_DATE = HREP_SECURITY_HOLDING_CURR.TRANS_DATE
--AND HREP_SECURITY_HOLDING_CURR.TRANS_DATE = '15 AUG 2013'
and HREP_NAV_SUMMARY_CURR.PORTFOLIO_CLASS ='GLOBAL'
AND HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE >0
--AND HREP_SECURITY_HOLDING_CURR.PORTFOLIO NOT IN 'HDFCAR'
GROUP BY HREP_SECURITY_HOLDING_CURR.TRANS_DATE,HREP_SECURITY_HOLDING_CURR.PORTFOLIO,HREP_SECURITY_HOLDING_CURR.PORTFOLIO_NAME,HREP_SECURITY_HOLDING_CURR.ISSUER_NAME,HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE
/*,
HREP_DEPOSIT
INSERT INTO Reader.Category (categoryId, title)
SELECT
	id AS categoryId,
	title AS title
FROM ttrss_feed_categories;
INSERT INTO Reader.Feed (feedId, categoryId, url, title, frequency, isEnabled, dateChecked)
SELECT
	id AS feedId,
	cat_id AS categoryId,
	feed_url AS url,
	title AS title,
	IF(update_interval >= 0, update_interval, 0) AS frequency,
	(update_interval >= 0) AS isEnabled,
	last_updated AS dateChecked
FROM ttrss_feeds;
INSERT INTO Reader.Entry (entryId, feedId, externalId, url, title, dateUpdated, dateCreated, isMarked, isRead, dateReadLast)
SELECT
	ue.int_id AS entryId,
	ue.feed_id AS feedId,
	e.guid AS externalId,
	e.link AS url,
	e.title AS title,
	e.updated AS dateUpdated,
	IF(ue.last_read IS NOT NULL AND ue.last_read < e.date_entered, ue.last_read, e.date_entered) AS dateCreated,
	ue.marked AS isMarked,
	NOT ue.unread AS isRead,
	IFNULL(ue.last_read, 0) AS dateReadLast
FROM ttrss_entries AS e
	JOIN ttrss_user_entries AS ue ON (ue.ref_id = e.id)
WHERE ue.feed_id IS NOT 
select xt.create_view('xt.poiteminfo', $$
select poitem.*,
  itemsite_item_id as item_id,
  itemsite_warehous_id as warehous_id,
  case when poitem_itemsite_id is null then true else false end as poitem_is_misc,
  pohead_curr_id as curr_id,
  xt.po_line_extended_price(poitem) as extended_price,
  xt.po_line_tax(poitem) as tax,
  coalesce(poitem_qty_toreceive,0) as qty_toreceive
from poitem
  left join itemsite on itemsite_id=poitem_itemsite_id
  join pohead on pohead_id=poitem_pohead_id;
$$, false);
create or replace rule "_INSERT" as on insert to xt.poiteminfo do instead
insert into poitem (
  poitem_id,
  poitem_status,
  poitem_pohead_id,
  poitem_linenumber,
  poitem_duedate,
  poitem_itemsite_id,
  poitem_vend_item_descrip,
  poitem_vend_uom,
  poitem_invvenduomratio,
  poitem_qty_ordered,
  poitem_qty_received,
  poitem_qty_returned,
  poitem_qty_vouchered,
  poitem_unitprice,
  poitem_vend_item_number,
  poitem_comments,
  poitem_qty_toreceive,
  poitem_expcat_id,
  poitem_items

  poitem_freight,
  poitem_freight_received,
  poitem_freight_vouchered,
  poitem_prj_id,
  poitem_stdcost,
  poitem_bom_rev_id,
  poitem_boo_rev_id,
  poitem_manuf_name,
  poitem_manuf_item_number,
  poitem_manuf_item_descrip,
  poitem_taxtype_id,
  poitem_tax_recoverable,
  poitem_rlsd_duedate,
  poitem_order_id,
  poitem_order_type,
  obj_uuid
) values (
  new.poitem_id,
  new.poitem_status,
  new.poitem_pohead_id,
  new.poitem_linenumber,
  new.poitem_duedate,
  (select itemsite_id
   from itemsite
   where itemsite_item_id=new.item_id
     and itemsite_warehous_id=new.warehous_id),
  new.poitem_vend_item_descrip,
  new.poitem_vend_uom,
  new.poitem_invvenduomratio,
  new.poitem_qty_ordered,
  0,
  0,
  0,
  new.poitem_unitprice,
  new.poitem_vend_item_number,
  new.poitem_comments,
  new.poitem_qty_toreceive,
  new.poitem_expcat_id,
  new.poitem_itemsrc_id,
  coalesce(new.poitem_freight, 0.0),
  0,
  0,
  new.poitem_prj_id,
  new.poitem_stdcost,
  new.poitem_bom_rev_id,
  new.poi

  new.poitem_manuf_name,
  new.poitem_manuf_item_number,
  new.poitem_manuf_item_descrip,
  new.poitem_taxtype_id,
  true,
  new.poitem_rlsd_duedate,
  new.poitem_order_id,
  new.poitem_order_type,
  coalesce(new.obj_uuid, xt.uuid_generate_v4())
);
create or replace rule "_UPDATE" as on update to xt.poiteminfo do instead
update poitem set
  poitem_status=new.poitem_status,
  poitem_pohead_id=new.poitem_pohead_id,
  poitem_linenumber=new.poitem_linenumber,
  poitem_duedate=new.poitem_duedate,
  poitem_itemsite_id=(
   select itemsite_id
   from itemsite
   where itemsite_item_id=new.item_id
     and itemsite_warehous_id=new.warehous_id),
  poitem_vend_item_descrip=new.poitem_vend_item_descrip,
  poitem_vend_uom=new.poitem_vend_uom,
  poitem_invvenduomratio=new.poitem_invvenduomratio,
  poitem_qty_ordered=new.poitem_qty_ordered,
  poitem_qty_received=new.poitem_qty_received,
  poitem_qty_returned=new.poitem_qty_returned,
  poitem_qty_vouchered=new.poitem_qty_vouchered,
  poitem_unitpric
/* 
 * 1) delete frontend
 * 2) update backend
 * 2.1) delete no longer needed models and controllers
 * 2.2) update RocketComponentController.php
 * 2.3) update RocketComponentModelController.php
 * 2.4) update RocketComponentModelMmController.php
 * 3) run sql-statement
 * 3.1) add new cannon-model to rocket_component_models
 * 4) update frontend
 */
UPDATE rocket_component_model_mm as target
inner join
	SELECT rocketComponent_id, max(capacity) as max_capacity FROM rocket_component_model_mm AS model_mm
	inner join rocket_component_model_level_mm as cap_level_mm
		on model_mm.rocketComponentModelCapacityLevelMm_id = cap_level_mm.id
	inner join rocket_component_model_levels as cap_level
		on cap_level_mm.rocketComponentModelLevel_id = cap_level.id
	where model_mm.`status` = 'unlocked' and cap_level_mm.status = 'unlocked'
	group by rocketComponent_id
as source
	on target.rocketComponent_id = source.rocketComponent_id
inner join rocket_component_models as model
	on target.rocketComponent

set target.capacity = source.max_capacity
where model.model = 1;
UPDATE rocket_component_model_mm as target
inner join
	SELECT rocketComponent_id, max(recharge_rate) as max_recharge_rate FROM rocket_component_model_mm AS model
	inner join rocket_component_model_level_mm as re_level_mm
		on model.rocketComponentModelRechargeRateLevelMm_id = re_level_mm.id
	inner join rocket_component_model_levels as re_level
		on re_level_mm.rocketComponentModelLevel_id = re_level.id
	where model.`status` = 'unlocked' and re_level_mm.status = 'unlocked'
	group by rocketComponent_id
as source
	on target.rocketComponent_id = source.rocketComponent_id
inner join rocket_component_models as model
	on target.rocketComponentModel_id = model.id
set target.recharge_rate = source.max_recharge_rate
where model.model = 1;
UPDATE rocket_component_model_mm as target
inner join rocket_component_models as model
	on target.rocketComponentModel_id = model.id
SET target.status = 'locked', capacity = 3, recharge_rate = 1

set linesize 250
set pages 50000
column block_size format a10 heading "Block Size"
column instance format a15 heading "Instance"
column size_for_estimate format 9G999G990D99 heading "Cache Size (MB)"
column estd_physical_read_factor format 990D999 heading "Factor"
column estd_physical_reads format 99G999G999G999G990 heading "Est Phys Reads"
column estd_phys_reads_delta format 999G999G999G990 heading "Est Phys Reads Del"
column estd_cluster_reads format 99G999G999G999G990 heading "Est Clust Reads"
column estd_cls_reads_delta format 999G999G999G990 heading "Est Clust Reads Del"
column estd_physical_read_time format 9G999G999G990 heading "Est Phys Read Time"
column estd_phys_read_time_delta format 9G999G999G990 heading "Est Phys Read Time Del"
column estd_pct_of_db_time_for_reads format 9990D99 heading "Est % read"
column estd_cluster_read_time format 9G999G999G990 heading "Est Clust Read Time"
column estd_cls_read_time_delta format 9G999G999G990 heading "Est Clust Read Time Del"
break on

with current_size as
( select
    inst_id,
    block_size,
    estd_physical_reads,
    estd_physical_read_time,
    estd_cluster_reads,
    estd_cluster_read_time
  from
    gv$db_cache_advice
  where
    advice_status = 'ON'
    and estd_physical_read_factor = 1
select
  ca.block_size || decode(name, 'DEFAULT', ' (*)') block_size,
  ca.inst_id || ' (' || to_char(inst.startup_time, 'DD/MM/YYYY') || ')'   instance, 
  ca.size_for_estimate, 
  ca.estd_physical_read_factor, 
  ca.estd_pct_of_db_time_for_reads,
  ca.estd_physical_reads,
  (ca.estd_physical_reads - cs.estd_physical_reads) estd_phys_reads_delta,
  ca.estd_physical_read_time,
  ( ca.estd_physical_read_time - cs.estd_physical_read_time) estd_phys_read_time_delta,
  ca.estd_cluster_reads,
  (ca.estd_cluster_reads - cs.estd_cluster_reads) estd_cls_reads_delta,
  ca.estd_cluster_read_time,
  ( ca.estd_cluster_read_time - cs.estd_cluster_read_time) estd_cls_read_time_delta
from
  gv$db_cache_advice  ca,
  current_size        cs,
﻿CREATE VIEW dbo.GetAllMenuEntityItem
AS
SELECT     MenuEntityItemId, MenuEntityParentId, Name, PagePath, ContentEntityId, DisplayAlways, IsActive, IconPath, DisplayOrder, ModifiedDate, MenuEntityTypeId, 
                      MenuEntityId, LanguageID, MenuEntityPositionID
FROM         ContentManagement.MenuEntityItem
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
      

         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (

      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "MenuEntityItem (ContentManagement)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 229
            End
            DisplayFlags = 280
            TopColumn = 10
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
-- administrator
CALL moduleAddNewByPath(
	"Elawa", 1, 1,
	"administrator/Elawa/Elawa.php",
	"administrator", "root/administrator",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"MainMenu", 1, 1,
	"administrator/Elawa/MainMenu.php",
	"Elawa", "root/administrator/Elawa",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"GenerateHostPdf", 1, 1,
	"administrator/Elawa/GenerateHostPdf/GenerateHostPdf.php",
	"Elawa", "root/administrator/Elawa",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"SetHostGroup", 1, 1,
	"administrator/Elawa/SetHostGroup/SetHostGroup.php",
	"Elawa", "root/administrator/Elawa",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"SetSelectionsEnabled", 1, 1,
	"ad

	"Elawa", "root/administrator/Elawa",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"Meetings", 1, 1,
	"administrator/Elawa/Meetings/Meetings.php",
	"Elawa", "root/administrator/Elawa",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"GenerateBare", 1, 1,
	"administrator/Elawa/Meetings/GenerateBare/GenerateBare.php",
	"Meetings", "root/administrator/Elawa/Meetings",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"ChangeDisableds", 1, 1,
	"administrator/Elawa/Meetings/ChangeDisableds/ChangeDisableds.php",
	"Meetings", "root/administrator/Elawa/Meetings",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"Defaults", 1, 1,
	"administrator/Elawa/Meetings/Defaults/Defaults.php",
	"M

	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"Times", 1, 1,
	"administrator/Elawa/Meetings/Defaults/Times/Times.php",
	"Defaults", "root/administrator/Elawa/Meetings/Defaults",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"Rooms", 1, 1,
	"administrator/Elawa/Meetings/Defaults/Rooms/Rooms.php",
	"Defaults", "root/administrator/Elawa/Meetings/Defaults",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
-- web
CALL moduleAddNewByPath(
	"Elawa", 1, 1,
	"web/Elawa/Elawa.php",
	"web", "root/web",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"Overview", 1, 1,
	"web/Elawa/Overview/Overview.php",
	"Elawa", "root/web/Elawa",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3
DELETE FROM
  accounting_transaction
WHERE
<dtml-in uid>
  uid=<dtml-sqlvar sequence-item type="int"><dtml-if sequence-end><dtml-else> OR </dtml-if>
</dtml-in>
<dtml-var "'\0'">
<dtml-let row_list="[]" uid_dict="{}">
  <dtml-in prefix="loop" expr="_.range(_.len(uid))">
    <dtml-if "getDestinationSectionUid[loop_item]">
      <dtml-call expr="uid_dict.update({uid[loop_item]: uid_dict.get(uid[loop_item], -1) + 1})">
      <dtml-call expr="row_list.append([
                  uid[loop_item], 
                  uid_dict[uid[loop_item]],
                  getDestinationSectionUid[loop_item],
                  getSourceSectionUid[loop_item],
                  getResourceUid[loop_item],
                  getDestinationProjectUid[loop_item], 
                  getDestinationPaymentUid[loop_item],
                  getTitle[loop_item], 
                  getReference[loop_item], 
                  getDestinationReference[loop_item], 
                  getStopDate[loop_item], 
                  

                  InternalInvoiceTransaction_statInternalTransactionLineList[loop_item][0]['destination_asset_credit'], 
])">
    </dtml-if>
    <dtml-if expr="True">
      <dtml-comment>
      for now, unconditionanly catalog source, to always have at
      least one line, but is it needed ?
      </dtml-comment>
      <dtml-call expr="uid_dict.update({uid[loop_item]: uid_dict.get(uid[loop_item], -1) + 1})">
      <dtml-call expr="row_list.append([
                  uid[loop_item], 
                  uid_dict[uid[loop_item]],
                  getSourceSectionUid[loop_item],
                  getDestinationSectionUid[loop_item],
                  getResourceUid[loop_item],
                  getSourceProjectUid[loop_item], 
                  getSourcePaymentUid[loop_item],
                  getTitle[loop_item], 
                  getReference[loop_item], 
                  getSourceReference[loop_item], 
                  getStartDate[loop_item], 
                  InternalInvoiceTran

                  InternalInvoiceTransaction_statInternalTransactionLineList[loop_item][0]['source_asset_credit'], 
])">
    </dtml-if>
  </dtml-in>  
  
  <dtml-if "row_list">
INSERT INTO
  accounting_transaction
VALUES
    <dtml-in prefix="row" expr="row_list">
  <dtml-sqlvar expr="row_item[0]" type="int">,
  <dtml-sqlvar expr="row_item[1]" type="int">,
  <dtml-sqlvar expr="row_item[2]" type="int" optional>, 
  <dtml-sqlvar expr="row_item[3]" type="int" optional>, 
  <dtml-sqlvar expr="row_item[4]" type="int" optional>,
  <dtml-sqlvar expr="row_item[5]" type="int" optional>,
  <dtml-sqlvar expr="row_item[6]" type="int" optional>,
  <dtml-sqlvar expr="row_item[7]" type="string" optional>,
  <dtml-sqlvar expr="row_item[8]" type="string" optional>,
  <dtml-sqlvar expr="row_item[9]" type="string" optional>, 
  <dtml-sqlvar expr="row_item[10]" type="datetime" optional>,
  <dtml-sqlvar expr="row_item[11]" type="float" optional>,
  <dtml-sqlvar expr="row_item[12]" type="float" optional>
<d
DROP TRIGGER IF EXISTS packages_insert;
CREATE TRIGGER packages_insert
	AFTER INSERT ON packages
	FOR EACH ROW
	BEGIN
		INSERT INTO packages_update
			(action_flag, created, package_id, arch_id, repo_id, pkgname, pkgbase, new_pkgver, new_pkgrel, new_epoch) 
			VALUES (1, strftime('%Y-%m-%d %H:%M:%f', 'now'), NEW.id, NEW.arch_id, NEW.repo_id, NEW.pkgname, NEW.pkgbase, NEW.pkgver, NEW.pkgrel, NEW.epoch);
	END;
DROP TRIGGER IF EXISTS packages_update;
CREATE TRIGGER packages_update
	AFTER UPDATE ON packages
	FOR EACH ROW
	WHEN (OLD.pkgver != NEW.pkgver OR OLD.pkgrel != NEW.pkgrel OR OLD.epoch != NEW.epoch)
	BEGIN
		INSERT INTO packages_update
			(action_flag, created, package_id, arch_id, repo_id, pkgname, pkgbase, old_pkgver, old_pkgrel, old_epoch, new_pkgver, new_pkgrel, new_epoch)
			VALUES (2, strftime('%Y-%m-%d %H:%M:%f', 'now'), NEW.id, NEW.arch_id, NEW.repo_id, NEW.pkgname, NEW.pkgbase, OLD.pkgver, OLD.pkgrel, OLD.epoch, NEW.pkgver, NEW.pkgrel, NEW.epoch);
	END;
DROP TRIGGER IF EXIS
SET DEFINE OFF;
CREATE TABLE D_BOOKING_ATT
  BOOKING_REF          NUMBER(18),
  RELATED_BOOKING_REF  VARCHAR2(100 BYTE),
  LEAD_NAME            VARCHAR2(130 BYTE),
  RES_TOUR_CODE        VARCHAR2(250 BYTE),
  SELL_METHOD          VARCHAR2(10 BYTE),
  CUSTOMER_TYPE        VARCHAR2(50 BYTE),
  AFFILIATION_ID       VARCHAR2(20 BYTE),
  COMM_CODE            VARCHAR2(20 BYTE),
  DOC_STATUS           VARCHAR2(50 BYTE),
  CORRESPONDANCE_TYPE  VARCHAR2(10 BYTE),
  BOOK_BY              VARCHAR2(50 BYTE),
  BOOK_SOURCE          VARCHAR2(50 BYTE),
  DEP_REQUIRED         VARCHAR2(20 BYTE),
  PAYMENT_GUARANTEE    VARCHAR2(80 BYTE),
  REMARKS              VARCHAR2(250 BYTE),
  CC_PER               VARCHAR2(5 BYTE),
  IS_CC_BKG            VARCHAR2(5 BYTE),
  PARENT_RES_NUMBER    NUMBER(12),
  ADDED_BY             VARCHAR2(50 BYTE)
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT 
# bgiSnp.sql was originally generated by the autoSql program, which also 
# generated bgiSnp.c and bgiSnp.h.  This creates the database representation of
# an object which can be loaded and saved from RAM in a fairly 
# automatic way.
#Beijing Genomics Institute SNP information as bed 4 +
CREATE TABLE bgiSnp (
    bin smallint unsigned not null,	# bin for speed
    chrom varchar(255) not null,	# Chromosome
    chromStart int unsigned not null,	# Start position in chromosome
    chromEnd int unsigned not null,	# End position in chromosome
    name varchar(255) not null,	# BGI SNP name: snp.superctg.ctg.pos.type.strainID
    snpType char(1) not null,	# S (substitution), I (insertion), or D (deletion)
    readStart int unsigned not null,	# Start position in alternate allele read
    readEnd int unsigned not null,	# End position in alternate allele read
    qualChr int unsigned not null,	# Quality score in reference assembly
    qualReads int unsigned not null,	# Quality score in alternate
DELETE FROM
  stock
WHERE
<dtml-in uid>
  uid=<dtml-sqlvar sequence-item type="int"><dtml-if sequence-end><dtml-else> OR </dtml-if>
</dtml-in>
<dtml-var "'\0'">
<dtml-let row_list="[]" uid_dict="{}">
  <dtml-in prefix="loop" expr="_.range(_.len(uid))">
    <dtml-if "not isInventoryMovement[loop_item] and isMovement[loop_item] and isAccountable[loop_item] and getResourceUid[loop_item]">
      <dtml-if "getBaobabDestinationUid[loop_item]">
        <dtml-call expr="uid_dict.update({uid[loop_item]: uid_dict.get(uid[loop_item], -1) + 1})">
            <dtml-call expr="row_list.append([uid[loop_item],                 uid_dict[uid[loop_item]],                 getBaobabDestinationUid[loop_item],                 getBaobabDestinationSectionUid[loop_item],                 getBaobabDestinationPaymentUid[loop_item],                 getExplanationUid[loop_item],                 getBaobabSourceSectionUid[loop_item],                 getBaobabSourceUid[loop_item],                 getResourceUid[loop_it

      </dtml-if>
      <dtml-if "getBaobabSourceUid[loop_item]">
        <dtml-call expr="uid_dict.update({uid[loop_item]: uid_dict.get(uid[loop_item], -1) + 1})">
            <dtml-call expr="row_list.append([uid[loop_item],                 uid_dict[uid[loop_item]],                 getBaobabSourceUid[loop_item],                 getBaobabSourceSectionUid[loop_item],                 getBaobabSourcePaymentUid[loop_item],                 getExplanationUid[loop_item],                 getBaobabDestinationSectionUid[loop_item],                 getBaobabDestinationUid[loop_item],                 getResourceUid[loop_item],                 -(getInventoriatedQuantity[loop_item] or 0),                 isCancellationAmount[loop_item],                 getStartDate[loop_item],                 getSourceInventoriatedTotalAssetPrice[loop_item],                 getPortalType[loop_item],                 getSimulationState[loop_item],                 getBaobabSourceVariationText[loop_item],              

      </dtml-if>
    </dtml-if>
  </dtml-in>
  
  <dtml-if "row_list">
INSERT INTO
  stock
VALUES
    <dtml-in prefix="row" expr="row_list">
  <dtml-sqlvar expr="row_item[0]" type="int">,
  <dtml-sqlvar expr="row_item[1]" type="int">,
  <dtml-sqlvar expr="row_item[2]" type="int">,
  <dtml-sqlvar expr="row_item[3]" type="int" optional>,
  <dtml-sqlvar expr="row_item[4]" type="int" optional>,
  <dtml-sqlvar expr="row_item[5]" type="int" optional>,
  <dtml-sqlvar expr="row_item[6]" type="int" optional>,
  <dtml-sqlvar expr="row_item[7]" type="int" optional>,
  <dtml-sqlvar expr="row_item[8]" type="int">, 
  <dtml-sqlvar expr="row_item[9]" type="float" optional>,
  <dtml-sqlvar expr="row_item[10]" type="int" optional>,
  <dtml-sqlvar expr="row_item[11]" type="datetime" optional>,
  <dtml-sqlvar expr="row_item[12]" type="float" optional>,
  <dtml-sqlvar expr="row_item[13]" type="string" optional>,
  <dtml-sqlvar expr="row_item[14]" type="string" optional>,
  <dtml-sqlvar expr="row_item[15]
DELETE FROM
  stock
WHERE
<dtml-in uid>
  uid=<dtml-sqlvar sequence-item type="int"><dtml-if sequence-end><dtml-else> OR </dtml-if>
</dtml-in>
<dtml-var "'\0'">
<dtml-let row_list="[]" uid_dict="{}">
  <dtml-in prefix="loop" expr="_.range(_.len(uid))">
    <dtml-if "not isInventoryMovement[loop_item] and isMovement[loop_item] and isAccountable[loop_item] and getResourceUid[loop_item]">
      <dtml-if "getBaobabDestinationUid[loop_item]">
        <dtml-call expr="uid_dict.update({uid[loop_item]: uid_dict.get(uid[loop_item], -1) + 1})">
            <dtml-call expr="row_list.append([uid[loop_item],                 uid_dict[uid[loop_item]],                 getBaobabDestinationUid[loop_item],                 getBaobabDestinationSectionUid[loop_item],                 getBaobabDestinationPaymentUid[loop_item],                 getExplanationUid[loop_item],                 getBaobabSourceSectionUid[loop_item],                 getBaobabSourceUid[loop_item],                 getResourceUid[loop_it

      </dtml-if>
      <dtml-if "getBaobabSourceUid[loop_item]">
        <dtml-call expr="uid_dict.update({uid[loop_item]: uid_dict.get(uid[loop_item], -1) + 1})">
            <dtml-call expr="row_list.append([uid[loop_item],                 uid_dict[uid[loop_item]],                 getBaobabSourceUid[loop_item],                 getBaobabSourceSectionUid[loop_item],                 getBaobabSourcePaymentUid[loop_item],                 getExplanationUid[loop_item],                 getBaobabDestinationSectionUid[loop_item],                 getBaobabDestinationUid[loop_item],                 getResourceUid[loop_item],                 -(getInventoriatedQuantity[loop_item] or 0),                 isCancellationAmount[loop_item],                 getStartDate[loop_item],                 getSourceInventoriatedTotalAssetPrice[loop_item],                 getPortalType[loop_item],                 getSimulationState[loop_item],                 getBaobabSourceVariationText[loop_item],              

      </dtml-if>
    </dtml-if>
  </dtml-in>
  
  <dtml-if "row_list">
INSERT INTO
  stock
VALUES
    <dtml-in prefix="row" expr="row_list">
  <dtml-sqlvar expr="row_item[0]" type="int">,
  <dtml-sqlvar expr="row_item[1]" type="int">,
  <dtml-sqlvar expr="row_item[2]" type="int">,
  <dtml-sqlvar expr="row_item[3]" type="int" optional>,
  <dtml-sqlvar expr="row_item[4]" type="int" optional>,
  <dtml-sqlvar expr="row_item[5]" type="int" optional>,
  <dtml-sqlvar expr="row_item[6]" type="int" optional>,
  <dtml-sqlvar expr="row_item[7]" type="int" optional>,
  <dtml-sqlvar expr="row_item[8]" type="int">, 
  <dtml-sqlvar expr="row_item[9]" type="float" optional>,
  <dtml-sqlvar expr="row_item[10]" type="int" optional>,
  <dtml-sqlvar expr="row_item[11]" type="datetime" optional>,
  <dtml-sqlvar expr="row_item[12]" type="float" optional>,
  <dtml-sqlvar expr="row_item[13]" type="string" optional>,
  <dtml-sqlvar expr="row_item[14]" type="string" optional>,
  <dtml-sqlvar expr="row_item[15]
alter table Definition drop displayed;
drop trigger if exists updateDef;
create trigger updateDef before update on Definition
for each row
  insert into history_Definition set
    id = OLD.id,
    action = 'UPDATE',
    user = USER(),
    userId = OLD.userId, 
    sourceId = OLD.sourceId,
    lexicon = OLD.lexicon,
    internalRep = OLD.internalRep,
    htmlRep = OLD.htmlRep,
    status = OLD.status,
    createDate = OLD.createDate,
    modDate = OLD.modDate,
    newDate = NEW.modDate,
    modUserId = OLD.modUserId;
drop trigger if exists deleteDef;
create trigger deleteDef before delete on Definition
for each row
  insert into history_Definition SET 
    id = OLD.Id,
    action = 'DELETE',
    user = USER(),
    userId = OLD.UserId, 
    sourceId = OLD.SourceId,
    lexicon = OLD.Lexicon,
    internalRep = OLD.InternalRep,
    htmlRep = OLD.HtmlRep,
    status = OLD.Status,
    createDate = OLD.CreateDate,
    modDate = OLD.ModDate,
    newDate = unix_timestamp(),
    modUserId = OLD.
DELIMITER $$
DROP TRIGGER IF EXISTS `drug_order_after_update`$$
CREATE TRIGGER `drug_order_after_update` AFTER UPDATE 
ON `drug_order`
FOR EACH ROW
BEGIN
    SET @visit = (SELECT COALESCE((SELECT id FROM flat_table2 WHERE  
        (drug_order_id1 = new.order_id OR drug_order_id2 = new.order_id OR drug_order_id3 = new.order_id OR
        drug_order_id4 = new.order_id OR drug_order_id5 = new.order_id)), 0));
    
    SET @drug_set1 = (SELECT COALESCE(drug_order_id1, '') FROM flat_table2 WHERE ID = @visit AND drug_order_id1 = new.order_id);
    
    SET @drug_set2 = (SELECT COALESCE(drug_order_id2, '') FROM flat_table2 WHERE ID = @visit AND drug_order_id2 = new.order_id);
    
    SET @drug_set3 = (SELECT COALESCE(drug_order_id3, '') FROM flat_table2 WHERE ID = @visit AND drug_order_id3 = new.order_id);
    
    SET @drug_set4 = (SELECT COALESCE(drug_order_id4, '') FROM flat_table2 WHERE ID = @visit AND drug_order_id4 = new.order_id);
    
    SET @drug_set5 = (SELECT COALESCE(drug_order

    CASE 
        WHEN @drug_set1 != "" THEN
            
            SET @drug_name = (SELECT name FROM drug WHERE drug_id = new.drug_inventory_id LIMIT 1);
            
            SET @encounter_id = (SELECT encounter_id FROM orders WHERE order_id = new.order_id LIMIT 1);
               
            UPDATE flat_table2 SET drug_inventory_id1 = new.drug_inventory_id, drug_name1 = @drug_name, drug_equivalent_daily_dose1 = new.equivalent_daily_dose, drug_dose1 = new.dose, drug_frequency1 = new.frequency,drug_quantity1 = new.quantity, drug_order_id1 = new.order_id, drug_quantity1_enc_id = @encounter_id, drug_order_id1_enc_id = @encounter_id WHERE flat_table2.id = @visit;
                
        WHEN @drug_set2 != "" THEN        
             
            SET @drug_name = (SELECT name FROM drug WHERE drug_id = new.drug_inventory_id LIMIT 1);
            
            SET @encounter_id = (SELECT encounter_id FROM orders WHERE order_id = new.order_id LIMIT 1);
               
            U

                
        WHEN @drug_set3 != "" THEN
         
            SET @drug_name = (SELECT name FROM drug WHERE drug_id = new.drug_inventory_id LIMIT 1);
            
            SET @encounter_id = (SELECT encounter_id FROM orders WHERE order_id = new.order_id LIMIT 1);
               
            UPDATE flat_table2 SET drug_inventory_id3 = new.drug_inventory_id, drug_name3 = @drug_name, drug_equivalent_daily_dose3 = new.equivalent_daily_dose, drug_dose3 = new.dose, drug_frequency3 = new.frequency,drug_quantity3 = new.quantity, drug_order_id3 = new.order_id, drug_quantity3_enc_id = @encounter_id, drug_order_id3_enc_id = @encounter_id WHERE flat_table2.id = @visit;
                
        WHEN @drug_set4 != "" THEN
         
            SET @drug_name = (SELECT name FROM drug WHERE drug_id = new.drug_inventory_id LIMIT 1);
            
            SET @encounter_id = (SELECT encounter_id FROM orders WHERE order_id = new.order_id LIMIT 1);
               
            UPDATE fl
--==================--
-- DATA VERSION 1.0 --
--==================--
IF NOT EXISTS(SELECT * FROM Clients WHERE ClientID='{ClientID}')
BEGIN
	BEGIN TRANSACTION
	DECLARE @newClientID uniqueidentifier,
			@newUserID uniqueidentifier,
			@perm1ID uniqueidentifier,
			@perm2ID uniqueidentifier,
			@perm3ID uniqueidentifier
	SELECT @newClientID = '{ClientID}',
			@newUserID = NEWID(),
			@perm1ID = NEWID(),
			@perm2ID = NEWID(),
			@perm3ID = NEWID()
	EXEC dbo.CreateClient @newClientID, 'SprocketCMS', 1, @newUserID, NULL
	EXEC dbo.CreateUser @newUserID, @newClientID, 'admin', '{password-hash}', 'System', 'Administrator', 'admin@localhost', 1, 0, 1, 1, null
	EXEC dbo.CreatePermissionType @perm1ID, 'USERADMINISTRATOR', 'Access User Administration', 0, 'SecurityProvider'
	EXEC dbo.CreatePermissionType @perm2ID, 'ROLEADMINISTRATOR', 'Create and Modify Roles', 0, 'SecurityProvider'
	EXEC dbo.CreatePermissionType @perm3ID, 'SUPERUSER', 'Unrestricted Access', 0, 'SecurityProvider'
	EXEC dbo.Assign
USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_supplier')
BEGIN
DROP PROCEDURE sp_update_supplier
Print '' print  ' *** dropping procedure sp_update_supplier'
End
GO
Print '' print  ' *** creating procedure sp_update_supplier'
GO
Create PROCEDURE sp_update_supplier
@old_SUPPLIER_ID[INT],
@old_USER_ID[INT],
@new_USER_ID[INT],
@old_IS_APPROVED[BIT],
@new_IS_APPROVED[BIT],
@old_APPROVED_BY[INT],
@new_APPROVED_BY[INT],
@old_FARM_NAME[NVARCHAR](300),
@new_FARM_NAME[NVARCHAR](300),
@old_FARM_ADDRESS[NVARCHAR](300),
@new_FARM_ADDRESS[NVARCHAR](300),
@old_FARM_CITY[NVARCHAR](50),
@new_FARM_CITY[NVARCHAR](50),
@old_FARM_STATE[NCHAR](50),
@new_FARM_STATE[NCHAR](50),
@old_FARM_TAX_ID[NVARCHAR](64),
@new_FARM_TAX_ID[NVARCHAR](64),
@old_ACTIVE[BIT],
@new_ACTIVE[BIT]
AS
BEGIN
UPDATE supplier
SET USER_ID = @new_USER_ID, IS_APPROVED = @new_IS_APPROVED, APPROVED_BY = @new_APPROVED_BY, FARM_NAME = @new_FARM_NAME, 
FARM_ADDRESS = @new_FARM_ADDRESS, FA
﻿CREATE DATABASE [NewUrls]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'NewUrls', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\NewUrls.mdf' , SIZE = 4096KB , FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'NewUrls_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\NewUrls_log.ldf' , SIZE = 1024KB , FILEGROWTH = 10%)
GO
ALTER DATABASE [NewUrls] SET COMPATIBILITY_LEVEL = 110
GO
ALTER DATABASE [NewUrls] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [NewUrls] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [NewUrls] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [NewUrls] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [NewUrls] SET ARITHABORT OFF 
GO
ALTER DATABASE [NewUrls] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [NewUrls] SET AUTO_CREATE_STATISTICS ON 
GO
ALTER DATABASE [NewUrls] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [NewUrls] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [NewUrls] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [NewUrls] SET

GO
ALTER DATABASE [NewUrls] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [NewUrls] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [NewUrls] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [NewUrls] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [NewUrls] SET  DISABLE_BROKER 
GO
ALTER DATABASE [NewUrls] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [NewUrls] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [NewUrls] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [NewUrls] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [NewUrls] SET  READ_WRITE 
GO
ALTER DATABASE [NewUrls] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [NewUrls] SET  MULTI_USER 
GO
ALTER DATABASE [NewUrls] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [NewUrls] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
USE [NewUrls]
GO
IF NOT EXISTS (SELECT name FROM sys.filegroups WHERE is_default=1 AND name = N'PRIMARY') ALTER DATABASE [NewUrls] MODIFY FILEGROUP [PRIMARY] DEFAULT
GO
CREATE LOGIN [NewUrls_login] WITH PASSW
# ************************************************************
# Sequel Pro SQL dump
# Version 3408
# http://www.sequelpro.com/
# http://code.google.com/p/sequel-pro/
# Host: 127.0.0.1 (MySQL 5.5.9)
# Database: stuffthedragon
# Generation Time: 2012-06-28 16:11:36 -0400
# ************************************************************
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
# Dump of table albums
# ------------------------------------------------------------
DROP TABLE IF EXISTS `albums`;
CREATE TABLE `albums` (
  `album_id` int(11) NOT NULL AUTO_INCREMENT,
  `album_title` varchar(120) NOT N

  `album_desc` text NOT NULL,
  `date_uploaded` datetime NOT NULL,
  PRIMARY KEY (`album_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
# Dump of table bio
# ------------------------------------------------------------
DROP TABLE IF EXISTS `bio`;
CREATE TABLE `bio` (
  `bio_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `bio_text` text NOT NULL,
  PRIMARY KEY (`bio_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
# Dump of table bio_photos
# ------------------------------------------------------------
DROP TABLE IF EXISTS `bio_photos`;
CREATE TABLE `bio_photos` (
  `bio_photo_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `bio_photo_path` varchar(100) NOT NULL DEFAULT '',
  `bio_photo_desc` text NOT NULL,
  `bio_photo_title` varchar(120) DEFAULT NULL,
  PRIMARY KEY (`bio_photo_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
# Dump of table blog
# ------------------------------------------------------------
DROP TABLE IF EXISTS `blog`;
CREATE TABLE `blog` (
  `blog_id` int(11) NOT NULL,
  `bl

  `blog_content` text NOT NULL,
  `blog_title` varchar(80) NOT NULL DEFAULT '',
  `date_uploaded` datetime NOT NULL,
  PRIMARY KEY (`blog_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
# Dump of table blog_photos
# ------------------------------------------------------------
DROP TABLE IF EXISTS `blog_photos`;
CREATE TABLE `blog_photos` (
  `blog_photo_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `blog_photo_title` varchar(80) NOT NULL DEFAULT '',
  `blog_photo_desc` int(11) NOT NULL,
  `blog_id` int(11) NOT NULL,
  `blog_photo_path` varchar(120) NOT NULL DEFAULT '',
  `date_uploaded` datetime DEFAULT NULL,
  PRIMARY KEY (`blog_photo_id`),
  KEY `blog_id` (`blog_id`),
  CONSTRAINT `blog_photos_ibfk_1` FOREIGN KEY (`blog_id`) REFERENCES `blog` (`blog_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
# Dump of table booking_contacts
# ------------------------------------------------------------
DROP TABLE IF EXISTS `booking_contacts`;
CREATE TABLE `bo
﻿-- Examples for queries that exercise different SQL objects implemented by this assembly
-----------------------------------------------------------------------------------------
-- Stored procedure
-----------------------------------------------------------------------------------------
-- exec StoredProcedureName
-----------------------------------------------------------------------------------------
-- User defined function
-----------------------------------------------------------------------------------------
-- select dbo.FunctionName()
-----------------------------------------------------------------------------------------
-- User defined type
-----------------------------------------------------------------------------------------
-- CREATE TABLE test_table (col1 UserType)
-- go
--
-- INSERT INTO test_table VALUES (convert(uri, 'Instantiation String 1'))
-- INSERT INTO test_table VALUES (convert(uri, 'Instantiation String 2'))
-- INSERT INTO test_table VALUES (convert(uri, 
SET VERIFY OFF
connect "SYS"/"&&sysPassword" as SYSDBA
set echo on
spool C:\app\oracle\admin\XXXDBXXX\scripts\postScripts.log append
UPDATE sys.USER$ set SPARE6=NULL;
@C:\app\oracle\product\12.1.0\dbhome_1\rdbms\admin\dbmssml.sql;
@C:\app\oracle\product\12.1.0\dbhome_1\rdbms\admin\dbmsclr.plb;
execute dbms_datapump_utl.replace_default_dir;
commit;
connect "SYS"/"&&sysPassword" as SYSDBA
alter session set current_schema=ORDSYS;
@C:\app\oracle\product\12.1.0\dbhome_1\ord\im\admin\ordlib.sql;
alter session set current_schema=SYS;
connect "SYS"/"&&sysPassword" as SYSDBA
create or replace directory XMLDIR as 'C:\app\oracle\product\12.1.0\dbhome_1\rdbms\xml';
create or replace directory XSDDIR as 'C:\app\oracle\product\12.1.0\dbhome_1\rdbms\xml\schema';
connect "SYS"/"&&sysPassword" as SYSDBA
connect "SYS"/"&&sysPassword" as SYSDBA
execute ORACLE_OCM.MGMT_CONFIG_UTL.create_replace_dir_obj;
execute dbms_qopatch.replace_logscrpt_dirs;
connect "SYS"/"&&sysPassword" as SYSDBA
set echo on
spool C
/*
Problem Statement
Given a table STATION that holds data for five fields namely ID, CITY, STATE, NORTHERN LATITUDE and WESTERN LONGITUDE.
+-------------+------------+
| Field       |   Type     |
+-------------+------------+
| ID          | INTEGER    |
| CITY        | VARCHAR(21)|
| STATE       | VARCHAR(2) |
| LAT_N       | NUMERIC    |
| LONG_W      | NUMERIC    |
+-------------+------------+
Consider P1(a, b) and P2(c, d) be two points on 2D plane, where (a, b) be minimum and maximum values of Northern Latitude and (c, d) be minimum and maximum values of Western Longitude. Write a query to print the Euclidean Distance between points P1 and P2 up to 4 decimal digits.
*/
/*
Enter your query here.
Please append a semicolon ";" at the end of the query and enter your query in a single line to avoid error.
*/
--use the Euclidean Distance formula: sqrt((x2-x1)^2+(y2-y1)^2)
select cast(
        (sqrt(
            (square((min(long_w)-min(lat_n))) + square((max(long_w)-max(lat_n))))
     
UPDATE `productmanage`.`project` SET `model_number`='ZJ40DBS-J' WHERE `manufacture_number`='SX40DBSJ05005T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05043T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05044T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05045T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05065T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05066T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ50DBS05067T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ50DBS05068T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05069T';
UPDATE `productmanage`.`project` SET `model

UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05071T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05072T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05073T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05074T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05075T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05076T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05087T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05088T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ30DBS' WHERE `manufacture_number`='SZ30DBS05089T';
UPDATE `productmanage`.`project` SET `model_n

UPDATE `productmanage`.`project` SET `model_number`='ZJ70/4500LDB' WHERE `manufacture_number`='SZ70LDB05016TT';
UPDATE `productmanage`.`project` SET `model_number`='ZJ50DT-2' WHERE `manufacture_number`='SZ50DT05019T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ50DBS' WHERE `manufacture_number`='SZ50DBS05020T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ40LC' WHERE `manufacture_number`='SZ40LC05022T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ50DBS' WHERE `manufacture_number`='SZ50DBS05025T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ50DBS' WHERE `manufacture_number`='SZ50DBS05026T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ50DBS' WHERE `manufacture_number`='SZ50DBS05027T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ50DBS' WHERE `manufacture_number`='SZ50DBS05028T';
UPDATE `productmanage`.`project` SET `model_number`='ZJ50DBS' WHERE `manufacture_number`='SZ50DBS05029T';
UPDATE `productmanage`.`project` SET `mod
--------------------------------------------------------
--  File created - Thursday-June-28-2012   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table CITIZENINFO
--------------------------------------------------------
  CREATE TABLE "MULEDEMO"."CITIZENINFO" 
   (	"CITIZENID" VARCHAR2(20 BYTE), 
	"IDENTITYSERVICEVERSION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into MULEDEMO.CITIZENINFO
SET DEFINE OFF;
Insert into MULEDEMO.CITIZENINFO (CITIZENID,IDENTITYSERVICEVERSION) values ('112233','1');
Insert into MULEDEMO.CITIZENINFO (CITIZENID,IDENTITYSERVICEVERSION) values ('111111','2');
Insert into MULEDEMO.CITIZENINF
INSERT INTO `creature_model_info` (`modelid`) VALUES (49836); -- (Entry: 72463).
INSERT INTO `creature_model_info` (`modelid`) VALUES (51270); -- (Entry: 73355).
INSERT INTO `creature_model_info` (`modelid`) VALUES (51279); -- (Entry: 73367).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47856); -- (Entry: 73732).
INSERT INTO `creature_model_info` (`modelid`) VALUES (51990); -- (Entry: 74405).
INSERT INTO `creature_model_info` (`modelid`) VALUES (51812); -- (Entry: 73718).
INSERT INTO `creature_model_info` (`modelid`) VALUES (51254); -- (Entry: 71824).
INSERT INTO `creature_model_info` (`modelid`) VALUES (49084); -- (Entry: 71693).
INSERT INTO `creature_model_info` (`modelid`) VALUES (46498); -- (Entry: 67869).
INSERT INTO `creature_model_info` (`modelid`) VALUES (46499); -- (Entry: 67869).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47690); -- (Entry: 69794).
INSERT INTO `creature_model_info` (`modelid`) VALUES (48856); -- (Entry: 71016).
INSERT INTO `creature_model_

INSERT INTO `creature_model_info` (`modelid`) VALUES (47960); -- (Entry: 70260).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47708); -- (Entry: 69820).
INSERT INTO `creature_model_info` (`modelid`) VALUES (46321); -- (Entry: 67564).
INSERT INTO `creature_model_info` (`modelid`) VALUES (51272); -- (Entry: 73357).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47828); -- (Entry: 70026).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47826); -- (Entry: 70025).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47252); -- (Entry: 69748).
INSERT INTO `creature_model_info` (`modelid`) VALUES (46937); -- (Entry: 68805).
INSERT INTO `creature_model_info` (`modelid`) VALUES (46902); -- (Entry: 68666).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47372); -- (Entry: 61600).
INSERT INTO `creature_model_info` (`modelid`) VALUES (51504); -- (Entry: 73738).
INSERT INTO `creature_model_info` (`modelid`) VALUES (48705); -- (Entry: 71200).
INSERT INTO `creature_model

INSERT INTO `creature_model_info` (`modelid`) VALUES (46720); -- (Entry: 68267).
INSERT INTO `creature_model_info` (`modelid`) VALUES (46947); -- (Entry: 68838).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47748); -- (Entry: 69892).
INSERT INTO `creature_model_info` (`modelid`) VALUES (48001); -- (Entry: 70144).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47957); -- (Entry: 70258).
INSERT INTO `creature_model_info` (`modelid`) VALUES (48662); -- (Entry: 71033).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47990); -- (Entry: 69819).
INSERT INTO `creature_model_info` (`modelid`) VALUES (47887); -- (Entry: 69818).
INSERT INTO `creature_model_info` (`modelid`) VALUES (48091); -- (Entry: 70098).
INSERT INTO `creature_model_info` (`modelid`) VALUES (51488); -- (Entry: 73702).
INSERT INTO `creature_model_info` (`modelid`) VALUES (46921); -- (Entry: 68654).
INSERT INTO `creature_model_info` (`modelid`) VALUES (46924); -- (Entry: 68660).
INSERT INTO `creature_model
--------------------------------------------------------
--  DDL for Table AIRPORT
--------------------------------------------------------
DROP TABLE "AIRPORT";
  CREATE TABLE "KDR213"."AIRPORT" 
   (	"AIRPORT_ID" NUMBER, 
	"IATA_FAA" VARCHAR2(3 BYTE), 
	"NAME" VARCHAR2(20 BYTE), 
	"ICAO" VARCHAR2(4 BYTE), 
	"CITY" VARCHAR2(20 BYTE), 
	"COUNTRY" VARCHAR2(20 BYTE), 
	"LATITUDE" NUMBER, 
	"LONGITUDE" NUMBER, 
	"ALTITUDE" NUMBER, 
	"TIME_ZONE" NUMBER, 
	"DST" VARCHAR2(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AIRPORT_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "KDR213"."AIRPORT_PK" ON "KDR213"."AIRPORT" ("AIR

  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table AIRPORT
--------------------------------------------------------
  ALTER TABLE "KDR213"."AIRPORT" ADD CONSTRAINT "AIRPORT_PK" PRIMARY KEY ("AIRPORT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "KDR213"."AIRPORT" MODIFY ("CITY" NOT NULL ENABLE);
  ALTER TABLE "KDR213"."AIRPORT" MODIFY ("COUNTRY" NOT NULL ENABLE);
  ALTER TABLE "KDR213"."AIRPORT" MODIFY ("LATITUDE" NOT NULL ENABLE);
  ALTER TAB
CREATE TABLE TX_CHANGE_LOGS(
	OBJ_CLASS varchar(255) NOT NULL,
	OBJ_ID int(11) NOT NULL,
	OBJ_ATTR varchar(255) NOT NULL,
	TX_NUMBER int(11)
) TYPE=InnoDB;
CREATE TABLE LAST_TX_PROCESSED(
        SERVER varchar(255) NOT NULL,
	LAST_TX int(11) NOT NULL,
	LAST_UPDATE timestamp
) TYPE=InnoDB;
CREATE TABLE `TRANSACTION_STATISTICS` (
  `SERVER` varchar(255) NOT NULL default '',
  `NUM_REPORT` int(11) NOT NULL,
  `NUM_READS` int(11) NOT NULL,
  `NUM_WRITES` int(11) NOT NULL,
  `NUM_ABORTS` int(11) NOT NULL,
  `NUM_CONFLICTS` int(11) NOT NULL,
  `SECONDS` int(11) NOT NULL,
  `STATS_WHEN` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `READ_ONLY_READS_MIN` int(11),
  `READ_ONLY_READS_MAX` int(11),
  `READ_ONLY_READS_SUM` BIGINT,
  `READ_WRITE_READS_MIN` int(11),
  `READ_WRITE_READS_MAX` int(11),
  `READ_WRITE_READS_SUM` BIGINT,
  `READ_WRITE_WRITES_MIN` int(11),
  `READ_WRITE_WRITES_MAX` int(11),
  `READ_WRITE_WRITES_SUM` BIGINT
) TYPE=InnoDB;
CREATE TABLE SERVICE_LOG (
	INVOCATION_DATE times
CREATE TABLE `xplugin_agws_nosto_track_accounts` (
  `cAccountID` VARCHAR(255),
  `kSprache` INT UNSIGNED NOT NULL
) ENGINE = MYISAM DEFAULT CHARSET = latin1;
INSERT INTO xplugin_agws_nosto_track_recommendations ( iNostoRecommendationsSlotID ,iSideID ,cCSSSelektor ,cPQueryMethode ,cRecommendationsSlotID ,bActivate )
        SELECT 100,  1, '#content',          'append', 'productpage-nosto-3',     1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_recommendations)
 UNION (SELECT 101,  1, '#content',          'append', 'productpage-nosto-2',     1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_recommendations))
 UNION (SELECT 102,  2, '.category_wrapper', 'after',  'productcategory-nosto-1', 1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_recommendations))
 UNION (SELECT 103,  1, '#content',          'append', 'productpage-nosto-3',     1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_recommendations))
 UNION 

 UNION (SELECT 105,  2, '.category_wrapper', 'after',  'productcategory-nosto-1', 1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_recommendations))
 UNION (SELECT 106,  2, '#content',          'append', 'productcategory-nosto-2', 1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_recommendations))
 UNION (SELECT 107,  2, '#improve_search',   'before', 'searchpage-nosto-1',      1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_recommendations))
 UNION (SELECT 108,  3, '#content',          'append', 'cartpage-nosto-1',        1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_recommendations))
 UNION (SELECT 109,  3, '#content',          'append', 'cartpage-nosto-2',        1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_recommendations))
 UNION (SELECT 110,  3, '#content',          'append', 'cartpage-nosto-3',        1 FROM dual WHERE NOT EXISTS (SELECT * FROM xplugin_agws_nosto_track_rec
proc $sc_$cpu_evs_send_debug
;JAN 11 2006 CFE_TBL added
;APR 14 2006 updated message for CFE_SB
on ERROR resume
#include "ut_statusdefs.h"
write
write "*** Sending DEBUG message for CFE_EVS."
write "*** NO messages are being generated at this time ***"
write ""
write "*** Sending DEBUG message for CFE_SB."
write "*** NO messages are being generated at this time ***"
write ""
write "*** Sending DEBUG message for CFE_ES."
write "*** NO messages are being generated at this time ***"
write ""
write "*** Sending DEBUG message for CFE_TIME."
write "*** NO messages are being generated at this time ***"
write ""
write "*** Sending DEBUG message for CFE_TBL."
write "*** NO messages are being generated at this time ***"
write ""
write "*** Sending DEBUG message for CI_APP."
write "*** NO messages are being generated at this time ***"
write
write "*** Sending DEBUG message for TO_APP."
write "*** NO messages are being generated at this time ***"
write
write "*** Sending DEBUG message for TST_EVS.
-- Trigger encargado de la gestión de la valoración media de cada una de las películas
-- de la colección pública.
CREATE OR REPLACE TRIGGER valoracion_media_insertar
BEFORE INSERT OR UPDATE OR DELETE ON Vista
FOR EACH ROW
DECLARE
	cuenta NUMBER(10,5);
	valoracion_pelicula NUMBER(10,5);
BEGIN
	if inserting then
		SELECT numVistas INTO cuenta FROM Pelicula WHERE (id=:new.pelicula);
		SELECT puntuacion INTO valoracion_pelicula FROM Pelicula WHERE (id=:new.pelicula); 
		UPDATE Pelicula SET valoracion=((valoracion_pelicula+:new.valoracion)/(cuenta + 1)) WHERE (id=:new.pelicula);
		UPDATE Pelicula SET numVistas=cuenta+1 where (id=:new.pelicula);
		UPDATE Pelicula SET puntuacion=(valoracion_pelicula+:new.valoracion) WHERE (id=:new.pelicula);
	elsif updating then
		SELECT puntuacion INTO valoracion_pelicula FROM Pelicula WHERE (id=:new.pelicula); 
		UPDATE Pelicula SET puntuacion=(valoracion_pelicula-:old.valoracion) WHERE (id=:new.pelicula);
		SELECT puntuacion INTO valoracion_pelicula FROM 
proc $sc_$cpu_evs_send_crit
;JAN 11 2006 CFE_TBL added
on ERROR resume
#include "ut_statusdefs.h"
write
write "     Sending CRITICAL message for CFE_EVS."
write "     *** EVS messages are all INFO type ***"
write ""
write "     Sending CRITICAL message for CFE_SB."
write "     *** NO CRITICAL messages are available at this time ***"
write ""
write "     Sending CRITICAL message for CFE_ES."
write "     *** NO CRITICAL messages are available at this time ***"
write ""
write "     Sending CRITICAL message for CFE_TIME."
write "     *** NO CRITICAL messages are available at this time ***"
write ""
write "     Sending CRITICAL message for CFE_TBL."
write "     *** NO CRITICAL messages are available at this time ***"
write ""
write "     Sending CRITICAL message for CI_APP."
write "     *** NO CRITICAL messages are available at this time ***"
write ""
write "     Sending CRITICAL message for TO_APP."
write "     *** NO CRITICAL messages are available at this time ***"
write ""
write "     S
DROP TABLE IF EXISTS `commh_log`;
DROP TRIGGER  ai_commh;
DROP TRIGGER  au_commh;
DROP TRIGGER  ad_commh;
CREATE TABLE `commh_log` (
  `id`     INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ts`     datetime,
  `action` ENUM('create','update old','update new', 'delete'),
  `commh_id` int(11) NOT NULL,
  `comm_type` int(1) NOT NULL COMMENT '0 creacion, 1 abono, 2 Renovacion, 3 mensual, 4 reversa, 5 NR',
  `inv_id` int(11) NOT NULL,
  `inv_num` int(11) NOT NULL,
  `inv_name` varchar(100) NOT NULL,
  `investor_id` varchar(20) NOT NULL,
  `operation_date` date NOT NULL,
  `comm_date` date NOT NULL,
  `inv_length` int(2) NOT NULL,
  `inv_exp_period` int(2) NOT NULL,
  `inv_amount` bigint(20) NOT NULL,
  `exec_comm` bigint(20) NOT NULL,
  `dc1_comm` bigint(20) DEFAULT NULL,
  `dc2_comm` bigint(20) DEFAULT NULL,
  `dc3_comm` bigint(20) DEFAULT NULL,
  `dc4_comm` bigint(20) DEFAULT NULL,
  `dc5_comm` bigint(20) DEFAULT NULL,
  `exec_initials` varchar(5) NOT NULL,
  `dc1_initials` varchar(5) DEFAULT 

  `dc2_initials` varchar(5) DEFAULT NULL,
  `dc3_initials` varchar(5) DEFAULT NULL,
  `dc4_initials` varchar(5) DEFAULT NULL,
  `dc5_initials` varchar(5) DEFAULT NULL,
  `exec_id` int(11) NOT NULL,
  `dc1_id` int(11) DEFAULT NULL,
  `dc2_id` int(11) DEFAULT NULL,
  `dc3_id` int(11) DEFAULT NULL,
  `dc4_id` int(11) DEFAULT NULL,
  `dc5_id` int(11) DEFAULT NULL,
  `exec_value` decimal(4,2) NOT NULL,
  `dc1_value` decimal(4,2) DEFAULT NULL,
  `dc2_value` decimal(4,2) DEFAULT NULL,
  `dc3_value` decimal(4,2) DEFAULT NULL,
  `dc4_value` decimal(4,2) DEFAULT NULL,
  `dc5_value` decimal(4,2) DEFAULT NULL,
  `csch_start_date` date NOT NULL,
  `csch_id` int(11) NOT NULL,
  `state` int(1) NOT NULL DEFAULT '0' COMMENT '0 ok, 1 nok, 2 no pagada, 3 calcular',
  `paid_exec` bigint(20) DEFAULT NULL,
  `paid_dc1` bigint(20) DEFAULT NULL,
  `paid_dc2` bigint(20) DEFAULT NULL,
  `paid_dc3` bigint(20) DEFAULT NULL,
  `comments` varchar(200) DEFAULT NULL,
  `creation_date` datetime NOT NULL,
  `creation_

  `lastmod_date` datetime DEFAULT NULL,
  `lastmod_user` varchar(20) DEFAULT NULL,
  `modified` int(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;
delimiter //
CREATE TRIGGER ai_commh AFTER INSERT ON commission_history
FOR EACH ROW
BEGIN
  INSERT INTO commh_log (action,ts,commh_id, comm_type, inv_id, inv_num, inv_name, investor_id, operation_date, comm_date, inv_length, inv_exp_period,inv_amount, exec_comm, 
		dc1_comm, dc2_comm, dc3_comm, dc4_comm, dc5_comm, exec_initials, dc1_initials, dc2_initials, dc3_initials, dc4_initials, dc5_initials, 
		exec_id, dc1_id, dc2_id, dc3_id, dc4_id, dc5_id, exec_value, dc1_value, dc2_value, dc3_value, dc4_value, dc5_value, csch_start_date, csch_id , comments, creation_date, creation_user,
		lastmod_date, lastmod_user, modified)
  VALUES('create',NOW(), NEW.id, NEW.comm_type, NEW.inv_id, NEW.inv_num, NEW.inv_name, NEW.investor_id, NEW.operation_date, NEW.comm_date, NEW.inv_length, NEW.inv_exp_period, NE
-- ViewName : VideoUploadView
start transaction;
# module
SELECT @FKModule := IDModule FROM lkp_module WHERE ModuleName = 'Media';
# delete columns
SELECT @idView := ifnull((SELECT IDListView FROM listview_master WHERE ViewName = 'VideoUploadView'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((SELECT FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# UPDATE sequence
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListV

UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewCriteria),0) FROM listview_criteria) WHERE seq_name = 'ListCriteria_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewFieldMapping),0) FROM listview_fieldmapping) WHERE seq_name = 'ListFieldMapping_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListView),0) FROM listview_master WHERE IsCustomList = 0) WHERE seq_name = 'ListBox_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewSortby),0) FROM listview_sortoption) WHERE seq_name = 'ListSortby_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListColumn),0) FROM listview_columns) WHERE seq_name = 'ListColumn_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDProductViewMenu),0) FROM cnf_productviewmenu) WHERE seq_name = 'CNF_ProductViewMenu_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListActionItem),0) FROM listview_actionlinks) WHERE seq_name = 'ListAction_SE

UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewFilterBy),0) FROM listview_filteroption) WHERE seq_name = 'ListFilterby_SEQ';
UPDATE sequence_table SET seq_count = (SELECT ifnull(max(IDListViewGroupby),0) FROM listview_groupbyoption) WHERE seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
SELECT @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) FROM listview_fieldmaster;
SELECT @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) FROM listview_criteria;
SELECT @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) FROM listview_fieldmapping;
SELECT @IDListView := ifnull(max(IDListView), 0) FROM listview_master;
SELECT @IDListViewSortby := ifnull(max(IDListViewSortby), 0) FROM listview_sortoption;
SELECT @IDListColumn := ifnull(max(IDListColumn), 0) FROM listview_columns;
SELECT @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) FROM cnf_productviewmenu;
SELECT @IDListActionItem := ifnull(max(IDListActionItem), 0) FROM li
-- Insert reserved aliases. These are mandatory to make Kunena to work.
INSERT INTO `#__kunena_aliases`
	(`alias`,				`type`,		`item`,			`state`) VALUES
	('announcement',		'view',		'announcement',		1),
	('category',			'view',		'category',			1),
	('common',				'view',		'common',			1),
	('credits',				'view',		'credits',			1),
	('home',				'view',		'home',				1),
	('misc',				'view',		'misc',				1),
	('search',				'view',		'search',			1),
	('statistics',			'view',		'statistics',		1),
	('topic',				'view',		'topic',			1),
	('topics',				'view',		'topics',			1),
	('user',				'view',		'user',				1),
	('category/create',		'layout',	'category.create',	1),
	('create',				'layout',	'category.create',	0),
	('category/default',	'layout',	'category.default',	1),
	('default',				'layout',	'category.default',	0),
	('category/edit',		'layout',	'category.edit',	1),
	('edit',				'layout',	'category.edit',	0),
	('category/manage',		'layout',	'category.manage',	1),
	('manage',				'layout',	'category.mana
;******************************************************************************
; HDD COMMANDS
;******************************************************************************
ENTER_IDLE	EQU	001H	; FORCES CPU INTO IDLE STATE, MAY RESPOND WITH ERROR
REQUEST_WRITE	EQU	002H	; REQUESTS TO WRITE, WILL RESPOND WITH ACK IF OKAY
REQUEST_READ	EQU	003H	; REQUESTS TO READ, WILL RESPOND WITH ACK IF OKAY
START_FRAME	EQU	004H	; INDICATES THE START OF A DATA FRAME
END_FRAME	EQU	005H	; INDICATES THE END OF A DATA FRAME
STATUS		EQU	006H	; WILL RETURN THE STATUS OF THE DISK.
				; IF THE DISK IS NOT IDLE OR WAITING, AN ERROR WILL RETURN
;******************************************************************************
; HDD RESPONSES
;******************************************************************************
ACKNOWLEDGE	EQU	007H	; RESPONSE TO ACKOWLEDGE A READ/WRITE REQUEST
WRITE_OKAY	EQU	008H	; SENT AFTER RECIEVING AN END_FRAME IF THE WRITE WAS SUCCESSFUL
READ_OKAY	EQU	009H	; SENT AFTER RECIEVING AN AC

WRITE_ERROR	EQU	0F0H	; OCCURS IF AN END_FRAME IS NOT SENT AFTER THE DATA FRAME
READ_ERROR	EQU	0F1H	; OCCURS IF AN END_FRAME IS NOT SENT AFTER THE ADDRESS, OR AN ACK IS NOT SENT AFTER THE DATA OR THE CPU ATTEMPTS TO SEND DATA DURING A READ OPERATION
NACK_ERROR	EQU	0F2H	; OCCURS IF A COMMAND IS NOT RECOGNIZED FROM THE IDLE STATE
PROC_ERROR	EQU	0F3H	; OCCURS IF THE COMMAND IS NOT RECOGNIZED FROM A WAITING STATE
;******************************************************************************
; HDD STATUSES
;******************************************************************************
IDLE		EQU	001H	; DISK IS DOING NOTHING
WRITE_PROC	EQU	002H	; DISK IS IN A WRITE PROCESS, EXPECTING DATA FROM CPU
READ_PROC	EQU	004H	; DISK IS IN A READ PROCESS, SENDING DATA TO CPU
WAITING 	EQU	008H	; DISK IS WAITING FOR A START FRAME OR IDLE COMMAND
;******************************************************************************
; POTENTIAL HDD ERROR CONDITIONS
;***********************************************
-- Triggers
DELIMITER //
CREATE TRIGGER deleteEvenement
AFTER DELETE ON alerteEvenement
FOR EACH ROW
BEGIN
	DELETE FROM ajoutEvenement WHERE type = OLD.type AND nom_ligne = OLD.nom_ligne AND nom_arret = OLD.nom_arret;
END;
//
DELIMITER ;
DELIMITER //
CREATE TRIGGER insertAlerte
AFTER INSERT ON ajoutEvenement
FOR EACH ROW
BEGIN
	IF ((SELECT COUNT(*) FROM alerteEvenement al WHERE al.type = NEW.type AND al.nom_ligne = NEW.nom_ligne AND al.nom_arret = NEW.nom_arret) = 0) OR NEW.description !="" THEN
		INSERT INTO alerteEvenement (nombre, nom_ligne, nom_arret, type, description, date_time) VALUES (1, NEW.nom_ligne, NEW.nom_arret, NEW.type, NEW.description, NEW.date_time);
	ELSE
		IF (SELECT COUNT(*) FROM alerteEvenement al WHERE al.type = NEW.type AND al.nom_ligne = NEW.nom_ligne AND al.nom_arret = NEW.nom_arret AND TIMESTAMPDIFF(HOUR, al.date_time, LOCALTIME) < 2) > 0 THEN
			UPDATE alerteEvenement al SET nombre = nombre + 1, date_time = NEW.date_time WHERE al.type = NEW.type AND al.nom_li
-- phpMyAdmin SQL Dump
-- version 3.5.2.2
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1:3306
-- Generation Time: Oct 22, 2012 at 03:11 PM
-- Server version: 5.1.65-community-log
-- PHP Version: 5.3.17
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `dial_cms`
--
-- --------------------------------------------------------
--
-- Table structure for table `AuthAssignment`
--
CREATE TABLE IF NOT EXISTS `AuthAssignment` (
  `itemname` varchar(64) NOT NULL,
  `userid` varchar(64) NOT NULL,
  `bizrule` text,
  `data` text,
  PRIMARY KEY (`itemname`,`userid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--
-- Dumping data for table `AuthAssignment`
--
INSERT INTO `AuthAssignment` (`itemname`, `userid`, `bizrule`, `data`) VALUES
('admin', 'a

('author', 'authorB', NULL, 'N;'),
('editor', 'editorC', NULL, 'N;'),
('reader', 'readerA', NULL, 'N;');
-- --------------------------------------------------------
--
-- Table structure for table `AuthItem`
--
CREATE TABLE IF NOT EXISTS `AuthItem` (
  `name` varchar(64) NOT NULL,
  `type` int(11) NOT NULL,
  `description` text,
  `bizrule` text,
  `data` text,
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--
-- Dumping data for table `AuthItem`
--
INSERT INTO `AuthItem` (`name`, `type`, `description`, `bizrule`, `data`) VALUES
('admin', 2, '', NULL, 'N;'),
('author', 2, '', NULL, 'N;'),
('createPost', 0, 'создание записи', NULL, 'N;'),
('deletePost', 0, 'удаление записи', NULL, 'N;'),
('editor', 2, '', NULL, 'N;'),
('reader', 2, '', NULL, 'N;'),
('readPost', 0, 'просмотр записи', NULL, 'N;'),
('updateOwnPost', 1, 'редактирование своей записи', 'return Yii::app()->user->id==$params["post"]->authID;', 'N;'),
('updatePost', 0, 'редактирование записи', NULL, 'N;');
-- ----

--
-- Table structure for table `AuthItemChild`
--
CREATE TABLE IF NOT EXISTS `AuthItemChild` (
  `parent` varchar(64) NOT NULL,
  `child` varchar(64) NOT NULL,
  PRIMARY KEY (`parent`,`child`),
  KEY `child` (`child`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--
-- Dumping data for table `AuthItemChild`
--
INSERT INTO `AuthItemChild` (`parent`, `child`) VALUES
('admin', 'author'),
('author', 'createPost'),
('admin', 'deletePost'),
('admin', 'editor'),
('author', 'reader'),
('editor', 'reader'),
('reader', 'readPost'),
('author', 'updateOwnPost'),
('editor', 'updatePost'),
('updateOwnPost', 'updatePost');
-- --------------------------------------------------------
--
-- Table structure for table `dial_label`
--
CREATE TABLE IF NOT EXISTS `dial_label` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `key` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `key` (`key`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=22 ;
--
-- Dumping data for table `dial_label`
--
INSERT I
insert into SYS_Menu values('Url_VerifyCKD_View','CKD日志','Menu.CKD.Info',100,'CKD日志','~/VerifyCKD/Index','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_VerifyCKD_View','CKD日志','CKD')
go
insert into SYS_Codemstr(Code,Desc1,Type) values('VerifyCKDErrorId','CKD错误日志',0)
insert into SYS_CodeDet(Code, Value, Desc1, IsDefault, Seq) values('VerifyCKDErrorId', '101', 'CodeDetail_VerifyCKDErrorId_101', 0, 1)
insert into SYS_CodeDet(Code, Value, Desc1, IsDefault, Seq) values('VerifyCKDErrorId', '102', 'CodeDetail_VerifyCKDErrorId_102', 0, 2)
go
/****** Object:  Table [dbo].[ERR_VerifyCKD]    Script Date: 03/18/2013 11:17:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ERR_VerifyCKD](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[CreateDate] [datetime] NULL,
	[CreateUser] [int] NULL,
	[ErrorId] [int] NULL,
	[ErrorMsg] [varchar](500) NULL,
	[CreateUserNm] [nvarchar](50) NULL,
 CONSTRAINT [PK_ERR_VerifyCKD] PRIMARY KEY C

	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
 go
  insert into SYS_Menu values('Url_ContainerReceipt_View','通关确认','Url_DistributionIpMaster',300,'通关确认','~/ContainerReceip/Index','~/Content/Images/Nav/Default.png',1)
   go
   insert into ACC_Permission values('Url_ContainerReceipt_View','通关确认','Distribution')
   go
  go
 alter table CKD_ProdCodeSimpleCode add StartDate datetime not null
 go
 alter table CKD_ProdCodeSimpleCode add EndDate datetime  null
 go
  update SYS_Menu set Parent='Menu.CKD.Trans.MMO.Trans' ,Seq=104500 where Code='Url_ContainerReceipt_View'
 go
 update SYS_Menu set IsActive=0 where Parent='Url_DistributionIpMaster'
go
insert into SYS_Menu values('Url_MiscOrder_MiscTransferFixOrder','整修件移转单','Menu.Order.Trans',12100,'整修件移转单',null,'~/Content/Images/Nav/Default.png',1)
go
insert into SYS_Menu values('Url_MiscTransferFixOrder_
IF OBJECT_ID('dbo.wsp_newRenewalXaction') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newRenewalXaction
    IF OBJECT_ID('dbo.wsp_newRenewalXaction') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newRenewalXaction >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newRenewalXaction >>>'
END
go
 /******************************************************************
**
** CREATION:
**   Author:  Andy Tran
**   Date:  June 2008 
**   Description:  Inserts row into RenewalTransaction
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
******************************************************************************/
CREATE PROCEDURE wsp_newRenewalXaction
 @userId                     NUMERIC(12,0)
,@subscriptionOfferDetailId  SMALLINT
AS
DECLARE
 @return   INT
,@dateNow  DATETIME
EXEC @return = dbo.wsp_GetDateGMT @dateNow OUTPUT
IF @return != 0
    BEGIN
        RETURN @return
    END
BEGIN TRAN TRAN_newRenewalXaction
    INSERT RenewalTransaction (
       
{Photoshop version 1.0.1, file: UDraw.p.inc
  Computer History Museum, www.computerhistory.org
  This material is (C)Copyright 1990 Adobe Systems Inc.
  It may not be distributed to third parties.
  It is licensed for non-commercial use according to 
  www.computerhistory.org/softwarelicense/photoshop/ }
PROCEDURE InitDrawing; EXTERNAL;
FUNCTION DoEraserTool (view: TImageView; magic: BOOLEAN): TCommand; EXTERNAL;
FUNCTION DoPencilTool (view: TImageView; pt: Point): TCommand; EXTERNAL;
FUNCTION DoBrushTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoAirbrushTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoBlurTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoSharpenTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoSmudgeTool (view: TImageView; dip: BOOLEAN): TCommand; EXTERNAL;
FUNCTION DoStampTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoStampPadTool (view: TImageView; pt: Point): TCommand; EXTERNAL;
FUNCTION DoEraseAll (view: TImageView): TCommand; 
  --Account View
SELECT dropIfExists('VIEW', 'account', 'api');
  CREATE OR REPLACE VIEW api.account AS
  SELECT 
    c.crmacct_number::varchar AS account_number,
    p.crmacct_number AS parent_account,
    c.crmacct_name AS account_name,
    c.crmacct_active AS active,
    CASE WHEN (c.crmacct_type='O') THEN
      'Organization'
    ELSE 'Individual'
    END AS type,
    pc.cntct_number AS primary_contact_number,
    pc.cntct_honorific AS primary_contact_honorific,
    pc.cntct_first_name AS primary_contact_first,
    pc.cntct_middle AS primary_contact_middle,
    pc.cntct_last_name AS primary_contact_last,
    pc.cntct_suffix AS primary_contact_suffix,
    pc.cntct_title AS primary_contact_job_title,
    pc.cntct_phone AS primary_contact_voice,
    pc.cntct_fax AS primary_contact_fax,
    pc.cntct_email AS primary_contact_email,
    (''::TEXT) AS primary_contact_change,
    m.addr_number AS primary_contact_address_number,
    m.addr_line1 AS primary_contact_address1,
    m.addr_line2

    m.addr_line3 AS primary_contact_address3,
    m.addr_city AS primary_contact_city,
    m.addr_state AS primary_contact_state,
    m.addr_postalcode AS primary_contact_postalcode,
    m.addr_country AS primary_contact_country,
    (''::TEXT) AS primary_contact_address_change,
    sc.cntct_number AS secondary_contact_number,
    sc.cntct_honorific AS secondary_contact_honorific,
    sc.cntct_first_name AS secondary_contact_first,
    sc.cntct_middle AS secondary_contact_middle,
    sc.cntct_last_name AS secondary_contact_last,
    sc.cntct_suffix AS secondary_contact_suffix,
    sc.cntct_title AS secondary_contact_job_title,
    sc.cntct_phone AS secondary_contact_voice,
    sc.cntct_fax AS secondary_contact_fax,
    sc.cntct_email AS secondary_contact_email,
    sc.cntct_webaddr AS secondary_contact_web,
    (''::TEXT) AS secondary_contact_change,
    s.addr_number AS secondary_contact_address_number,
    s.addr_line1 AS secondary_contact_address1,
    s.addr_line2 AS secondary_con

    s.addr_line3 AS secondary_contact_address3,
    s.addr_city AS secondary_contact_city,
    s.addr_state AS secondary_contact_state,
    s.addr_postalcode AS secondary_contact_postalcode,
    s.addr_country AS secondary_contact_country,
    (''::TEXT) AS secondary_contact_address_change,
    c.crmacct_notes AS notes
  FROM
    crmacct c
      LEFT OUTER JOIN crmacct p ON (c.crmacct_id=p.crmacct_parent_id)
      LEFT OUTER JOIN cntct pc ON (c.crmacct_cntct_id_1=pc.cntct_id)
      LEFT OUTER JOIN addr m ON (pc.cntct_addr_id=m.addr_id)
      LEFT OUTER JOIN cntct sc ON (c.crmacct_cntct_id_2=sc.cntct_id)
      LEFT OUTER JOIN addr s ON (sc.cntct_addr_id=s.addr_id);
GRANT ALL ON TABLE api.account TO xtrole;
COMMENT ON VIEW api.account IS 'Account';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.account DO INSTEAD
INSERT INTO crmacct
	(crmacct_number,
         crmacct_parent_id,
         crmacct_name,
         crmacct_active,
         crmacct_type,
         crmacct_cntc
HDF5 "filter_fail.h5" {
GROUP "/" {
   DATASET "dset_fail" {
      DATATYPE  H5T_STD_I32LE
      DATASPACE  SIMPLE { ( 10 ) / ( 10 ) }
      DATA {
      }
   }
HDF5-DIAG: Error detected in HDF5 (version (number)) thread (IDs):
  #000: (file name) line (number) in H5Dread(): can't read data
    major: Dataset
    minor: Read failed
  #001: (file name) line (number) in H5D_read(): can't read data
    major: Dataset
    minor: Read failed
  #002: (file name) line (number) in H5D_chunk_read(): unable to read raw data chunk
    major: Low-level I/O
    minor: Read failed
  #003: (file name) line (number) in H5D_chunk_lock(): data pipeline read failed
    major: Data filters
    minor: Filter operation failed
  #004: (file name) line (number) in H5Z_pipeline(): required filter 'filter_fail_test' is not registered
    major: Data filters
    minor: Read failed
h5dump error: unable to print data
H5tools-DIAG: Error detected in HDF5:tools (version (number)) thread (IDs):
  #000: (file name) li
--
-- Test Statistics Collector
--
-- Must be run after tenk2 has been created (by create_table),
-- populated (by create_misc) and indexed (by create_index).
--
-- conditio sine qua non
SHOW stats_start_collector;  -- must be on
-- save counters
CREATE TEMP TABLE prevstats AS
SELECT t.seq_scan, t.seq_tup_read, t.idx_scan, t.idx_tup_fetch,
       (b.heap_blks_read + b.heap_blks_hit) AS heap_blks,
       (b.idx_blks_read + b.idx_blks_hit) AS idx_blks
  FROM pg_catalog.pg_stat_user_tables AS t,
       pg_catalog.pg_statio_user_tables AS b
 WHERE t.relname='tenk2' AND b.relname='tenk2';
-- enable statistics
SET stats_block_level = on;
SET stats_row_level = on;
-- do something
SELECT count(*) FROM tenk2;
SELECT count(*) FROM tenk2 WHERE unique1 = 1;
-- let stats collector catch up
SELECT pg_sleep(2.0);
-- check effects
SELECT st.seq_scan >= pr.seq_scan + 1,
       st.seq_tup_read >= pr.seq_tup_read + cl.reltuples,
       st.idx_scan >= pr.idx_scan + 1,
       st.idx_tup_fetch >= pr.idx_tup
IF OBJECT_ID('dbo.wsp_getNavLocales') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_getNavLocales
    IF OBJECT_ID('dbo.wsp_getNavLocales') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_getNavLocales >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_getNavLocales >>>'
END
go
  /***********************************************************************
**
** CREATION:
**   Author:  Valeri Popov
**   Date:  Apr. 8, 2004
**   Description:  Retrieves all the languages
**
** REVISION(S):
**   Author:  Valeri Popov
**   Date: Sep. 08, 2004
**   Description: added resourceLocale column
**
** REVISION(S):
**   Author: Mike Stairs
**   Date: Feb 3, 2005
**   Description: added localMiles
**
*************************************************************************/
CREATE PROCEDURE  wsp_getNavLocales
AS
BEGIN
	select NavigateLocale.localeId, 
           NavigateLocale.languageId, 
           Country.countryCodeIso, 
           NavigateLocale.resourceLocale,
           Nav
/*
Navicat MySQL Data Transfer
Source Server         : 127.0.0.1
Source Server Version : 50520
Source Host           : localhost:3306
Source Database       : dishes
Target Server Type    : MYSQL
Target Server Version : 50520
File Encoding         : 65001
Date: 2014-03-14 12:06:06
*/
SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `mx_nav`
-- ----------------------------
DROP TABLE IF EXISTS `mx_nav`;
CREATE TABLE `mx_nav` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '导航id',
  `val` varchar(50) COLLATE utf8_unicode_ci NOT NULL COMMENT '导航Action',
  `name` varchar(50) COLLATE utf8_unicode_ci NOT NULL COMMENT '导航名字',
  `show` tinyint(3) unsigned NOT NULL COMMENT '是否显示,0:需要权限过滤，1:无需过滤,直接显示',
  `tplshow` tinyint(3) unsigned NOT NULL DEFAULT '1' COMMENT '模版中是否显示，0:不现实，1:默认显示',
  `parentid` int(10) unsigned NOT NULL COMMENT '父id',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci COMMENT='导航以及权限控制类

-- ----------------------------
-- Records of mx_nav
-- ----------------------------
INSERT INTO `mx_nav` VALUES ('1', 'Index', '系统首页', '1', '1', '0');
INSERT INTO `mx_nav` VALUES ('2', 'Menu', '菜谱管理', '0', '1', '0');
INSERT INTO `mx_nav` VALUES ('3', 'Stream', '流水统计', '0', '1', '0');
INSERT INTO `mx_nav` VALUES ('4', 'Personal', '个人信息', '1', '1', '0');
INSERT INTO `mx_nav` VALUES ('5', 'System', '系统设置', '0', '1', '0');
INSERT INTO `mx_nav` VALUES ('6', 'Table', '餐桌设置', '0', '1', '0');
INSERT INTO `mx_nav` VALUES ('7', 'tabList', '桌号列表', '1', '1', '1');
INSERT INTO `mx_nav` VALUES ('8', 'free', '空闲中桌位', '1', '1', '1');
INSERT INTO `mx_nav` VALUES ('9', 'employ', '使用中桌位', '1', '1', '1');
INSERT INTO `mx_nav` VALUES ('11', 'invoicing', '已结账订单', '1', '1', '1');
INSERT INTO `mx_nav` VALUES ('12', 'typeList', '分类列表', '0', '1', '2');
INSERT INTO `mx_nav` VALUES ('13', 'addType', '添加分类', '0', '1', '2');
INSERT INTO `mx_nav` VALUES ('14', 'menuList', '菜谱列表', '0', '1', '2');
INSERT INTO `mx_na

INSERT INTO `mx_nav` VALUES ('16', 'hotMenu', '热卖菜', '0', '1', '2');
INSERT INTO `mx_nav` VALUES ('17', 'material', '素材列表', '0', '1', '2');
INSERT INTO `mx_nav` VALUES ('18', 'day', '今日流水', '0', '1', '3');
INSERT INTO `mx_nav` VALUES ('19', 'week', '周流水', '0', '1', '3');
INSERT INTO `mx_nav` VALUES ('20', 'month', '月流水', '0', '1', '3');
INSERT INTO `mx_nav` VALUES ('21', 'all', '总流水', '0', '1', '3');
INSERT INTO `mx_nav` VALUES ('22', 'password', '修改密码', '1', '1', '4');
INSERT INTO `mx_nav` VALUES ('23', 'info', '修改个人信息', '1', '1', '4');
INSERT INTO `mx_nav` VALUES ('24', 'adminList', '操作员', '0', '1', '5');
INSERT INTO `mx_nav` VALUES ('25', 'editAdmin', '添加操作员', '0', '1', '5');
INSERT INTO `mx_nav` VALUES ('26', 'logs', '日志', '0', '1', '5');
INSERT INTO `mx_nav` VALUES ('27', 'tableList', '餐桌列表', '0', '1', '6');
INSERT INTO `mx_nav` VALUES ('28', 'areaList', '区域列表', '0', '1', '6');
INSERT INTO `mx_nav` VALUES ('29', 'editArea', '添加区域', '0', '1', '6');
INSERT INTO `mx_nav` VALUES ('30
-- ----------------------------------------------------------------------------
--  MySQL Table Creation
--
--  @author     Andrei I. Holub
--  @created    August 2, 2006
--  @version    $Id:$
-- ----------------------------------------------------------------------------
CREATE TABLE autoguide_make (
  make_id INT AUTO_INCREMENT PRIMARY KEY,
  make_name VARCHAR(30),
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  enteredby INT NOT NULL,
  modified TIMESTAMP NULL,
  modifiedby INT NOT NULL
);
CREATE TRIGGER autoguide_make_entries BEFORE INSERT ON  autoguide_make FOR EACH ROW SET
NEW.entered = IF(NEW.entered IS NULL OR NEW.entered = '0000-00-00 00:00:00', NOW(), NEW.entered),
NEW.modified = IF (NEW.modified IS NULL OR NEW.modified = '0000-00-00 00:00:00', NEW.entered, NEW.modified);
CREATE TABLE autoguide_model (
  model_id INT AUTO_INCREMENT PRIMARY KEY,
  make_id INTEGER NOT NULL REFERENCES autoguide_make(make_id),
  model_name VARCHAR(50),
  entered TIMESTAMP NOT NULL DEFAU

  enteredby INT NOT NULL,
  modified TIMESTAMP NULL,
  modifiedby INT NOT NULL
);
CREATE TRIGGER autoguide_model_entries BEFORE INSERT ON  autoguide_model FOR EACH ROW SET
NEW.entered = IF(NEW.entered IS NULL OR NEW.entered = '0000-00-00 00:00:00', NOW(), NEW.entered),
NEW.modified = IF (NEW.modified IS NULL OR NEW.modified = '0000-00-00 00:00:00', NEW.entered, NEW.modified);
CREATE TABLE autoguide_vehicle (
  vehicle_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
  year VARCHAR(4) NOT NULL,
  make_id INTEGER NOT NULL REFERENCES autoguide_make(make_id),
  model_id INTEGER NOT NULL REFERENCES autoguide_model(model_id),
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  enteredby INT NOT NULL,
  modified TIMESTAMP NULL,
  modifiedby INT NOT NULL
);
CREATE TRIGGER autoguide_vehicle_entries BEFORE INSERT ON  autoguide_vehicle FOR EACH ROW SET
NEW.entered = IF(NEW.entered IS NULL OR NEW.entered = '0000-00-00 00:00:00', NOW(), NEW.entered),
NEW.modified = IF (NEW.modified IS NULL OR

CREATE TABLE autoguide_inventory (
  inventory_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
  vehicle_id INTEGER NOT NULL REFERENCES autoguide_vehicle(vehicle_id),
  account_id INTEGER REFERENCES organization(org_id),
  vin VARCHAR(20),
  mileage VARCHAR(20) NULL,
  is_new BOOLEAN DEFAULT false,
  `condition` VARCHAR(20) NULL,
  comments VARCHAR(255) NULL,
  stock_no VARCHAR(20) NULL,
  ext_color VARCHAR(20) NULL,
  int_color VARCHAR(20) NULL,
	style VARCHAR(40) NULL,
  invoice_price FLOAT NULL,
  selling_price FLOAT NULL,
	selling_price_text VARCHAR(100) NULL,
  sold BOOLEAN DEFAULT false,
  `status` VARCHAR(20) NULL,
  entered TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  enteredby INT NOT NULL,
  modified TIMESTAMP NULL,
  modifiedby INT NOT NULL
);
CREATE TRIGGER autoguide_inventory_entries BEFORE INSERT ON  autoguide_inventory FOR EACH ROW SET
NEW.entered = IF(NEW.entered IS NULL OR NEW.entered = '0000-00-00 00:00:00', NOW(), NEW.entered),
NEW.modified = IF (NEW.modified IS 
-- PLEASE NOTE: THIS FILE IS STRICTLY APPEND-ONLY.  ADD ALL CHANGES TO THE
-- END OF THE FILE.  FOR EXCEPTIONS, CONTACT fabian.pichler@synventis.com
-- TablesHistory helds all commands needed to migrate a database from one SchemaVersion to the next.
-- inital table
CREATE TABLE IF NOT EXISTS SchemaVersion (
 `schema` varchar(30) NOT NULL,
 `version`  INT NOT NULL
);
INSERT INTO SchemaVersion
 (`schema`, `version`)
 VALUES
 ('celements.calendar','1');
CREATE TABLE IF NOT EXISTS cel_calendareventclass (
  `CEC_ID` int(10) NOT NULL,
  `CEC_LANG` varchar(3) default NULL,
  `CEC_TITEL` varchar(255) default NULL,
  `CEC_DESCRIPTION` text default NULL,
  `CEC_LOCATION_RTE` text default NULL,
  `CEC_LOCATION` varchar(255) default NULL,
  `CEC_DATE` datetime default NULL,
  `CEC_IS_SUBSCRIBABLE` smallint(1) default 0,
  PRIMARY KEY  (CEC_ID)
) TYPE=MyISAM;
UPDATE SchemaVersion SET `version` = '2' WHERE `schema` = 'celements.calendar';
ALTER TABLE cel_calendareventclass
  modify `CEC_DESCRIPTION
﻿CREATE VIEW [dbo].[V_INVOICE_DTL]
AS
SELECT     DR_num, item_code, ref_po_num, DR_quantity, DR_itemSellingPrice, DR_total_amount, DR_baseprice, make, model, vin
FROM         dbo.TCCG_INVOICE_DTL
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[37] 4[25] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2


      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "TCCG_INVOICE_DTL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 173
               Right = 377
            End
            DisplayFlags = 280
            TopColumn = 1
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 4815
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
        
  SELECT dropIfExists('VIEW', 'prospect', 'api');
  CREATE OR REPLACE VIEW api.prospect AS
  SELECT 
    prospect_number::VARCHAR AS prospect_number,
    prospect_name AS prospect_name,
    prospect_active AS active,
    salesrep_number AS sales_rep,
    warehous_code AS site_code,
    taxzone_code AS default_tax_zone,
    prospect_comments AS notes,
    cntct_number AS contact_number,
    cntct_honorific AS contact_honorific,
    cntct_first_name AS contact_first,
    cntct_middle AS contact_middle,
    cntct_last_name AS contact_last,
    cntct_suffix AS contact_suffix,
    cntct_title AS contact_job_title,
    cntct_phone AS contact_voice,
    cntct_phone2 AS contact_alternate,
    cntct_fax AS contact_fax,
    cntct_email AS contact_email,
    cntct_webaddr AS contact_web,
    (''::TEXT) AS contact_change,
    addr_number AS contact_address_number,
    addr_line1 AS contact_address1,
    addr_line2 AS contact_address2,
    addr_line3 AS contact_address3,
    addr_city AS contact_ci

    addr_state AS contact_state,
    addr_postalcode AS contact_postalcode,
    addr_country AS contact_country,
    (''::TEXT) AS contact_address_change
  FROM
    prospect
      LEFT OUTER JOIN cntct ON (prospect_cntct_id=cntct_id)
      LEFT OUTER JOIN addr ON (cntct_addr_id=addr_id)
      LEFT OUTER JOIN taxzone ON (prospect_taxzone_id=taxzone_id)
      LEFT OUTER JOIN salesrep ON (prospect_salesrep_id=salesrep_id)
      LEFT OUTER JOIN whsinfo ON (prospect_warehous_id=warehous_id);
GRANT ALL ON TABLE api.prospect TO xtrole;
COMMENT ON VIEW api.prospect IS 'Prospect';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.prospect DO INSTEAD
INSERT INTO prospect
	(
        prospect_number,
        prospect_name,
        prospect_active,
        prospect_cntct_id,
        prospect_taxzone_id,
        prospect_salesrep_id,
        prospect_warehous_id,
  	prospect_comments)
        VALUES (
        UPPER(NEW.prospect_number),
        COALESCE(NEW.prospect_name,''),
	COALES

        saveCntct(
          getCntctId(NEW.contact_number),
          NEW.contact_number,
          saveAddr(
            getAddrId(NEW.contact_address_number),
            NEW.contact_address_number,
            NEW.contact_address1,
            NEW.contact_address2,
            NEW.contact_address3,
            NEW.contact_city,
            NEW.contact_state,
            NEW.contact_postalcode,
            NEW.contact_country,
            NEW.contact_address_change),
          NEW.contact_honorific,
          NEW.contact_first,
          NEW.contact_middle,
          NEW.contact_last,
          NEW.contact_suffix,
          NEW.contact_voice,
          NEW.contact_alternate,
          NEW.contact_fax,
          NEW.contact_email,
          NEW.contact_web,
          NEW.contact_job_title,
          NEW.contact_change
          ),
        getTaxZoneId(NEW.default_tax_zone),
        getSalesRepId(NEW.sales_rep),
        getWarehousId(NEW.site_code,'ACTIVE'),
        COALESCE(NEW.note
SELECT   a.Budgetacct,
         a.primaryGroupDesc,
         a.SecondaryGroup,
         bsec.secondaryGroupdesc,
         OVRID_DESC,
         b.PROJ_BUD_YR_1  as BudgetAmount,
         NEW_YR_POST_mon_1 + b.ENCUMB_NWYR_MON_1 + NEW_YR_POST_mon_2 + b.ENCUMB_NWYR_MON_2 + NEW_YR_POST_mon_3 + b.ENCUMB_NWYR_MON_3 + NEW_YR_POST_mon_4 + b.ENCUMB_NWYR_MON_4 + NEW_YR_POST_mon_5 + b.ENCUMB_NWYR_MON_5 + NEW_YR_POST_mon_6 + b.ENCUMB_NWYR_MON_6    as 
YTD_Actual, 
         case 
              when b.proj_bud_YR_1 <> 0 then cast(Round((((NEW_YR_POST_mon_1 + b.ENCUMB_NWYR_MON_1  + NEW_YR_POST_mon_2 + b.ENCUMB_NWYR_MON_2 + NEW_YR_POST_mon_3 + b.ENCUMB_NWYR_MON_3 + NEW_YR_POST_mon_4 + b.ENCUMB_NWYR_MON_4  + b.ENCUMB_NWYR_MON_4 + NEW_YR_POST_mon_5 + b.ENCUMB_NWYR_MON_5 + NEW_YR_POST_mon_6 + b.ENCUMB_NWYR_MON_6 ) / b.proj_bud_YR_1) * 100),2) as 
Decimal(9,2)) 
              when b.proj_bud_YR_1 = 0 and (NEW_YR_POST_mon_1 + b.ENCUMB_NWYR_MON_1   + NEW_YR_POST_mon_2 + b.ENCUMB_NWYR_MON_2 + NEW_YR_POST_mon_

              else 1000.00 
         end as PercentUsed,
         b.PROJ_BUD_YR_1-(NEW_YR_POST_mon_1 + b.ENCUMB_NWYR_MON_1   + NEW_YR_POST_mon_2 + b.ENCUMB_NWYR_MON_2 + NEW_YR_POST_mon_3 + b.ENCUMB_NWYR_MON_3 + NEW_YR_POST_mon_4 + b.ENCUMB_NWYR_MON_4 + b.ENCUMB_NWYR_MON_4 + NEW_YR_POST_mon_5 + b.ENCUMB_NWYR_MON_5 + NEW_YR_POST_mon_6 + b.ENCUMB_NWYR_MON_6 ) as RemainingBudget,
         case 
              when b.proj_bud_YR_1 - (NEW_YR_POST_mon_1 + b.ENCUMB_NWYR_MON_1  + NEW_YR_POST_mon_2 + b.ENCUMB_NWYR_MON_2 + NEW_YR_POST_mon_3 + b.ENCUMB_NWYR_MON_3  + NEW_YR_POST_mon_4 + b.ENCUMB_NWYR_MON_4 + b.ENCUMB_NWYR_MON_4 + NEW_YR_POST_mon_5 + b.ENCUMB_NWYR_MON_5 + NEW_YR_POST_mon_6 + b.ENCUMB_NWYR_MON_6 ) < 0 Then 'OverBudget' 
              when b.proj_bud_YR_1 - (NEW_YR_POST_mon_1 + b.ENCUMB_NWYR_MON_1 + NEW_YR_POST_mon_2 + b.ENCUMB_NWYR_MON_2 + NEW_YR_POST_mon_3 + b.ENCUMB_NWYR_MON_3 + NEW_YR_POST_mon_4 + b.ENCUMB_NWYR_MON_4 + b.ENCUMB_NWYR_MON_4 + NEW_YR_POST_mon_5 + b.ENCUMB_NWYR_MON_5 

              else 'OK' 
         end as BudgetStatus,
         POST_BAL_mon_1 + b.ENCUMB_mon_1 + POST_BAL_mon_2 + b.ENCUMB_mon_2 + POST_BAL_mon_3 + b.ENCUMB_mon_3  + POST_BAL_mon_4 + b.ENCUMB_mon_4 + POST_BAL_mon_5 + b.ENCUMB_mon_5 + POST_BAL_mon_6 + b.ENCUMB_mon_6  + POST_BAL_mon_7 + b.ENCUMB_mon_7 + POST_BAL_mon_8 + b.ENCUMB_mon_8 + POST_BAL_mon_9 + b.ENCUMB_mon_9  + POST_BAL_mon_10 + b.ENCUMB_mon_10  + POST_BAL_mon_11 + b.ENCUMB_mon_11 + POST_BAL_mon_12 + b.ENCUMB_mon_12 as PreviousActual,
         NEW_YR_POST_mon_1  + NEW_YR_POST_mon_2 + NEW_YR_POST_mon_3 + NEW_YR_POST_mon_4 + NEW_YR_POST_mon_5 + NEW_YR_POST_mon_6 as 
MonthlyActual,
         b.ENCUMB_NWYR_MON_1  + b.ENCUMB_NWYR_MON_2 + b.ENCUMB_NWYR_MON_3 + b.ENCUMB_NWYR_MON_4  + b.ENCUMB_NWYR_MON_5 + b.ENCUMB_NWYR_MON_6 as MonthlyEncumberance
FROM     dbo.NC_BudgetActuals_Ctl a 
         left join GL_master b on BudgetAcct=acct_cde 
         left join dbo.NC_Budget_Secondary bsec on a.secondarygroup = bsec.secondaryGroup
WHERE  
select xt.create_view('xt.cmheadtaxinfo', $$
  -- multiply the tax amount by -1 so the client doesn't have to.
select
taxhist_id,
taxhist_parent_id,
taxhist_taxtype_id,
taxhist_tax_id,
taxhist_basis,
taxhist_basis_tax_id,
taxhist_sequence,
taxhist_percent,
taxhist_amount,
taxhist_tax * -1 as taxhist_tax,
taxhist_docdate,
taxhist_distdate,
taxhist_curr_id,
taxhist_curr_rate,
taxhist_journalnumber,
obj_uuid
from cmheadtax;
$$, false);
create or replace rule "_INSERT" as on insert to xt.cmheadtaxinfo do instead
  insert into cmheadtax (
    taxhist_id,
    taxhist_parent_id,
    taxhist_taxtype_id,
    taxhist_tax_id,
    taxhist_basis,
    taxhist_basis_tax_id,
    taxhist_sequence,
    taxhist_percent,
    taxhist_amount,
    taxhist_tax,
    taxhist_docdate,
    taxhist_distdate,
    taxhist_curr_id,
    taxhist_curr_rate,
    taxhist_journalnumber,
    obj_uuid
  ) values (
    new.taxhist_id,
    new.taxhist_parent_id,
    new.taxhist_taxtype_id,
    new.taxhist_tax_id,
    new.taxhi

    new.taxhist_basis_tax_id,
    new.taxhist_sequence,
    new.taxhist_percent,
    new.taxhist_amount,
    new.taxhist_tax * -1,
    new.taxhist_docdate,
    new.taxhist_distdate,
    new.taxhist_curr_id,
    new.taxhist_curr_rate,
    new.taxhist_journalnumber,
    new.obj_uuid
  );
create or replace rule "_UPDATE" as on update to xt.cmheadtaxinfo do instead
  update cmheadtax set
  taxhist_id = new.taxhist_id,
  taxhist_parent_id = new.taxhist_parent_id,
  taxhist_taxtype_id = new.taxhist_taxtype_id,
  taxhist_tax_id = new.taxhist_tax_id,
  taxhist_basis = new.taxhist_basis,
  taxhist_basis_tax_id = new.taxhist_basis_tax_id,
  taxhist_sequence = new.taxhist_sequence,
  taxhist_percent = new.taxhist_percent,
  taxhist_amount = new.taxhist_amount,
  taxhist_tax = new.taxhist_tax * -1,
  taxhist_docdate = new.taxhist_docdate,
  taxhist_distdate = new.taxhist_distdate,
  taxhist_curr_id = new.taxhist_curr_id,
  taxhist_curr_rate = new.taxhist_curr_rate,
  taxhist_journalnumber = new.t
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 9
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 10
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 11
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 12
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 13
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 14
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 15
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 16
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 17
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 18
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 19
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 20
UPDATE CS_CALLTYPE SET ShowEmployee = 1, ShowEquipment = 1 WHERE ID = 21
UPDATE CS_CALLTYPE SET ShowEmployee = 0, ShowEquipme
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',

  `post_content` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_title` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_excerpt` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `post_password` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `post_name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `to_ping` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `pinged` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) COLLATE utf8mb4_unicode_

  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`(191)),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;
LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (1,1,'2015-11-19 08:03:21','2015-11-19 08:03:21','Welcome to WordPress. This is your first post. Edit or delete it, then start writing!','Hello world!','','publish','open','open','','hello-world','','','2015-11-19 08:03:21','2015-11-19 08:03:21','',0,'http://localhost:8888/appxlabs/?p=1',
USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_backorder_preorder')
BEGIN
DROP PROCEDURE sp_update_backorder_preorder
Print '' print  ' *** dropping procedure sp_update_backorder_preorder'
End
GO
Print '' print  ' *** creating procedure sp_update_backorder_preorder'
GO
Create PROCEDURE sp_update_backorder_preorder
@old_BACKORDER_PREORDER_ID[INT]=null,
@old_ORDER_ID[INT],
@new_ORDER_ID[INT],
@old_CUSTOMER_ID[INT],
@new_CUSTOMER_ID[INT],
@old_AMOUNT[DECIMAL](10,2),
@new_AMOUNT[DECIMAL](10,2),
@old_DATE_PLACED[DATETIME],
@new_DATE_PLACED[DATETIME],
@old_DATE_EXPECTED[DATETIME],
@new_DATE_EXPECTED[DATETIME],
@old_HAS_ARRIVED[BIT],
@new_HAS_ARRIVED[BIT],
@old_ADDRESS_1[NVARCHAR](50),
@new_ADDRESS_1[NVARCHAR](50),
@old_ADDRESS_2[NVARCHAR](50),
@new_ADDRESS_2[NVARCHAR](50),
@old_CITY[NVARCHAR](50),
@new_CITY[NVARCHAR](50),
@old_STATE[NCHAR](2),
@new_STATE[NCHAR](2),
@old_ZIP[NVARCHAR](10),
@new_ZIP[NVARCHAR](10)
AS
BEGIN
UPDATE backorder_p
!ABCIncludeFile(IBC)
  OMIT('_EndOfInclude_',_ArrayPresent_)
_ArrayPresent_ EQUATE(1)
  INCLUDE('IBCBASE.INC'),ONCE
Element                 CLASS(CInterface),MODULE('IBARRAY'),DLL(_IbcDllMode_),TYPE
                        END
BaseArray               CLASS(CInterface),MODULE('IBARRAY.CLW'),DLL(_IbcDllMode_),LINK('IBARRAY.CLW',_IbcLinkMode_),TYPE ! Abstract
Head                      LONG,PROTECTED
Used                      UNSIGNED,PROTECTED
ReleaseComponents         BOOL,PROTECTED
Size                      BYTE,PROTECTED
Construct                 PROCEDURE
Destruct                  PROCEDURE,DERIVED
_init                     PROCEDURE,PROTECTED
_space                    PROCEDURE,PROTECTED
CastItem                  PROCEDURE(SIGNED pos),LONG
DoClear                   PROCEDURE
Is_Item                   PROCEDURE(UNSIGNED pos = 0),BYTE
Kill                      PROCEDURE,VIRTUAL
Ordinality                PROCEDURE,SIGNED
SetReleaseComponents      PROCEDURE(BOOL b)
Swap                  

                        END
! An array or 'objects'
Array                   CLASS(BaseArray),MODULE('IBARRAY.CLW'),DLL(_IbcDllMode_),LINK('IBARRAY.CLW',_IbcLinkMode_),type
_set                      PROCEDURE(CInterface next, SIGNED index),PRIVATE
GetIterator               PROCEDURE(),*CIterator
Kill                      PROCEDURE,DERIVED
Item                      PROCEDURE(SIGNED pos),*CInterface
Replace                   PROCEDURE(CInterface next, UNSIGNED pos, BYTE nodel = 0)
Remove                    PROCEDURE(UNSIGNED pos, BYTE nodel = 0)
DoAppend                  PROCEDURE(CInterface next)
DoAdd                     PROCEDURE(CInterface next, UNSIGNED pos)
DoSort                    PROCEDURE(ICInterfaceCompare Cmp)
Find                      PROCEDURE(CInterface search),UNSIGNED
ZapAll                    PROCEDURE(CInterface search, BYTE nodel = 0),BYTE,PROC
Zap                       PROCEDURE(CInterface search, BYTE nodel = 0),BYTE,PROC
                        END
! An array of 'i
UPDATE [Productions_MSCRM].[dbo].[OpportunityExtensionBase]
SET [new_MaintenanceDollarsVerint] = ISNULL([new_SoftwareListPrice], 0.0) * 0.18 * 0.4 
	, [new_maintenancedollarsverint_Base] = ISNULL([new_softwarelistprice_Base], 0.0) * 0.18 * 0.4; 
GO
UPDATE [Productions_MSCRM].[dbo].[OpportunityExtensionBase]
SET [new_SoftwareDollarsVerint] = ISNULL([new_SoftwareListPrice], 0.0) * 0.4 
	, [new_softwaredollarsverint_Base] = ISNULL([new_softwarelistprice_Base], 0.0) * 0.4;
GO
UPDATE [Productions_MSCRM].[dbo].[OpportunityExtensionBase]
SET [new_SoftwareRevenue] = ISNULL([new_SoftwareListPrice], 0.0) * ( 1 - ISNULL([new_SoftwareDiscountPercentage], 0.0) / 100.0 )
	, [new_softwarerevenue_Base] = ISNULL([new_softwarelistprice_Base], 0.0) * ( 1 - ISNULL([new_SoftwareDiscountPercentage], 0.0) / 100.0 );
GO
UPDATE [Productions_MSCRM].[dbo].[OpportunityExtensionBase]
SET [new_TotalDollarsPartner] = ISNULL([new_SoftwareDollarsVerint], 0.0) + 
		ISNULL([new_MaintenanceDollarsVerint], 0.0) + 
		ISNUL

		ISNULL([new_TrainingDollarstoPartner], 0.0)
	, [new_totaldollarspartner_Base] = ISNULL([new_softwaredollarsverint_Base], 0.0) + 
		ISNULL([new_maintenancedollarsverint_Base], 0.0) + 
		ISNULL([new_servicesdollarstopartner_Base], 0.0) + 
		ISNULL([new_trainingdollarstopartner_Base], 0.0);
GO
UPDATE [Productions_MSCRM].[dbo].[OpportunityExtensionBase]
SET [new_TotalRevenue] = ISNULL([new_HardwareRevenue], 0.0) + 
	ISNULL([new_SoftwareRevenue], 0.0) + 
	ISNULL([new_SoftwareMaintenanceRevenue], 0.0) + 
	ISNULL([new_TrainingRevenue], 0.0) + 
	ISNULL([new_HardwareSupportRevenue], 0.0) + 
	ISNULL([new_ServicesRevenue], 0.0) - 
	ISNULL([new_PreferredCustomerDiscount], 0.0) + 
	ISNULL([new_ServicesDollarstoPartner], 0.0)
	, [new_totalrevenue_Base] = ISNULL([new_HardwareRevenue_Base], 0.0) + 
	ISNULL([new_softwarerevenue_Base], 0.0) + 
	ISNULL([new_softwaremaintenancerevenue_Base], 0.0) + 
	ISNULL([new_trainingrevenue_Base], 0.0) + 
	ISNULL([new_hardwaresupportrevenue_Base], 0.0) + 
	ISNULL([
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `guild_rank`;
CREATE TABLE `guild_rank` (
  `guildid` int(10) unsigned NOT NULL DEFAULT '0',
  `rid` tinyint(1) unsigned NOT NULL,
  `rname` varchar(15) NOT NULL DEFAULT '',
  `rights` mediumint(8) unsigned NOT NULL DEFAULT '0',
  `BankMoneyPerDay` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guildid`,`rid`),
  KEY `Idx_rid` (`rid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COM
DELIMITER $$
USE `horseracing`$$
DROP TRIGGER /*!50032 IF EXISTS */ `tgInsert_Users`$$
CREATE
    /*!50017 DEFINER = 'occbuu'@'%' */
    TRIGGER `tgInsert_Users` AFTER INSERT ON `users` 
    FOR EACH ROW BEGIN
	CALL spInsert_Logs(
	IFNULL(NEW.`ImieNo`,NEW.`id`),
	DATE_FORMAT(NEW.`ModifiedDate`,'%Y%m%d'),
	'INSERT new users',
	CONCAT( 'Password : ',IFNULL(NEW.`password`,'[null]'), '  <br/>',
		'Fullname : ',IFNULL(NEW.`fullname`,'[null]'), '  <br/>',
		'Parent ID : ',IFNULL(NEW.`pid`,'[null]'), '  <br/>',
		'Currency : ',IFNULL(NEW.`currency`,'[null]'), '  <br/>',
		'Member Fee : ',IFNULL(NEW.`fees`,'[null]'), '  <br/>'
		,'Phone number : ',IFNULL(NEW.`phonenumber`,'[null]'), '  <br/>'
		,'Status : ',IFNULL(NEW.`status`,'[null]'), '  <br/>'
		,'Remark : ',IFNULL(NEW.`remark`,'[null]'), '  <br/>'
		,'Serial number: ',IFNULL(NEW.`serialNo`,'[null]'), '  <br/>'
		,'Verify code : ',IFNULL(NEW.`verifyCode`,'[null]'), '  <br/>'
		,'Last active Date: ',IFNULL(NEW.`LastActiveDate`,'[null]')	
		
USE Vivaldi
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF  EXISTS (
	SELECT * FROM dbo.sysobjects 
	WHERE 	id = OBJECT_ID(N'[dbo].[spS_GetScenariosByFundByDate]') AND 
		OBJECTPROPERTY(id,N'IsProcedure') = 1
	)
DROP PROCEDURE [dbo].[spS_GetScenariosByFundByDate]
GO
CREATE PROCEDURE [dbo].[spS_GetScenariosByFundByDate] 
	@RefDate datetime,
	@FundId int 
AS
SET NOCOUNT ON;
SELECT	ScenView.ScenLabel AS ScenarioName
		, ScenView.Id AS ScenId
		, ScenData.ReportDate
		, ScenData.PortPerf*ScenData.MktVal/NaVs.CostNav AS PortPerf
		, ScenData.BenchPerf
		, ScenData.PortPerf*ScenData.MktVal/NaVs.CostNav - ScenData.BenchPerf AS RelPerf
		, ScenData.FundId
		, Funds.FundCode
		, Funds.FundName
FROM	tbl_ScenReports AS ScenData LEFT JOIN
		tbl_EnumScen AS ScenView ON (
			ScenData.ReportId = ScenView.Id
			) LEFT JOIN
		tbl_FundsNaVsAndPLs AS NaVs ON (
			NaVs.FundId = ScenData.FundId
			AND NaVs.NaVPLDate = ScenData.ReportDate
			) LEFT JOIN
		tbl_Funds AS Funds ON (
			ScenData.FundId =
INSERT INTO SECTION_DEFINITION (SECTION_DEFINITION_ID, PAGE_TYPE, SECTION_NAME, DEFAULT_LABEL, SECTION_ORDER, LAYOUT_TYPE, ROLE) VALUES (1000081, 'pledgeView', 'pledge.info', 'Pledge Information', 1, 'TWO_COLUMN', 'ROLE_USER');
INSERT INTO SECTION_DEFINITION (SECTION_DEFINITION_ID, PAGE_TYPE, SECTION_NAME, DEFAULT_LABEL, SECTION_ORDER, LAYOUT_TYPE, ROLE) VALUES (1000082, 'pledgeView', 'pledge.distribution', 'Pledge Distribution', 3, 'DISTRIBUTION_LINE_GRID_DISPLAY', 'ROLE_USER');
INSERT INTO SECTION_DEFINITION (SECTION_DEFINITION_ID, PAGE_TYPE, SECTION_NAME, DEFAULT_LABEL, SECTION_ORDER, LAYOUT_TYPE, ROLE) VALUES (1000144, 'pledgeView', 'pledge.extendedDistribution', 'Extended Distribution Lines', 4, 'GRID_HIDDEN_ROW', 'ROLE_USER');
-- pledge
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.recurringReadOnly', 5000);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.am

INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.amountTotalReadOnly', 5700);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.amountPaidReadOnly', 5800);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.amountRemainingReadOnly', 5900);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.currencyCodeReadOnly', 6000);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.associatedGiftIdsReadOnly', 6100);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.pledgeStatus', 6500);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.frequencyReadOnly', 7000);
INSERT INTO SECTION_FIELD (SECTI

INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.startDateReadOnly', 8000);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.endDate', 9000);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.projectedDate', 11000);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.cancelDate', 11100);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.cancelReason', 11200);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.customFieldMap[pledgeName]', 11250);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION_ID, FIELD_DEFINITION_ID, FIELD_ORDER) VALUES (1000081, 'pledge.customFieldMap[initialReminder]', 11300);
INSERT INTO SECTION_FIELD (SECTION_DEFINITION
/* 初始化数据 */
insert into cms_model(model_id, channel_template_prefix, content_template_prefix, name, path, has_content, valid_state, delete_flag) 
		values(1, '', '', '栏目和内容默认字段模型', 'path', '0', '0', '1');
insert into cms_model(model_id, channel_template_prefix, content_template_prefix, name, path, has_content, valid_state, delete_flag) 
		values(2, 'index', '', '首页', '/', '0', '1', '0');
insert into cms_model(model_id, channel_template_prefix, content_template_prefix, name, path, has_content, valid_state, delete_flag) 
		values(3, 'channel_news', 'content_news', '新闻', 'news', '1', '1', '0');
/* 栏目模板字段 */
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must)
		values(1, 1, 'name', 		'1', '栏目名称', 		'varchar', '1', '0', '1', '0', '1');
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must)
		values(2, 1, 'path', 		'2', '访问

insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must)
		values(3, 1, 'title', 		'3', 'meta标题', 	'varchar', '1', '0', '1', '0', '0');
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must)
		values(4, 1, 'keywords', 	'4', 'meta关键字', 	'varchar', '1', '0', '1', '0', '0');
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must)
		values(5, 1, 'description',	'5', 'meta描述', 	'textarea', '1', '0', '1', '1', '0');
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must)
		values(6, 1, 'sequence', 	'6', '排列顺序', 		'int', '1', '0', '1', '1', '0');
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_

		values(7, 1, 'isDisplay', 	'7', '是否显示', 		'radio', '1', '0', '1', '1', '0', 'YesOrNo');
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must)
		values(8, 1, 'finalLevel', 	'8', '终审级别', 		'int', '1', '0', '1', '1', '0');
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must, code_type)
		values(9, 1, 'afterCheck', 	'9', '审核后', 		'radio', '1', '0', '1', '1', '0', 'ModelItemAfterCheck');
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must, code_type)
		values(11, 1, 'isStaticChannel','10','是否静态化栏目','radio', '1', '0', '1', '1', '0', 'YesOrNo');
insert into cms_model_item(item_id, model_id, property, sequence, label, data_type, is_display, is_custom, is_channel, is_single, is_must, code_type)
		values(12, 1, 'isStaticContent','11','是否静态化
﻿drop table multi_tags;
create temp table multi_tags AS(
  select "TagChrPos", "Read", sum("ReadCount") AS no_reads
  from "SolexaTags"
  group by "TagChrPos", "Read"
  order by "TagChrPos"
  );
select * from multi_tags limit 100;
drop table tag_summary;
create temp table tag_summary AS(
  select "TagChrPos", count(distinct "Read") AS no_distinct_reads, sum(no_reads) AS tot_count
  from multi_tags
  group by "TagChrPos" 
  order by "TagChrPos"
  );
select * from tag_summary limit 10;
drop table tag_freq;
create temp table tag_freq AS(
  select tag_summary.*, multi_tags."Read", multi_tags.no_reads/tot_count AS read_frequency, 
         dense_rank() OVER(PARTITION BY tag_summary."TagChrPos" ORDER BY multi_tags.no_reads DESC) AS read_rank
  from tag_summary inner join multi_tags on tag_summary."TagChrPos" = multi_tags."TagChrPos"
  order by "TagChrPos", read_frequency desc
  )
copy tag_freq to 'F:/data/20101023_blackface_DGE/tag_frequency.txt' with csv delimiter E'\t' header;
select * fro

copy (
  select read_rank, 
       avg(read_frequency) AS avg_frequency, 
       stddev("read_frequency"), 
       count("TagChrPos") AS n
  from tag_freq
  where read_frequency < 1
  group by read_rank
  order by read_rank
  ) to 'F:/data/20101023_blackface_DGE/read_rank.txt' with csv header delimiter E'\t';
select * from tag_freq where read_rank = 63;
create temp table est_tags AS(
  select "SolexaTagsTGI"."TGI_ID", "TGIposition", sum("ReadCount") AS no_reads, count(distinct "ReadSeq") AS no_distinct_reads
    from "SolexaTagsTGI" inner join "SolexaRuns" on "SolexaRuns"."RunID" = "SolexaTagsTGI"."RunID"
    where "SolexaRuns"."InUse" = True
    group by "TGI_ID", "TGIposition"
    order by "TGI_ID", no_reads desc
    );
select * from est_tags limit 20;
copy (
  select "TGI_ID", count("TGIposition") AS no_positions, sum(no_reads) AS total_reads
  from est_tags
  group by "TGI_ID"
  order by no_positions desc
  ) TO 'F:/data/20101023_blackface_DGE/est_positions.txt' with csv header de

------------------------
copy (
  select out_solexa_cumcountall_tpm."LibraryID", sum("CumCount") AS no_tags, count(distinct "TagChrPos") AS no_distinct_positions, "TreatmentGroup"
  from out_solexa_cumcountall_tpm inner join "qrySolexaLambs" on out_solexa_cumcountall_tpm."LibraryID" = "qrySolexaLambs"."LibraryID"
  where "CumCount" > 0
  group by out_solexa_cumcountall_tpm."LibraryID", "TreatmentGroup"
  order by "TreatmentGroup", "LibraryID"
  ) TO 'F:/data/20101023_blackface_DGE/counts_per_lib.txt' with csv header delimiter E'\t';
create temp table est_reads AS(
  select "TGI_ID", count(distinct "ReadSeq") AS no_distinct_reads, sum("ReadCount") AS no_reads
  from "SolexaTagsTGI" inner join "SolexaRuns" on "SolexaRuns"."RunID" = "SolexaTagsTGI"."RunID"
  where "SolexaRuns"."InUse" = True
  group by "TGI_ID"
  order by "TGI_ID", no_reads desc
  ); -- 88319 rows
select * from est_reads limit 10;
select "SolexaTagsTGI".*, est_reads.* 
from "SolexaTagsTGI" inner join est_reads on "Solexa
CREATE TRIGGER SITES_VERSION BEFORE UPDATE ON SITES
	FOR EACH ROW
	SET NEW.VERSIONID = OLD.VERSIONID+1;
CREATE TRIGGER USERS_VERSION BEFORE UPDATE ON USERS
	FOR EACH ROW
	SET NEW.VERSIONID = OLD.VERSIONID+1;
CREATE TRIGGER COLORS_VERSION BEFORE UPDATE ON COLORS
	FOR EACH ROW
	SET NEW.VERSIONID = OLD.VERSIONID+1;
CREATE TRIGGER SEASONS_VERSION BEFORE UPDATE ON SEASONS
	FOR EACH ROW
	SET NEW.VERSIONID = OLD.VERSIONID+1;
CREATE TRIGGER SIZES_VERSION BEFORE UPDATE ON SIZES
	FOR EACH ROW
	SET NEW.VERSIONID = OLD.VERSIONID+1;
CREATE TRIGGER CATEGORIES_VERSION BEFORE UPDATE ON CATEGORIES
	FOR EACH ROW
	SET NEW.VERSIONID = OLD.VERSIONID+1;
CREATE TRIGGER ARTICLES_VERSION BEFORE UPDATE ON ARTICLES 
	FOR EACH ROW
	SET NEW.VERSIONID = OLD.VERSIONID+1;
CREATE TRIGGER REGISTRY_VERSION BEFORE UPDATE ON REGISTRY
	FOR EACH ROW
	SET NEW.VERSIONID = OLD.VERSIONID+1;
CREATE TRIGGER MOVIMENTATION_TYPES_VERSION BEFORE UPDATE ON MOVIMENTATION_TYPES
	FOR EACH ROW
	SET NEW.VERSIONID = OLD.VERSIONID+1;
CREATE 
SET VERIFY OFF
connect "SYS"/"&&sysPassword" as SYSDBA
set echo on
spool /u01/app/oracle/admin/db_name_template/scripts/CreateDBCatalog.log append
@/u01/app/oracle/product/12.1.0/dbhome_1/rdbms/admin/catalog.sql;
@/u01/app/oracle/product/12.1.0/dbhome_1/rdbms/admin/catblock.sql;
@/u01/app/oracle/product/12.1.0/dbhome_1/rdbms/admin/catproc.sql;
@/u01/app/oracle/product/12.1.0/dbhome_1/rdbms/admin/catoctk.sql;
@/u01/app/oracle/product/12.1.0/dbhome_1/rdbms/admin/owminst.plb;
connect "SYSTEM"/"&&systemPassword"
@/u01/app/oracle/product/12.1.0/dbhome_1/sqlplus/admin/pupbld.sql;
connect "SYSTEM"/"&&systemPassword"
set echo on
spool /u01/app/oracle/admin/db_name_template/scripts/sqlPlusHelp.log append
@/u01/app/oracle/product/12.1.0/dbhome_1/sqlplus/admin/help/hlpbld.sql helpus.sql;
spool off
spool off
connect "SYS"/"&&sysPassword" as SYSDBA
set echo on
spool /u01/app/oracle/admin/db_name_template/scripts/postDBCreation.log append
grant sysdg to sysdg;
grant sysbackup to sysbackup;
grant sys
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 10. März 2002 um 17:03
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_gt_immo`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `HeadNav`
CREATE TABLE HeadNav (
  ID int(11) NOT NULL default '0',
  CreatedBy int(11) NOT NULL default '0',
  CreatedDateTime float(16,4) NOT NULL default '0.0000',
  ChangedBy int(11) NOT NULL default '0',
  ChangedDateTime float(16,4) NOT NULL default '0.0000',
  active int(1) NOT NULL default '1',
  WordlistID int(11) NOT NULL default '0',
  TextID int(11) NOT NULL default '0',
  NameDE varchar(255) NOT NULL default '',
  Name_en varchar(255) NOT NULL default '',
  Name_es varchar(255) NOT NULL default '',
  Name_fr varchar(255) NOT NULL default '',
  Name_it varchar(255) NOT NULL default '',
  PRIMARY KEY  (ID)
) TYPE=MyISAM;
# Da
CREATE VIRTUAL TABLE rtree_${t}_${c} USING rtree(id, minx, maxx, miny, maxy);
INSERT OR REPLACE INTO rtree_${t}_${c}
  SELECT ${i}, ST_MinX(${c}), ST_MaxX(${c}), ST_MinY(${c}), ST_MaxY(${c}) FROM ${t}
  WHERE NOT ST_IsEmpty(${c});
-- Conditions: Insertion of non-empty geometry
--   Actions   : Insert record into rtree 
CREATE TRIGGER rtree_${t}_${c}_insert AFTER INSERT ON ${t}
  WHEN (new.${c} NOT NULL AND NOT ST_IsEmpty(NEW.${c}))
BEGIN
  INSERT OR REPLACE INTO rtree_${t}_${c} VALUES (
    NEW.${i},
    ST_MinX(NEW.${c}), ST_MaxX(NEW.${c}),
    ST_MinY(NEW.${c}), ST_MaxY(NEW.${c})
  );
END;
-- Conditions: Update of geometry column to non-empty geometry
--               No row ID change
--   Actions   : Update record in rtree 
CREATE TRIGGER rtree_${t}_${c}_update1 AFTER UPDATE OF ${c} ON ${t}
  WHEN OLD.${i} = NEW.${i} AND
       (NEW.${c} NOTNULL AND NOT ST_IsEmpty(NEW.${c}))
BEGIN
  INSERT OR REPLACE INTO rtree_${t}_${c} VALUES (
    NEW.${i},
    ST_MinX(NEW.${c}), ST_MaxX(NEW.${c}

    ST_MinY(NEW.${c}), ST_MaxY(NEW.${c})
  );
END;
-- Conditions: Update of geometry column to empty geometry
--               No row ID change
--   Actions   : Remove record from rtree 
CREATE TRIGGER rtree_${t}_${c}_update2 AFTER UPDATE OF ${c} ON ${t}
  WHEN OLD.${i} = NEW.${i} AND
       (NEW.${c} ISNULL OR ST_IsEmpty(NEW.${c}))
BEGIN
  DELETE FROM rtree_${t}_${c} WHERE id = OLD.${i};
END;
-- Conditions: Update of any column
--               Row ID change
--              Non-empty geometry
--   Actions   : Remove record from rtree for old ${i}
--               Insert record into rtree for new ${i}
CREATE TRIGGER rtree_${t}_${c}_update3 AFTER UPDATE OF ${c} ON ${t}
  WHEN OLD.${i} != NEW.${i} AND
       (NEW.${c} NOTNULL AND NOT ST_IsEmpty(NEW.${c}))
BEGIN
  DELETE FROM rtree_${t}_${c} WHERE id = OLD.${i};
  INSERT OR REPLACE INTO rtree_${t}_${c} VALUES (
    NEW.${i},
    ST_MinX(NEW.${c}), ST_MaxX(NEW.${c}),
    ST_MinY(NEW.${c}), ST_MaxY(NEW.${c})
  );
END;
-- Conditions: Update
-- Data store table
CREATE TABLE cache
  Key          varchar(250)               NOT NULL
, Expires      int              DEFAULT 0 NOT NULL
, Flags        int              DEFAULT 0 NOT NULL
, Value        varbinary(1048576)
, CASVersion   bigint           DEFAULT 0 NOT NULL
, CONSTRAINT PK_cache PRIMARY KEY
  (
    Key
  )
);
-- Support index for cleanup operations
CREATE INDEX IX_cache_expires ON cache ( Expires );
PARTITION TABLE cache ON COLUMN Key;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Add;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Append;
CREATE PROCEDURE FROM CLASS voltcache.procedures.CheckAndSet;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Cleanup;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Delete;
CREATE PROCEDURE FROM CLASS voltcache.procedures.IncrDecr;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Prepend;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Replace;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Set;
CREATE PROCEDURE FROM CL
select
		Customer.customerID as customerID
	,Customer.customerName as customerName
from
	Customer
	,BuriPathDataUser
/*BEGIN*/
where
	/*IF dto.customerID != null*/ customerID = /*dto.customerID*/0/*END*/
	/*IF dto.customerID_not != null*/AND customerID != /*dto.customerID_not*/0/*END*/
	/*IF dto.customerID_large != null*/AND  /*dto.customerID_large*/0 < customerID/*END*/
	/*IF dto.customerID_moreLarge != null*/AND  /*dto.customerID_moreLarge*/0 <= customerID/*END*/
	/*IF dto.customerID_from != null*/AND  /*dto.customerID_from*/0 <= customerID/*END*/
	/*IF dto.customerID_to != null*/AND customerID <= /*dto.customerID_to*/0/*END*/
	/*IF dto.customerID_moreSmall != null*/AND customerID <= /*dto.customerID_moreSmall*/0/*END*/
	/*IF dto.customerID_small != null*/AND customerID < /*dto.customerID_small*/0/*END*/
	/*IF dto.customerID_isNull != null*/AND customerID is null /*END*/
	/*IF dto.customerID_isNotNull != null*/AND customerID is not null/*END*/
	/*IF dto.customerID_in != null*/AND cus

	/*IF dto.customerName_matchFull != null*/AND customerName Like /*dto.customerName_matchFull*/'%TestData%'/*END*/
	/*IF dto.customerName_matchFront != null*/AND customerName Like /*dto.customerName_matchFront*/'TestData%'/*END*/
	/*IF dto.customerName_matchBack != null*/AND customerName Like /*dto.customerName_matchBack*/'%TestData'/*END*/
	/*IF dto.customerName != null*/AND customerName = /*dto.customerName*/'TestData'/*END*/
	/*IF dto.customerName_not != null*/AND customerName != /*dto.customerName_not*/'TestData'/*END*/
	/*IF dto.customerName_large != null*/AND  /*dto.customerName_large*/'TestData' < customerName/*END*/
	/*IF dto.customerName_moreLarge != null*/AND  /*dto.customerName_moreLarge*/'TestData' <= customerName/*END*/
	/*IF dto.customerName_from != null*/AND  /*dto.customerName_from*/'TestData' <= customerName/*END*/
	/*IF dto.customerName_to != null*/AND customerName <= /*dto.customerName_to*/'TestData'/*END*/
	/*IF dto.customerName_moreSmall != null*/AND customerName <
.read MSTT01_LINE_CREATE.sql
.read MSTT02_STATION_CREATE.sql
.read MSTT03_LINE_STATION_CREATE.sql
.read MSTT04_LANDMARK_CREATE.sql
.read LINT01_TRAIN_SCHEDULE_CREATE.sql
.read LINT03_TRAIN_MOVING_CREATE.sql
.read LINT04_ROUTE_CREATE.sql
.read LINT05_ROUTE_DETAIL_CREATE.sql
.read LINT06_FARE_CREATE.sql
.read STAT01_STATION_EXIT_CREATE.sql
.read STAT04_FACILITY_CREATE.sql
.read INFT02_TIPS_CREATE.sql
.read INFT03_RESCURE_CREATE.sql
.read INFT04_STAT_KNOWLEDGE_CREATE.sql
.read INFT05_LINE_KNOWLEDGE_CREATE.sql
.read USRT01_ARRIVAL_ALARM_CREATE.sql
.read USRT02_TRAIN_ALARM_CREATE.sql
.read USRT03_FAVORITE_CREATE.sql
.read CMNT03_STATION_GRID_CREATE.sql
.read CMNT04_IMAGE_CREATE.sql
.read MSTT01_LINE_INSERT.sql
.read MSTT02_STATION_INSERT.sql
.read MSTT03_LINE_STATION_INSERT.sql
.read MSTT04_LANDMARK_INSERT.sql
.read LINT01_TRAIN_SCHEDULE_INSERT.sql
.read LINT03_TRAIN_MOVING_INSERT.sql
.read LINT04_ROUTE_INSERT_SPLITED.sql
.read LINT05_ROUTE_DETAIL_INSERT.sql
.read LINT06_FARE_INSERT_SPLITED
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE format A19
column CLOSE_DATE format A19
column TERM_COMMENT format A120
column ARTIST_NAME format A160
column ARTIST_KANA format A60
column DATA_FLAG format 99
set linesize 878
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE
﻿CREATE VIEW dbo.vJeopardyCodes
AS
SELECT     A.Category + B.Code AS Jeopardy, A.Description AS Category, B.Description AS Code
FROM         dbo._Jeopardy_Category AS A CROSS JOIN
                      dbo._Jeopardy_Code AS B
UNION
SELECT     'Z' AS Jeopardy, 'TIRKS System-generated code' AS Category, '' AS Code
UNION
SELECT     'AUT' AS Jeopardy, 'Automatic' AS Category, '' AS Code
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4[3

      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfi

         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 3
   End
   Begin DiagramPane = 
      PaneHidden = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 5
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
   
CREATE VIEW [dbo].[V_PROFIT_ADDON_DETAILS]
AS
SELECT     DR_num AS invoice_num, qty, description, ISNULL(base_price * qty, 0) AS total_base, total_amt, total_amt - ISNULL(base_price * qty, 0) AS total_add_profit
FROM         dbo.TCCG_INVOICE_ADDON
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[22] 4[39] 2[6] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
     

         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Confi

      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "TCCG_INVOICE_ADDON"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 220
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 3675
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         Sor
IF OBJECT_ID('dbo.wsp_updShowPrefs') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_updShowPrefs
    IF OBJECT_ID('dbo.wsp_updShowPrefs') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_updShowPrefs >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_updShowPrefs >>>'
END
go
 /***********************************************************************
**
** CREATION:
**   Author:  Jack Veiga,Jeff Yang
**   Date:  Oct 22, 2002
**   Description:  Updates show_prefs on profile
**
** REVISION(S):
**   Author: Mike Stairs
**   Date: March 24, 2004
**   Description: update language mask at the same time
**
** REVISION(S):
**   Author: Mike Stairs
**   Date: June 9, 2006
**   Description: update mediaReleaseFlag at the same time
**
*************************************************************************/
CREATE PROCEDURE wsp_updShowPrefs
 @productCode   CHAR(1)
,@communityCode CHAR(1)
,@userId NUMERIC(12,0)
,@show_prefs CHAR(1)
,@languagesSpokenMask INT
,@mediaReleaseFlag C
select coadd_objects_id,ra,dec,a_image,b_image, spread_model_g,spread_model_r,spread_model_i,spread_model_z,spread_model_y,spreaderr_model_g,spreaderr_model_r,spreaderr_model_i,spreaderr_model_z,spreaderr_model_y, wavg_spread_model_g,wavg_spread_model_r,wavg_spread_model_i,wavg_spread_model_z,wavg_spread_model_y, wavg_spreaderr_model_g ,wavg_spreaderr_model_r,wavg_spreaderr_model_i,wavg_spreaderr_model_z,wavg_spreaderr_model_y, mag_model_g,mag_model_r,mag_model_i,mag_model_z,mag_model_y,magerr_model_g,magerr_model_r,magerr_model_i,magerr_model_z,magerr_model_y,mag_detmodel_g,mag_detmodel_r,mag_detmodel_i,mag_detmodel_z,mag_detmodel_y,magerr_detmodel_g,magerr_detmodel_r,magerr_detmodel_i,magerr_detmodel_z,magerr_detmodel_y,mag_auto_g,mag_auto_r,mag_auto_i,mag_auto_z,mag_auto_y,magerr_auto_g,magerr_auto_r,magerr_auto_i,magerr_auto_z,magerr_auto_y,mag_psf_g,mag_psf_r,mag_psf_i,mag_psf_z,mag_psf_y,magerr_psf_g,magerr_psf_r,magerr_psf_i,magerr_psf_z,magerr_psf_y,wavgcalib_mag_psf_g,wavgcali
﻿CREATE VIEW dbo.v_Department
AS
SELECT          SchoolId, Id, Name, ShortName, ParentId, Mark, Enabled,
                                (SELECT          COUNT(0) AS cnt
                                  FROM               dbo.v_Department_ican5
                                  WHERE           (ParentId = t.Id)) AS ChildrenCount
FROM              dbo.v_Department_ican5 AS t
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[18] 4[11] 2[36] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [4

      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfi

         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "t"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 140
               Right = 208
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 2715
         Width = 3255
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
        
create role TPJ_PMS_SUPER_USER;
create role TPJ_PMS_MAINTENANCE_READ;
create role TPJ_PMS_MAINTENANCE_WRITE;
create role TPJ_PMS_APPLICANT_READ;
create role TPJ_PMS_APPLICANT_WRITE;
create role TPJ_PMS_EMPLOYEES_READ;
create role TPJ_PMS_EMPLOYEES_WRITE;
create role TPJ_PMS_LEAVES_READ;
create role TPJ_PMS_LEAVES_WRITE;
create role TPJ_PMS_VOYAGES_READ;
create role TPJ_PMS_VOYAGES_WRITE;
create role TPJ_INV_SUPER_USER;
create role TPJ_INV_PURCHASING_READ;
create role TPJ_INV_PURCHASING_WRITE;
create role TPJ_INV_RECEIVING_READ;
create role TPJ_INV_RECEIVING_WRITE;
create role TPJ_INV_REQUESITION_READ;
create role TPJ_INV_REQUESITION_WRITE;
create role TPJ_INV_ISSUANCE_READ;
create role TPJ_INV_ISSUANCE_WRITE;
create role TPJ_INV_JOB_ORDER_READ;
create role TPJ_INV_JOB_ORDER_WRITE;
create role TPJ_INV_MAINTENACE_READ;
create role TPJ_INV_MAINTENACE_WRITE;
create role TPJ_INV_CANVASS_READ;
create role TPJ_INV_CANVASS_WRITE;
create role TPJ_INV_QUOTATION_READ;
create role TPJ_INV_QUOTATIO
-- Quote
SELECT dropIfExists('VIEW', 'quote', 'api');
CREATE VIEW api.quote
AS
   SELECT 
     quhead_number::varchar AS quote_number,
     warehous_code AS site,
     quhead_quotedate AS quote_date,
     quhead_packdate AS pack_date,
     CASE
       WHEN quhead_origin='C' THEN
         'Customer'
       WHEN quhead_origin='I' THEN
         'Internet'
       WHEN quhead_origin='S' THEN
         'Sales Rep.'
       ELSE
         'Error'
     END AS originated_by,
     salesrep_number AS sales_rep,
     quhead_commission AS commission,
     taxzone_code AS tax_zone,
     taxtype_name AS tax_type,
     terms_code AS terms,
     prj_number AS project_number,
     COALESCE(cust_number,prospect_number) AS customer_number,
     quhead_billtoname AS billto_name,
     quhead_billtoaddress1 AS billto_address1,
     quhead_billtoaddress2 AS billto_address2,
     quhead_billtoaddress3 AS billto_address3,
     quhead_billtocity AS billto_city,
     quhead_billtostate AS billto_state,
     quhead_b

     quhead_billtocountry AS billto_country,
     shipto_num AS shipto_number,
     quhead_shiptoname AS shipto_name,
     quhead_shiptophone AS shipto_phone,
     quhead_shiptoaddress1 AS shipto_address1,
     quhead_shiptoaddress2 AS shipto_address2,
     quhead_shiptoaddress3 AS shipto_address3,
     quhead_shiptocity AS shipto_city,
     quhead_shiptostate AS shipto_state,
     quhead_shiptozipcode AS shipto_postal_code,
     quhead_shiptocountry AS shipto_country,
     quhead_custponumber AS cust_po_number,
     quhead_fob AS fob,
     quhead_shipvia AS ship_via,
     curr_abbr AS currency,
     quhead_misc_descrip AS misc_charge_description,
     CASE
       WHEN (quhead_misc_accnt_id IS NULL) THEN
         NULL
       ELSE
         formatglaccount(quhead_misc_accnt_id) 
     END AS misc_account_number,
     quhead_misc AS misc_charge,
     quhead_freight AS freight,
     quhead_ordercomments AS order_notes,
     quhead_shipcomments AS shipping_notes,
     false AS add_to_packin

     quhead_expire AS expire_date,
     CASE
       WHEN quhead_status='C' THEN
         'Converted'
       ELSE
         'Open'
     END AS status
   FROM curr_symbol,quhead
     LEFT OUTER JOIN whsinfo ON (quhead_warehous_id=warehous_id)
     LEFT OUTER JOIN prj ON (quhead_prj_id=prj_id)
     LEFT OUTER JOIN shiptoinfo ON (quhead_shipto_id=shipto_id)
     LEFT OUTER JOIN taxzone ON (quhead_taxzone_id=taxzone_id)
     LEFT OUTER JOIN taxtype ON (quhead_taxtype_id=taxtype_id)
     LEFT OUTER JOIN custinfo ON (quhead_cust_id=cust_id)
     LEFT OUTER JOIN prospect ON (quhead_cust_id=prospect_id)
     LEFT OUTER JOIN salesrep ON (quhead_salesrep_id=salesrep_id)
     LEFT OUTER JOIN terms ON (quhead_terms_id=terms_id)
   WHERE (quhead_curr_id=curr_id);
GRANT ALL ON TABLE api.quote TO xtrole;
COMMENT ON VIEW api.quote IS 'Quote';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.quote DO INSTEAD
  INSERT INTO quhead (
    quhead_number,
    quhead_cust_id,
    quhead_custpon
/*
CORT - Oracle server-side tool allowing to change tables similar to create or replace command
Copyright (C) 2013-2014  Softcraft Ltd - Rustam Kafarov
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
  Description: Accept only Y or N value
  ----------------------------------------------------------------------------------------------------------------------     
  Release | Author(s)         | Comments
  ----------------------
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'POINT (0 9)'::geometry AS geom
    ) AS g
  ) j;
  
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'LINESTRING (
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            )'::geometry AS geom
    ) AS g
  ) j;
  
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'POLYGON ((
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'TRIANGLE ((
                0 0, 
                0 9, 
                9 0, 
                0 0
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (S

  FROM
    (SELECT 
       'POLYGON ((
                0 0, 
                0 9, 
                9 9, 
                9 0, 
                0 0
            ), (
                1 1, 
                1 3, 
                3 2, 
                1 1
            ), (
                7 6, 
                6 8, 
                8 8, 
                7 6
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'MULTIPOLYGON (((
                0 0, 
                0 3, 
                4 3, 
                4 0, 
                0 0
            )), ((
                2 4, 
                1 6, 
                4 5, 
                2 4
            ), (
                7 6, 
                6 8, 
                8 8, 
                7 6
            )))'::geometry AS geom
    ) AS g
  ) j;
SELECT path, ST_AsEWKT(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
   FROM
     (SELECT 
       'POLY

                0 0 0, 
                0 0 1, 
                0 1 1, 
                0 1 0, 
                0 0 0
            )), ((
                0 0 0, 
                0 1 0, 
                1 1 0, 
                1 0 0, 
                0 0 0
            ))
            )'::geometry AS geom
   ) AS g
  ) j;
SELECT path, ST_AsEWKT(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
   FROM
     (SELECT 
       'TIN (((
                0 0 0, 
                0 0 1, 
                0 1 0, 
                0 0 0
            )), ((
                0 0 0, 
                0 1 0, 
                1 1 0, 
                0 0 0
            ))
            )'::geometry AS geom
   ) AS g
  ) j;
SELECT path, ST_AsText(geom) 
FROM (
  SELECT (ST_DumpPoints(g.geom)).* 
  FROM
    (SELECT 
       'GEOMETRYCOLLECTION(
          POINT(99 98), 
          LINESTRING(1 1, 3 3),
          POLYGON((0 0, 0 1, 1 1, 0 0)),
          POLYGON((0 0, 0 9, 9 9, 9 0, 0 0), (5 5, 5 6, 6 6, 5 5)),
         
﻿CREATE VIEW dbo.v_BarsSummary
AS
SELECT     Pair, Period, MIN(StartDate) AS DateStart, MAX(StartDate) AS DateEnd, COUNT(*) AS Count
FROM         dbo.t_Bar
GROUP BY Pair, Period
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[33] 4[3] 2[11] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configurat

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "t_Bar"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 230
               Right = 189
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1830
         Width = 1605
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1
/*
CORT - Oracle database deployment and continuous integration tool
Copyright (C) 2013-2014  Softcraft Ltd - Rustam Kafarov
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
  Description: Check system privilege is granted
  ----------------------------------------------------------------------------------------------------------------------     
  Release | Author(s)         | Comments
  -----------------------------------------

  14.02   | Rustam Kafarov    | Checks that given system privilege is granted
  ----------------------------------------------------------------------------------------------------------------------  
*/
DEFINE privilege = '&1'
DEFINE priv_mask = '&2'
SET TERM OFF
SPOOL OFF
COLUMN c_check_result NEW_VALUE check_result NOPRINT
COLUMN c_prompt_text NEW_VALUE prompt_text NOPRINT
SELECT * 
  FROM (SELECT 'privilege '||privilege||' is found' AS c_prompt_text,
               'dummy.sql' AS c_check_result
          FROM (SELECT privilege
                  FROM user_role_privs p
                 INNER JOIN ROLE_SYS_PRIVS rp
                    ON p.granted_role = rp.role
                 UNION    
                SELECT privilege 
                  FROM user_sys_privs
               )
         WHERE REGEXP_LIKE(privilege, '&priv_mask')
         UNION ALL
        SELECT 'privilege &privilege not found' AS c_prompt_text,
               'exit.sql "You need to grant &privilege privilege to &_user
select * from nav_element t where t.element='cmx_promo_cancle';
SELECT *　FROM NAV_ELEMENT_MODE T WHERE T.element='cmx_promo_cancle';
SELECT * FROM NAV_ELEMENT_MODE_ROLE T WHERE T.ELEMENT='cmx_promo_cancle';
SELECT * FROM NAV_ELEMENT_MODE_BASE T WHERE T.ELEMENT='cmx_promo_cancle';
SELECT * FROM sec_form_action_role T WHERE T.ROLE='NORPROMC';
SELECT * FROM NAV_ELEMENT_MODE_ROLE WHERE  ELEMENT='cmx_promo_cancle' FOR UPDATE;
--NAV_ELEMENT_MODE_ROLE是关联RMS的MODE和ROLE权限
--ELEMENT模块名字
--FOLDER存放文件夹
--ROLE权限名称
insert into NAV_ELEMENT_MODE_ROLE values('cmx_promo_cancle','--DEFAULT--','CMX_BBGNBB','NORPROMC');
SELECT * FROM NAV_ELEMENT_MODE WHERE ELEMENT='cmx_promo_cancle';
SELECT * FROM NAV_ELEMENT_MODE_ROLE WHERE ELEMENT='cmx_promo_cancle';
--创建角色
create role NORPROMC;
--授权给余学明
GRANT NORPROMC TO  RMS01;
--授权给RMS业务
--GRANT NORPROMC TO  RMSYW01;
grant NORPROMC to R7907297843;
grant NORPROMC to R7703300024;
grant NORPROMC to R8609130568;
grant NORPROMC to R9006282567;
grant NORPROMC to R8111232324;
undefine newuser
create synonym &&newUser..CTSP_ALL_FILE        for OC_DATA.CTSP_ALL_FILE_VW;
create synonym &&newUser..CT_DATA_LAST_EXT     for OC_DATA.CT_DATA_LAST_EXT_VW;
create synonym &&newUser..CDUS_DATA            for OC_DATA.CDUS_DATA;
create synonym &&newUser..CT_DATA              for OC_DATA.CT_DATA;              
--
create synonym &&newUser..CT_DATA_VW_CTL       for CTEXT_CTL.CT_DATA_VW_CTL;
--
create synonym &&newUser..CT_APP_META_DATA     for CTEXT.CT_APP_META_DATA;
create synonym &&newUser..CT_DATA_MAP_CTL      for CTEXT.CT_DATA_MAP_CTL;
create synonym &&newUser..CT_EXT_ACCOUNTS      for CTEXT.CT_EXT_ACCOUNTS;
create synonym &&newUser..CT_EXT_CRS_CTL       for CTEXT.CT_EXT_CRS_CTL;
create synonym &&newUser..CT_EXT_DATA          for CTEXT.CT_EXT_DATA;
create synonym &&newUser..CT_EXT_ERRORS        for CTEXT.CT_EXT_ERRORS;
create synonym &&newUser..CT_EXT_FILE_CTL      for CTEXT.CT_EXT_FILE_CTL;
create synonym &&newUser..CT_EXT_LOGS          for CTEXT.CT_EXT_LOGS;
create sy
﻿CREATE TABLE [dbo].[ColumnPreferences] (
    [Id]                      VARCHAR (10) NOT NULL,
    [ShowRequestNumber]       BIT          DEFAULT ((1)) NOT NULL,
    [ShowRequestType]         BIT          DEFAULT ((0)) NOT NULL,
    [ShowWorkgroup]           BIT          DEFAULT ((1)) NOT NULL,
    [ShowVendor]              BIT          DEFAULT ((1)) NOT NULL,
    [ShowCreatedBy]           BIT          DEFAULT ((1)) NOT NULL,
    [ShowCreatedDate]         BIT          DEFAULT ((1)) NOT NULL,
    [ShowLineItems]           BIT          DEFAULT ((1)) NOT NULL,
    [ShowTotalAmount]         BIT          DEFAULT ((1)) NOT NULL,
    [ShowStatus]              BIT          DEFAULT ((1)) NOT NULL,
    [ShowApprover]            BIT          NOT NULL,
    [ShowAccountManager]      BIT          NOT NULL,
    [ShowPurchaser]           BIT          NOT NULL,
    [ShowAccountNumber]       BIT          NOT NULL,
    [ShowShipTo]              BIT          NOT NULL,
    [ShowAllowBackorder]      BIT    

    [ShowRestrictedOrder]     BIT          NOT NULL,
    [ShowNeededDate]          BIT          NOT NULL,
    [ShowShippingType]        BIT          NOT NULL,
    [ShowPurchaseOrderNumber] BIT          NOT NULL,
    [ShowTag]                 BIT          DEFAULT ((0)) NOT NULL,
    [ShowLastActedOnDate]     BIT          NOT NULL,
    [ShowDaysNotActedOn]      BIT          NOT NULL,
    [ShowLastActedOnBy]       BIT          NOT NULL,
    [ShowOrderReceived]       BIT          DEFAULT ((0)) NOT NULL,
    [ShowOrderType]           BIT          NOT NULL,
    [DisplayRows]             INT          DEFAULT ((50)) NOT NULL,
    [ShowHasSplits]           BIT          DEFAULT ((0)) NOT NULL,
    [ShowShippingCost]        BIT          DEFAULT ((0)) NOT NULL,
    [ShowReferenceNumber]     BIT          DEFAULT ((1)) NOT NULL,
    [ShowFpdCompleted]        BIT          DEFAULT ((0)) NOT NULL,
    [ShowOrderPaid]           BIT          DEFAULT ((0)) NOT NULL,
    [ShowApUser]              BIT     
-- WINDSFORCE 群組數據庫數據(Zh-tw - 台湾繁体中文)
-- version 1.1.1
-- http://www.windsforce.com
--
-- 開發: Windsforce TEAM
-- 網站: http://www.windsforce.com
--
-- 數據庫: 群組初始化數據
--
-- --------------------------------------------------------
--
-- 轉存表中的數據 `windsforce_app`
--
INSERT INTO `#@__app` (`app_id`, `app_identifier`, `app_name`, `app_version`, `app_description`, `app_url`, `app_email`, `app_author`, `app_authorurl`, `app_isadmin`, `app_isinstall`, `app_isuninstall`, `app_issystem`, `app_isappnav`, `app_status`) VALUES
(3,'group', '小組', '1.0', '群組應用', 'http://doyouhaobaby.net', 'admin@doyouhaobaby.net', 'WindsForce Team', 'http://doyouhaobaby.net', 1, 1, 1, 1, 1, 1);
-- --------------------------------------------------------
--
-- 轉存表中的數據 `windsforce_creditrule`
--
INSERT INTO `#@__creditrule` (`creditrule_id`, `creditrule_name`, `creditrule_action`, `creditrule_cycletype`, `creditrule_cycletime`, `creditrule_rewardnum`, `creditrule_extendcredit1`, `creditrule_extendcredit2`, `creditrule_extend

(10, '發布主題', 'group_addtopic', 4, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0),
(11, '發布回帖', 'group_addcomment', 4, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0),
(12, '帖子被設置精華1', 'group_topicdigest1', 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0),
(13, '帖子被設置精華2', 'group_topicdigest2', 4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0),
(14, '帖子被設置精華3', 'group_topicdigest3', 4, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0),
(15, '帖子被設置精華4', 'group_topicdigest4', 4, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0),
(16, '帖子被組長推薦', 'group_trecommend1', 4, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0),
(17, '帖子被系統推薦', 'group_trecommend2', 4, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0),
(18, '帖子被小組置頂1', 'group_topicstick1', 4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0),
(19, '帖子被小組置頂2', 'group_topicstick2', 4, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0),
(20, '帖子被全局置頂', 'group_topicstick3', 4, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0),
(21, '帖子被回复', 'group_topicreply', 1, 0, 30, 2, 0, 0, 0, 0, 0, 0, 0),
(22, '管理主題', 'group_topicadmin', 4, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0),
(23, '管理回帖', 'group_commentadmin', 4, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0),
(24, '主題被

(25, '回帖被刪除', 'group_commentdelete', 4, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0),
(26, '回帖被置頂', 'group_stickreply', 4, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0),
(27, '帖子被提升', 'group_uptopic', 4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0);
-- --------------------------------------------------------
--
-- 轉存表中的數據 `windsforce_cron`
--
INSERT INTO `#@__cron` (`cron_id`, `cron_status`, `cron_type`, `cron_name`, `cron_filename`, `cron_lastrun`, `cron_nextrun`, `cron_weekday`, `cron_day`, `cron_hour`, `cron_minute`) VALUES
(5, 1, 'app', '清空今日發帖數', 'group@Todaytopic_Daily_.php', 1365910913, 1365955200, -1, -1, 0, '0');
-- --------------------------------------------------------
--
-- 轉存表中的數據 `windsforce_groupoption`
--
INSERT INTO `#@__groupoption` (`groupoption_name`, `groupoption_value`) VALUES
('group_isaudit', '0'),
('group_icon_uploadfile_maxsize', '102400'),
('group_indextopicnum', '10'),
('group_listtopicnum', '10'),
('group_hottopic_date', '604800'),
('group_hottopic_num', '10'),
('group_thumbtopic_num', '5'),
('group
CREATE TABLE MEMBER(
	MEMBER_ID VARCHAR2(20),
	MEMBER_PW VARCHAR2(15),
	MEMBER_NAME VARCHAR2(20),
	MEMBER_JUMIN1 INT,
	MEMBER_JUMIN2 INT,
	MEMBER_EMAIL VARCHAR2(25),
	MEMBER_EMAIL_GET VARCHAR2(7),
	MEMBER_MOBILE VARCHAR2(13),
	MEMBER_PHONE VARCHAR2(13),
	MEMBER_ZIPCODE VARCHAR2(13),
	MEMBER_ADDR1 VARCHAR2(70),
	MEMBER_ADDR2 VARCHAR2(70),
	MEMBER_ADMIN INT,
	MEMBER_JOIN_DATE DATE
);
CREATE TABLE ZIPCODE (
  ID INT,
  ZIPCODE VARCHAR2(7),
  SIDO VARCHAR2(10),
  GUGUN VARCHAR2(20),
  DONG VARCHAR2(30),
  RI VARCHAR2(70),
  BUNJI VARCHAR2(30),
  PRIMARY KEY (ID)
);
CREATE TABLE GOODS(
	GOODS_NUM INT,
	GOODS_CATEGORY VARCHAR2(20),
	GOODS_NAME VARCHAR2(50),
	GOODS_CONTENT VARCHAR2(3000),
	GOODS_SIZE VARCHAR2(10),
	GOODS_COLOR VARCHAR2(20),
	GOODS_AMOUNT INT,
	GOODS_PRICE INT,
	GOODS_IMAGE VARCHAR2(50),
	GOODS_BEST INT,
	GOODS_DATE DATE,
	PRIMARY KEY(GOODS_NUM)
);
create sequence goods_no_seq 
increment by 1 start with 1 nocache;
CREATE TABLE BASKET(
	BASKET_NUM INT,
	BASKET_MEMBER_ID VARCHAR

	BASKET_GOODS_NUM INT,
	BASKET_GOODS_AMOUNT INT,
	BASKET_GOODS_SIZE VARCHAR2(20),
	BASKET_GOODS_COLOR VARCHAR2(20),
	BASKET_DATE DATE,
	PRIMARY KEY(BASKET_NUM)
);
create sequence basket_no_seq
increment by 1 start with 1 nocache;
CREATE TABLE GOODS_ORDER(
	ORDER_NUM INT,
	ORDER_TRADE_NUM VARCHAR2(50),
	ORDER_TRANS_NUM VARCHAR2(50),
	ORDER_GOODS_NUM	INT,
	ORDER_GOODS_NAME VARCHAR2(50),
	ORDER_GOODS_AMOUNT INT,
	ORDER_GOODS_SIZE VARCHAR2(20),
	ORDER_GOODS_COLOR VARCHAR2(20),
	ORDER_MEMBER_ID VARCHAR2(20),
	ORDER_RECEIVE_NAME VARCHAR2(20),
	ORDER_RECEIVE_ADDR1 VARCHAR2(70),
	ORDER_RECEIVE_ADDR2 VARCHAR2(70),
	ORDER_RECEIVE_PHONE VARCHAR2(13),
	ORDER_RECEIVE_MOBILE VARCHAR2(13),
	ORDER_MEMO VARCHAR2(3000),
	ORDER_SUM_MONEY INT,
	ORDER_TRADE_TYPE VARCHAR2(20),
	ORDER_TRADE_DATE DATE,
	ORDER_TRADE_PAYER VARCHAR2(20),
	ORDER_DATE DATE,
	ORDER_STATUS INT,
	PRIMARY KEY(ORDER_NUM)
);
create sequence goodsorder_no_seq
increment by 1 start with 1 nocache;
select count(*) from zipcode;
select * fr

update member set member_admin = 1 where member_id='admin';
		findQuery.append("SELECT * FROM (SELECT GOODS_NUM,");
			findQuery.append("GOODS_CATEGORY, GOODS_NAME, ");
			findQuery.append("GOODS_CONTENT,GOODS_PRICE,GOODS_IMAGE,");
			findQuery.append("GOODS_BEST,GOODS_DATE, rownum r FROM ");
			findQuery.append("GOODS WHERE ");
			
			if (item.equals("new_item")) {
				findQuery.append("GOODS_DATE>=GOODS_DATE-7");
			}else if (item.equals("hit_item")) { 
				findQuery.append("GOODS_BEST=1 ");
			}else{
				findQuery.append("GOODS_CATEGORY=? ");
			}
			findQuery.append("ORDER BY GOODS_NUM DESC) ");
			findQuery.append("WHERE r>=? AND r<=? ");
			
select * from 
(select goods_num, goods_category,goods_name,goods_contents,goods_price,goods_image,goods_best,goods_date, rownum r 
   from goods 
  where goods_date>=goods_date-7
   )
			
select MEMBER_ADMIN from MEMBER where MEMBER_ID='admin'		
select * from user_tables;
select * from goods;
alter table goods modify  GOODS_IMAGE varchar2(2
-- <2010-11-18 Thu 12:56> rpc -  Rules are a special thing, trying to find one that will work for the
-- lack of "REPLACE INTO" in pg, vs mysql
-- <2010-11-18 Thu 12:57> rpc - from http://www.pointwriter.com/blog/index.php?/archives/6-REPLACE-in-PostgreSQL.html
CREATE RULE "replace_quotes1min_outdated_see_below" AS
    ON INSERT TO "quotes1min"
    WHERE
      EXISTS(SELECT 1 FROM quotes1min WHERE symbol=NEW.symbol AND datetime=NEW.datetime)
    DO INSTEAD
       (UPDATE quotes1min SET value=NEW.value WHERE key=NEW.key)
\c mydb
create table map 
CREATE RULE "replace_map" AS
    ON INSERT TO "map"
    WHERE
      EXISTS(SELECT 1 FROM map WHERE key=NEW.key)
    DO INSTEAD
       (UPDATE map SET value=NEW.value WHERE key=NEW.key);
 -- Proof the above works - change the second value randomly in insert below
insert into map values (6, 4);
select * from map;
\c Trading
CREATE RULE "replace_qtest" AS
    ON INSERT TO "qtest"
    WHERE
      EXISTS(SELECT 1 FROM qtest WHERE symbol=NEW.symbol A

    DO INSTEAD
       (UPDATE qtest SET expiry=NEW.expiry, open=NEW.open, high=NEW.high, low=NEW.low,
       close=NEW.close, volume=NEW.volume WHERE symbol=NEW.symbol AND datetime=NEW.datetime);
CREATE RULE "replace_quotes1min" AS
    ON INSERT TO "quotes1min"
    WHERE
      EXISTS(SELECT 1 FROM quotes1min WHERE symbol=NEW.symbol AND datetime=NEW.datetime)
    DO INSTEAD
       (UPDATE quotes1min SET expiry=NEW.expiry, open=NEW.open, high=NEW.high, low=NEW.low,
       close=NEW.close, volume=NEW.volume WHERE symbol=NEW.symbol AND datetime=NEW.datetime);
CREATE RULE "replace_futuresContractDetails" AS
    ON INSERT TO "futurescontractdetails"
    WHERE
      EXISTS(SELECT 1 FROM futuresContractDetails WHERE symbol=NEW.symbol AND expiry=NEW.expiry)
    DO INSTEAD
       (UPDATE futuresContractDetails SET multiplier=NEW.multiplier,
    pricemagnifier=NEW.pricemagnifier,
    exchange=NEW.exchange, mintick=NEW.mintick, fullname=NEW.fullname
         WHERE symbol=NEW.symbol AND expiry=NEW
/* Criando triggers de replicação 
 * As triggers serão criadas na base de dados empresa */
use empresa;
/* Modificamos o delimitardor para conseguir escrever corretamente as triggers */
DELIMITER $$
/* FUNCIONARIOS */
CREATE TRIGGER funcionario_insert AFTER INSERT
ON empresa.funcionario
FOR EACH ROW
BEGIN
INSERT INTO empresa_replica.funcionario(pnome, minicial, unome, cpf, datanasc, endereco, sexo, salario, supercpf, dno) VALUES (new.pnome, new.minicial, new.unome, new.cpf, new.datanasc, new.endereco, new.sexo, new.salario, new.supercpf, new.dno);
END$$
CREATE TRIGGER funcionario_update AFTER UPDATE
ON empresa.funcionario
FOR EACH ROW
BEGIN
UPDATE empresa_replica.funcionario 
SET pnome = new.pnome, minicial = new.minicial, unome = new.unome, cpf = new.cpf, datanasc = new.datanasc, endereco = new.endereco, sexo = new.sexo, salario = new.salario, supercpf = new.supercpf, dno = new.dno
WHERE cpf = old.cpf;
END$$
CREATE TRIGGER funcionario_delete AFTER DELETE
ON empresa.funcionario
FOR EA

BEGIN
DELETE FROM empresa_replica.funcionario
WHERE cpf = old.cpf;
END$$
/* DEPARTAMENTO */
CREATE TRIGGER departamento_insert AFTER INSERT
ON empresa.departamento
FOR EACH ROW
BEGIN
INSERT INTO empresa_replica.departamento(dnome, dnumero, gercpf, gerdatainicio) values (new.dnome, new.dnumero, new.gercpf, new.gerdatainicio);
END$$
CREATE TRIGGER departamento_update AFTER UPDATE
ON empresa.departamento
FOR EACH ROW
BEGIN
UPDATE empresa_replica.departamento 
SET dnome = new.dnome, dnumero = new.dnumero, gercpf = new.gercpf, gerdatainicio = new.gerdatainicio
WHERE dnumero = old.dnumero;
END$$
CREATE TRIGGER departamento_delete AFTER DELETE
ON empresa.departamento
FOR EACH ROW
BEGIN
DELETE FROM empresa_replica.departamento
WHERE dnumero = old.dnumero;
END$$
/* DEPARTAMENTO LOCALIZACOES */
CREATE TRIGGER dept_localizacoes_insert AFTER INSERT
ON empresa.depto_localizacoes
FOR EACH ROW
BEGIN
INSERT INTO empresa_replica.depto_localizacoes(dnumero, dlocalizacao) values (new.dnumero, new.dlocal

END$$
CREATE TRIGGER depto_localizacoes_update AFTER UPDATE
ON empresa.depto_localizacoes
FOR EACH ROW
BEGIN
UPDATE empresa_replica.depto_localizacoes 
SET dnumero = new.dnumero, dlocalizacao = new.dlocalizacao
WHERE dnumero = old.dnumero AND dlocalizacao = old.dlocalizacao;
END$$
CREATE TRIGGER depto_localizacoes_delete AFTER DELETE
ON empresa.depto_localizacoes
FOR EACH ROW
BEGIN
DELETE FROM empresa_replica.depto_localizacoes
WHERE dnumero = old.dnumero AND dlocalizacao = old.dlocalizacao;
END$$
/* PROJETO */
CREATE TRIGGER projeto_insert AFTER INSERT
ON empresa.projeto
FOR EACH ROW
BEGIN
INSERT INTO empresa_replica.projeto (pjnome, pnumero, plocalizacao, dnum) values (new.pjnome, new.pnumero, new.plocalizacao, new.dnum);
END$$
CREATE TRIGGER projeto_update AFTER UPDATE
ON empresa.projeto
FOR EACH ROW
BEGIN
UPDATE empresa_replica.projeto 
SET pjnome = new.pjnome, pnumero = new.pnumero, plocalizacao = new.plocalizacao, dnum = new.dnum
WHERE pnumero = old.pnumero;
END$$
CREATE TRIGGER
DROP TRIGGER IF EXISTS cs_eligibility_file_data_update;
DELIMITER $$
CREATE DEFINER=`wwhsadmin`@`%` trigger cs_eligibility_file_data_update AFTER UPDATE on cs_eligibility_data
 for each row 
 BEGIN
 IF(IFNULL(old.file_id,'') <> IFNULL(new.file_id,'') AND fn_get_column_id('file_id',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('file_id',null),old.file_id,new.file_id,new.modified_by,new.modified_date);
 END IF;
 IF(IFNULL(old.client_id,'') <> IFNULL(new.client_id,'') AND fn_get_column_id('client_id',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('client_id',null),old.client_id

 END IF;
 IF(IFNULL(old.member_first_name,'') <> IFNULL(new.member_first_name,'') AND fn_get_column_id('member_first_name',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('member_first_name',null),old.member_first_name,new.member_first_name,new.modified_by,new.modified_date);
 END IF;
 IF(IFNULL(old.member_last_name,'') <> IFNULL(new.member_last_name,'') AND fn_get_column_id('member_last_name',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('member_last_name',null),old.member_last_name,new.member_last_name,new.modified_by,new.modified_date);
 END IF;
 IF(IFNULL(old.employee_ty

 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('employee_type',null),old.employee_type,new.employee_type,new.modified_by,new.modified_date);
 END IF;
 IF(IFNULL(old.date_of_birth,'') <> IFNULL(new.date_of_birth,'') AND fn_get_column_id('date_of_birth',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('date_of_birth',null),old.date_of_birth,new.date_of_birth,new.modified_by,new.modified_date);
 END IF;
 IF(IFNULL(old.unique_id1,'') <> IFNULL(new.unique_id1,'') AND fn_get_column_id('unique_id1',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_elig
CREATE DATABASE  IF NOT EXISTS `donetselling` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `donetselling`;
-- MySQL dump 10.13  Distrib 5.6.13, for Win32 (x86)
--
-- Host: localhost    Database: donetselling
-- ------------------------------------------------------
-- Server version	5.5.35
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `doterm_taxonomy`
--
DROP TABLE IF EXISTS `doterm_taxonomy`;
/*!40101 SET @saved_cs_

/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `doterm_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `doterm_taxonomy`
--
LOCK TABLES `doterm_taxonomy` WRITE;
/*!40000 ALTER TABLE `doterm_taxonomy` DISABLE KEYS */;
INSERT INTO `doterm_taxonomy` VALUES (1,1,'category','',0,1),(2,2,'nav_menu','',0,6),(3,3,'nav_menu','',0,6),(4,4,'nav_menu','',0,7);
/*!40000 ALTER TABLE `doterm_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/
\echo Use "ALTER EXTENSION jsonb_opx UPDATE TO '1.1'" to load this file. \quit
--
CREATE OR REPLACE FUNCTION jsonb_delete_path(jsonb, text[])
RETURNS jsonb
    AS 'MODULE_PATHNAME', 'jsonb_delete_path'
LANGUAGE C IMMUTABLE STRICT;
COMMENT ON FUNCTION jsonb_delete_path(jsonb, text[]) IS 'follow path of keys in order supplied in array and delete end-point key value pair from jsonb';
DROP OPERATOR IF EXISTS #- (jsonb, text[]);
CREATE OPERATOR #- ( PROCEDURE = jsonb_delete_path, LEFTARG = jsonb, RIGHTARG = text[]);
COMMENT ON OPERATOR #- (jsonb, text[]) IS 'delete key path from left operand';
--
CREATE OR REPLACE FUNCTION jsonb_replace_path(jsonb, text[], jsonb)
RETURNS jsonb
    AS 'MODULE_PATHNAME', 'jsonb_replace_path'
LANGUAGE C IMMUTABLE STRICT;
COMMENT ON FUNCTION jsonb_replace_path(jsonb, text[], jsonb) IS 'follow path of keys in order supplied in array and replace end-point key value pair with supplied jsonb';
--
CREATE OR REPLACE FUNCTION jsonb_append_path(jsonb, text[], jsonb)
RE
ALTER TABLE sample
      ADD manifestId INTEGER NULL
ALTER TABLE sample
    ADD CONSTRAINT fk_sample_manifest FOREIGN KEY (manifestId) REFERENCES manifest(Id)
CREATE INDEX idx_sample_manifestId ON sample (manifestId)
ALTER TABLE sample_audit
      ADD manifestId INTEGER NULL
DROP TRIGGER trg_sample_insert;
CREATE TRIGGER trg_sample_insert AFTER INSERT ON sample
    FOR EACH ROW
    BEGIN
		INSERT INTO sample_audit(audit_action, audit_datetime, sampleId, sampleCode, volume, plateName, well, conditionDescription, dnaTest, picoTest, manifestId)
		VALUES ('INSERT NEW',NOW(),NEW.id, NEW.sampleCode, NEW.volume, NEW.plateName, NEW.well, NEW.conditionDescription, NEW.dnaTest, NEW.picoTest, NEW.manifestId);
    END
DROP TRIGGER trg_sample_update;
CREATE TRIGGER trg_sample_update AFTER UPDATE ON sample
    FOR EACH ROW
    BEGIN
		INSERT INTO sample_audit(audit_action, audit_datetime, sampleId, sampleCode, volume, plateName, well, conditionDescription, dnaTest, picoTest, manifestId)
		VALUES ('U
drop view pv_adr_object_nummeraand       cascade;
drop view pv_ander_natuurlijk_persoon    cascade;
drop view pv_appartementsrecht           cascade;
drop view pv_benoemd_obj_kad_onr_zk      cascade;
drop view pv_benoemd_object              cascade;
drop view pv_benoemd_terrein             cascade;
drop view pv_gebouwd_obj_gebruiksdoel    cascade;
drop view pv_gebouwd_object              cascade;
drop view pv_gemeente                    cascade;
drop view pv_info_i_koz_adres            cascade;
drop view pv_info_i_koz_zak_recht        cascade;
drop view pv_info_i_koz_zak_recht_aant   cascade;
drop view pv_info_o_koz_adres            cascade;
drop view pv_ingeschr_natuurlijk_persoon cascade;
drop view pv_kad_onr_zk_aantek           cascade;
drop view pv_kad_onr_zk_his_rel          cascade;
drop view pv_kad_onroerende_zaak         cascade;
drop view pv_kad_perceel                 cascade;
drop view pv_ligplaats                   cascade;
drop view pv_ligplaats_nummeraand        cascade;

-- MySQL dump 10.13  Distrib 5.7.9, for Win64 (x86_64)
--
-- Host: 113.128.162.200    Database: sakila
-- ------------------------------------------------------
-- Server version	5.7.9-log
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `qa_object`
--
DROP TABLE IF EXISTS `qa_object`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `qa_object` (
 

  `OBJ_NAME` varchar(30) DEFAULT NULL,
  `OBJ_XPATH` varchar(500) DEFAULT NULL,
  `OBJ_DESC` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`OBJ_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `qa_object`
--
LOCK TABLES `qa_object` WRITE;
/*!40000 ALTER TABLE `qa_object` DISABLE KEYS */;
INSERT INTO `qa_object` VALUES (1,'LOGIN_LINK','/html/body/div[1]/div[1]/div[2]/div[1]/div/div[2]/div[1]/ul/li[8]/a','login link in first page'),(2,'USER_TEXT','/html/body/div[9]/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[4]/div[2]/input','USERNAME TEXT BOX'),(3,'PASSWORD_TEXT','/html/body/div[9]/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[4]/div[4]/input','PASSWORD'),(4,'LOGIN_BUTTON','/html/body/div[9]/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[4]/div[7]/input','LOGIN BUTTON'),(5,'SEARCH_BAR','/html/body/div[1]/div[1]/div[2]/div[1]/div/div[2]/div[2]/form/div/div/div[1]/input[1]','SEARCH BOX'),(6,'AMAZON_LINK
--------------------------------------------------------
-- Archivo creado  - martes-enero-27-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table PARQUIMETROS
--------------------------------------------------------
  CREATE TABLE "OPEN4JOB"."PARQUIMETROS" 
   (	"ID" NUMBER(*,0), 
	"LATITUD" FLOAT(126), 
	"TITULO" VARCHAR2(250 BYTE), 
	"ICONO" VARCHAR2(250 BYTE), 
	"DESCRIPCION" VARCHAR2(500 BYTE), 
	"LONGITUD" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "APEX_4773706136163417" ;
REM INSERTING into OPEN4JOB.PARQUIMETROS
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index PARQUIMETROS_PK
---------------
insert into SYS_Menu values('Url_MMOQuickReceipt_View','MMO收货','Menu.CKD.Trans.CKDProcurement',9100,'MMO收货','~/MMOQuickReceipt/Index','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_MMOQuickReceipt_View','MMO收货','CKD')
go
insert into SYS_Menu values('Url_SequenceGroup_IsActiveView','序列代码组启用/停用','Menu.Sequence.Setup',1100,'序列代码组启用/停用','~/SequenceGroup/IsActiveIndex','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_SequenceGroup_IsActiveView','厂外序列代码组启用停用','Sequence')
go
insert into SYS_Menu values('Url_InSequenceGroup_IsActiveView','厂内序列组启用/停用','Menu.TransferSequence.Setup',1100,'厂内序列组启用/停用','~/InSequenceGroup/IsActiveIndex','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_InSequenceGroup_IsActiveView','厂内序列组启用停用','TransferSequence')
go
update SYS_Menu set Name='基础数据',Desc1='基础数据' where Code='Menu.MasterData'
go
update SYS_Menu set Name='自制生产',Desc1='自制生产' where Code='Menu.Production'
go
update
-- To get Postgres psycopg2 to work on OSX Mavericks
-- 1) Install Postgres.app
-- 2) Append path to Postgres.app bin directory to end of $PATH in .bash_profile
-- 3) At this point running py scripts that include psycopg2 will work, but import
--    in the Python shell will not, so ...
-- 4) $ sudo ln -s /Applications/Postgres.app/Contents/Versions/9.3/lib/libssl.1.0.0.dylib /opt/local/lib/libssl.1.0.0.dylib
-- 5) $ sudo ln -s /Applications/Postgres.app/Contents/Versions/9.3/lib/libcrypto.1.0.0.dylib /opt/local/lib/libcrypto.1.0.0.dylib
-- (Anaconda) Psycopg2 in Python shell can't find and link to these dylibs that 
-- are part of Postgres distro unless there sare sym links in the fs under the same user
-- that launches the Python shell
-- 6) Use the default data directory
-- 7) createdb -h localhost
-- This gets past error where launching the db gives error 
--  psql: FATAL:  database "<USER>" does not exist
-- NOTE: Assumes these steps were done previously
-- CLI: initdb -D /Users/ma
/* quantile for the double precision */
CREATE OR REPLACE FUNCTION quantile_append_double(p_pointer internal, p_element double precision, p_quantile double precision)
    RETURNS internal
    AS 'quantile', 'quantile_append_double'
    LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION quantile_append_double_array(p_pointer internal, p_element double precision, p_quantiles double precision[])
    RETURNS internal
    AS 'quantile', 'quantile_append_double_array'
    LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION quantile_double(p_pointer internal)
    RETURNS double precision
    AS 'quantile', 'quantile_double'
    LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION quantile_double_array(p_pointer internal)
    RETURNS double precision[]
    AS 'quantile', 'quantile_double_array'
    LANGUAGE C IMMUTABLE;
CREATE AGGREGATE quantile(double precision, double precision) (
    SFUNC = quantile_append_double,
    STYPE = internal,
    FINALFUNC = quantile_double
);
CREATE AGGREGATE quantile(do

    SFUNC = quantile_append_double_array,
    STYPE = internal,
    FINALFUNC = quantile_double_array
);
/* quantile for the numeric */
CREATE OR REPLACE FUNCTION quantile_append_numeric(p_pointer internal, p_element numeric, p_quantiles double precision)
    RETURNS internal
    AS 'quantile', 'quantile_append_numeric'
    LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION quantile_append_numeric_array(p_pointer internal, p_element numeric, p_quantiles double precision[])
    RETURNS internal
    AS 'quantile', 'quantile_append_numeric_array'
    LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION quantile_numeric(p_pointer internal)
    RETURNS numeric
    AS 'quantile', 'quantile_numeric'
    LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION quantile_numeric_array(p_pointer internal)
    RETURNS numeric[]
    AS 'quantile', 'quantile_numeric_array'
    LANGUAGE C IMMUTABLE;
CREATE AGGREGATE quantile(numeric, double precision) (
    SFUNC = quantile_append_numeric,
    STYPE = internal,
 

);
CREATE AGGREGATE quantile(numeric, double precision[]) (
    SFUNC = quantile_append_numeric_array,
    STYPE = internal,
    FINALFUNC = quantile_numeric_array
);
/* quantile for the int32 */
CREATE OR REPLACE FUNCTION quantile_append_int32(p_pointer internal, p_element int, p_quantile double precision)
    RETURNS internal
    AS 'quantile', 'quantile_append_int32'
    LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION quantile_append_int32_array(p_pointer internal, p_element int, p_quantiles double precision[])
    RETURNS internal
    AS 'quantile', 'quantile_append_int32_array'
    LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION quantile_int32(p_pointer internal)
    RETURNS int
    AS 'quantile', 'quantile_int32'
    LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION quantile_int32_array(p_pointer internal)
    RETURNS int[]
    AS 'quantile', 'quantile_int32_array'
    LANGUAGE C IMMUTABLE;
CREATE AGGREGATE quantile(int, double precision) (
    SFUNC = quantile_append_int32,
  
insert into acc_menu values('Menu.MRP.DemandSchedule',1,'新需求日程','~/Main.aspx?mid=MRP.Schedule.DemandSchedule',1,'~/Images/Nav/DmdSchedule.png',getdate(),'su',getdate(),'su',null)
insert into acc_permission(PM_Code,PM_Desc,PM_CateCode) values('Menu.MRP.DemandSchedule','新需求日程','MRP');
insert into acc_menuCommon(Menu,ParentMenu,Level_,Seq,IsActive,CreateDate,CreateUser,LastModifyDate,LastModifyUser) values('Menu.MRP.DemandSchedule','Menu.MRP.Trans',3,68,1,getdate(),'su',getdate(),'su');
--add 20160328
insert into acc_menu values('Menu.SupplierMenu.DemandSchedule',1,'新供应商日程','~/Main.aspx?mid=MRP.Schedule.DemandSchedule__mp--IsSupplier-true',1,'~/Images/Nav/DmdSchedule.png',getdate(),'su',getdate(),'su',null)
insert into acc_permission(PM_Code,PM_Desc,PM_CateCode) values('Menu.SupplierMenu.DemandSchedule','新供应商日程','SupplierMenu');
insert into acc_menuCommon(Menu,ParentMenu,Level_,Seq,IsActive,CreateDate,CreateUser,LastModifyDate,LastModifyUser) values('Menu.SupplierMenu.DemandSchedule','Men
source database_triggers_insert.sql
source trigger_pan_patient_insert.sql
/*Inserir novo Paciente no PAN de outro Paciente*/
/*Overlap Situação 1 new.start <= Connects.start e Connects.start <= new.end <= Connects.end*/
insert into Wears values ('2010-10-10', '2011-10-10', '001-54245-1555575', 'www.pan1.pt');
/*Overlap Situação 2 Connects.start <= new.start <= Connects.end e Connects.start <= new.end <= Connects.end*/
insert into Wears values ('2011-10-10', '2012-10-10', '001-54245-1555575', 'www.pan1.pt');
/*Overlap Situação 3 Connects.start <= new.start <= Connects.end e new.end >= Connects.end*/
insert into Wears values ('2011-10-10', '2013-10-10', '001-54245-1555575', 'www.pan1.pt');
/*Overlap Situação 4 new.start <= Connects.start e new.end >= Connects.end*/
insert into Wears values ('2010-10-10', '2013-10-10', '001-54245-1555575', 'www.pan1.pt');
/*Sem Overlap Situação 5 new.start <= Connects.start e new.end <= Connects.start*/
insert into Wears values ('2009-10-10', '2010-10-10'

/*Sem Overlap Situação 6 new.start >= Connects.end e new.end >= Connects.end*/
insert into Wears values ('2016-10-10', '2017-10-10', '001-54245-1555575', 'www.pan1.pt');
/*Inserir um Paciente noutro PAN quando este já está ligado a um PAN*/
/*Overlap Situação 1 new.start <= Connects.start e Connects.start <= new.end <= Connects.end*/
insert into Wears values ('2010-10-10', '2011-10-10', '001-54245-1555555', 'www.pan3.pt');
/*Overlap Situação 2 Connects.start <= new.start <= Connects.end e Connects.start <= new.end <= Connects.end*/
insert into Wears values ('2011-10-10', '2012-10-10', '001-54245-1555555', 'www.pan3.pt');
/*Overlap Situação 3 Connects.start <= new.start <= Connects.end e new.end >= Connects.end*/
insert into Wears values ('2011-10-10', '2013-10-10', '001-54245-1555555', 'www.pan3.pt');
/*Overlap Situação 4 new.start <= Connects.start e new.end >= Connects.end*/
insert into Wears values ('2010-10-10', '2013-10-10', '001-54245-1555555', 'www.pan3.pt');
/*Sem Overlap Situ
  CREATE OR REPLACE  VIEW HV_AUM_MGMT_FEES (NAV_ID, FF_VC1, SCHEME, ACCENT_AMNT, PORTFOLIO_TYPE, PORTFOLIO_CATEGORY, PORTFOLIO_CATEGORY_NAME, YEAR_MONTH_ID, DAY_ID, WEEK_OF_YEAR, MONTH_ID, FISC_NUM_IND_QUARTER, YEAR_ID, PORTFOLIO_NAME, TRANS_DATE, NAV_SUM, PORTFOLIO, AVG_NAV, AVG_NAV_MON, AVG_NAV_YEAR) AS 
  SELECT  SUM_NAV.NAV_ID,
SUM_NAV.FF_VC1,
ACCENT.SCHEME, ACCENT.ACCENT_AMNT,
  SUM_NAV.PORTFOLIO_TYPE,
  SUM_NAV.PORTFOLIO_CATEGORY,
  SUM_NAV.PORTFOLIO_CATEGORY_NAME,
 DT_TIME_DIM.YEAR_MONTH_ID,
DT_TIME_DIM.DAY_ID,
DT_TIME_DIM.WEEK_OF_YEAR,
DT_TIME_DIM.MONTH_ID,
DT_TIME_DIM.FISC_NUM_IND_QUARTER,
DT_TIME_DIM.YEAR_ID,
    SUM_NAV.PORTFOLIO_NAME,
   SUM_NAV.TRANS_DATE,
 ROUND((SUM_NAV.SNAV)/10000000,2) NAV_SUM ,
    SUM_NAV.PORTFOLIO,
  ROUND(ROUND( AVG(SUM_NAV.SNAV)OVER (PARTITION BY SUM_NAV.PORTFOLIO ORDER BY SUM_NAV.TRANS_DATE),2)/10000000,2) AVG_NAV,
    ROUND(ROUND( AVG(SUM_NAV.SNAV)OVER (PARTITION BY SUM_NAV.PORTFOLIO ORDER BY DT_TIME_DIM.YEAR_MONTH_ID),2)/10000000,2) AVG_NAV_MON

  ROUND(ROUND( AVG(SUM_NAV.SNAV)OVER (PARTITION BY SUM_NAV.PORTFOLIO ORDER BY DT_TIME_DIM.YEAR_ID),2)/10000000,2) AVG_NAV_YEAR
FROM  HDIM_TIME_CAL DT_TIME_DIM ,(SELECT  
ACCENT.SCHEME SCHEME, -SUM(ACCENT.AMOUNT) ACCENT_AMNT
from
 HI_ACCENT_CURR ACCENT
 where   (ACCENT.LEVEL_1 IN ('810300','810311'))  
and (ACCENT.NARRATION NOT LIKE '%lumpsum') 
--AND (ACCENT.VALUE_DATE BETWEEN '1 Jan 2014' AND '31 jan 2014')
group by 
ACCENT.SCHEME) ACCENT,
(SELECT HREP_NAV_SUMMARY_CURR.NAV_ID,
HREP_NAV_SUMMARY_CURR.FF_VC1,
   HREP_NAV_SUMMARY_CURR.PORTFOLIO_NAME,
   HREP_NAV_SUMMARY_CURR.TRANS_DATE,
 SUM(HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE) SNAV ,
    HREP_NAV_SUMMARY_CURR.PORTFOLIO,
     HREP_NAV_SUMMARY_CURR.PORTFOLIO_TYPE,
  HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY,
  HREP_NAV_SUMMARY_CURR.PORTFOLIO_CATEGORY_NAME
 FROM HREP_NAV_SUMMARY_CURR
WHERE
 HREP_NAV_SUMMARY_CURR.UNITS_OUTS  >  0
   AND       HREP_NAV_SUMMARY_CURR.PORTFOLIO_CLASS  <>  'GLOBAL'
 --AND   HREP_NAV_SUMMARY_CURR.PORTFOLIO = 'AP
CREATE TABLE `prefix_flash` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `course` int(10) unsigned NOT NULL default '0',
  `name` varchar(255) NOT NULL default '',
  `moviename` varchar(255) NOT NULL default '',
  `grade` int(11) NOT NULL default '0',
  `gradingmethod` varchar(255) default NULL,
  `showgrades` tinyint(1) NOT NULL default '1',
  `showheader` tinyint(1) NOT NULL default '1',
  `size` tinyint(1) NOT NULL default '1',
  `to_config` tinyint(3) default NULL,
  `config` text,
  `q_no` int(11) NOT NULL default '0',
  `answers` text,
  `guestfeedback` text,
  `feedback` text,
  `usepreloader` tinyint(1) default NULL,
  `fonts` text,
  `usesplash` tinyint(1) default NULL,
  `splash` text,
  `splashformat` tinyint(2) default '0',
  `timemodified` int(10) NOT NULL default '0',
  PRIMARY KEY  (`id`)
) TYPE=MyISAM COMMENT='Main flash activity (flash) table';
CREATE TABLE `prefix_flash_accesses` (
  `id` int(10) NOT NULL auto_increment,
  `flashid` int(10) NOT NULL default '0
﻿/*
 *
 * Automatically generated for MonoX installation
 *
 */
USE MonoX2;
GO
SET NOCOUNT ON
/* ======================================================================= */
PRINT N'Deleting existing values from [dbo].[NewsItem]';
DELETE FROM [dbo].[NewsItem];
GO
PRINT N'Inserting values into [dbo].[NewsItem]';
INSERT INTO [dbo].[NewsItem] ([Id],[NewsCategoryId],[UserId],[ShowOnHomePage],[Revision],[ShowTitle],[ShowShortContent],[ShowCategoryTitle],[ShowCategoryTitleAsLink],[ShowFullCategoryPath],[ShowUserName],[ShowDateEntered],[ShowDateModified],[ViewCount],[DateEntered],[DateModified],[VisibleDate]) VALUES ('3212B9B2-BF54-4C1D-9257-9E6300DF50B1','CDF073F2-9404-4B09-83AA-9E6300D5794E','67C919E2-8DF4-476A-B312-C26F82A36CFB',1,2,1,1,1,1,0,0,0,0,1,'2011-01-06T12:11:46.000','2011-01-06T12:31:28.000',
    '2011-01-06T12:11:46.000');
GO
INSERT INTO [dbo].[NewsItem] ([Id],[NewsCategoryId],[UserId],[ShowOnHomePage],[Revision],[ShowTitle],[ShowShortContent],[ShowCategoryTitle],[ShowCategoryTitl
﻿CREATE VIEW [dbo].[ViewVisitDetails]
AS
SELECT     *
FROM         (SELECT     dbo.ViewVisits.VisitId, dbo.ViewVisits.VisitNo, Person.PersonLanguages.DisplayName, dbo.ViewVisits.CustomerId, dbo.Customers.CompanyName, 
                                              dbo.ViewVisits.Finalized, dbo.ViewVisits.StartDateTime, dbo.ViewVisits.EndDateTime, dbo.ViewVisits.Accomplishment, dbo.ViewVisits.PendingTasks, 
                                              dbo.ViewVisits.VisitComments, dbo.ViewVisits.SupplierId, dbo.Suppliers.SupplierName, dbo.ViewVisits.ReferencedShotecNumbers, 
                                              dbo.ViewVisits.ReportDate, dbo.ViewVisits.CustomerNotes, dbo.ViewVisits.EngineerNotes, dbo.ViewVisits.Satisfied, dbo.ViewVisits.Reason, 
                                              dbo.ViewVisits.BranchID , dbo.ViewVisits.BranchNameFL , dbo.ViewVisits.BranchNameSL , dbo.ViewVisits.CountryID , dbo.ViewVisits.CountryName ,
                                              db
-- Add option conditions for Warrior trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (523,655,656,4091,4475,4481,4482,4509,4511,4525,4526,4527,4546,4547,4548,4568,4569,4570,4578,4579,4581,4645,4649,4650,4653,4683,4684,4696,4697,7263);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,523,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,523,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,523,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,655,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,655,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,655,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,656,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior

(15,656,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,656,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4091,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4091,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4091,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4475,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4475,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4475,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4481,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4481,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4481,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4482,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4482,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4482,2,0,15,1,0,0,0,'','Show gossip option if pl

(15,4509,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4509,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4509,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4511,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4511,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4511,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4525,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4525,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4525,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4526,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4526,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4526,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4527,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4527,1,0,15,1,0,0,0,'','Show gossip option if 
--	Retrieve a contig's info stored in a ChadoDB instnace in ACE file format
--
--	Copyright (c) 2012 Diego I. Dayan, SFSU
--
--	Permission is hereby granted, free of charge, to any person obtaining a copy
--	of this software and associated documentation files (the "Software"), to deal
--	in the Software without restriction, including without limitation the rights
--	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--	copies of the Software, and to permit persons to whom the Software is
--	furnished to do so, subject to the following conditions:
--	
--	The above copyright notice and this permission notice shall be included in
--	all copies or substantial portions of the Software.
--	
--	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 

--	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
--	THE SOFTWARE.
-- Auxiliary table to build the N lines of 50 nucleotides each
WITH RECURSIVE numbers(n) AS (
    VALUES (1)
    UNION ALL
    SELECT n+1 FROM numbers WHERE n < 1000
), contig_identifier AS (
   -- change this with your feature_id (contig_id) and the cvterm of your database (e.g., 'contig')
   -- valid contig_ids are (1029, 34, ...)
   SELECT 1029 as id, cast('contig' as text) as cvterm
   
), contig AS (
   SELECT contig.feature_id as contig_id,
	  contig.uniquename as contig_name,
	  -- IMPORTANT: change this to contig.residues when the content is pre-computed
	  --		 we want one row per contig, not many
          substring(read.residues from fl.fmin+1 for fl.fmax-fl.fmin+1) as contig_sequence,
	  -- IMPORTANT: these below doesn't make sense when we get 1 row per contig
	  fl.fmin, fl.fmax,
	  read.uniquename a

   FROM feature contig
   JOIN featureloc fl ON (contig.feature_id = fl.feature_id)
   JOIN feature read ON (fl.srcfeature_id = read.feature_id)
   WHERE contig.is_analysis = 'f'
     AND contig.type_id IN (SELECT cvterm_id FROM cvterm WHERE name IN (SELECT cvterm FROM contig_identifier))
     AND contig.feature_id IN (SELECT id FROM contig_identifier)
   ORDER BY read.uniquename
   
), contig_detail AS (
   SELECT substring(contig_sequence from cast((ROW_NUMBER() OVER (ORDER BY contig_id ASC) - 1) * 50 + 1 as integer) for 50) as line
   FROM contig, numbers -- use numbers temporal table to multiply the same row n times
   WHERE numbers.n <= LENGTH(cast(contig_sequence as text)) / 50 + 1 -- int division, up to n pieces of 50 nucleotides
), contig_section AS (
   SELECT line FROM contig_summary
   UNION ALL SELECT line FROM contig_detail WHERE line != ''
), read_temp AS (
   SELECT read.feature_id as read_id,
	  read.uniquename as read_name,
	  cast(read.residues as text) as read_seque
﻿create or replace procedure u1.ETLT_MO_AUTOCHECK_RESULT
     is
       s_mview_name     varchar2(30) := 'T_MO_AUTOCHECK_RESULT';
       vStrDate         date := sysdate;
       v_max_id         number;
      begin
       select /*+ parallel(20) */ max(t.request_id) into v_max_id
        from T_MO_AUTOCHECK_RESULT t;
        insert /*+ APPEND */ into T_MO_AUTOCHECK_RESULT
        select rr.request_id,
               rr.rfo_client_id,
               rr.folder_id,
               rr.verif_id,
               rr.auto_photo_result,
               rr.verif_step,
               rr.system_source,
               rr.status,
               rr.date_create,
               rr.date_send,
               rr.error_msg,
               rr.date_end,
               rr.verif_photo,
               rr.verif_contacts,
               rr.verif_status,
               rr.verif_vector_gr,
               t1.value_number as ap_client_is_reclam_pre ,
               t2.value_number as verif_client_data_is_eq
          fr
-- *************************************************************************************************
-- * update-district.sql                                                                           *
-- *                                                                                               *
-- * Update a district name                                                                        *
-- * :newName - new name for the district;                                                         *
-- * :oldName - name of the district to update;                                                    *
-- *                                                                                               *
-- * psql -v oldName="'OLD_NAME'" -v newName="'NEW_NAME'" [login options...] < update-district.sql *
-- *************************************************************************************************
UPDATE withdrawal        SET district = :newName WHERE district = :oldName;
UPDATE market_p
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Big Dummy');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Conundrum');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Instigator');
INSERT INTO model (manufacturer_id, name) VALUES (3230, '1x1');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Steamroller');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Pacer');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Cross-Check');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Cross-Check SS');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Straggler');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Straggler 650b');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Travellers Check');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Long Haul Trucker');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Disc Trucker');
INSERT INTO model (manufacturer_id, name) VALUES (3230, 'Trucker De
CREATE TABLE `coa_body_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `new_id` int(11) NOT NULL,
  `old_test_id` varchar(11) DEFAULT NULL,
  `new_test_id` varchar(11) DEFAULT NULL,
  `old_labref` varchar(20) DEFAULT NULL,
  `new_labref` varchar(30) DEFAULT NULL,
  `old_method` varchar(20) DEFAULT NULL,
  `new_method` varchar(20) DEFAULT NULL,
  `old_compedia` varchar(100) DEFAULT NULL,
  `new_compedia` varchar(100) DEFAULT NULL,
  `old_specification` varchar(100) DEFAULT NULL,
  `new_specification` varchar(100) DEFAULT NULL,
  `new_determined` varchar(100) DEFAULT NULL,
  `old_determined` varchar(100) DEFAULT NULL,
  `old_verdict` varchar(50) DEFAULT NULL,
  `new_verdict` varchar(50) DEFAULT NULL,
  `old_conclusion` varchar(70) DEFAULT NULL,
  `new_conclusion` varchar(70) DEFAULT NULL,
  `old_complies` varchar(100) DEFAULT NULL,
  `new_complies` varchar(100) DEFAULT NULL,
  `log_date` varchar(100) DEFAULT NULL,
  `action` varchar(11) DEFAULT NULL,
  `who` varchar(20) DEFAULT NULL,
  
--// migration cleanup
-- Migration SQL that makes the change goes here.
alter table members.members 
add identity varchar(255) null;
alter table community.modulesettings add displayMembers varchar(55);
delete  from community.modulepage where page in (select contentType from contentstore.contenttype);
truncate community.modules;
LOCK TABLES community.`modules` WRITE;
/*!40000 ALTER TABLE community.`modules` DISABLE KEYS */;
INSERT INTO community.`modules` VALUES (3,'HTML','any','dsp_html','          ','widget','Add your own custom HTML','html_add.png','','frm_editHTML'),(4,'RSS','any','dsp_rss','          ','widget','Add your favorite RSS feed','rss_go.png','','frm_editRss'),(6,'Blogs','Home','content','blog','media','Publish content and allow members to comment','book.png','','frm_editContent'),(7,'Articles','Home','content','article','media','Publish content and allow members to comment','book.png','','frm_editContent'),(8,'Members','Home','dsp_memberList',NULL,'community','Show 

/*!40000 ALTER TABLE community.`modules` ENABLE KEYS */;
UNLOCK TABLES;
ALTER TABLE `statistics`.`files` DROP COLUMN `formname` ;
UPDATE `community`.`community` SET `subdomain`='mmj' WHERE `communityID`='251';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='1';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='2';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='4';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='5';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='7';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='30';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='35';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='38';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='90';
DELETE FROM `community`.`communitysettinglist` WHERE `settingID`='91';
insert into community.communitysettinglist
(name, valuelist, defaultvalue, settingTy
﻿DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='xydzp' ORDER BY id DESC LIMIT 1); DELETE FROM `wp_model` WHERE `name`='xydzp' ORDER BY id DESC LIMIT 1; DROP TABLE IF EXISTS `wp_xydzp`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='xydzp_option' ORDER BY id DESC LIMIT 1); DELETE FROM `wp_model` WHERE `name`='xydzp_option' ORDER BY id DESC LIMIT 1; DROP TABLE IF EXISTS `wp_xydzp_option`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='xydzp_log' ORDER BY id DESC LIMIT 1); DELETE FROM `wp_model` WHERE `name`='xydzp_log' ORDER BY id DESC LIMIT 1; DROP TABLE IF EXISTS `wp_xydzp_log`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='xydzp_jplist' ORDER BY id DESC LIMIT 1); DELETE FROM `wp_model` WHERE `name`='xydzp_jplist' ORDER BY id DESC LIMIT 1; DROP TABLE IF EXISTS `wp_xydzp_jplist`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_mo
CALL moduleAddNewByPath(
	"Dashboard", 1, 1,
	"administrator/Schbas/Dashboard/Dashboard.php",
	"Schbas", "root/administrator/Schbas",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"Preparation", 1, 0,
	"administrator/Schbas/Dashboard/Preparation/Preparation.php",
	"Dashboard", "root/administrator/Schbas/Dashboard",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
CALL moduleAddNewByPath(
	"AssignmentsController", 1, 0,
	"administrator/Schbas/Dashboard/Preparation/AssignmentsController.php",
	"Preparation", "root/administrator/Schbas/Dashboard/Preparation",
	@newModuleId
);
INSERT INTO SystemGroupModuleRights (groupId, moduleId)
	VALUES (3, @newModuleId);
	CALL moduleAddNewByPath(
	"ClaimForm", 1, 0,
	"administrator/Schbas/Dashboard/Preparation/ClaimForm.php",
	"Preparation", "root/administrator/Schbas/Dashboard/Preparation",
	@newModuleId
);
INSERT INTO Sys
SET DEFINE OFF;
CREATE TABLE D_DATE_DIM
  DAY_ID                     NUMBER,
  CALENDAR_DATE              DATE,
  FULL_DAY_NAME              VARCHAR2(10 BYTE),
  SHORT_DAY_NAME             VARCHAR2(3 BYTE),
  CALENDAR_MONTH             VARCHAR2(3 BYTE),
  CALENDAR_QUARTER           VARCHAR2(1 BYTE),
  CALENDAR_YEAR              VARCHAR2(4 BYTE),
  DAY_CALENDAR_QTR_BEGIN     VARCHAR2(1 BYTE),
  DAY_CALENDAR_QTR_END       VARCHAR2(1 BYTE),
  DAY_CALENDAR_YEAR_BEGIN    VARCHAR2(1 BYTE),
  DAY_CALENDAR_YEAR_END      VARCHAR2(1 BYTE),
  DAY_FINANCIAL_QTR_BEGIN    VARCHAR2(1 BYTE),
  DAY_FINANCIAL_QTR_END      VARCHAR2(1 BYTE),
  DAY_FINANCIAL_YEAR_BEGIN   VARCHAR2(1 BYTE),
  DAY_FINANCIAL_YEAR_END     VARCHAR2(1 BYTE),
  DAY_REPORTING_WEEK_BEGIN   VARCHAR2(1 BYTE),
  DAY_REPORTING_WEEK_END     VARCHAR2(1 BYTE),
  DAY_REPORTING_QTR_BEGIN    VARCHAR2(1 BYTE),
  DAY_REPORTING_QTR_END      VARCHAR2(1 BYTE),
  DAY_REPORTING_YEAR_BEGIN   VARCHAR2(1 BYTE),
  DAY_REPORTING_YEAR_END     VARCHAR2(1 B

  DAY_CAL_MONTH_BEGIN        VARCHAR2(1 BYTE),
  DAY_CAL_MONTH_END          VARCHAR2(1 BYTE),
  FINANCIAL_QUARTER          VARCHAR2(1 BYTE),
  FINANCIAL_YEAR             VARCHAR2(4 BYTE),
  REPORTING_QUARTER          VARCHAR2(1 BYTE),
  REPORTING_YEAR             VARCHAR2(4 BYTE),
  FULL_MONTH_NAME            VARCHAR2(10 BYTE),
  SHORT_MONTH_NAME           VARCHAR2(3 BYTE),
  WEEK_FRIDAY                DATE,
  WEEK_MONDAY                DATE,
  WEEK_SATURDAY              DATE,
  WEEK_SUNDAY                DATE,
  JULIAN_COUNTER             NUMBER,
  LEAP_YEAR_IND              VARCHAR2(1 BYTE),
  PUBLIC_HOLIDAY_IND         VARCHAR2(1 BYTE),
  DATE_LAST_YEAR_EQUIVALENT  DATE,
  FISCAL_WEEK_NO             VARCHAR2(3 BYTE),
  FISCAL_MONTH_NO            VARCHAR2(3 BYTE),
  FISCAL_YEAR                VARCHAR2(4 BYTE),
  SEASON                     VARCHAR2(20 BYTE),
  PERIOD_A                   VARCHAR2(20 BYTE),
  PERIOD_B                   VARCHAR2(20 BYTE),
  PERIOD_C                   VA

  PERIOD_D                   VARCHAR2(20 BYTE)
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    20
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX DATE_DIM_PK ON D_DATE_DIM
(DAY_ID)
LOGGING
TABLESPACE DTW_ADV_IDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;
CREATE UNIQUE INDEX IDX_DAY_DATE ON D_DATE_DIM

-- Incident View
SELECT dropIfExists('VIEW', 'incident', 'api');
CREATE OR REPLACE VIEW api.incident AS
  SELECT
    incdt_number AS incident_number,
    incdtcat_name AS category,
    incdt_summary AS description,
    crmacct_number AS crm_account,
    incdt_assigned_username AS assigned_to,
    CASE
      WHEN incdt_status='N' THEN
        'New'
      WHEN incdt_status='F' THEN
        'Feedback'
      WHEN incdt_status='C' THEN
        'Confirmed'
      WHEN incdt_status='A' THEN
        'Assigned'
      WHEN incdt_status='R' THEN
        'Resolved'
      WHEN incdt_status='L' THEN
        'Closed'
      ELSE
        '?'
    END AS status,
    incdtseverity_name AS severity,
    incdtpriority_name AS priority,
    incdtresolution_name AS resolution,
    cntct_number AS contact_number,
    cntct_honorific AS honorific,
    cntct_first_name AS first,
    cntct_middle AS middle,
    cntct_last_name AS last,
    cntct_suffix AS suffix,
    cntct_title AS job_title,
    cntct_phone AS ph

    cntct_fax AS fax,
    cntct_email AS email,
    (''::TEXT) AS contact_change,
    incdt_descrip AS notes,
    item_number AS item_number,
    incdt_lotserial AS lot_serial_number,
    CASE
      WHEN aropen_doctype='C' THEN
        'C/M'
      WHEN aropen_doctype='D' THEN
        'D/M'
      WHEN aropen_doctype='I' THEN
        'Invoice'
      WHEN aropen_doctype='R' THEN
        'C/D'
      ELSE
        ''
    END AS ar_doc_type,
    aropen_docnumber AS ar_doc_number
  FROM incdt()
     LEFT OUTER JOIN incdtcat ON (incdtcat_id=incdt_incdtcat_id)
     LEFT OUTER JOIN crmacct ON (crmacct_id=incdt_crmacct_id)
     LEFT OUTER JOIN incdtseverity ON (incdtseverity_id=incdt_incdtseverity_id)
     LEFT OUTER JOIN incdtpriority ON (incdtpriority_id=incdt_incdtpriority_id)
     LEFT OUTER JOIN incdtresolution ON (incdtresolution_id=incdt_incdtresolution_id)
     LEFT OUTER JOIN cntct ON (cntct_id=incdt_cntct_id)
     LEFT OUTER JOIN item ON (item_id=incdt_item_id)
     LEFT OUTER JOIN arop

GRANT ALL ON TABLE api.incident TO xtrole;
COMMENT ON VIEW api.incident IS 'Incident';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.incident DO INSTEAD
  INSERT INTO incdt (
    incdt_number,
    incdt_crmacct_id,
    incdt_cntct_id,
    incdt_summary,
    incdt_descrip,
    incdt_item_id,
    incdt_status,
    incdt_assigned_username,
    incdt_incdtcat_id,
    incdt_incdtseverity_id,
    incdt_incdtpriority_id,
    incdt_incdtresolution_id,
    incdt_lotserial,
    incdt_ls_id
    )
  VALUES (
    NEW.incident_number,
    getCrmAcctId(NEW.crm_account),
    saveCntct(
      getCntctId(NEW.contact_number),
      NEW.contact_number,
      NULL,
      NEW.honorific,
      NEW.first,
      NEW.middle,
      NEW.last,
      NEW.suffix,
      NEW.phone,
      NULL,
      NEW.fax,
      NEW.email,
      NULL,
      NEW.job_title,
      NEW.contact_change),
    COALESCE(NEW.description, ''),
    COALESCE(NEW.notes, ''),
    getItemId(NEW.item_number),
    CASE
      WHEN 
--------------------------------------------------------
--  DDL for Table JOBS
--------------------------------------------------------
  CREATE TABLE "LUMENS"."JOBS" 
   (	"JOB_ID" VARCHAR2(10 BYTE), 
	"JOB_TITLE" VARCHAR2(35 BYTE), 
	"MIN_SALARY" NUMBER(6,0), 
	"MAX_SALARY" NUMBER(6,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
   COMMENT ON COLUMN "LUMENS"."JOBS"."JOB_ID" IS 'Primary key of jobs table.';
   COMMENT ON COLUMN "LUMENS"."JOBS"."JOB_TITLE" IS 'A not null column that shows job title, e.g. AD_VP, FI_ACCOUNTANT';
   COMMENT ON COLUMN "LUMENS"."JOBS"."MIN_SALARY" IS 'Minimum salary for a job title.';
   COMMENT ON COLUMN "LUMENS"."JOBS"."MAX_SALARY" IS 'Maximum salary for a job title';
   COMMENT ON TABLE "LUMEN

References with employees and job_history table.';
--------------------------------------------------------
--  DDL for Index JOB_ID_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "LUMENS"."JOB_ID_PK" ON "LUMENS"."JOBS" ("JOB_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOLOGGING COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table JOBS
--------------------------------------------------------
  ALTER TABLE "LUMENS"."JOBS" ADD CONSTRAINT "JOB_ID_PK" PRIMARY KEY ("JOB_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOLOGGING COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFA
CREATE view [dbo].[vPPI_CheckList]
AS
SELECT DISTINCT CLO
FROM         dbo.vPPI
WHERE     (Status <> 100)
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4[30] 2[40] 3) )"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
     

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 3
   End
   Begin DiagramPane = 
      PaneHidden = 
      Begin Origin = 
CREATE VIEW salesView as
	SELECT salesOrder.orderId as 'Order Id', customer.customerId as 'Customer Id', 
companyContactName as 'Customer Contact Name', 
customerType.typeDescription as 'Customer Type Description',
salesperson.salespersonName as 'SalesPerson Name', salesCompany.companyName as 'Salesperson Company Name'
FROM salesOrder,customer,customerType, salesperson,salesCompany
	WHERE customer.customerId=salesOrder.customerId and
		  customer.customerTypeId = customerType.customerTypeId and
		  salesOrder.salespersonNo = salesperson.salespersonNo and
		  salesperson.companyId = salesCompany.companyId;
CREATE VIEW salesView as
	SELECT salesOrder.orderId, customer.customerId, 
companyContactName, 
customerType.typeDescription,
salesperson.salespersonName, salesCompany.companyName
FROM salesOrder,customer,customerType, salesperson,salesCompany
	WHERE customer.customerId=salesOrder.customerId and
		  customer.customerTypeId = customerType.customerTypeId and
		  salesOrder.salespersonNo
--this test only tests the sintax
--the semantic should also be tested after the syntax test
create table t_2_1 (id int, name varchar(1024));
create table t_2_2 (id int, name varchar(1024));
--test when trigger event is UPDATE
insert into t_2_1 values(10, 'monetdb');
insert into t_2_1 values(20, 'monet');
create trigger test_2_1
	after update on t_2_1 referencing new row as new_row
	for each row insert into t_2_2 values(0, 'update_new_row');
create trigger test_2_2
	after update on t_2_1 referencing new row new_row
	for each row insert into t_2_2 values(1, 'update_new_row');
create trigger test_2_3
	after update on t_2_1 referencing new as new_row
	for each row insert into t_2_2 values(2, 'update_new_row');
create trigger test_2_4
	after update on t_2_1 referencing new new_row
	for each row insert into t_2_2 values(3, 'update_new_row');
update t_2_1 set name = 'mo' where id = 10;
select * from t_2_1;
select * from t_2_2;
delete from t_2_1 where id > -1;
delete from t_2_2 where id > -1;

drop trigger test_2_1;
drop trigger test_2_2;
drop trigger test_2_3;
drop trigger test_2_4;
--test when trigger event is DELETE
insert into t_2_1 values(10, 'monetdb');
insert into t_2_1 values(20, 'monet');
create trigger test_2_1
	after delete on t_2_1 referencing new row as new_row
	for each row insert into t_2_2 values(0, 'delete_new_row');
create trigger test_2_2
	after delete on t_2_1 referencing new row new_row
	for each row insert into t_2_2 values(1, 'delete_new_row');
create trigger test_2_3
	after delete on t_2_1 referencing new as new_row
	for each row insert into t_2_2 values(2, 'delete_new_row');
create trigger test_2_4
	after delete on t_2_1 referencing new new_row
	for each row insert into t_2_2 values(3, 'delete_new_row');
delete from t_2_1 where id >-1;
select * from t_2_1;
select * from t_2_2;
drop trigger test_2_1;
drop trigger test_2_2;
drop trigger test_2_3;
drop trigger test_2_4;
delete from t_2_2 where id >-1;
--test error messages
--new row and new table are n

insert into t_2_1 values(10, 'monetdb');
create trigger test_2_1
	after insert on t_2_1 referencing new row as new_row
	for each row insert into t_2_2 values(0, 'insert_new_row');
create trigger test_2_2
	after insert on t_2_1 referencing new row new_row
	for each row insert into t_2_2 values(1, 'insert_new_row');
create trigger test_2_3
	after insert on t_2_1 referencing new as new_row
	for each row insert into t_2_2 values(2, 'insert_new_row');
create trigger test_2_4
	after insert on t_2_1 referencing new new_row
	for each row insert into t_2_2 values(3, 'insert_new_row');
insert into t_2_1 values(20, 'monet');
select * from t_2_1;
select * from t_2_2;
delete from t_2_1 where id >-1;
delete from t_2_2 where id >-1;
drop trigger test_2_1;
drop trigger test_2_2;
drop trigger test_2_3;
drop trigger test_2_4;
--test with new row and new table and mixed 
insert into t_2_1 values(10, 'monetdb');
insert into t_2_1 values(20, 'monet');
create trigger test_2_1
	after update on t_2_1 referen
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `km_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `km_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `slug` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT

  PRIMARY KEY (`term_id`),
  KEY `slug` (`slug`(191)),
  KEY `name` (`name`(191))
) ENGINE=MyISAM AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;
LOCK TABLES `km_terms` WRITE;
/*!40000 ALTER TABLE `km_terms` DISABLE KEYS */;
INSERT INTO `km_terms` VALUES (1,'Uncategorized','uncategorized',0),(2,'simple','simple',0),(3,'grouped','grouped',0),(4,'variable','variable',0),(5,'external','external',0),(6,'Shakes','shakes',0),(7,'Cremes','european-style-cremes',0),(15,'Packs','packs',0),(9,'Soup','soups',0),(10,'Bar','meal-replacement-bar',0),(12,'Nav','nav',0),(13,'Secondary Nav','secondary-nav',0),(14,'Footer','footer',0),(17,'Essentials','essentials',0);
/*!40000 ALTER TABLE `km_terms` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!401
﻿CREATE TABLE [dbo].[Exemplar] (
    [Signature] VARCHAR (255) NOT NULL,
    [ISBN]      BIGINT        NULL,
    PRIMARY KEY CLUSTERED ([Signature] ASC),
    FOREIGN KEY ([ISBN]) REFERENCES [dbo].[Book] ([ISBN])
);
GO
CREATE TRIGGER [createSignature]
	ON [dbo].[Exemplar]
	INSTEAD OF INSERT
	AS
	BEGIN
		SET NOCOUNT ON;
		-- needed vars
		DECLARE @subject_short VARCHAR(5);
		DECLARE @author_first_char VARCHAR(1);
		DECLARE @Signature VARCHAR(255);
		DECLARE @ISBN BIGINT;
		-- set ISBN form canceld INSERT
		SET @ISBN = (SELECT ISBN FROM inserted);
		-- get first 5 chars from subject
		SET @subject_short = (
			SELECT SUBSTRING([Subject].name,1,4) 
			FROM Book 
			LEFT JOIN [Subject] ON Book.Subject_Id = [Subject].Subject_Id 
			WHERE Book.ISBN = @ISBN
		);
		-- delete whitespaces
		SET @subject_short = REPLACE(@subject_short,' ','');
		-- append '0's until we have still 5 chars
		WHILE(LEN(@subject_short) < 5)
		BEGIN
			SET @subject_short = CONCAT(@subject_short,'0');
		END
		-- get fir
/****** Object:  StoredProcedure [dbo].[AddFTICRUmcMember] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.AddFTICRUmcMember
/****************************************************	
**	Adds row to the T_FTICR_UMC_Members table
**	returns 0 if success; error number on failure
**
**		Auth: mem
**		Date: 10/01/2004
**
****************************************************/
	@UMCResultsID int,			-- reference to T_FTICR_UMC_Results table
	@MemberTypeID tinyint,		-- reference to T_FPR_UMC_Member_Type_Name table
	@IndexInUMC smallint,		-- index of member in the given UMC
	@ScanNumber int,			-- scan number
	@MZ float,					-- m/z
	@ChargeState smallint,
	@MonoisotopicMass float,
	@Abundance float,
	@IsotopicFit real,
	@ElutionTime real,
	@IsChargeStateRep tinyint		-- 1 if the given member is the charge state rep in the UMC (i.e. most abundant member with the given charge state)
As
	Set NoCount On
	declare @returnvalue int
	set @returnvalue=0
		
	--append new row to the
--
-- PostgreSQL database dump
--
SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET search_path = public, pg_catalog;
--
-- Name: meter_V_readings_and_locations; Type: VIEW; Schema: public; Owner: eileen
--
CREATE VIEW "meter_V_readings_and_locations" AS
    SELECT "LocationRecords".service_pt_latitude, "LocationRecords".service_pt_longitude, "LocationRecords".service_pt_height, "LocationRecords".device_util_id, "LocationRecords".device_serial_no, "LocationRecords".device_status, "MeterData".util_device_id, "MeterData".meter_name, "IntervalReadData".start_time, "IntervalReadData".end_time, "Reading".channel, "Reading".uom, "Reading".value FROM (((("LocationRecords" JOIN "MeterData" ON (((("LocationRecords".device_util_id)::bpchar = "MeterData".util_device_id) AND (("LocationRecords".device_util_id)::bpchar = "MeterData".util_device_id)))) JOIN "IntervalReadData" ON (("
spool 14_updateBlob_RULE_PARAM.log
DECLARE
  TMP_BLOB BLOB := EMPTY_BLOB();
  SRC_CHUNK_01 RAW(32767);
BEGIN
  SRC_CHUNK_01 := UTL_RAW.CAST_TO_RAW('package packws.cargaterritorio
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.io.File;
import org.springframework.batch.core.StepExecution;
import com.everis.util.FechaUtil;
import com.bbva.batch.util.ParamUtil;
import com.bbva.batch.enums.ParameterType;
import com.bbva.batch.util.DeciderParam;
rule "101 Configurar nombre archivo"
dialect "java" 
salience 101
no-loop true
when
	paramUtil: ParamUtil()
	params: Map()
then
	org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(DeciderParam.class);
	String rutaArchivo = params.get("PB_RUTA_ARCHIVO").toString();
	String nombreArchivo = params.get("PB_NOMBRE_ARCHIVO").toString();
	String formatoFechaSufijo = params.get("PB_FORMATO_FECHA_SUFIJO").toString();
	String nroMesAnteriores = params.get("PB_MESES_ANTERIORES").toString
DROP VIEW IF EXISTS service;
DROP VIEW IF EXISTS settings;
DROP VIEW IF EXISTS global;
DROP VIEW IF EXISTS layergroup_style;
DROP VIEW IF EXISTS layergroup_layer;
DROP VIEW IF EXISTS layergroup;
DROP VIEW IF EXISTS layer_style;
DROP VIEW IF EXISTS layer;
DROP VIEW IF EXISTS style;
DROP VIEW IF EXISTS wmslayer;
DROP VIEW IF EXISTS wmsstore;
DROP VIEW IF EXISTS coverage;
DROP VIEW IF EXISTS coveragestore;
DROP VIEW IF EXISTS featuretype;
DROP VIEW IF EXISTS datastore;
DROP VIEW IF EXISTS workspace;
? ALTER TABLE object_property DROP CONSTRAINT fk_object_property;
? ALTER TABLE property_type DROP CONSTRAINT fk_type_property_type;
? ALTER TABLE object DROP CONSTRAINT fk_object_type;
? ALTER TABLE property_type DROP CONSTRAINT fk_property_type_target_property;
? ALTER TABLE object_property DROP CONSTRAINT fk_object_property_property_type;
DROP TABLE object IF EXISTS;
DROP TABLE object_property IF EXISTS;
DROP TABLE type IF EXISTS;
DROP TABLE property_type IF EXISTS;
DROP TABLE default_objec
INSERT INTO `#__extensions` (`extension_id`, `name`, `type`, `element`, `folder`, `client_id`, `enabled`, `access`, `protected`, `manifest_cache`, `params`, `custom_data`, `system_data`, `checked_out`, `checked_out_time`, `ordering`, `state`) VALUES
(28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2013 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '0000-00-00 00:00:00', 0, 0);
INSERT INTO `#__menu` (`id`, `menutype`, `title`, `alias`, `note`, `path`, `link`, `type`, `published`, `parent_id`, `level`, `component_id`, `ordering`, `checked_out`, `checked_out_time`, `browserNav`, `access`, `img`, `template_style_id`, `params`, `lft`, `rgt`, `home`, `language`, `client_i
proc file_attr_get (filename_n_path)
local logging = %liv (log_procedure)
%liv (log_procedure) = FALSE
;==============================================================================
; Purpose: 
; History:
#include "cfe_utils.h"
ON ERROR RESUME
local wait_time
local tsr = total_successful_receivers
local tss = total_successful_senders
local tus = total_unsuccessful_senders
local tur = total_unsuccessful_receivers
; set up wait time for file xfer
wait_time = %gmt + 900
; loop until archive bit clears, tsr increments or time is expired
; write "Starting archive bit monitoring ... "
write "Starting file monitoring ... "
; /FM_REQFILESTAT PATHNAME=filename_n_path
; write filename_n_path, ": ",p@fm_fsarchive, " 1"
; write "TSR:   ", total_successful_receivers
; write "TRSp1: ", tsr+1
; while (fm_fsarchive = 1) and 
   while (%gmt < wait_time);;
   and  (total_successful_receivers <> tsr + 1) do
   write "Waiting ..."
   wait 3
;   /FM_REQFILESTAT PATHNAME=filename_n_path
;   write filename_
# Dump of table buildings
# ------------------------------------------------------------
CREATE TABLE `buildings` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` text,
  `location` text,
  `description` text,
  `thumbURI` text,
  `stateid` bigint(20),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
# Dump of table state
# ------------------------------------------------------------
CREATE TABLE `state` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
# Dump of table rooms
# ------------------------------------------------------------
CREATE TABLE `rooms` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` text,
  `thumbURI` varchar(20),
  `buildingid` bigint(20),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
# Dump of table photos
# ------------------------------------------------------------
CREATE TABLE `photos` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `description` text,
  `ph
CREATE TABLE &PPXUSER..orders_id_range (
    order_id                                 NUMBER(12)   NOT NULL
  , order_date                               TIMESTAMP(6) NOT NULL
  , order_mode                               VARCHAR2(8)
  , customer_id                              NUMBER(12) NOT NULL
  , order_status                             NUMBER(2)
  , order_total                              NUMBER(8,2)
  , sales_rep_id                             NUMBER(6)
  , promotion_id                             NUMBER(6)
  , warehouse_id                             NUMBER(6)
  , delivery_type                            VARCHAR2(15)
  , cost_of_delivery                         NUMBER(6)
  , wait_till_all_available                  VARCHAR2(15)
  , delivery_address_id                      NUMBER(12)
  , customer_class                           VARCHAR2(30)
  , card_id                                  NUMBER(12)
  , invoice_address_id                       NUMBER(12)
PARTITION BY RANGE (order_id)
select * from grasp where hand_name='SHADOW_HAND';
select * from original_model 
where original_model_id in 
(select original_model_id from scaled_model
where scaled_model_id in (select distinct scaled_model_id from grasp
where hand_name='SHADOW_HAND'));
select * from original_model 
where original_model_id in 
( select original_model_id from scaled_model
where scaled_model_id=18744);
;;create a new model set which contains only the coke can.
insert into model_set(model_set_name,original_model_id)
values ('SHADOW_DEBUG',9387)
#latest grasp (seen working on the coke can - seems very stable)
insert into grasp
(grasp_id,scaled_model_id,grasp_pregrasp_joints,grasp_grasp_joints,grasp_energy,grasp_pregrasp_position,grasp_grasp_position,grasp_source_id,grasp_pregrasp_clearance,grasp_cluster_rep,hand_name,grasp_table_clearance,grasp_compliant_copy,grasp_compliant_original_id,grasp_scaled_quality,fingertip_object_collision)
select 1717999,18744,'{-14,0,0,14,0,0,-10,0,0,0,-10,0,0,0,70,0,0,0}','{
/****** Object:  Table [Production].[ProductModelProductDescriptionCulture]    Committed by VersionSQL https://www.versionsql.com ******/
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
CREATE TABLE [Production].[ProductModelProductDescriptionCulture](
	[ProductModelID] [int] NOT NULL,
	[ProductDescriptionID] [int] NOT NULL,
	[CultureID] [nchar](6) NOT NULL,
	[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate]  DEFAULT (getdate()),
 CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY CLUSTERED 
	[ProductModelID] ASC,
	[ProductDescriptionID] ASC,
	[CultureID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY([CultureID]

REFERENCES [Production].[Culture] ([CultureID])
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID]
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIGN KEY([ProductDescriptionID])
REFERENCES [Production].[ProductDescription] ([ProductDescriptionID])
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]  WITH CHECK ADD  CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY([ProductModelID])
REFERENCES [Production].[ProductModel] ([ProductModelID])
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] CHECK CONSTRAINT [FK_ProductModelProductDesc
IF OBJECT_ID('dbo.wsp_getCitiesOf2ndJurisdicNew') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_getCitiesOf2ndJurisdicNew
    IF OBJECT_ID('dbo.wsp_getCitiesOf2ndJurisdicNew') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_getCitiesOf2ndJurisdicNew >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_getCitiesOf2ndJurisdicNew >>>'
END
go
create proc wsp_getCitiesOf2ndJurisdicNew
@jurisdictionId smallint
as
begin
   set nocount on
   select cityId, cityName
   from City_new, Jurisdiction, Country
   where City_new.secondJurisdictionId = Jurisdiction.jurisdictionId
   and City_new.secondJurisdictionId = @jurisdictionId
   and Jurisdiction.jurisdictionId = @jurisdictionId
   and City_new.countryId = Country.countryId
   and City_new.population >= Country.minPopulation
   order by cityName
end
go
GRANT EXECUTE ON dbo.wsp_getCitiesOf2ndJurisdicNew TO web
go
IF OBJECT_ID('dbo.wsp_getCitiesOf2ndJurisdicNew') IS NOT NULL
    PRINT '<<< CREATED PROCEDURE dbo.wsp_getCities
select xt.create_view('xt.quiteminfo', $$
  select quitem.*,  
    xt.quote_line_base_price(quitem) as base_price,  
    xt.quote_line_markup(quitem) as markup,  
    xt.quote_line_list_price(quitem) as list_price,  
    xt.quote_line_list_price_discount(quitem) as list_price_discount,  
    xt.quote_line_customer_discount(quitem) as cust_discount,  
    xt.quote_line_extended_price(quitem) as ext_price,  
    xt.quote_line_margin(quitem) as margin,  
    xt.quote_line_tax(quitem) as tax  
  from quitem  
    left join item on quitem_item_id=item_id; ;
$$, false);
create or replace rule "_INSERT" as on insert to xt.quiteminfo do instead
insert into quitem (
  quitem_id,
  quitem_quhead_id,
  quitem_linenumber,
  quitem_itemsite_id,
  quitem_scheddate,
  quitem_qtyord,
  quitem_unitcost,
  quitem_price,
  quitem_custprice,
  quitem_memo,
  quitem_custpn,
  quitem_createorder,
  quitem_prcost,
  quitem_imported,
  quitem_qty_uom_id,
  quitem_qty_invuomratio,
  quitem_price_uom_id,
  quit

  quitem_promdate,
  quitem_taxtype_id,
  quitem_dropship,
  quitem_itemsrc_id,
  quitem_pricemode,
  quitem_order_warehous_id,
  quitem_item_id,
  obj_uuid
) select
  new.quitem_id,
  new.quitem_quhead_id,
  new.quitem_linenumber,
  itemsite_id,
  new.quitem_scheddate,
  new.quitem_qtyord,
  coalesce(new.quitem_unitcost, itemcost(itemsite_id)),
  new.quitem_price,
  new.quitem_custprice,
  new.quitem_memo,
  new.quitem_custpn,
  coalesce(new.quitem_createorder, false),
  coalesce(new.quitem_prcost,0),
  coalesce(new.quitem_imported, false),
  new.quitem_qty_uom_id,
  new.quitem_qty_invuomratio,
  new.quitem_price_uom_id,
  new.quitem_price_invuomratio,
  new.quitem_promdate,
  new.quitem_taxtype_id,
  coalesce(new.quitem_dropship, false),
  new.quitem_itemsrc_id,
  coalesce(new.quitem_pricemode, 'D'),
  new.quitem_order_warehous_id,
  new.quitem_item_id,
  new.obj_uuid
from itemsite
where itemsite_item_id=new.quitem_item_id
  and itemsite_warehous_id=new.quitem_order_warehous_id;
cre

update quitem set
  quitem_id=new.quitem_id,
  quitem_quhead_id=new.quitem_quhead_id,
  quitem_linenumber=new.quitem_linenumber,
  quitem_scheddate=new.quitem_scheddate,
  quitem_qtyord=new.quitem_qtyord,
  quitem_price=new.quitem_price,
  quitem_custprice=new.quitem_custprice,
  quitem_memo=new.quitem_memo,
  quitem_custpn=new.quitem_custpn,
  quitem_createorder=new.quitem_createorder,
  quitem_prcost=new.quitem_prcost,
  quitem_imported=new.quitem_imported,
  quitem_qty_uom_id=new.quitem_qty_uom_id,
  quitem_qty_invuomratio=new.quitem_qty_invuomratio,
  quitem_price_uom_id=new.quitem_price_uom_id,
  quitem_price_invuomratio=new.quitem_price_invuomratio,
  quitem_promdate=new.quitem_promdate,
  quitem_taxtype_id=new.quitem_taxtype_id,
  quitem_dropship=new.quitem_dropship,
  quitem_itemsrc_id=new.quitem_itemsrc_id,
  quitem_pricemode=new.quitem_pricemode,
  obj_uuid=new.obj_uuid 
where quitem_id = old.quitem_id;
create or replace rule "_DELETE" as on delete to xt.quiteminfo do instea
CREATE TABLE co_to_new_clu
  CO_ID VARCHAR2(255),
  NEWCLU_ID VARCHAR2(255)
INSERT INTO co_to_new_clu (CO_ID, NEWCLU_ID)
          SELECT
                  co.ID CO_ID,
                  newC.id newClu_ID
  FROM
          KSLU_CLU oldC,
                  KSLU_CLU newC,
                  KSEN_LUI co,
                  KSEN_ATP coAtp,
                  KSEN_ATP newCStartTerm,
                  KSEN_ATP newCEndTerm
  WHERE
          co.CLU_ID = oldC.ID
                  AND co.ATP_ID = coAtp.ID
                  AND oldC.VER_IND_ID = newC.VER_IND_ID
                  AND newC.EXP_FIRST_ATP = newCStartTerm.ID
                  AND newC.LAST_ATP = newCEndTerm.ID(+)
                  AND coAtp.START_DT >= newCStartTerm.START_DT
                  AND
                  (
                          newCEndTerm.END_DT IS NULL
                                  OR newCEndTerm.END_DT>coAtp.START_DT
                          )
                  AND oldC.ID!=newC.ID
--Fix formats to point to correct v

UPDATE KSEN_LUI updatef SET CLU_ID=
(SELECT
    newMatch.fid newformatId
FROM
    (
        SELECT
            CO_ID,
            newCLU_ID,
            fid,
            stragg(atype) atype
        FROM
            (
                SELECT
                    CO_ID,
                    newCLU_ID,
                    f.id fid,
                    a.LUTYPE_ID atype
                FROM
                    KSLU_CLU f,
                    KSLU_CLU a,
                    KSLU_CLUCLU_RELTN cfr,
                    KSLU_CLUCLU_RELTN far,
                    co_to_new_clu newmap
                WHERE
                    newCLU_ID = cfr.CLU_ID
                AND F.ID = cfr.RELATED_CLU_ID
                AND F.ID = far.CLU_ID
                AND A.ID = far.RELATED_CLU_ID
                ORDER BY
                    CO_ID,
                    newCLU_ID,
                    fid,
                    atype
            )
        GROUP BY
            CO_ID,
            newCLU_ID,
            fid
   

    newMatch,
    (
        SELECT
            CO_ID,
            foid,
            fid,
            stragg(atype) atype
        FROM
            (
                SELECT
                    CO_ID,
                    fo.id foid,
                    f.id fid,
                    a.LUTYPE_ID atype
                FROM
                    KSEN_LUI fo,
                    KSEN_LUILUI_RELTN cofor,
                    KSLU_CLU f,
                    KSLU_CLU a,
                    KSLU_CLUCLU_RELTN far,
                    co_to_new_clu newmap
                WHERE
                    newmap.CO_ID = cofor.LUI_ID
                AND fo.ID = cofor.RELATED_LUI_ID
                AND F.ID = fo.CLU_ID
                AND F.ID = far.CLU_ID
                AND A.ID = far.RELATED_CLU_ID
                ORDER BY
                    CO_ID,
                    FOID,
                    FID,
                    ATYPE
            )
        GROUP BY
            CO_ID,
            FOID,
            FID
 
﻿drop table sam_rebase;
select read_sam($$ file:'D:/Tritume/20100706_RNAseq_CTRL_repbase_se.aligned.sam', dest_table: 'sam_bowtie_rebase', dataset_id: 'CTRL_se' $$)
select read_sam($$ file:'D:/Tritume/20100706_RNAseq_LPS_repbase_se.aligned.sam', dest_table: 'sam_bowtie_rebase', dataset_id: 'LPS_se', append:True $$)
comment on table sam_bowtie_rebase is 'SAM alignment produced by Bowtie. Reference is the pig database of repeats. See script 20100706_sam_bowtie_rebase.sql'
drop table tmp_flag_count;
select cross_tab('select flag, dataset_id, count(flag) AS flag_count from sam_bowtie_rebase group by flag, dataset_id order by dataset_id, flag', 'tmp_flag_count');
select * from tmp_flag_count;
drop table tmp_rname_count;
select cross_tab('select rname, dataset_id, count(qname) from sam_bowtie_rebase group by rname, dataset_id', 'tmp_rname_count');
copy tmp_rname_count to 'D:/Tritume/RNAseq_repbase.txt' with csv header delimiter E'\t' ;
select * from tmp_rname_count;
-- Number of repeats hit 
<dtml-let delivery_list="[]">
  <dtml-in prefix="loop" expr="_.range(_.len(uid))">
    <dtml-if "isDelivery[loop_item]">
      <dtml-call expr="delivery_list.append(loop_item)">
    </dtml-if>
  </dtml-in>
  <dtml-if expr="_.len(delivery_list) > 0">
REPLACE INTO
  delivery
VALUES
    <dtml-in prefix="loop" expr="delivery_list">
( 
  <dtml-sqlvar expr="uid[loop_item]" type="int">,
  <dtml-sqlvar expr="getSourceUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getDestinationUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getSourceSectionUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getDestinationSectionUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getResourceUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getStartDate[loop_item]" type="datetime" optional>,
  <dtml-sqlvar expr="getStartDateRangeMin[loop_item]" type="datetime" optional>,
  <dtml-sqlvar expr="getStartDateRangeMax[loop_item]" type="datetime" optional>,
  <dtml-sqlvar e
set feedback on
column bestmileage format 99.999
--1st query--
select avg(mpg)
from countries, car_makers, model_list, car_names, cars_data
where countryname = 'france' and countryid = country and
car_makers.id = model_list.maker and model_list.model = car_names.model and
car_names.id = cars_data.id and year between 1975 and 1980
--2nd query--
select avg(mpg), avg(accelerate), avg(edispl)
from countries, car_makers, model_list, car_names, cars_data, continents
where countryname = 'france' and countryid = country and
car_makers.id = model_list.maker and model_list.model = car_names.model and
car_names.id = cars_data.id and year = 1976 and
continents.continent = 'europe' and continents.contid = countries.continent
--3rd query--
select sub.make, sub.year, sub.accelerate
from (select max(accelerate), make, year,
      accelerate, model_list.model
      from model_list, car_names, cars_data
      where model_list.model = car_names.model and
      car_names.id = cars_data.id
      group by m

      order by max(accelerate)) sub
where rownum = 1
--4th query--
select *
from (select max(subcars.avgMileage) as bestMileage, subcars.maker as maker, subcars.numModels as numModels
      from (select avg(MPG) as avgMileage, car_makers.maker as maker, count(*) as numModels
            from car_makers, model_list, car_names, cars_data
            where car_makers.id = model_list.maker and
            model_list.model = car_names.model and
            car_names.id = cars_data.id and year = 1977
            group by car_makers.maker) subcars, car_makers
      where car_makers.maker = subcars.maker and
      subcars.numModels in (select count(*) as numModels
                            from car_makers, model_list, car_names, cars_data
                            where car_makers.id = model_list.maker and
                            model_list.model = car_names.model and
                            car_names.id = cars_data.id and year = 1977
                            group by car_maker

      group by subcars.numModels, subcars.maker
      order by max(subcars.avgMileage) desc)
where rownum = 1
--5th query--
select subtable.year, subtable.mods as numModels,
subtable.mileage, subtable.maker
from (select avg(MPG) as mileage, count(*) as mods,
      cars_data.year as year, car_makers.maker as maker
      from cars_data, car_names, model_list, car_makers
      where cars_data.id = car_names.id and
      car_names.model = model_list.model and
      model_list.maker = car_makers.id
      group by model_list.model, cars_data.year, car_makers.maker
      order by cars_data.year) subtable,
     (select max(data.mileage) as bestmileage, data.year as year
      from (select avg(MPG) as mileage, cars_data.year as year
            from cars_data, car_names, model_list
            where cars_data.id = car_names.id and
            car_names.model = model_list.model
            group by model_list.model, cars_data.year
            order by cars_data.year) data
      group by data.ye
SET NOCOUNT ON
DECLARE @IOStats TABLE (
        [database_id] [smallint] NOT NULL,
        [file_id] [smallint] NOT NULL,
        [num_of_reads] [bigint] NOT NULL,
        [num_of_bytes_read] [bigint] NOT NULL,
        [io_stall_read_ms] [bigint] NOT NULL,
        [num_of_writes] [bigint] NOT NULL,
        [num_of_bytes_written] [bigint] NOT NULL,
        [io_stall_write_ms] [bigint] NOT NULL)
INSERT INTO @IOStats
        SELECT database_id,
                vio.file_id,
                num_of_reads,
                num_of_bytes_read,
                io_stall_read_ms,
                num_of_writes,
                num_of_bytes_written,
                io_stall_write_ms
        FROM sys.dm_io_virtual_file_stats (NULL, NULL) vio
DECLARE @StartTime datetime, @DurationInSecs int
SET @StartTime = GETDATE()
WAITFOR DELAY '00:05:00'
SET @DurationInSecs = DATEDIFF(ss, @startTime, GETDATE())
SELECT DB_NAME(vio.database_id) AS [Database],
        mf.name AS [Logical name],
        mf.type_desc AS

                (vio.io_stall_read_ms - old.io_stall_read_ms) / CASE (vio.num_of_reads-old.num_of_reads) WHEN 0 THEN 1 ELSE vio.num_of_reads-old.num_of_reads END AS [Ave read speed (ms)],
        vio.num_of_reads - old.num_of_reads AS [No of reads over period],
        CONVERT(DEC(14,2), (vio.num_of_reads - old.num_of_reads) / (@DurationInSecs * 1.00)) AS [No of reads/sec],
        CONVERT(DEC(14,2), (vio.num_of_bytes_read - old.num_of_bytes_read) / 1048576.0) AS [Tot MB read over period],
        CONVERT(DEC(14,2), ((vio.num_of_bytes_read - old.num_of_bytes_read) / 1048576.0) / @DurationInSecs) AS [Tot MB read/sec],
        (vio.num_of_bytes_read - old.num_of_bytes_read) / CASE (vio.num_of_reads-old.num_of_reads) WHEN 0 THEN 1 ELSE vio.num_of_reads-old.num_of_reads END AS [Ave read size (bytes)],
                (vio.io_stall_write_ms - old.io_stall_write_ms) / CASE (vio.num_of_writes-old.num_of_writes) WHEN 0 THEN 1 ELSE vio.num_of_writes-old.num_of_writes END AS [Ave write speed (m

        vio.num_of_writes - old.num_of_writes AS [No of writes over period],
        CONVERT(DEC(14,2), (vio.num_of_writes - old.num_of_writes) / (@DurationInSecs * 1.00)) AS [No of writes/sec],
        CONVERT(DEC(14,2), (vio.num_of_bytes_written - old.num_of_bytes_written)/1048576.0) AS [Tot MB written over period],
        CONVERT(DEC(14,2), ((vio.num_of_bytes_written - old.num_of_bytes_written)/1048576.0) / @DurationInSecs) AS [Tot MB written/sec],
        (vio.num_of_bytes_written-old.num_of_bytes_written) / CASE (vio.num_of_writes-old.num_of_writes) WHEN 0 THEN 1 ELSE vio.num_of_writes-old.num_of_writes END AS [Ave write size (bytes)],
        mf.physical_name AS [Physical file name],
        size_on_disk_bytes/1048576 AS [File size on disk (MB)]
FROM sys.dm_io_virtual_file_stats (NULL, NULL) vio,
        sys.master_files mf,
        @IOStats old
WHERE mf.database_id = vio.database_id AND
        mf.file_id = vio.file_id AND
        old.database_id = vio.database_id AND
        
﻿CREATE VIEW dbo.OrderDetailCount
AS
SELECT        dbo.Orders.OrderID, dbo.Orders.OrderDate, COUNT(*) AS DetailCount
FROM            dbo.Orders INNER JOIN
                         dbo.[Order Details] ON dbo.Orders.OrderID = dbo.[Order Details].OrderID
GROUP BY dbo.Orders.OrderID, dbo.Orders.OrderDate
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
  

      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfigurati

         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Orders"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 146
               Right = 208
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Order Details"
            Begin Extent = 
               Top = 6
               Left = 248
               Bottom = 136
               Right = 418
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1
-- phpMyAdmin SQL Dump
-- version 4.4.11
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: 2016-02-02 00:35:21
-- 服务器版本： 5.6.14
-- PHP Version: 5.5.27
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
--
-- Database: `chat`
--
-- --------------------------------------------------------
--
-- 表的结构 `message`
--
CREATE TABLE IF NOT EXISTS `message` (
  `id` int(10) unsigned NOT NULL,
  `sender` varchar(64) NOT NULL,
  `receiver` varchar(64) NOT NULL,
  `content` text NOT NULL,
  `sendTime` datetime NOT NULL,
  `isGet` tinyint(4) NOT NULL DEFAULT '0'
) ENGINE=InnoDB AUTO_INCREMENT=67 DEFAULT CHARSET=utf8;
--
-- 转存表中的数据 `message`
--
INSERT INTO `message` (`id`, `sender`, `receiver`, `content`, `sendTime`, `isGet`) VALUES
(1, 'f

(2, 'Zoom', 'Reverse Flash', 'kkk', '2016-01-30 20:39:49', 0),
(3, 'Zoom', 'Flash', 'ssss', '2016-01-30 21:47:43', 0),
(4, 'Zoom', 'Flash', 'rr', '2016-01-30 22:20:36', 0),
(5, 'Zoom', 'Flash', 'www', '2016-01-30 22:32:37', 0),
(6, 'Zoom', 'Reverse Flash', 'jjj', '2016-01-31 00:00:41', 0),
(7, 'Zoom', 'Flash', 'ttt', '2016-01-31 00:01:22', 0),
(8, 'Zoom', 'Zoom', 'ee', '2016-01-31 00:02:22', 0),
(9, 'Zoom', 'Flash', 'll', '2016-01-31 00:06:02', 0),
(10, 'Zoom', 'Reverse Flash', 'wewew', '2016-01-31 00:26:40', 0),
(11, 'Zoom', 'Flash', 'www', '2016-01-31 10:29:58', 0),
(12, 'Zoom', 'Flash', '444', '2016-01-31 10:31:01', 0),
(13, 'Zoom', 'Flash', 'eee', '2016-01-31 10:44:51', 0),
(14, 'Zoom', 'Flash', 'dd', '2016-01-31 10:46:09', 0),
(15, 'Zoom', 'Flash', 'dd', '2016-01-31 10:46:14', 0),
(16, 'Zoom', 'Flash', 'rrrr', '2016-01-31 10:58:10', 0),
(17, 'Zoom', 'Flash', 'ddd', '2016-01-31 11:00:52', 0),
(18, 'Flash', 'Zoom', 'ttttttttttttttttttttttttttt', '2016-01-31 11:04:27', 0),
(19, 'Zoo

(20, 'Zoom', 'Flash', 'Hello, cheers', '2016-01-31 11:08:27', 0),
(21, 'Flash', 'Flash', 'ddd', '2016-01-31 11:21:06', 0),
(22, 'Flash', 'Zoom', 'sss', '2016-01-31 11:22:00', 0),
(23, 'Flash', 'Zoom', 'sss', '2016-01-31 11:22:34', 0),
(24, 'Flash', 'Zoom', 'sss', '2016-01-31 11:22:37', 0),
(25, 'Zoom', 'Flash', 'xxxx', '2016-01-31 11:24:38', 0),
(26, 'Zoom', 'Flash', 'eeee', '2016-01-31 11:25:18', 0),
(27, 'Flash', 'Reverse Flash', 'fff', '2016-01-31 11:28:20', 0),
(28, 'Flash', 'Flash', 'ddd', '2016-01-31 11:30:48', 0),
(29, 'Flash', 'Flash', 'rrrr', '2016-01-31 11:32:36', 0),
(30, 'Flash', 'Flash', 'sss', '2016-01-31 11:33:09', 0),
(31, 'Flash', 'Flash', 'ddd', '2016-01-31 11:33:46', 0),
(32, 'Zoom', 'Flash', 'ss', '2016-01-31 11:35:22', 0),
(33, 'Zoom', 'Flash', 'kiki', '2016-01-31 11:37:40', 0),
(34, 'Zoom', 'Reverse Flash', 'sss', '2016-01-31 11:48:42', 0),
(35, 'Zoom', 'Reverse Flash', 'sss', '2016-01-31 11:49:56', 0),
(36, 'Zoom', 'Reverse Flash', 'sss', '2016-01-31 11:50:21', 
--
-- database_schema_3-4.sql
--
-- Version: $Revision$
--
-- Date:    $Date: 2012-05-29
--
-- The contents of this file are subject to the license and copyright
-- detailed in the LICENSE and NOTICE files at the root of the source
-- tree and available online at
--
-- http://www.dspace.org/license/
--
--
-- SQL commands to upgrade the database schema of a live DSpace 3.0 or 3.x
-- to the DSpace 4 database schema
--
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
--
-------------------------------------------
-- Ensure that discoverable has a sensible default
-------------------------------------------
update item set discoverable=1 WHERE discoverable IS NULL;
-------------------------------------------
-- Add support

-------------------------------------------
CREATE TABLE Doi
  doi_id           INTEGER PRIMARY KEY,
  doi              VARCHAR2(256) UNIQUE,
  resource_type_id INTEGER,
  resource_id      INTEGER,
  status           INTEGER
);
CREATE SEQUENCE doi_seq;
-- index by resource id and resource type id
CREATE INDEX doi_resource_id_type_idx ON doi(resource_id, resource_type_id);
-------------------------------------------
-- Table of running web applications for 'dspace version' --
-------------------------------------------
CREATE TABLE Webapp
    webapp_id INTEGER NOT NULL PRIMARY KEY,
    AppName VARCHAR2(32),
    URL VARCHAR2(1000),
    Started TIMESTAMP,
    isUI NUMBER(1)
);
CREATE SEQUENCE webapp_seq;
-------------------------------------------------------
-- DS-824 RequestItem table
-------------------------------------------------------
CREATE TABLE requestitem
  requestitem_id INTEGER NOT NULL,
  token varchar(48),
  item_id INTEGER,
  bitstream_id INTEGER,
  allfiles NUMBER(1),
  
spool local_schema_setup.log append
set echo on
REMARK	Creating tablespaces as setup on production database
create tablespace MYTIME_DATA datafile '%ORACLE_BASE%\oradata\XE\myuser_data.dbf' size 10240K  REUSE AUTOEXTEND ON NEXT 10240K MAXSIZE UNLIMITED;
create tablespace MYTIME_IDX datafile '%ORACLE_BASE%\oradata\XE\myuser_idx.dbf' size 10240K  REUSE AUTOEXTEND ON NEXT 10240K MAXSIZE UNLIMITED;
REMARK	Creating user or schema with right tablespaces and quota
CREATE USER myuser IDENTIFIED BY myuser
DEFAULT TABLESPACE MYUSER_DATA
quota unlimited on MYUSER_DATA;
grant connect, resource to myuser;
grant create database link to myuser;
grant create synonym to myuser;
grant create type to myuser;
grant create materialized view to myuser;
grant create table to myuser;
grant create view to myuser;
grant create procedure to myuser;
grant create sequence to myuser;
grant create trigger to myuser;
grant create role to myuser;
grant create cluster to myuser;
grant create operator to myuser;
grant c
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 06. März 2002 um 10:04
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_shop2`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `HeadNav`
CREATE TABLE HeadNav (
  ID int(11) NOT NULL default '0',
  CreatedBy int(11) NOT NULL default '0',
  CreatedDateTime float(16,4) NOT NULL default '0.0000',
  ChangedBy int(11) NOT NULL default '0',
  ChangedDateTime float(16,4) NOT NULL default '0.0000',
  active int(1) NOT NULL default '0',
  WordlistID int(11) NOT NULL default '0',
  TextID int(11) NOT NULL default '0',
  NameDE varchar(255) NOT NULL default '',
  Name_en varchar(255) NOT NULL default '',
  Name_es varchar(255) NOT NULL default '',
  Name_fr varchar(255) NOT NULL default '',
  Name_it varchar(255) NOT NULL default '',
  GruppenID int(1) NOT NULL default '0',

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `game_event_save`;
CREATE TABLE `game_event_save` (
  `eventEntry` tinyint(3) unsigned NOT NULL,
  `state` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `next_start` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`eventEntry`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `game_event_save` WRITE;
/*!40000 ALTER TABLE `game_event_save` DISABLE KEYS */;
/*!40000 ALTER TABLE `
# Tests for PERFORMANCE_SCHEMA
#    Show existing objects and information about their structure
show databases like 'performance_schema';
show create database performance_schema;
use performance_schema;
show tables;
show create table accounts;
show create table cond_instances;
show create table events_stages_current;
show create table events_stages_history;
show create table events_stages_history_long;
show create table events_stages_summary_by_host_by_event_name;
show create table events_stages_summary_by_thread_by_event_name;
show create table events_stages_summary_by_user_by_event_name;
show create table events_stages_summary_by_account_by_event_name;
show create table events_stages_summary_global_by_event_name;
show create table events_statements_current;
show create table events_statements_history;
show create table events_statements_history_long;
show create table events_statements_summary_by_digest;
show create table events_statements_summary_by_host_by_event_name;
show create t

show create table events_statements_summary_by_user_by_event_name;
show create table events_statements_summary_by_account_by_event_name;
show create table events_statements_summary_global_by_event_name;
show create table events_transactions_current;
show create table events_transactions_history;
show create table events_transactions_history_long;
show create table events_transactions_summary_by_host_by_event_name;
show create table events_transactions_summary_by_thread_by_event_name;
show create table events_transactions_summary_by_user_by_event_name;
show create table events_transactions_summary_by_account_by_event_name;
show create table events_transactions_summary_global_by_event_name;
show create table events_waits_current;
show create table events_waits_history;
show create table events_waits_history_long;
show create table events_waits_summary_by_host_by_event_name;
show create table events_waits_summary_by_instance;
show create table events_waits_summary_by_thread_by_event_name

show create table events_waits_summary_by_user_by_event_name;
show create table events_waits_summary_by_account_by_event_name;
show create table events_waits_summary_global_by_event_name;
show create table memory_summary_by_host_by_event_name;
show create table memory_summary_by_thread_by_event_name;
show create table memory_summary_by_user_by_event_name;
show create table memory_summary_by_account_by_event_name;
show create table memory_summary_global_by_event_name;
show create table metadata_locks;
show create table file_instances;
show create table file_summary_by_event_name;
show create table file_summary_by_instance;
show create table host_cache;
show create table hosts;
show create table mutex_instances;
show create table objects_summary_global_by_type;
show create table performance_timers;
show create table rwlock_instances;
show create table setup_actors;
show create table setup_consumers;
show create table setup_instruments;
show create table setup_objects;
show create table 
/*L
   Copyright SAIC
   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/cabio/LICENSE.txt for details.
L*/
@AGENT_OBJECT.vw
@ANOMALY_TARGET_VW.vw
@ANOMALY_TISSUE_CODE.vw
@ANOMALY_TISSUE.vw
@ANOMALY_VOCABULARY.vw
@ARRAY_REPORTER_MAP_V.vw
@CHR_TEMP.vw
@CLONE_GENE.vw
@CLONE_SNP.vw
@CONCEPT_GENE.vw
@CONCEPT_LIMIT.vw
@CONTEXT_TYPE_VIEW.vw
@CONTEXT_VIEW.vw
@DELETE_VIEW.vw
@DISEASE_ANOMALY.vw
@EXP_DELETE_MEASUREMENT_VIEW.vw
@EXP_MEASUREMENT_ARRAY_VIEW.vw
@EXPRESSION_FEATURE_OBJECT.vw
@EXPRESSION_MEASUREMENT_GO_VIEW.vw
@EXPRESSION_MEASUREMENT_VIEW.vw
@GENE_ACCESSION_VIEW.vw
@GENE_ALIAS_OBJECT.vw
@GENE_CLUSTER_VIEW.vw
@GENE_HISTOPATHOLOGY_VIEW.vw
@GENE_LOCUS_VIEW.vw
@GENE_REPORTER_INSERT_VIEW.vw
@GO_RELATIONSHIP_VIEW.vw
@GO_VIEW.vw
@IMT_TO_HISTO_TISSUE_VIEW.vw
@LIB_GENE.vw
@LIBRARY_GENE.vw
@LIBRARY_OBJECT.vw
@LIBRARY_PROTOCOL.vw
@MAP_OBJECT.vw
@PARTY_ORGANIZATION_VIEW.vw
@PARTY_PERSON_VIEW.vw
@PATHWAY_CONTEXT_OBJECT.vw
@PATHWAY_CONTEXT.vw
@PATHWAY_GENE_OB
﻿--Update description for existing forward calculations to read BF24
update .dbo.CALC_LIST 
set calc_name = 'P/NAV BF24' where calc_num = 238
update .dbo.DATA_MASTER 
set DATA_DESC = 'P/NAV BF24' where DATA_ID = 238
update .dbo.CALC_LIST 
set calc_name = 'P/Revenue BF24' where calc_num = 197
update .dbo.DATA_MASTER 
set DATA_DESC = 'P/Revenue BF24' where DATA_ID = 197
update .dbo.CALC_LIST 
set calc_name = 'P/Embedded Value BF24' where calc_num = 245
update .dbo.DATA_MASTER 
set DATA_DESC = 'P/Embedded Value BF24' where DATA_ID = 245
update .dbo.CALC_LIST 
set calc_name = 'P/Appraisal Value BF24' where calc_num = 239
update .dbo.DATA_MASTER 
set DATA_DESC = 'P/Appraisal Value BF24' where DATA_ID = 239
  update [dbo].[UserListDataPointMappingInfo]
  set DataDescription = 'P/NAV BF24' where DataDescription = 'Forward P/NAV'
  
  update [dbo].[UserListDataPointMappingInfo]
  set DataDescription = 'P/Revenue BF24' where DataDescription = 'Forward P/Revenue'
  
  update [dbo].[UserListDataP

  set DataDescription = 'P/Embedded Value BF24' where DataDescription = 'Forward P/Embedded Value'
  
 update [dbo].[UserListDataPointMappingInfo]
 set DataDescription = 'P/Appraisal Value BF24' where DataDescription = 'Forward P/Appraisal Value'
--Change calc_seq for 234
update dbo.CALC_LIST
set CALC_SEQ = 1, ACTIVE = 'Y' where CALC_NUM = 234
--Change calc_seq for 240
update dbo.CALC_LIST
set CALC_SEQ = 1, ACTIVE = 'Y' where CALC_NUM = 240
--Change calc_seq for 172
update dbo.CALC_LIST
set CALC_SEQ = 2, ACTIVE = 'Y', PRICEBASED = 'Y' where CALC_NUM = 172
--Change calc_seq for 219
update dbo.CALC_LIST
set CALC_SEQ = 2, ACTIVE = 'Y', PRICEBASED = 'Y'  where CALC_NUM = 219
--Change calc_seq for 235
update dbo.CALC_LIST
set CALC_SEQ = 1, ACTIVE = 'Y', PRICEBASED = 'N'  where CALC_NUM = 235
--Change calc_seq for 228
update dbo.CALC_LIST
set CALC_SEQ = 2, ACTIVE = 'Y', PRICEBASED = 'Y'  where CALC_NUM = 228
--Change calc_seq for 197
update dbo.CALC_LIST
set CALC_SEQ = 1, ACTIVE = 'Y', PRIC
  CREATE OR REPLACE  VIEW HV_AUM_MGMTFEES_PIVOT (PORTFOLIO, PORTFOLIO_NAME, NAV_SUM, NSUM, PORT_COUNT, MONTH_ID, TRANS_DATE, PORTFOLIO_CATEGORY) AS 
  SELECT PORTFOLIO,
  portfolio_name,
  ROUND((SUM(nav_sum)/COUNT(PORTFOLIO)),2)NAV_SUM,
  NAV_SUM NSUM,
  COUNT(PORTFOLIO)PORT_COUNT,
  MONTH_ID,
  Trans_date,PORTFOLIO_CATEGORY
FROM
  (SELECT portfolio,
    portfolio_name,--AVG(ACCENT_AMNT) ACCENT_AMNT--,sum(AVG_NAV)
    PORTFOLIO_CATEGORY,
    SUM(AVG_NAV_MON) AVG_NAV_MON,
    SUM(AVG_NAV_YEAR) AVG_NAV_YEAR,
    SUM(NAV_SUM) NAV_SUM,
    COUNT(portfolio),trans_date,
    MONTH_ID
  FROM HV_AUM_MGMTFEES
    --where month_id='JAN-2014' and trans_date between '01 jan 2014' and '09 jan 2014' and portfolio='JUN1120D12'
  GROUP BY portfolio,
    TRANS_DATE,
    MONTH_ID,
    portfolio_name,PORTFOLIO_CATEGORY
  )
 --WHERE PORTFOLIO='APR24MT112' AND 
  --MONTH_ID='JAN-2014'
  --and trans_date between '01 jan 2014' and '09 jan 2014' --and portfolio='JUN1120D12'
GROUP BY PORTFOLIO,
  portfolio_nam
ALTER TABLE `prefix_users` 
ADD `new_message_0` TINYINT( 3 ) UNSIGNED NOT NULL DEFAULT '0' AFTER `onlinetime`, 
ADD `new_message_1` TINYINT( 3 ) UNSIGNED NOT NULL DEFAULT '0' AFTER `new_message_0`, 
ADD `new_message_2` TINYINT( 3 ) UNSIGNED NOT NULL DEFAULT '0' AFTER `new_message_1`, 
ADD `new_message_3` TINYINT( 3 ) UNSIGNED NOT NULL DEFAULT '0' AFTER `new_message_2`, 
ADD `new_message_4` TINYINT( 3 ) UNSIGNED NOT NULL DEFAULT '0' AFTER `new_message_3`, 
ADD `new_message_5` TINYINT( 3 ) UNSIGNED NOT NULL DEFAULT '0' AFTER `new_message_4`, 
ADD `new_message_15` TINYINT( 3 ) UNSIGNED NOT NULL DEFAULT '0' AFTER `new_message_5`, 
ADD `new_message_50` TINYINT( 3 ) UNSIGNED NOT NULL DEFAULT '0' AFTER `new_message_15`, 
ADD `new_message_99` TINYINT( 3 ) UNSIGNED NOT NULL DEFAULT '0' AFTER `new_message_50`;
ALTER TABLE `prefix_users` 
DROP `new_message`, 
DROP `new_gmessage`;
ALTER TABLE `prefix_users` 
CHANGE `kbmetal` `kbmetal` DECIMAL( 65 ) UNSIGNED NOT NULL DEFAULT '0', 
CHANGE `kbcrystal
## Rename some column names to use underscores
## Table: categories
ALTER TABLE  `categories` CHANGE  `isHub`  `is_hub` TINYINT( 1 ) NOT NULL DEFAULT  '0',
CHANGE  `returnAllContent`  `return_all_content` INT( 1 ) NOT NULL DEFAULT  '0',
CHANGE  `allowZIP`  `allow_ZIP` INT( 1 ) NOT NULL DEFAULT  '0',
CHANGE  `oldestFirst`  `oldest_first` INT( 1 ) NOT NULL DEFAULT  '0',
CHANGE  `allowPlayAll`  `allow_play_all` INT( 1 ) NOT NULL ,
CHANGE  `navComic`  `nav_comic` INT( 1 ) NOT NULL ,
CHANGE  `comicnav_first`  `nav_comic_first` INT( 11 ) NOT NULL ,
CHANGE  `comicnav_back`  `nav_comic_back` INT( 11 ) NOT NULL ,
CHANGE  `comicnav_next`  `nav_comic_next` INT( 11 ) NOT NULL ,
CHANGE  `comicnav_last`  `nav_comic_last` INT( 11 ) NOT NULL ,
CHANGE  `listPriority`  `list_priority` INT( 11 ) NOT NULL DEFAULT  '0' COMMENT  'list priority level. higher numbers come first'
## Table: content
ALTER TABLE  `content` CHANGE  `customEmbed`  `custom_embed` TEXT CHARACTER SET latin1 COLLATE latin1_swedish_ci N
# Execute the stored programs created in 
# suite/perfschema/include/program_setup.inc 
--echo #####################
--echo # Executing queries #
--echo #####################
INSERT INTO t1 VALUES (10,20);
CALL SampleProc1(30,40,50);
SET @a=1;
SELECT @a;
CALL SampleProc2("Jwalamukhi",34);
SELECT @a;
CALL SampleProc3();
CALL SampleProc4();
SET @change=1;
SELECT @change;
UPDATE t2 SET id=22 WHERE name="Jwalamukhi";
SELECT @change;
SET @del=1;
SELECT @del;
DELETE FROM t1 WHERE i=76;
SELECT @del;
SELECT wt_avg(1, 12, 1990, 1121990);
SELECT fac(5);
SELECT append("Bolly", "wood");
--echo # Event
SET GLOBAL event_scheduler=ON;
CREATE TABLE table_t(a INT);
DELIMITER |;
CREATE EVENT e1 ON SCHEDULE EVERY 2 SECOND DO
BEGIN
  INSERT INTO table_t VALUES(1);
END|
DELIMITER ;|
# Let e1 insert 1 record into the table table_t
--let $wait_condition= select count(*) = 1 from table_t
--source include/wait_condition.inc
SELECT * FROM table_t;
# Wait till the  above one execution of event is instrumented.
-
CREATE TABLE [SalesLT].[ProductModelProductDescription]
[ProductModelID] [int] NOT NULL,
[ProductDescriptionID] [int] NOT NULL,
[Culture] [nchar] (6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductModelProductDescription_rowguid] DEFAULT (newid()),
[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelProductDescription_ModifiedDate] DEFAULT (getdate())
) ON [PRIMARY]
GO
ALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [PK_ProductModelProductDescription_ProductModelID_ProductDescriptionID_Culture] PRIMARY KEY CLUSTERED  ([ProductModelID], [ProductDescriptionID], [Culture]) ON [PRIMARY]
GO
ALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [AK_ProductModelProductDescription_rowguid] UNIQUE NONCLUSTERED  ([rowguid]) ON [PRIMARY]
GO
ALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [FK_ProductModelProductDescription_ProductDescription_ProductDescriptio

GO
ALTER TABLE [SalesLT].[ProductModelProductDescription] ADD CONSTRAINT [FK_ProductModelProductDescription_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [SalesLT].[ProductModel] ([ProductModelID])
GO
EXEC sp_addextendedproperty N'MS_Description', N'Cross-reference table mapping product descriptions and the language the description is written in.', 'SCHEMA', N'SalesLT', 'TABLE', N'ProductModelProductDescription', NULL, NULL
GO
EXEC sp_addextendedproperty N'MS_Description', N'The culture for which the description is written', 'SCHEMA', N'SalesLT', 'TABLE', N'ProductModelProductDescription', 'COLUMN', N'Culture'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'SalesLT', 'TABLE', N'ProductModelProductDescription', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductDescription.ProductDescriptionID.', 'SCHEMA', N'SalesLT', 'TABLE', N'ProductMode

GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductModel.ProductModelID.', 'SCHEMA', N'SalesLT', 'TABLE', N'ProductModelProductDescription', 'COLUMN', N'ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Unique nonclustered constraint. Used to support replication samples.', 'SCHEMA', N'SalesLT', 'TABLE', N'ProductModelProductDescription', 'CONSTRAINT', N'AK_ProductModelProductDescription_rowguid'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'SalesLT', 'TABLE', N'ProductModelProductDescription', 'CONSTRAINT', N'DF_ProductModelProductDescription_ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing ProductDescription.ProductDescriptionID.', 'SCHEMA', N'SalesLT', 'TABLE', N'ProductModelProductDescription', 'CONSTRAINT', N'FK_ProductModelProductDescription_ProductDescription_ProductDescriptionID'
GO
EXEC sp_addextendedproperty N'MS_D
IF OBJECT_ID('dbo.wsp_getCitiesByCountryIdNew') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_getCitiesByCountryIdNew
    IF OBJECT_ID('dbo.wsp_getCitiesByCountryIdNew') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_getCitiesByCountryIdNew >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_getCitiesByCountryIdNew >>>'
END
go
 /******************************************************************
**
** CREATION:
**   Author: Travis McCauley
**   Date: May 2004
**   Description: Selects all qualifying cities for the countryId supplied
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
******************************************************************************/
create proc wsp_getCitiesByCountryIdNew
@countryId int
as
begin
   set nocount on
   
BEGIN TRAN TRN_getCitiesByCountryIdNew
   select City_new.cityId, jurisdictionId, secondJurisdictionId, cityName, latitudeRad, longitudeRad, tz.legacyName, loc_m
   from City_new
   left join Timezone tz on t
truncate wordpress.wp_gigpress_shows;
-- SELECT w.`show_id`, w.`show_artist_id`, w.`show_venue_id`,
-- w.`show_tour_id`, w.`show_date`,
-- w.`show_multi`, w.`show_time`, w.`show_expire`, w.`show_price`, w.`show_tix_url`, w.`show_tix_phone`,
-- w.`show_ages`, w.`show_notes`, w.`show_related`, w.`show_status`, w.`show_tour_restore`,
-- w.`show_address`, w.`show_locale`, w.`show_country`, w.`show_venue`, w.`show_venue_url`, w.`show_venue_phone`
INSERT into wordpress.wp_gigpress_shows
SELECT distinct d.`date_id` show_id, d.`manufacturers_id` show_artist_id, v.venue_id show_venue_id,
      null show_tour_id, adddate(d.`date_date`, INTERVAL 4 year) show_date,
      null, '20:00' show_time, adddate(d.`date_date`, INTERVAL 49 month) show_expire, null show_price, null, null,
      null show_ages, d.`date_comment` show_notes, null, 'active' show_status, null,
      d.`date_location` show_address, d.`date_manfacturer_way` show_locale, c.countries_iso_code_2 show_country, d.`date_location` show_ve
drop table value if exists ;
CREATE TABLE value (
  id int NOT NULL identity primary key,
  valueName varchar(45)
);
drop table property if exists ;
CREATE TABLE property (
  id int NOT NULL identity primary key,
  name varchar(45)
);
drop table productcategory if exists ;
CREATE TABLE productcategory (
  id int NOT NULL identity primary key,
  name varchar(45),
  description varchar(100),
  parentId int NOT NULL
);
drop table navigatecategory if exists ;
CREATE TABLE navigatecategory (
  id int NOT NULL identity primary key,
  name varchar(45),
  description varchar(100),
  keyWord varchar(100),
  conditions varchar(100),
  settings varchar(1000),
  priority int NOT NULL,
  parentId int NOT NULL
);
DROP table CategoryAssociation if exists ;
CREATE TABLE  CategoryAssociation (
  navId int NOT NULL,
  cid int NOT NULL
);
drop table categoryproperty if exists ;
CREATE TABLE categoryproperty (
  id int NOT NULL identity primary key,
  propertyType varchar(45),
  categoryId int NOT NULL,
 

  multiValue tinyint NOT NULL,
  compareable tinyint DEFAULT 0,
  priority int NOT NULL
);
drop table navcategoryproperty if exists ;
CREATE TABLE navcategoryproperty (
  id int NOT NULL identity primary key,
  navCategoryId int NOT NULL,
  propertyId int NOT NULL,
  priority int NOT NULL,
  searchable tinyint default 0
);
drop table categorypropertyvalue if exists ;
CREATE TABLE categorypropertyvalue (
  id int NOT NULL identity primary key,
  categoryId int NOT NULL,
  propertyId int NOT NULL,
  priority int NOT NULL,
  valueId int NOT NULL
);
drop table navcategorypropertyvalue if exists ;
CREATE TABLE navcategorypropertyvalue (
  id int NOT NULL identity primary key,
  navCategoryId int NOT NULL,
  propertyId int NOT NULL,
  priority int NOT NULL,
  valueId int NOT NULL
);
drop table propertyvaluedetail if exists ;
CREATE TABLE propertyvaluedetail (
  id int NOT NULL identity primary key,
  propertyId int NOT NULL,
  valueId int NOT NULL,
  pictureUrl varchar(100),
  description v
﻿SET XACT_ABORT ON
BEGIN TRAN
--*************************************************************************************************
-- сопоставление записей 109 спр СКАУТ-бух со счетами депо ФЭНСИ
--*************************************************************************************************
--select * from [SC1C-NAV].GL_INF.dbo.AnalitColumns where IDAnalitType=109 --ищем id-шники исторических полей
select 
 A.id, A.IDAnalit --id
 ,A.NameAnalit --наименование
 ,FullName = isnull(AH1.Value, A.Text02) --полное наименование
 ,FullNameAcc = isnull(AH2.Value, A.Text10) --полное наименование для счетов и актов
 ,INN1 = ltrim(rtrim(A.NumAnalit)) --ИНН
 ,KPP1 = ltrim(rtrim(isnull(AH3.Value, A.Text05))) --КПП
 ,OGRN1 = ltrim(rtrim(A.Text01)) --ОГРН
 ,OKPO1 = ltrim(rtrim(A.Text07)) --ОКПО
 ,DepoCode = ltrim(rtrim(A.Text20)) --код ДЕПО (последние 5 цифр счет ДЕПО) 
into #TempSCOUT
from [SC1C-NAV].GL_INF.[dbo].[Analit] A
left join [SC1C-NAV].GL_INF.dbo.AnalitHistory AH1 
	on AH1.IDAnalitType=109

left join [SC1C-NAV].GL_INF.dbo.AnalitHistory AH2 
	on AH2.IDAnalitType=109 and AH2.IDAnalit=A.IDAnalit and AH2.IDAnalitColumns=291 and AH2.DateTo is null --полное наименование для счетов и актов 
left join [SC1C-NAV].GL_INF.dbo.AnalitHistory AH3 
	on AH3.IDAnalitType=109 and AH3.IDAnalit=A.IDAnalit and AH3.IDAnalitColumns=191 and AH3.DateTo is null --КПП
where A.IDAnalitType = 109
select 
 ID_F = T.ID 
 ,T.NUMBER
 ,NAME_DEPOACC = T.NAME 
 ,F.SELF_ID
 ,NAME_DEPONENT = F.NAME 
 ,INN = ltrim(rtrim(F.INN))
 ,KPP = ltrim(rtrim(F.KPP))
 ,OKPO = ltrim(rtrim(U.OKPO))
 ,OGRN = ltrim(rtrim(U.OGRN))
into #TempFANSY
from [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_CLIENTS T
left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_CLIENTS_REC R on R.CLIENT=T.ID and R.E_DATE='01.01.9999' 
left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_FACES F on F.SELF_ID=T.FACE and F.LAST_FLAG=1
left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_U_FACES U on U.FACE=F.SELF_ID
where PLAN_ID=4
select 
 A.id AS ScoutCOde
 ,F.ID_F AS FansyCode
into #Temp

from #TempSCOUT A
left join #TempFANSY F on 
 len(isnull(A.DepoCode,''))=5 --в СКАУТ длина кода = 5
 and A.DepoCode like '[0-9][0-9][0-9][0-9][0-9]' --в СКАУТ код цифровой
 and F.NUMBER like '%'+A.DepoCode collate Cyrillic_General_CI_AS --последние 5 цифр счета в ФЭНСИ совпадают с кодом депо в СКАУТ
 and (F.NUMBER like 'KIK/000/%' or F.NUMBER like 'SDP/000/%') --номер счета депо в ФЭНСИ начинается с KIK или SDP
 --не делаем привязку к счетам вида: '%/NCC/%', '%/SPC/%', ... 
 --(иначе получим ситуацию, когда два счета в НСИ смотрят на 1 запись в 109 спр СКАУТ)
 and F.NUMBER like '%/[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]' --последние 8 символов номера счета в ФЭНСИ д.б. цифрами (этим отсекаем мэпинг на счета вида SDP/000/1-УК00250)
where 1=1
-- and ID_F is not null --записи id 109 спр СКАУТ сопоставилась запись ID_F счета ДЕПО ФЭНСИ
 and len(isnull(A.DepoCode,''))=5 --в СКАУТ длина кода = 5
 and A.DepoCode like '[0-9][0-9][0-9][0-9][0-9]' --в СКАУТ код цифровой
order by 
 A.DepoCode -
-- ViewName : DocumentNotSelected-Project-Right
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'EB';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'DocumentNotSelected-Project-Right'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq_c

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table email_model (
  id                            bigint auto_increment not null,
  email                         varchar(255),
  usuario_id                    bigint,
  constraint pk_email_model primary key (id)
);
create table password_model (
  id                            bigint auto_increment not null,
  contrasenia                   varchar(255),
  constraint pk_password_model primary key (id)
);
create table tags_model (
  id                            bigint auto_increment not null,
  tag                           varchar(255),
  constraint pk_tags_model primary key (id)
);
create table tarea_model (
  id                            bigint auto_increment not null,
  titulo                        varchar(255),
  descripcion                   varchar(255),
  fechacreacion                 datetime,
  fechafin                      datetime,
  constraint pk_t

);
create table tarea_model_tags_model (
  tarea_model_id                bigint not null,
  tags_model_id                 bigint not null,
  constraint pk_tarea_model_tags_model primary key (tarea_model_id,tags_model_id)
);
create table usuario_model (
  id                            bigint auto_increment not null,
  username                      varchar(255),
  nombre                        varchar(255),
  edad                          integer,
  telefono                      varchar(255),
  pass_id                       bigint,
  token                         varchar(255),
  constraint uq_usuario_model_pass_id unique (pass_id),
  constraint pk_usuario_model primary key (id)
);
create table usuario_model_tarea_model (
  usuario_model_id              bigint not null,
  tarea_model_id                bigint not null,
  constraint pk_usuario_model_tarea_model primary key (usuario_model_id,tarea_model_id)
);
alter table email_model add constraint fk_email_model_usuario_id foreign key (usu

create index ix_email_model_usuario_id on email_model (usuario_id);
alter table tarea_model_tags_model add constraint fk_tarea_model_tags_model_tarea_model foreign key (tarea_model_id) references tarea_model (id) on delete restrict on update restrict;
create index ix_tarea_model_tags_model_tarea_model on tarea_model_tags_model (tarea_model_id);
alter table tarea_model_tags_model add constraint fk_tarea_model_tags_model_tags_model foreign key (tags_model_id) references tags_model (id) on delete restrict on update restrict;
create index ix_tarea_model_tags_model_tags_model on tarea_model_tags_model (tags_model_id);
alter table usuario_model add constraint fk_usuario_model_pass_id foreign key (pass_id) references password_model (id) on delete restrict on update restrict;
alter table usuario_model_tarea_model add constraint fk_usuario_model_tarea_model_usuario_model foreign key (usuario_model_id) references usuario_model (id) on delete restrict on update restrict;
create index ix_usuario_
CREATE TABLE [COM_Customer] (
		[CustomerID]                            [int] IDENTITY(1, 1) NOT NULL,
		[CustomerFirstName]                     [nvarchar](200) NOT NULL,
		[CustomerLastName]                      [nvarchar](200) NOT NULL,
		[CustomerEmail]                         [nvarchar](200) NULL,
		[CustomerPhone]                         [nvarchar](50) NULL,
		[CustomerFax]                           [nvarchar](50) NULL,
		[CustomerCompany]                       [nvarchar](200) NULL,
		[CustomerUserID]                        [int] NULL,
		[CustomerPreferredCurrencyID]           [int] NULL,
		[CustomerPreferredShippingOptionID]     [int] NULL,
		[CustomerCountryID]                     [int] NULL,
		[CustomerEnabled]                       [bit] NOT NULL,
		[CustomerPrefferedPaymentOptionID]      [int] NULL,
		[CustomerStateID]                       [int] NULL,
		[CustomerGUID]                          [uniqueidentifier] NOT NULL,
		[CustomerTaxRegistrationID]             [nvarchar](5

		[CustomerOrganizationID]                [nvarchar](50) NULL,
		[CustomerDiscountLevelID]               [int] NULL,
		[CustomerCreated]                       [datetime] NULL,
		[CustomerLastModified]                  [datetime] NOT NULL,
		[CustomerSiteID]                        [int] NULL
) 
ALTER TABLE [COM_Customer]
	ADD
	CONSTRAINT [PK_COM_Customer]
	PRIMARY KEY
	NONCLUSTERED
	([CustomerID])
ALTER TABLE [COM_Customer]
	ADD
	CONSTRAINT [DEFAULT_COM_Customer_CustomerGUID]
	DEFAULT ('00000000-0000-0000-0000-000000000000') FOR [CustomerGUID]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerCompany]
	ON [COM_Customer] ([CustomerCompany])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerCountryID]
	ON [COM_Customer] ([CustomerCountryID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerDiscountLevelID]
	ON [COM_Customer] ([CustomerDiscountLevelID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerEmail]
	ON [COM_Customer] ([CustomerEmail])
CREATE CLUSTERED INDEX [IX_COM_Custome

	ON [COM_Customer] ([CustomerLastName], [CustomerFirstName], [CustomerEnabled])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerPreferredCurrencyID]
	ON [COM_Customer] ([CustomerPreferredCurrencyID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerPreferredShippingOptionID]
	ON [COM_Customer] ([CustomerPreferredShippingOptionID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerPrefferedPaymentOptionID]
	ON [COM_Customer] ([CustomerPrefferedPaymentOptionID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerStateID]
	ON [COM_Customer] ([CustomerStateID])
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerUserID]
	ON [COM_Customer] ([CustomerUserID])
ALTER TABLE [COM_Customer]
	WITH CHECK
	ADD CONSTRAINT [FK_COM_Customer_CustomerCountryID_CMS_Country]
	FOREIGN KEY ([CustomerCountryID]) REFERENCES [CMS_Country] ([CountryID])
ALTER TABLE [COM_Customer]
	CHECK CONSTRAINT [FK_COM_Customer_CustomerCountryID_CMS_Country]
ALTER TABLE [COM_Customer]
	WITH CHECK
	ADD CONSTRAINT [FK_COM
-- Insert Configuration Directives for Content Level Subjects and Creators
INSERT INTO tblCore_Configuration (PackageID, ModuleID, Directive, `Value`, InputType, PatternID, ReadOnly, Encrypted, ListDataSource) VALUES ((SELECT ID FROM tblCore_Packages WHERE APRCode = 'collections'), '0', 'Enable Content Level Creators', '1', 'radio', '3', '0', '0', NULL);
INSERT INTO tblCore_Configuration (PackageID, ModuleID, Directive, `Value`, InputType, PatternID, ReadOnly, Encrypted, ListDataSource) VALUES ((SELECT ID FROM tblCore_Packages WHERE APRCode = 'collections'), '0', 'Enable Content Level Subjects', '1', 'radio', '3', '0', '0', NULL);
-- Insert Configuration Directives for External System Events
INSERT INTO tblCore_Configuration (PackageID, ModuleID, Directive, `Value`, InputType, PatternID, ReadOnly, Encrypted, ListDataSource) VALUES ((SELECT ID FROM tblCore_Packages WHERE APRCode = 'collections'), '0', 'Invoke External System', '0', 'radio', '3', '0', '0', NULL);
INSERT INTO tblCore_Conf

INSERT INTO tblCore_Configuration (PackageID, ModuleID, Directive, `Value`, InputType, PatternID, ReadOnly, Encrypted, ListDataSource) VALUES ((SELECT ID FROM tblCore_Packages WHERE APRCode = 'collections'), '0', 'External Target For EAD Export', '', 'textfield', '1', '0', '0', NULL);
INSERT INTO tblCore_Configuration (PackageID, ModuleID, Directive, `Value`, InputType, PatternID, ReadOnly, Encrypted, ListDataSource) VALUES ((SELECT ID FROM tblCore_Packages WHERE APRCode = 'collections'), '0', 'External URL For Collection Deletion', '', 'textfield', '1', '0', '0', NULL);
INSERT INTO tblCore_Configuration (PackageID, ModuleID, Directive, `Value`, InputType, PatternID, ReadOnly, Encrypted, ListDataSource) VALUES ((SELECT ID FROM tblCore_Packages WHERE APRCode = 'collections'), '0', 'External Target For Collection Deletion', '', 'textfield', '1', '0', '0', NULL);
-- Insert Configuration Directives for Public EAD List
INSERT INTO tblCore_Configuration (PackageID, ModuleID, Directive, `Val
--------------------------------------------------------
--  File created - Tuesday-July-10-2012   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table EMPLOYEES
--------------------------------------------------------
  CREATE TABLE "MULEDEMO"."EMPLOYEES" 
   (	"ID" NUMBER, 
	"FIRSTNAME" VARCHAR2(50 BYTE), 
	"LASTNAME" VARCHAR2(20 BYTE), 
	"STATUS" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into MULEDEMO.EMPLOYEES
SET DEFINE OFF;
Insert into MULEDEMO.EMPLOYEES (ID,FIRSTNAME,LASTNAME,STATUS) values (1,'Jesus','De Oliveira','ACTIVE');
Insert into MULEDEMO.EMPLOYEES (ID,FIRSTNAME,LASTNAME,STATUS) values (2,'John ','Doe

Insert into MULEDEMO.EMPLOYEES (ID,FIRSTNAME,LASTNAME,STATUS) values (3,'Jane','Doe','ACTIVE');
--------------------------------------------------------
--  DDL for Index EMPLOYEES_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "MULEDEMO"."EMPLOYEES_PK" ON "MULEDEMO"."EMPLOYEES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table EMPLOYEES
--------------------------------------------------------
  ALTER TABLE "MULEDEMO"."EMPLOYEES" ADD CONSTRAINT "EMPLOYEES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIS
﻿CREATE VIEW dbo.v_Seme_ican5
AS
SELECT          para_phsiname AS Value, para_dispname AS Name
FROM              iCAN5.dbo.ican_para
WHERE          (para_code = 'p_seme')
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = 

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ican_para (iCAN5.dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 140
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 7
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 12
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         So
DELETE FROM !PREFIX!_nav_sub WHERE idnavs <= 10000;
INSERT INTO !PREFIX!_nav_sub VALUES('1', '1', '1', '0', 'navigation/content/article/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('2', '1', '6', '0', 'navigation/content/structure/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('3', '1', '7', '0', 'navigation/content/upload/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('4', '2', '8', '0', 'navigation/style/layouts/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('5', '2', '10', '0', 'navigation/style/modules/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('6', '2', '12', '0', 'navigation/style/templates/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('7', '4', '20', '0', 'navigation/statistic/hits', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('8', '5', '21', '0', 'navigation/administration/users/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('13', '5', '22', '0', 'navigation/administration/languages', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('40', '0', '52', '1', 'navigation

INSERT INTO !PREFIX!_nav_sub VALUES('39', '0', '42', '0', 'navigation/mycontenido/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('15', '0', '1', '1', 'navigation/content/article/overview', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('16', '0', '3', '1', 'navigation/content/article/properties', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('17', '0', '100', '1', 'navigation/content/article/meta', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('18', '0', '5', '1', 'navigation/content/article/configuration', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('19', '0', '105', '1', 'navigation/content/article/content', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('20', '0', '2', '1', 'navigation/content/article/editor', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('23', '0', '13', '1', 'navigation/style/templates/edit', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('24', '0', '33', '1', 'navigation/style/templates/conf', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('25', '0', '40', '1', 'navigation/administration/users

INSERT INTO !PREFIX!_nav_sub VALUES('26', '0', '25', '1', 'navigation/administration/users/areas', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('27', '0', '34', '1', 'navigation/administration/users/layout', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('28', '0', '35', '1', 'navigation/administration/users/content', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('29', '0', '36', '1', 'navigation/administration/users/module', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('30', '0', '37', '1', 'navigation/administration/users/template', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('31', '0', '38', '1', 'navigation/administration/users/structure', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('33', '0', '42', '1', 'navigation/mycontenido/overview', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('36', '5', '46', '0', 'navigation/administration/clients/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('49', '5', '49', '0', 'navigation/administration/logs/main', '1');
INSERT INTO !PREFIX!_nav_sub VALUES('37', '0', '4'
--------------------------------------------------------
--  DDL for Table DEPARTMENTS
--------------------------------------------------------
  CREATE TABLE "LUMENS"."DEPARTMENTS" 
   (	"DEPARTMENT_ID" NUMBER(4,0), 
	"DEPARTMENT_NAME" VARCHAR2(30 BYTE), 
	"MANAGER_ID" NUMBER(6,0), 
	"LOCATION_ID" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
   COMMENT ON COLUMN "LUMENS"."DEPARTMENTS"."DEPARTMENT_ID" IS 'Primary key column of departments table.';
   COMMENT ON COLUMN "LUMENS"."DEPARTMENTS"."DEPARTMENT_NAME" IS 'A not null column that shows name of a department. Administration,
Marketing, Purchasing, Human Resources, Shipping, IT, Executive, Public
Relations, Sales, Finance, and Accounting. ';
   COMMENT ON COLUMN 

   COMMENT ON COLUMN "LUMENS"."DEPARTMENTS"."LOCATION_ID" IS 'Location id where a department is located. Foreign key to location_id column of locations table.';
   COMMENT ON TABLE "LUMENS"."DEPARTMENTS"  IS 'Departments table that shows details of departments where employees
work. Contains 27 rows; references with locations, employees, and job_history tables.';
--------------------------------------------------------
--  DDL for Index DEPT_ID_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "LUMENS"."DEPT_ID_PK" ON "LUMENS"."DEPARTMENTS" ("DEPARTMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOLOGGING COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEPT_LOCATION_IX
------------------------------------

  CREATE INDEX "LUMENS"."DEPT_LOCATION_IX" ON "LUMENS"."DEPARTMENTS" ("LOCATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 NOLOGGING COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table DEPARTMENTS
--------------------------------------------------------
  ALTER TABLE "LUMENS"."DEPARTMENTS" ADD CONSTRAINT "DEPT_ID_PK" PRIMARY KEY ("DEPARTMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOLOGGING COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LUMENS"."DEPARTMENTS" MODIFY ("DEPARTMENT_NAME" CONSTRAINT "DEPT_NAME_NN" NOT NULL E
create column family AppleDevice
  with column_type = 'Standard'
  and comparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and read_repair_chance = 1.0
  and dclocal_read_repair_chance = 0.0
  and gc_grace = 864000
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and caching = 'KEYS_ONLY'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};
create column family AppleDeviceUser
  with column_type = 'Standard'
  and comparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and read_repair_chance = 1.0
  and dclocal_read_repair_chance = 0.0
  and gc_grace = 864000
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and com
﻿set @id = %s;
(select
     'item' as type,
     if(i.locationId=l.id, 1, 0) as count,
    
     i.id itemId,
     m.id modelId,
    
     i.name itemName,
     m.name modelName,
    
     i.serial itemNumber,
     m.number modelNumber,
	 mk.name as makerName,
    
     img('item', i.imageId) as itemImage,
     img('model', m.imageId) as modelImage
    
     from user u inner join location l on u.id=l.userId 
	 inner join item i on i.locationId=l.id 
	 left join model m on i.modelId=m.id 
	 left join image ii on i.imageId=ii.id 
	 left join maker mk on m.makerId=mk.id 
	 where u.id=@id)
     union all
(select
     'model' as type,
     ifnull((select sum(if(t.from=l.id, -td.quantity, td.quantity)) from transactionDetail td inner join transaction t on t.id=td.transactionId inner join location l on l.id in (t.from, t.to) where l.userId=@id and td.modelId=m.id and t.confirmed=1), 0) as count,
    
     null as itemId,
     m.id modelId,
    
     null as itemName,
     m.name modelName,
 
INSERT INTO site VALUES (2, 'Plain Wiki', 'powered by wikidot software', 'template-plain', '', 'en', NULL, NULL, true, 'start', false, false);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO site_settings VALUES (2, false, false, '', 314572800, false, 'system:join', 50, 20, true, NULL, false, false, 10485760, true);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO site_super_settings VALUES (2, true);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO admin VALUES (2, 2, 1, true);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO member VALUES (2, 2, 1, NOW());;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (11,
    2, '_default',
    false, 20,
    false, 'e:rm;c:rm;m:rm;d:rm;a:rm;r:rm;z:rm;o:rm',
    true, 1, NULL,
    false, 'nav:top', 'nav:side',
    NULL, false, true, NULL, NULL, NULL, true, false, false, NULL
);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
INSERT INTO category VALUES (12,
    2, 'system',
    true, 20,
    false, 'e:;c:;m:;d:;a:;r:;z:;o:',
    true, 1, NULL,
    true, 'nav
delete from [archives_new].[dbo].doctemplate where templatename in (
'赴港工作同意书',
'博士后进站表格签章',
'招行调查表签章',
'留学人员回京报到登记表签章',
'限购房表格签章',
'报考博士表格签章',
'复印成绩单',
'其它：供手工录入特殊证明'
INSERT INTO [archives_new].[dbo].[doctemplate]([templatename],[templatefile],[taoda],[classid]) VALUES('赴港工作同意书','赴港工作同意书.pdf',0,1)
INSERT INTO [archives_new].[dbo].[doctemplate]([templatename],[templatefile],[taoda],[classid]) VALUES('博士后进站表格签章','博士后进站表格签章.pdf',0,1)
INSERT INTO [archives_new].[dbo].[doctemplate]([templatename],[templatefile],[taoda],[classid]) VALUES('招行调查表签章','招行调查表签章.pdf',0,1)
INSERT INTO [archives_new].[dbo].[doctemplate]([templatename],[templatefile],[taoda],[classid]) VALUES('留学人员回京报到登记表签章','留学人员回京报到登记表签章.pdf',0,1)
INSERT INTO [archives_new].[dbo].[doctemplate]([templatename],[templatefile],[taoda],[classid]) VALUES('限购房表格签章','限购房表格签章.pdf',0,1)
INSERT INTO [archives_new].[dbo].[doctemplate]([templatename],[templatefile],[taoda],[classid]) VALUES('报考博士表格签章','报考博士表格签章.pdf',0,1)
INSERT INTO [archives_
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_ModelGroupSave]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_ModelGroupSave]
@param_ModelGroupID		nvarchar(50),
@param_ModelGroupName	nvarchar(50),
@param_IFA_ID			int,
@param_ModelGroupCode	int
AS
BEGIN
	IF EXISTS(SELECT ModelGroupID FROM NavIntegrationDB.dbo.ModelGroup WHERE ModelGroupID = @param_ModelGroupID)
		BEGIN
			IF (UPPER(RTRIM(LTRIM(@param_ModelGroupName))) = (SELECT UPPER(RTRIM(LTRIM(ModelGroupName))) FROM NavIntegrationDB.dbo.ModelGroup WHERE ModelGroupID = @param_ModelGroupID AND IFA_ID = @param_IFA_ID AND ModelGroupCode = @param_ModelGroupCode))
				BEGIN
					UPDATE [NavIntegrationDB].[dbo].[ModelGroup]
					   SET [ModelGroupName] = @param_ModelGroupName
					 WHERE ModelGroupID = @param_ModelGroupID AND IFA_ID = @param_IFA_ID AND ModelGroupCode = @param_ModelGroupCode
				END
		END
	ELSE
		INSERT INTO [NavIntegration
-- *
-- * データ登録スクリプト「Eコマース標準管理メニュー」
-- *
-- * PHP versions 5
-- *
-- * LICENSE: This source file is licensed under the terms of the GNU General Public License.
-- *
-- * @package    Magic3 Framework
-- * @author     平田直毅(Naoki Hirata) <naoki@aplo.co.jp>
-- * @copyright  Copyright 2006-2014 Magic3 Project.
-- * @license    http://www.gnu.org/copyleft/gpl.html  GPL License
-- * @version    SVN: $Id$
-- * @link       http://www.magic3.org
-- *
-- [Eコマース標準管理メニュー]
-- Eコマース向けに構成した標準管理メニュー
-- 階層型メニュー管理
-- 管理画面メニューデータ
DELETE FROM _nav_item WHERE ni_nav_id = 'admin_menu';
DELETE FROM _nav_item WHERE ni_nav_id = 'admin_menu.en';
INSERT INTO _nav_item
(ni_id, ni_parent_id, ni_index, ni_nav_id,    ni_task_id,        ni_view_control, ni_param, ni_name,                ni_help_title,          ni_help_body) VALUES
(100,   0,            0,        'admin_menu', '_page',           0,               '',       '画面管理',             '画面管理',             'Webサイトのデザインや機能を管理します。'),
(101,   100,          0,        

(102,   100,          1,        'admin_menu', 'pagedef_smartphone',  0,           '',       'スマートフォン画面', 'スマートフォン画面編集',       'スマートフォン用Webサイトの画面を作成します。'),
(103,   100,          2,        'admin_menu', 'pagedef_mobile',  0,               '',       '携帯画面',       '携帯画面編集',       '携帯用Webサイトの画面を作成します。'),
(104,   100,          3,        'admin_menu', '_104',            3,               '',       'セパレータ',                 '',                     ''),
(105,   100,          4,        'admin_menu', 'widgetlist',      0,               '',       'ウィジェット管理',     'ウィジェット管理',     'ウィジェットの管理を行います。'),
(106,   100,          5,        'admin_menu', 'templist',        0,               '',       'テンプレート管理',     'テンプレート管理',     'テンプレートの管理を行います。'),
(107,   100,          6,        'admin_menu', 'smenudef',        0,               '',       'メニュー管理', 'メニュー管理', 'メニュー定義を管理します。'),
(199,   0,            1,        'admin_menu', '_199',            1,               '',       '改行',                 '',                 

(200,   0,            2,        'admin_menu', '_login',          0,               '',       'システム運用',         '',                     ''),
(201,   200,          0,        'admin_menu', 'userlist',        0,               '',       'ユーザ管理',           'ユーザ管理',           'ログイン可能なユーザを管理します。'),
(202,   200,          1,        'admin_menu', 'opelog',     0,               '',       '運用状況', '運用状況', 'サイトの運用状況を表示します。'),
(299,   0,            3,        'admin_menu', '_299',            1,               '',       '改行',                 '',                     ''),
(300,   0,            4,        'admin_menu', '_config',         0,               '',       'システム管理',         '',                     ''),
(301,   300,          0,        'admin_menu', 'configsite',      0,               '',       '基本情報',             '基本情報',             'サイト運営に必要な情報を設定します。'),
(302,   300,          1,        'admin_menu', 'configsys',       0,               '',       'システム情報',         'システム情報',         'システム全体の設定、運用状況を管理しま
SELECT
	CUSTOMER.CUSTOMER_ID AS CUSTOMER_ID,
	CUSTOMER.CUSTOMER_NAME AS CUSTOMER_NAME
FROM
	CUSTOMER,
	BURI_PATH_DATA_USER
/*BEGIN*/
WHERE
	/*IF dto.customerID != null*/ CUSTOMER_ID = /*dto.customerID*/0/*END*/
	/*IF dto.customerID_not != null*/AND CUSTOMER_ID != /*dto.customerID_not*/0/*END*/
	/*IF dto.customerID_large != null*/AND  /*dto.customerID_large*/0 < CUSTOMER_ID/*END*/
	/*IF dto.customerID_moreLarge != null*/AND  /*dto.customerID_moreLarge*/0 <= CUSTOMER_ID/*END*/
	/*IF dto.customerID_from != null*/AND  /*dto.customerID_from*/0 <= CUSTOMER_ID/*END*/
	/*IF dto.customerID_to != null*/AND CUSTOMER_ID <= /*dto.customerID_to*/0/*END*/
	/*IF dto.customerID_moreSmall != null*/AND CUSTOMER_ID <= /*dto.customerID_moreSmall*/0/*END*/
	/*IF dto.customerID_small != null*/AND CUSTOMER_ID < /*dto.customerID_small*/0/*END*/
	/*IF dto.customerID_isNull != null*/AND customerID is null /*END*/
	/*IF dto.customerID_isNotNull != null*/AND CUSTOMER_ID is not null/*END*/
	/*IF dto.customerID_in !

	/*IF dto.customerName_matchFull != null*/AND CUSTOMER_NAME Like /*dto.customerName_matchFull*/'%TestData%'/*END*/
	/*IF dto.customerName_matchFront != null*/AND CUSTOMER_NAME Like /*dto.customerName_matchFront*/'TestData%'/*END*/
	/*IF dto.customerName_matchBack != null*/AND CUSTOMER_NAME Like /*dto.customerName_matchBack*/'%TestData'/*END*/
	/*IF dto.customerName != null*/AND CUSTOMER_NAME = /*dto.customerName*/'TestData'/*END*/
	/*IF dto.customerName_not != null*/AND CUSTOMER_NAME != /*dto.customerName_not*/'TestData'/*END*/
	/*IF dto.customerName_large != null*/AND  /*dto.customerName_large*/'TestData' < CUSTOMER_NAME/*END*/
	/*IF dto.customerName_moreLarge != null*/AND  /*dto.customerName_moreLarge*/'TestData' <= CUSTOMER_NAME/*END*/
	/*IF dto.customerName_from != null*/AND  /*dto.customerName_from*/'TestData' <= CUSTOMER_NAME/*END*/
	/*IF dto.customerName_to != null*/AND CUSTOMER_NAME <= /*dto.customerName_to*/'TestData'/*END*/
	/*IF dto.customerName_moreSmall != null*/AND CUSTO
----------------------------------------------------------------
--Input arguments
----------------------------------------------------------------
--$u{graph_uri}: URI of the graph to dump
--$u{dump_file_path}: Initial filename where to dump the graph
--$u{file_length_limit}: Dump file size limit. If exceeded, dump is partitioned in several files
----------------------------------------------------------------
CREATE PROCEDURE dump_one_graph_nt 
  ( IN  srcgraph           VARCHAR  , 
    IN  out_file           VARCHAR  , 
    IN  file_length_limit  INTEGER  := 1000000000
  )
  {
    DECLARE  file_name     VARCHAR;
    DECLARE  env, 
             ses           ANY;
    DECLARE  ses_len, 
             max_ses_len, 
             file_len, 
             file_idx      INTEGER;
    SET ISOLATION = 'uncommitted';
    max_ses_len  := 10000000;
    file_len     := 0;
    file_idx     := 1;
    file_name    := sprintf ('%s%06d.nt', out_file, file_idx);
    string_to_file ( file_name, 
         

                               srcgraph, 
                               CAST (NOW() AS VARCHAR)
                             ), 
                     -2
                   );
    env := vector (0, 0, 0);
    ses := string_output ();
    FOR (SELECT * FROM ( SPARQL DEFINE input:storage "" 
                         SELECT ?s ?p ?o { GRAPH `iri(?:srcgraph)` { ?s ?p ?o } } 
                       ) AS sub OPTION (LOOP)) DO
      {
        http_nt_triple (env, "s", "p", "o", ses);
        ses_len := length (ses);
        IF (ses_len > max_ses_len)
          {
            file_len := file_len + ses_len;
            IF (file_len > file_length_limit)
              {
                http (' .\n', ses);
                string_to_file (file_name, ses, -1);
		gz_compress_file (file_name, file_name||'.gz');
		file_delete (file_name);
                file_len := 0;
                file_idx := file_idx + 1;
                file_name := sprintf ('%s%06d.nt', out_file, file_idx);
                stri
SELECT * INTO ffsbc.view_1_Lakes
FROM db_datawriter.Create_Waterbody_View()
SELECT * INTO  ffsbc.view_1a_Lake_Profiles
FROM db_datawriter.Create_Waterbody_Profile_View()
SELECT * INTO  ffsbc.view_1b_Lake_Access
FROM db_datawriter.Create_Waterbody_Access_View()
SELECT * INTO  ffsbc.view_1c_Lake_Dimensions
FROM db_datawriter.Create_Waterbody_Dimensions_View()
SELECT * INTO  ffsbc.view_2_Assessment_Summary
FROM db_datawriter.Create_Assessment_View()
SELECT * INTO  ffsbc.view_2a_Net_Summary
FROM db_datawriter.Create_Net_Summary_View()
SELECT * INTO  ffsbc.view_2b_Biological_Data
FROM db_datawriter.Create_Biological_View()
SELECT * INTO  ffsbc.view_2c_Net_Summary_Counts
FROM db_datawriter.Create_Net_Summary_Counts_View()
SELECT * INTO  ffsbc.view_4_Creel
FROM db_datawriter.Create_Creel_View()
SELECT * INTO  ffsbc.view_4a_Creel_Counts
FROM db_datawriter.Create_Creel_Count_View()
SELECT * INTO  ffsbc.view_5_Effort
FROM db_datawriter.Create_Effort_View()
SELECT * INTO  ffsbc.view_7_Project
FRO
-- find candidates for compression based on read/write activity
with [ios] as (
	select
		i.[object_id],
		[p#] = i.[partition_number],
		i.[index_id],
		[write_perc] = Convert(decimal(5,2), i.[leaf_update_count] * 100.0 / (i.[range_scan_count] + i.[leaf_insert_count] + i.[leaf_delete_count] + i.[leaf_update_count] + i.[leaf_page_merge_count] + i.[singleton_lookup_count])),
		[read_perc] = Convert(decimal(5,2), i.[range_scan_count] * 100.0 / (i.[range_scan_count] + i.[leaf_insert_count] + i.[leaf_delete_count] + i.[leaf_update_count] + i.[leaf_page_merge_count] + i.[singleton_lookup_count]))
	from
		sys.dm_db_index_operational_stats (db_id(), null, null, null) [i]
	where
		ObjectProperty(i.[object_id], 'IsUserTable') = 1
		and (i.[range_scan_count] + i.[leaf_insert_count] + i.[leaf_delete_count] + i.[leaf_update_count] + i.[leaf_page_merge_count] + i.[singleton_lookup_count]) > 0
)		
select
	[table_name] = o.[name],
	[index_name] = x.[name],
	ios.[p#],
	ios.[index_id],
	x.[type_desc],

--
--  Compare with v$sql_hint.
--
insert into hint values ('all_rows'                  , 0, 1, 0);
insert into hint values ('append'                    , 0, 1, 0);
insert into hint values ('append_values'             , 0, 1, 0);
insert into hint values ('cache'                     , 0, 1, 0);
insert into hint values ('change_dupkey_error_index' , 1, 1, 0);
insert into hint values ('cluster'                   , 0, 1, 0);
insert into hint values ('cursor_sharing_exact'      , 0, 1, 0);
insert into hint values ('driving_site'              , 0, 1, 0);
insert into hint values ('dynamic_sampling'          , 0, 1, 0);
insert into hint values ('fact'                      , 0, 1, 0);
insert into hint values ('first_rows'                , 0, 1, 0);
insert into hint values ('full'                      , 0, 1, 0);
insert into hint values ('hash'                      , 0, 1, 0);
insert into hint values ('ignore_row_on_dupkey_index', 1, 1, 0);
insert into hint values ('index'                     , 

insert into hint values ('index_asc'                 , 0, 1, 0);
insert into hint values ('index_combine'             , 0, 1, 0);
insert into hint values ('index_desc'                , 0, 1, 0);
insert into hint values ('index_ffs'                 , 0, 1, 0);
insert into hint values ('index_join'                , 0, 1, 0);
insert into hint values ('index_ss'                  , 0, 1, 0);
insert into hint values ('index_ss_asc'              , 0, 1, 0);
insert into hint values ('index_ss_desc'             , 0, 1, 0);
insert into hint values ('leading'                   , 0, 1, 0);
insert into hint values ('merge'                     , 0, 1, 0);
insert into hint values ('model_min_analysis'        , 0, 1, 0);
insert into hint values ('monitor'                   , 0, 1, 0);
insert into hint values ('native_full_outer_join'    , 0, 1, 0);
insert into hint values ('nocache'                   , 0, 1, 0);
insert into hint values ('no_expand'                 , 0, 1, 0);
insert into hint values 

insert into hint values ('no_index'                  , 0, 1, 0);
insert into hint values ('no_index_ffs'              , 0, 1, 0);
insert into hint values ('no_index_ss'               , 0, 1, 0);
insert into hint values ('no_merge'                  , 0, 1, 0);
insert into hint values ('no_monitor'                , 0, 1, 0);
insert into hint values ('no_native_full_outer_join' , 0, 1, 0);
insert into hint values ('no_parallel'               , 0, 1, 0);
insert into hint values ('noparallel'                , 0, 1, 1);
insert into hint values ('no_parallel_index'         , 0, 1, 0);
insert into hint values ('noparallel_index'          , 0, 1, 1);
insert into hint values ('no_push_pred'              , 0, 1, 0);
insert into hint values ('no_push_subq'              , 0, 1, 0);
insert into hint values ('no_px_join_filter'         , 0, 1, 0);
insert into hint values ('no_query_transformation'   , 0, 1, 0);
insert into hint values ('no_result_cache'           , 0, 1, 0);
insert into hint values 
USE Airline; -- çðîáèòè ÁÄ ïîòî÷íîþ
GO
CREATE TRIGGER insertReservation 
ON tblReservation 
AFTER INSERT
AS
BEGIN
	INSERT INTO tblLog ([Date], OperationId, NewOperationId, Seat, NewSeat, FlightId, NewFlightId,
	CustomerId, NewCustomerId, Cost, NewCost, [Status], NewStatus)
	SELECT GETDATE(), Null, Id, Null, Seat, Null, FlightId,
	Null, CustomerId, Null, Cost, Null, [Status]
	FROM inserted;	
END;
GO
CREATE TRIGGER updateReservation 
ON tblReservation 
INSTEAD OF UPDATE
AS
BEGIN
	DECLARE @id INT, @seat VARCHAR(10), @fid INT, @cid INT, @cost NUMERIC(18,4), @status INT;
	SELECT 
	@id = Id,
	@seat = Seat,
	@fid = FlightId,
	@cid = CustomerId,
	@cost = Cost,
	@status = [Status]	
	FROM inserted;
	INSERT INTO tblLog ([Date], OperationId, NewOperationId, Seat, NewSeat, FlightId, NewFlightId,
	CustomerId, NewCustomerId, Cost, NewCost, [Status], NewStatus)
	SELECT GETDATE(),Id, Null, Seat, Null, FlightId,
	Null, CustomerId, Null, Cost, Null, [Status], Null
	FROM tblReservation WHERE Id = @id;	
	 

	 SET 
	 Seat = @seat, 
	 FlightId = @fid, 
	 CustomerId = @cid, 
	 Cost = @cost, 
	 [Status] = @status
	 WHERE Id = @id;
	 UPDATE  tblLog 
	 SET 
	 NewOperationId = @id, 
	 NewSeat = @seat, 
	 NewFlightId = @fid,
	 NewCustomerId = @cid, 
	 NewCost = @cost, 
	 NewStatus = @status	
	 WHERE OperationId = @id;
END;
GO
CREATE TRIGGER deleteReservation 
ON tblReservation 
INSTEAD OF DELETE
AS
BEGIN
	DECLARE @id INT, @seat VARCHAR(10), @fid INT, @cid INT, @cost NUMERIC(18,4), @status INT;
	SELECT 
	@id = Id,
	@seat = Seat,
	@fid = FlightId,
	@cid = CustomerId,
	@cost = Cost,
	@status = [Status]	
	FROM deleted;
	INSERT INTO tblLog (
	[Date], 
	OperationId, 
	NewOperationId, 
	Seat, NewSeat, 
	FlightId, 
	NewFlightId,
	CustomerId, 
	NewCustomerId, 
	Cost, 
	NewCost, 
	[Status], 
	NewStatus)	
	SELECT 
	GETDATE(),
	Id, 
	Null, 
	Seat, 
	Null, 
	FlightId,
	Null, 
	CustomerId, 
	Null, 
	Cost, 
	Null, 
	[Status], 
	Null
	FROM tblReservation WHERE Id = @id;		
	DELETE FROM tblReservation WHERE Id = 
UPDATE FORM_TEMPLATE SET CONTENT='{"sections":[{"type":"text","tag":"h1","text":"申请单"},{"type":"grid","row":"2","col":"4","merge":[{"startId":"0-1","minRow":0,"minCol":1,"maxRow":0,"maxCol":3},{"startId":"1-1","minRow":1,"minCol":1,"maxRow":1,"maxCol":3}],"fields":[{"type":"label","row":0,"col":0,"text":"请假原因"},{"type":"label","row":1,"col":0,"text":"请假类型"},{"type":"textfield","row":0,"col":1,"name":"reason","required":false,"readOnly":false},{"type":"radio","row":1,"col":1,"name":"type","items":"倒休,事假,病假,婚假","required":false,"readOnly":false}]}]}' where ID=1;
UPDATE FORM_TEMPLATE SET CONTENT='{"sections":[{"type":"text","tag":"h1","text":"上级审批"},{"type":"grid","row":"3","col":"4","merge":[{"startId":"0-1","minRow":0,"minCol":1,"maxRow":0,"maxCol":3},{"startId":"1-1","minRow":1,"minCol":1,"maxRow":1,"maxCol":3},{"startId":"2-1","minRow":2,"minCol":1,"maxRow":2,"maxCol":3}],"fields":[{"type":"label","row":0,"col":0,"text":"请假原因"},{"type":"label","row":1,"col":0,"text":"请假类型"},{"type":"t

UPDATE FORM_TEMPLATE SET CONTENT='{"sections":[{"type":"text","tag":"h1","text":"人事审批"},{"type":"grid","row":"4","col":"4","merge":[{"startId":"0-1","minRow":0,"minCol":1,"maxRow":0,"maxCol":3},{"startId":"1-1","minRow":1,"minCol":1,"maxRow":1,"maxCol":3},{"startId":"2-1","minRow":2,"minCol":1,"maxRow":2,"maxCol":3},{"startId":"3-1","minRow":3,"minCol":1,"maxRow":3,"maxCol":3}],"fields":[{"type":"label","row":0,"col":0,"text":"请假原因"},{"type":"label","row":1,"col":0,"text":"请假类型"},{"type":"textfield","row":0,"col":1,"name":"reason","required":false,"readOnly":true},{"type":"radio","row":1,"col":1,"name":"type","items":"倒休,事假,病假,婚假","required":false,"readOnly":true},{"type":"label","row":2,"col":0,"text":"部门经理意见"},{"type":"radio","row":2,"col":1,"name":"leaderComment","items":"同意,不同意","required":false,"readOnly":true},{"type":"label","row":3,"col":0,"text":"人事意见"},{"type":"radio","row":3,"col":1,"name":"hrComment","items":"同意,不同意","required":false,"readOnly":false}]}]}' where ID=3;
UPDA

UPDATE FORM_TEMPLATE SET CONTENT='{"sections":[{"type":"text","tag":"h1","text":"人事审批"},{"type":"grid","row":"4","col":"4","merge":[{"startId":"0-1","minRow":0,"minCol":1,"maxRow":0,"maxCol":3},{"startId":"1-1","minRow":1,"minCol":1,"maxRow":1,"maxCol":3},{"startId":"2-1","minRow":2,"minCol":1,"maxRow":2,"maxCol":3},{"startId":"3-1","minRow":3,"minCol":1,"maxRow":3,"maxCol":3}],"fields":[{"type":"label","row":0,"col":0,"text":"请假原因"},{"type":"label","row":1,"col":0,"text":"请假类型"},{"type":"textfield","row":0,"col":1,"name":"reason","required":false,"readOnly":true},{"type":"radio","row":1,"col":1,"name":"type","items":"倒休,事假,病假,婚假","required":false,"readOnly":true},{"type":"label","row":2,"col":0,"text":"部门经理意见"},{"type":"radio","row":2,"col":1,"name":"leaderComment","items":"同意,不同意","required":false,"readOnly":true},{"type":"label","row":3,"col":0,"text":"人事意见"},{"type":"radio","row":3,"col":1,"name":"hrComment","items":"同意,不同意","required":false,"readOnly":true}]}]}' where ID=5;
UPDAT
CREATE TABLE enum_values (
    enum_values_id integer unsigned NOT NULL AUTO_INCREMENT,
    enum_type varchar(30) NOT NULL,
    shortname varchar(10),
    longname varchar(50),
    PRIMARY KEY (enum_values_id)
);
INSERT INTO enum_values (enum_type,shortname,longname) VALUES
('ARRLRAC','ME','Maine'),
('ARRLRAC','NH','New Hampshire'),
('ARRLRAC','VT','Vermont'),
('ARRLRAC','EMA','Eastern Massachusetts'),
('ARRLRAC','WMA','Western Massachusetts'),
('ARRLRAC','RI','Rhode Island'),
('ARRLRAC','CT','Connecticut'),
('ARRLRAC','NNY','Northern New York'),
('ARRLRAC','ENY','Eastern New York'),
('ARRLRAC','WNY','Western New York'),
('ARRLRAC','NLI','New York City - Long Island'),
('ARRLRAC','NNJ','Northern New Jersey'),
('ARRLRAC','SNJ','Southern New Jersey'),
('ARRLRAC','EPA','Eastern Pennsylvania'),
('ARRLRAC','WPA','Western Pennsylvania'),
('ARRLRAC','DE','Delaware'),
('ARRLRAC','MDC','Maryland - DC'),
('ARRLRAC','VA','Virginia'),
('ARRLRAC','KY','Kentucky'),
('ARRLRAC','TN','Tennessee'),
('AR

('ARRLRAC','SC','South Carolina'),
('ARRLRAC','GA','Georgia'),
('ARRLRAC','AL','Alabama'),
('ARRLRAC','NFL','Northern Florida'),
('ARRLRAC','WCF','West Central Florida'),
('ARRLRAC','SFL','Southern Florida'),
('ARRLRAC','MS','Mississippi'),
('ARRLRAC','AR','Arkansas'),
('ARRLRAC','LA','Louisiana'),
('ARRLRAC','NTX','Northern Texas'),
('ARRLRAC','STX','Southern Texas'),
('ARRLRAC','WTX','Western Texas'),
('ARRLRAC','OK','Oklahoma'),
('ARRLRAC','NM','New Mexico'),
('ARRLRAC','SV','Sacramento Valley'),
('ARRLRAC','SF','San Francisco'),
('ARRLRAC','EB','East Bay'),
('ARRLRAC','SCV','Santa Clara Valley'),
('ARRLRAC','SJV','San Joaquin Valley'),
('ARRLRAC','SB','Santa Barbara'),
('ARRLRAC','LAX','Los Angeles'),
('ARRLRAC','ORG','Orange'),
('ARRLRAC','SDG','San Diego'),
('ARRLRAC','WWA','Western Washington'),
('ARRLRAC','EWA','Eastern Washington'),
('ARRLRAC','OR','Oregon'),
('ARRLRAC','ID','Idaho'),
('ARRLRAC','NV','Nevada'),
('ARRLRAC','AZ','Arizona'),
('ARRLRAC','UT','Utah'),
('ARRLRAC','

('ARRLRAC','WY','Wyoming'),
('ARRLRAC','MI','Michigan'),
('ARRLRAC','OH','Ohio'),
('ARRLRAC','WV','West Virginia'),
('ARRLRAC','IN','Indiana'),
('ARRLRAC','IL','Illinois'),
('ARRLRAC','WI','Wisconsin'),
('ARRLRAC','MN','Minnesota'),
('ARRLRAC','IA','Iowa'),
('ARRLRAC','MO','Missouri'),
('ARRLRAC','KS','Kansas'),
('ARRLRAC','NE','Nebraska'),
('ARRLRAC','SD','South Dakota'),
('ARRLRAC','ND','North Dakota'),
('ARRLRAC','CO','Colorado'),
('ARRLRAC','AK','Alaska'),
('ARRLRAC','PAC','Pacific'),
('ARRLRAC','PR','Puerto Rico'),
('ARRLRAC','VI','Virgin Islands'),
('ARRLRAC','MAR','Maritime'),
('ARRLRAC','NL','Newfoundland/Labrador'),
('ARRLRAC','QC','Quebec'),
('ARRLRAC','ONE','Ontario East'),
('ARRLRAC','GTA','Greater Toronto Area'),
('ARRLRAC','ONS','Ontario South'),
('ARRLRAC','ONN','Ontario North'),
('ARRLRAC','MB','Manitoba'),
('ARRLRAC','SK','Saskatchewan'),
('ARRLRAC','AB','Alberta'),
('ARRLRAC','BC','British Columbia'),
('ARRLRAC','NT','Northern Territories'),
('DX','DX','DX'),
('USCan
--
-- database_schema_3-4.sql
--
-- Version: $Revision$
--
-- Date:    $Date: 2012-05-29
--
-- The contents of this file are subject to the license and copyright
-- detailed in the LICENSE and NOTICE files at the root of the source
-- tree and available online at
--
-- http://www.dspace.org/license/
--
--
-- SQL commands to upgrade the database schema of a live DSpace 3.0 or 3.x
-- to the DSpace 4 database schema
--
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
--
-------------------------------------------
-- Add support for DOIs (table and seq.) --
-------------------------------------------
CREATE TABLE Doi
  doi_id           INTEGER PRIMARY KEY,
  doi              VARCHAR2(256) UNIQUE,
  resource_type_id INTEGER

  resource_id      INTEGER,
  status           INTEGER
);
CREATE SEQUENCE doi_seq;
-- index by resource id and resource type id
CREATE INDEX doi_resource_id_type_idx ON doi(resource_id, resource_type_id);
-------------------------------------------
-- Table of running web applications for 'dspace version' --
-------------------------------------------
CREATE TABLE Webapp
    webapp_id INTEGER NOT NULL PRIMARY KEY,
    AppName VARCHAR2(32),
    URL VARCHAR2(1000),
    Started TIMESTAMP,
    isUI NUMBER(1)
);
CREATE SEQUENCE webapp_seq;
-------------------------------------------------------
-- DS-824 RequestItem table
-------------------------------------------------------
CREATE TABLE requestitem
  requestitem_id INTEGER NOT NULL,
  token varchar(48),
  item_id INDEX,
  bitstream_id INTEGER,
  allfiles NUMBER(1),
  request_email VARCHAR2(64),
  request_name VARCHAR2(64),
  request_date TIMESTAMP,
  accept_request NUMBER(1),
  decision_date TIMESTAMP,
  expires TIMESTAMP,
  CONSTRAINT 
DROP TABLE ELECREPORTSAGENCY CASCADE CONSTRAINTS;
CREATE TABLE ELECREPORTSAGENCY
  AUDITYEAR            VARCHAR2(4 BYTE),
  REPORTID             NUMBER(12),
  AGENCYCFDA           VARCHAR2(2 BYTE),
  FINAL                VARCHAR2(1 BYTE),
  VERSION              NUMBER(2),
  ELECREPORTSAGENCYID  NUMBER,
  ELECAUDITHEADERID    NUMBER
TABLESPACE TS_SAP
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOLOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE INDEX ELECREPORTSAGENCY_IND ON ELECREPORTSAGENCY
(AUDITYEAR, REPORTID, AGENCYCFDA, VERSION)
LOGGING
TABLESPACE TS_SAP
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL         
DO $$
  BEGIN
    PERFORM * FROM schemaversion WHERE name = 'migrate-events-data';
    IF NOT FOUND THEN
      CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
      DECLARE
        event RECORD;
        attendanceObject RECORD;
        ticket_string character varying;
        sessionId character varying;
      BEGIN
        FOR event in SELECT * FROM cd_events
        LOOP
            sessionId := uuid_generate_v4();
            ticket_string := '{"name": "General Admission", "type": "other", "quantity":'||event.capacity||'}';
            INSERT INTO cd_sessions (id, name, description, event_id, tickets, status) VALUES (sessionId, 'General', 'General Session', event.id, array[ticket_string::json], 'active');
            UPDATE cd_applications SET ticket_name = 'General Admission', ticket_type = 'other', session_id = sessionId, created = NOW() WHERE event_id = event.id; 
            FOR attendanceObject in SELECT * FROM cd_attendance WHERE event_id = event.id AND attended = TRUE
           
DROP TRIGGER VDITVENDATGAD;
COMMIT WORK;
SET TERM ^ ;
CREATE TRIGGER VDITVENDATGAD FOR VDITVENDA
ACTIVE AFTER DELETE POSITION 0
AS
  DECLARE VARIABLE DDTVENDA DATE;
  DECLARE VARIABLE CFLAG CHAR(1);
  DECLARE VARIABLE IDOCVENDA INTEGER;
  DECLARE VARIABLE ICODEMPTM INTEGER;
  DECLARE VARIABLE SCODFILIALTM SMALLINT;
  DECLARE VARIABLE ICODTIPOMOV INTEGER;
BEGIN
  IF ( not ( (old.EMMANUT='S') and (old.EMMANUT IS NOT NULL) ) ) THEN
  BEGIN
      UPDATE VDVENDA SET VLRDESCITVENDA = VLRDESCITVENDA -old.VLRDESCITVENDA,
         VLRPRODVENDA = VLRPRODVENDA - old.VLRPRODITVENDA,
         VLRBASEICMSVENDA = VLRBASEICMSVENDA - old.VLRBASEICMSITVENDA,
         VLRICMSVENDA = VLRICMSVENDA -old.VLRICMSITVENDA,
         VLRISENTASVENDA = VLRISENTASVENDA - old.VLRISENTASITVENDA,
         VLROUTRASVENDA = VLROUTRASVENDA - old.VLROUTRASITVENDA,
         VLRBASEIPIVENDA = VLRBASEIPIVENDA - old.VLRBASEIPIITVENDA,
         VLRIPIVENDA = VLRIPIVENDA - old.VLRIPIITVENDA,
         VLRLIQVENDA = VLRLIQVENDA -

         VLRCOMISVENDA = VLRCOMISVENDA - old.VLRCOMISITVENDA,
         VLRBASEISSVENDA = VLRBASEISSVENDA - old.VLRBASEISSITVENDA,
         VLRISSVENDA = VLRISSVENDA - old.VLRISSITVENDA,
         VLRDESCITVENDA = VLRDESCITVENDA - old.VLRDESCITVENDA
         WHERE CODVENDA=old.CODVENDA AND TIPOVENDA=old.TIPOVENDA AND
         CODEMP=old.CODEMP AND CODFILIAL=old.CODFILIAL;
      SELECT V.DTEMITVENDA, V.FLAG, V.DOCVENDA,
          V.CODEMPTM, V.CODFILIALTM, V.CODTIPOMOV
       FROM VDVENDA V  WHERE V.CODVENDA = old.CODVENDA AND
          V.CODEMP=old.CODEMP AND V.CODFILIAL = old.CODFILIAL AND
          V.TIPOVENDA=old.TIPOVENDA
      INTO :DDTVENDA, :CFLAG, :IDOCVENDA, :ICODEMPTM, :SCODFILIALTM, :ICODTIPOMOV;
      EXECUTE PROCEDURE EQMOVPRODIUDSP('D', old.CODEMPPD, old.CODFILIALPD,
         old.CODPROD, old.CODEMPLE, old.CODFILIALLE, old.CODLOTE,
         :ICODEMPTM, :SCODFILIALTM, :ICODTIPOMOV, null, null, null,
         null, null, null, null,
         old.CODEMP, old.CODFILIAL, old.TI
PROC $sc_$cpu_fm_runstresstests (directorySpec)
;*******************************************************************************
;  Proc Name:  FM_RunStressTests
;  Test Level: none 
;		     
;  Proc Description
;   The purpose of this procedure is execute the FM stress test procedures. The
;   procedures are executed one after the other until complete.
;  Change History
;	Date	   Name		Description
;	12/16/08   W. Moleski	Original Procedure
;	01/06/15   W. Moleski	Added directorySpec argument to allow the caller
;				to specify where the log files are stored.
;  Arguments
;	directorySpec	The name of an existing directory under the test_logs
;			directory to store the generated log files.
;			NOTE: If specified and the directory does not exist, the
;			      log files will be lost.
;**********************************************************************
; Determine if proc was called with minimum # of parameters
if (%nargs < 1) then
  directorySpec = ""
endif
write ";********************

write ";  Executing DirCmds_stress procedure                                 "
write ";*********************************************************************"
if (directorySpec <> "") then
  s ut_runproc("$sc_$cpu_fm_dircmds_stress",directorySpec)
else
  s ut_runproc("$sc_$cpu_fm_dircmds_stress")
endif
wait 2
write ";*********************************************************************"
write ";  Executing filecat_stress procedure                                 "
write ";*********************************************************************"
if (directorySpec <> "") then
  s ut_runproc("$sc_$cpu_fm_filecat_stress",directorySpec)
else
  s ut_runproc("$sc_$cpu_fm_filecat_stress")
endif
wait 2
write ";*********************************************************************"
write ";  Executing filecopy_stress procedure                                "
write ";*********************************************************************"
if (directorySpec <> "") then
  s ut_runproc("$sc_$cpu_fm_filec

else
  s ut_runproc("$sc_$cpu_fm_filecopy_stress")
endif
wait 2
write ";*********************************************************************"
write ";  Executing filedecom_stress procedure                               "
write ";*********************************************************************"
if (directorySpec <> "") then
  s ut_runproc("$sc_$cpu_fm_filedecom_stress",directorySpec)
else
  s ut_runproc("$sc_$cpu_fm_filedecom_stress")
endif
wait 2
write ";*********************************************************************"
write ";  Executing filedelete_stress procedure                              "
write ";*********************************************************************"
if (directorySpec <> "") then
  s ut_runproc("$sc_$cpu_fm_filedelete_stress",directorySpec)
else
  s ut_runproc("$sc_$cpu_fm_filedelete_stress")
endif
wait 2
write ";*********************************************************************"
write ";  Executing fileinfo_stress procedure                       
--
-- PostgreSQL port of the MySQL "World" database.
--
-- The sample data used in the world database is Copyright Statistics 
-- Finland, http://www.stat.fi/worldinfigures.
--
SET client_encoding = 'LATIN1';
DROP TABLE IF EXISTS city;
CREATE TABLE city (
    id integer NOT NULL,
    name text NOT NULL,
    countrycode character(3) NOT NULL,
    district text NOT NULL,
    population integer NOT NULL
);
SELECT master_create_distributed_table('city', 'countrycode', 'append');
GRANT SELECT on city to ro;
GRANT SELECT, INSERT, UPDATE, DELETE on city to rw;
CREATE TABLE country (
    code character(3) NOT NULL,
    name text NOT NULL,
    continent text NOT NULL,
    region text NOT NULL,
    surfacearea real NOT NULL,
    indepyear smallint,
    population integer NOT NULL,
    lifeexpectancy real,
    gnp numeric(10,2),
    gnpold numeric(10,2),
    localname text NOT NULL,
    governmentform text NOT NULL,
    headofstate text,
    capital integer,
    code2 character(2) NOT NULL,
    C
  CREATE OR REPLACE  VIEW HV_NAV_BASE (AMFI_CODE, SCHEME, SCHEME_NAME, SCHEME_CLASS_NAME, SCHNAV_NAME, SCHEME_TYPE, SCHEME_CATEGORY, SCHEME_CAT_ALT, SCHEME_CAT_NAME_ALT, SCHEME_CLASS, MANUAL_DAY_NAV, FINAL_MANUAL_NAV, PUR_LOAD, SELL_LOAD, NAV_DATE) AS 
  SELECT 
sch.ff_vc2 amfi_code,
nac.portfolio scheme,
  nac.portfolio_name scheme_name,
  nac.portfolio_class_name scheme_class_name,
  nac.PORTFOLIO_NAME || ' ' || nac.PORTFOLIO_CLASS_NAME as schnav_name,
  nac.PORTFOLIO_TYPE scheme_type,
  nac.PORTFOLIO_CATEGORY scheme_category,
  nac.PORTFOLIO_CATEGORY_ALT scheme_cat_alt,
  nac.PORTFOLIO_CATEGORY_NAME_ALT scheme_cat_name_alt,
 -- nac.PORTFOLIO_CLASS_NAME SCHEME_CLASS_NAME,
  nac.schclass scheme_class,
  nac.last_nav +nac.nav_mov manual_day_nav,
  (nac.last_nav+nac.nav_mov)-(NVL(nac.dividend,0)) final_manual_nav,
 0 pur_load,
 0 sell_load,
  nac.nav_date
FROM HREP_NAVCONTROL_LIVE_CURR nac,hm_schclass sch
WHERE nac.portfolio=sch.scheme
and nac.schclass=sch.schclass
/*and nac.nav_date='2
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_ModelPortfolioDetailsInsertUpdate]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_ModelPortfolioDetailsInsertUpdate]
@param_IFA_ID				INT,
@param_ModelPortfolioID		NVARCHAR(50),
@param_ModelGroupID			NVARCHAR(50),
@param_FundID				INT,
@param_Allocation			FLOAT,
@param_IsDeletable			SMALLINT
AS
BEGIN
	IF NOT EXISTS (SELECT ModelGroupID, ModelPortfolioID, FundID FROM NavIntegrationDB.dbo.ModelPortfolioDetails WHERE ModelGroupID = @param_ModelGroupID AND ModelPortfolioID = @param_ModelPortfolioID AND FundID = @param_FundID)
		BEGIN
			INSERT INTO NavIntegrationDB.dbo.ModelPortfolioDetails (IFA_ID, ModelPortfolioID, ModelGroupID, FundID, Allocation, isDeletable)
			VALUES (@param_IFA_ID, @param_ModelPortfolioID, @param_ModelGroupID, @param_FundID, @param_Allocation, @param_IsDeletable)
		END
	ELSE
		BEGIN
			IF(@param_Allocation <> (SELECT 
﻿CREATE VIEW [dbo].[AllDepartments]
AS
SELECT     TOP (100) PERCENT HomeDeptNo AS DepartmentNumber, Name, Abbreviation AS ShortName, SchoolCode
FROM         PPSDataMart.dbo.Departments AS Departments_1
ORDER BY DepartmentNumber
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'AllDepartments';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         C

      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfi

         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Departments_1"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 123
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 3
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1
create view lineitem_p0 as select * from lineitem;
create view lineitem_p1 as select * from lineitem;
create view lineitem_p2 as select * from lineitem;
create view lineitem_p3 as select * from lineitem;
create view lineitem_p4 as select * from lineitem;
create view lineitem_p5 as select * from lineitem;
create view lineitem_p6 as select * from lineitem;
create view lineitem_p7 as select * from lineitem;
create view lineitem_p8 as select * from lineitem;
create view lineitem_p9 as select * from lineitem;
create view orders_p0 as select * from orders;
create view orders_p1 as select * from orders;
create view orders_p2 as select * from orders;
create view orders_p3 as select * from orders;
create view orders_p4 as select * from orders;
create view orders_p5 as select * from orders;
create view orders_p6 as select * from orders;
create view orders_p7 as select * from orders;
create view orders_p8 as select * from orders;
create view orders_p9 as select * from orders;
create view customer

create view customer_p1 as select * from customer;
create view customer_p2 as select * from customer;
create view customer_p3 as select * from customer;
create view customer_p4 as select * from customer;
create view customer_p5 as select * from customer;
create view customer_p6 as select * from customer;
create view customer_p7 as select * from customer;
create view customer_p8 as select * from customer;
create view customer_p9 as select * from customer;
create view part_p0 as select * from part;
create view part_p1 as select * from part;
create view part_p2 as select * from part;
create view part_p3 as select * from part;
create view part_p4 as select * from part;
create view part_p5 as select * from part;
create view part_p6 as select * from part;
create view part_p7 as select * from part;
create view part_p8 as select * from part;
create view part_p9 as select * from part;
create view partsupp_p0 as select * from partsupp;
create view partsupp_p1 as select * from partsupp;
create v
CREATE TABLE [COM_Customer] (
		[CustomerID]                            [int] IDENTITY(1, 1) NOT NULL,
		[CustomerFirstName]                     [nvarchar](200) NOT NULL,
		[CustomerLastName]                      [nvarchar](200) NOT NULL,
		[CustomerEmail]                         [nvarchar](200) NULL,
		[CustomerPhone]                         [nvarchar](50) NULL,
		[CustomerFax]                           [nvarchar](50) NULL,
		[CustomerCompany]                       [nvarchar](200) NULL,
		[CustomerUserID]                        [int] NULL,
		[CustomerPreferredCurrencyID]           [int] NULL,
		[CustomerPreferredShippingOptionID]     [int] NULL,
		[CustomerCountryID]                     [int] NULL,
		[CustomerEnabled]                       [bit] NOT NULL,
		[CustomerPrefferedPaymentOptionID]      [int] NULL,
		[CustomerStateID]                       [int] NULL,
		[CustomerGUID]                          [uniqueidentifier] NOT NULL,
		[CustomerTaxRegistrationID]             [nvarchar](5

		[CustomerOrganizationID]                [nvarchar](50) NULL,
		[CustomerDiscountLevelID]               [int] NULL,
		[CustomerCreated]                       [datetime] NULL,
		[CustomerLastModified]                  [datetime] NOT NULL,
		[CustomerSiteID]                        [int] NULL
) ON [PRIMARY]
ALTER TABLE [COM_Customer]
	ADD
	CONSTRAINT [PK_COM_Customer]
	PRIMARY KEY
	NONCLUSTERED
	([CustomerID])
	WITH FILLFACTOR=80
	ON [PRIMARY]
ALTER TABLE [COM_Customer]
	ADD
	CONSTRAINT [DEFAULT_COM_Customer_CustomerGUID]
	DEFAULT ('00000000-0000-0000-0000-000000000000') FOR [CustomerGUID]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerCompany]
	ON [COM_Customer] ([CustomerCompany])
	WITH ( FILLFACTOR = 80)
	ON [PRIMARY]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerCountryID]
	ON [COM_Customer] ([CustomerCountryID])
	ON [PRIMARY]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerDiscountLevelID]
	ON [COM_Customer] ([CustomerDiscountLevelID])
	ON [PRIMARY]
CREATE NONCLUSTERED 

	ON [COM_Customer] ([CustomerEmail])
	WITH ( FILLFACTOR = 80)
	ON [PRIMARY]
CREATE CLUSTERED INDEX [IX_COM_Customer_CustomerLastName_CustomerFirstName_CustomerEnabled]
	ON [COM_Customer] ([CustomerLastName], [CustomerFirstName], [CustomerEnabled])
	WITH ( FILLFACTOR = 80)
	ON [PRIMARY]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerPreferredCurrencyID]
	ON [COM_Customer] ([CustomerPreferredCurrencyID])
	ON [PRIMARY]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerPreferredShippingOptionID]
	ON [COM_Customer] ([CustomerPreferredShippingOptionID])
	ON [PRIMARY]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerPrefferedPaymentOptionID]
	ON [COM_Customer] ([CustomerPrefferedPaymentOptionID])
	ON [PRIMARY]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerStateID]
	ON [COM_Customer] ([CustomerStateID])
	ON [PRIMARY]
CREATE NONCLUSTERED INDEX [IX_COM_Customer_CustomerUserID]
	ON [COM_Customer] ([CustomerUserID])
	ON [PRIMARY]
ALTER TABLE [COM_Customer]
	WITH CHECK
	ADD CONSTRAINT 
USE master
GO
CREATE DATABASE os_demo
GO
ALTER DATABASE os_demo SET READ_COMMITTED_SNAPSHOT ON
GO
CREATE LOGIN os_test WITH PASSWORD='os_password', DEFAULT_DATABASE=os_demo, 
CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO
USE os_demo
GO
CREATE USER os_test
GO
ALTER ROLE db_datareader ADD MEMBER os_test
GO
ALTER ROLE db_ddladmin ADD MEMBER os_test
GO
create table refresh_test
(id int not null primary key,
 fname varchar(100) not null,
 lname varchar(200) not null);
create table append_test
(id int not null primary key,
 fname varchar(100) not null,
 lname varchar(200) not null,
 url text);
create table replication_test
(id int not null primary key,
 fname varchar(100) not null,
 lname varchar(200) not null,
 salary float);
insert into refresh_test values (1, 'Jon', 'Roberts');
insert into refresh_test values (2, 'Steve', 'Kerr');
insert into refresh_test values (3, 'Barack', 'Obama');
insert into refresh_test values (4, 'Tom', 'Hanks');
insert into refresh_test values (5, 'Bubba', 'Gump');
i
SET DEFINE OFF;
CREATE TABLE D_CONTACT_PROMOTION
  CONTACT_PROMO_ID  NUMBER(4),
  CONTACT_ID        VARCHAR2(20 BYTE),
  PROMOTION_ID      VARCHAR2(20 BYTE),
  BOOK_DATE         DATE,
  PRICE             NUMBER(9),
  BEGIN_BOOK        DATE,
  END_BOOK          DATE,
  STATUS            VARCHAR2(50 BYTE),
  FOR_RES_NO        VARCHAR2(1986 BYTE),
  WHOSTAMP          VARCHAR2(50 BYTE),
  DATESTAMP         DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_CONTACT_PROMOTION_PK ON D_CONTACT_PROMOTION
(CONTACT_PROMO_ID)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFRE
CREATE DATABASE  IF NOT EXISTS `ezegarraDB` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `ezegarraDB`;
-- MySQL dump 10.13  Distrib 5.6.13, for Win32 (x86)
--
-- Host: mysql.cs.pitt.edu    Database: ezegarraDB
-- ------------------------------------------------------
-- Server version	5.0.45-community-log
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Not dumping tablespaces as no INFORMATION_SCHEMA.FILES table on this server
--
--
-- Table s

--
DROP TABLE IF EXISTS `qa_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `qa_options` (
  `title` varchar(40) NOT NULL,
  `content` varchar(8000) NOT NULL,
  PRIMARY KEY  (`title`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `qa_options`
--
LOCK TABLES `qa_options` WRITE;
/*!40000 ALTER TABLE `qa_options` DISABLE KEYS */;
INSERT INTO `qa_options` VALUES ('adsense_publisher_id',''),('allow_change_usernames','1'),('allow_multi_answers','1'),('allow_no_category',''),('allow_no_sub_category',''),('allow_private_messages','0'),('allow_view_q_bots','0'),('avatar_allow_gravatar','1'),('avatar_allow_upload','1'),('avatar_default_blobid',''),('avatar_default_height',''),('avatar_default_show','0'),('avatar_default_width',''),('avatar_profile_size','200'),('avatar_q_list_size','0'),('avatar_q_page_a_size','40'),('avatar_q_page_c_si
alter table MD_Supplier add MailAddress varchar(4000)
CREATE TABLE MD_LocItemOp(Id int identity(1,1) primary key,RowNo int,Location varchar(50),OpRef varchar(50),Item varchar(50)) 
go
create index IX_MD_LocItemOp_OpRefItem on MD_LocItemOp(OpRef,Item)
go
insert into SYS_Menu(Code,Name,Parent,Seq,Desc1,PageUrl,ImageUrl,IsActive)
select 'Url_Seq_SupplierMailAddress','供应商邮箱','Menu.Sequence.Setup',8600,'供应商邮箱','~/Supplier/Index','~/Content/Images/Nav/Default.png',1 union all
select 'Url_Ord_SupplierMailAddress','供应商邮箱','Menu.Order.Setup',1100,'供应商邮箱','~/Supplier/Index','~/Content/Images/Nav/Default.png',1 
go
insert into ACC_Permission(Code,Desc1,Category)
select 'Url_Seq_SupplierMailAddress','供应商邮箱','Sequence' union all
select 'Url_Ord_SupplierMailAddress','供应商邮箱','Order' 
 update SYS_Menu set Name='请购档查看',Desc1='请购档查看' where Code='Url_PurchaseOrder_View'
 insert into SYS_Menu values('Url_DeleteOrder_View','一车一单删除','Menu.VehicleOrder.Info',2550,'一车一单删除','~/ProductionOrder/DeleteOrderIndex'
CREATE TABLE `acl_permission` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `RoleID` int(11) DEFAULT NULL,
  `ResourceID` int(11) DEFAULT NULL,
  `Privileges` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `ResourceID` (`ResourceID`),
  KEY `acl_permission_ibfk_1` (`RoleID`),
  CONSTRAINT `acl_permission_ibfk_1` FOREIGN KEY (`RoleID`) REFERENCES `acl_role` (`ID`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `acl_permission_ibfk_2` FOREIGN KEY (`ResourceID`) REFERENCES `acl_resource` (`ID`) ON DELETE SET NULL ON UPDATE CASCADE
)  AUTO_INCREMENT=227 DEFAULT CHARSET=latin1;
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (177,3,5,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (189,3,8,'a:3:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (190,3,1,'a:4:{i:0;s:4:"

insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (191,3,2,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (194,3,6,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (195,3,12,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (196,3,3,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (197,3,4,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (198,3,7,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_per

insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (200,3,11,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (201,1,8,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (202,1,1,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (203,1,15,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (204,1,5,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_permission`(`ID`,`RoleID`,`ResourceID`,`Privileges`) values (205,1,2,'a:4:{i:0;s:4:"Read";i:1;s:6:"Update";i:2;s:6:"Create";i:3;s:6:"Delete";}');
insert into `acl_pe
/*
三角数の数列は自然数の和で表わされ, 7番目の三角数は 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28 である. 三角数の最初の10項は:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
となる.
最初の7項について, その約数を列挙すると, 以下のとおり.
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
これから, 7番目の三角数である28は, 6個以上の約数をもつ最初の三角数であることが分かる.
では, 500個以上の約数をもつ最初の三角数はいくつか.
http://odz.sakura.ne.jp/projecteuler/index.php?cmd=read&page=Problem%2012
*/
WITH RECURSIVE temp(n,list) AS (
SELECT 1,[1]
UNION ALL
SELECT
  (CASE n WHEN 1 THEN 3 ELSE
    (CASE n+)
  END)
  , (CASE n WHEN 1 THEN [1,3] ELSE
    ARRAY(SELECT generate_series FROM(SELECT generate_series(1,10)) a WHERE generate_series%3=0)
  END)
WITH RECURSIVE temp(n,z,prime,list,e) AS (
SELECT
  1
  , 1
  , 2
  , ARRAY[1]::int[]
  , 1::double precision
UNION ALL
SELECT
  (CASE n WHEN 1 THEN 2 ELSE (CASE z WHEN 1 THEN n+1 ELSE n END) END)
  , (CASE z WHEN 1 THEN n+1 ELSE
      (CASE WHEN z%prime=0 THEN z/prime ELSE z END)
    END)
  , (CASE z WHEN 1 THEN 2 ELSE
      (CASE WHEN z%prime=0
     
--
-- Table structure for table `sas_main_menu`
--
DROP TABLE IF EXISTS `sas_main_menu`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sas_main_menu` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `page` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `sas_main_menu`
--
LOCK TABLES `sas_main_menu` WRITE;
/*!40000 ALTER TABLE `sas_main_menu` DISABLE KEYS */;
INSERT INTO `sas_main_menu` VALUES (1,'START','home'),(2,'MYSQL','mysql'),(3,'APACHE','apache'),(4,'POSTFIX','postfix'),(5,'FTP','ftp'),(6,'SAMBA','samba'),(7,'MANAGEMENT','management'),(8,'WEBUSER','webuser'),(9,'TOOLS','tools');
/*!40000 ALTER TABLE `sas_main_menu` ENABLE KEYS */;
UNLOCK TABLES;
--
-- Table structure for table `sas_page_content`
--
DROP TABLE IF EXISTS `sas_page_content`;
/

/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sas_page_content` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `page` varchar(255) NOT NULL,
  `spage` varchar(255) NOT NULL,
  `inc_path` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `sas_page_content`
--
LOCK TABLES `sas_page_content` WRITE;
/*!40000 ALTER TABLE `sas_page_content` DISABLE KEYS */;
INSERT INTO `sas_page_content` VALUES (1,'home','','inc/home/home.inc.php'),(2,'tools','console','inc/tools/console.inc.php'),(3,'home','overview','inc/index/overview.inc.php'),(4,'home','panel','inc/index/panel.inc.php'),(5,'home','stats','inc/index/stats.inc.php'),(6,'home','doku','inc/index/doku.inc.php'),(7,'home','help','inc/index/help.inc.php'),(8,'home','about','inc/index/about.inc.php'),(9,'mysql','console','inc/mysql/sqlcmd.inc.php'),(10,'mysql','','inc/mysql/overview.inc.php'),(11,'

/*!40000 ALTER TABLE `sas_page_content` ENABLE KEYS */;
UNLOCK TABLES;
--
-- Table structure for table `sas_side_nav`
--
DROP TABLE IF EXISTS `sas_side_nav`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sas_side_nav` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `page` varchar(255) NOT NULL,
  `spage` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `sas_side_nav`
--
LOCK TABLES `sas_side_nav` WRITE;
/*!40000 ALTER TABLE `sas_side_nav` DISABLE KEYS */;
INSERT INTO `sas_side_nav` VALUES (1,'Home','home',''),(2,'Konsole','tools','console'),(3,'System&uuml;bersicht','home','overview'),(4,'QuickPanel','home','panel'),(5,'Serverstatistiken','home','stats'),(6,'Dokumentation','home','doku'),(7,'Hilfe','home','help'),(8,'&Uuml;ber SAS','home','about'
INSERT INTO model-list VALUES(1,1,'amc'
);
INSERT INTO model-list VALUES(2,2,'audi'
);
INSERT INTO model-list VALUES(3,3,'bmw'
);
INSERT INTO model-list VALUES(4,4,'buick'
);
INSERT INTO model-list VALUES(5,4,'cadillac'
);
INSERT INTO model-list VALUES(6,5,'capri'
);
INSERT INTO model-list VALUES(7,4,'chevrolet'
);
INSERT INTO model-list VALUES(8,6,'chrysler'
);
INSERT INTO model-list VALUES(9,7,'citroen'
);
INSERT INTO model-list VALUES(10,8,'datsun'
);
INSERT INTO model-list VALUES(11,6,'dodge'
);
INSERT INTO model-list VALUES(12,9,'fiat'
);
INSERT INTO model-list VALUES(13,5,'ford'
);
INSERT INTO model-list VALUES(14,10,'hi'
);
INSERT INTO model-list VALUES(15,11,'honda'
);
INSERT INTO model-list VALUES(16,12,'mazda'
);
INSERT INTO model-list VALUES(17,13,'mercedes'
);
INSERT INTO model-list VALUES(18,13,'mercedes-benz'
);
INSERT INTO model-list VALUES(19,5,'mercury'
);
INSERT INTO model-list VALUES(20,8,'nissan'
);
INSERT INTO model-list VALUES(21,4,'oldsmobile'
);
INSERT INTO mode
--1.Vypise vsechny ridice, kteri najezdili vice jak 35000km
SET AUTOTRACE ON;
select
  * 
from 
  ridici
where 
  ridic_id in 
  (
    select 
      ridic_id 
    from 
      vypujceni 
    group by 
      ridic_id
    having 
      sum(vzdalenost_celkem) >= 35000
  );
--2.Vypise automobil a model (podle ujetych kilometru) a jejich model.
SET AUTOTRACE ON;
select
  m.znacka
  ,m.model
  ,v.spz
  ,t.celkem
from
  vozidlo v
  join model m on v.model_id = m.model_id
  join
  (
  select
    vozidlo_id
    ,sum(vzdalenost_celkem) celkem
  from
    vypujceni
  group by
    vozidlo_id
  ) t on v.vozidlo_id = t.vozidlo_id
order by
  t.celkem desc;
--3.Vypise vsechny ridice, kteri za leden, unor a brezen roku 2013 udelali alespon 20 jizd
SET AUTOTRACE ON;
select
  ridici.*
from
  (
    select 
      ridic_id
    from
      vypujceni
    where 
      datum_vypujceni >= '1.1.2013' and datum_vypujceni <= '31.3.2013'
    group by
      ridic_id
    having
      count(*) >= 20
  ) t
  join ridici on
-- REFERS DATABASE (separate)
-- ===============
-- All data passes through the refers node, and the references are
-- calculated here, so it is always consistent in its ordering.
-- New channel mechanism, based on a secret token value and a public
-- value derived from it using sha256.
-- In future could be sharded based on some of the sha256 value.
-- Can I unify the storage of fingerprint_content with
-- channel_content? Is this even desirable?
-- Should I add write_key next to the read_key? This would save a
-- sha256 operation at the cost of storing the text
-- write_key. Probably not, it's nice not having to story the secret
-- write key, and the sha256 cost is cheaper than disk usage, though
-- the current setup does make writes slower.
-- Just deduplicates the read_key text
CREATE TABLE read_keys (
       pkey serial, -- PRIMARY KEY;
       read_key bytea
);
CREATE INDEX read_keys_pkey ON read_keys (pkey);
CREATE INDEX read_keys_read_key ON read_keys (read_key);
-- content can 

CREATE TABLE channel_content (
       pkey serial, -- PRIMARY KEY;
       read_key integer,
       sha256 bytea -- (32) INDEX NOT NULL;
);
CREATE INDEX channel_content_pkey ON channel_content (pkey);
CREATE INDEX channel_content_read_key_sha256 ON channel_content (read_key, sha256);
-- The initial setup allows us to assign a random Write key as the
-- pair for a fingerprint Read key
-- Map from write_key -> fingerprint
-- (as opposed to the normal map of sha256)
CREATE TABLE fingerprint_alias (
       pkey serial, -- PRIMARY KEY;
       write_key bytea,
       fingerprint bytea
);
CREATE INDEX fingerprint_alias_pkey ON fingerprint_alias (pkey);
CREATE INDEX fingerprint_alias_write_key ON fingerprint_alias (write_key);
CREATE INDEX fingerprint_alias_fingerprint ON fingerprint_alias (fingerprint);
-- as above, except for looking up by fingerprint. This uses a
-- completely different mechanism, so is kept separate.
CREATE TABLE fingerprint_content (
       pkey serial, -- PRIMARY KEY;
  
  USE  [wsrd];
Go
DECLARE @ConfigLookupTables VARCHAR(20);
SELECT @ConfigLookupTables ='sprint3.X';
BEGIN TRANSACTION @ConfigLookupTables
  
--INSERT INTO [wsrd].[BEMS] ([bemsID] ,[firstName] ,[lastName] ,[middleName] ,[createdBy] ,[modifiedBy] ,[createdTime] ,[updatedTime] ,[statusID]) VALUES
	--   (1662795,'Shawn','Karr','',210605,210605,'2014-09-04 14:56:45.970','2014-09-04 14:56:45.970',5)
 --INSERT INTO [wsrd].[UserGroupRoleDetail] ([bemsID] ,[roleID] ,[groupID] ,[createdBy] ,[createdTime]) VALUES (1662795,2,2,210605,'2014-09-04 14:56:45.970')
ALTER TABLE [wsrd].[GroupDetail] ADD description varchar(max)
ALTER TABLE [wsrd].[AttributeType] ADD unitID BIGINT
ALTER TABLE [wsrd].[GroupDetail] DROP COLUMN groupName
ALTER TABLE [wsrd].[Maneuver] ALTER COLUMN  type varchar(500)
ALTER TABLE [wsrd].[TestJustification] ALTER COLUMN  name varchar(500) 
ALTER TABLE [wsrd].[TestSupplierHardware] ALTER COLUMN  name varchar(500)
UPDATE  [wsrd].[Section] SET code=SUBSTRING(title,1,2) where status

UPDATE  [wsrd].[Section] SET title=right(title, len(title)-2)  where statusID=5 
UPDATE  [wsrd].[Section] SET title=LTRIM(RTRIM(title))  where statusID=5
ALTER TABLE [wsrd].[UnitType] DROP CONSTRAINT [FK_UnitType_attributeID]
ALTER TABLE [wsrd].[AttributeType] ADD  CONSTRAINT [UNITTYPEID_FK] FOREIGN KEY([unitID])
REFERENCES [wsrd].[UnitType] ([unitID])
GO
/****** Object:  Table [wsrd].[AirplaneModelType]    Script Date: 10/27/2014 11:59:23 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [wsrd].[AirplaneModelType](
	[airplaneModelTypeID] [bigint] IDENTITY(1,1) NOT NULL,
	[airplaneModelType] [varchar](50) NULL,
	[createdBy] [bigint] NULL,
	[modifiedBy] [bigint] NULL,
	[createdTime] [datetime] NULL,
	[updatedTime] [datetime] NULL,
	[StatusID] [bigint] NULL,
 CONSTRAINT [airplaneModelID] PRIMARY KEY CLUSTERED 
	[airplaneModelTypeID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PA

) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
ALTER TABLE [wsrd].[AirplaneModelType]  WITH CHECK ADD  CONSTRAINT [AirplaneModel_createdBy_FK] FOREIGN KEY([createdBy])
REFERENCES [wsrd].[BEMS] ([bemsID])
GO
ALTER TABLE [wsrd].[AirplaneModelType] CHECK CONSTRAINT [AirplaneModel_createdBy_FK]
GO
ALTER TABLE [wsrd].[AirplaneModelType]  WITH CHECK ADD  CONSTRAINT [AirplaneModel_modifiedBy_FK] FOREIGN KEY([modifiedBy])
REFERENCES [wsrd].[BEMS] ([bemsID])
GO
ALTER TABLE [wsrd].[AirplaneModelType] CHECK CONSTRAINT [AirplaneModel_modifiedBy_FK]
GO
ALTER TABLE [wsrd].[AirplaneModelType]  WITH CHECK ADD  CONSTRAINT [AirplaneModel_statusID_FK] FOREIGN KEY([StatusID])
REFERENCES [wsrd].[Status] ([statusID])
GO
ALTER TABLE [wsrd].[AirplaneModelType] CHECK CONSTRAINT [AirplaneModel_statusID_FK]
GO
ALTER TABLE  [wsrd].[AirplaneModelType] ADD AirplaneModelTypeID BIGINT
ALTER TABLE [wsrd].[AirplaneModel]  ADD  CONSTRAINT [AirplaneModelTypeID_FK] FOREIGN KEY([AirplaneModelTypeID])
REFERENCES [wsrd].[Airplan
DROP VIEW organization_view;
DROP VIEW privacy_group_view;
DROP VIEW flexible_element_view;
DROP VIEW checkbox_element_view;
DROP VIEW default_flexible_element_view;
DROP VIEW files_list_element_view;
DROP VIEW report_element_view;
DROP VIEW report_list_element_view;
DROP VIEW triplets_list_element_view;
DROP VIEW indicators_list_element_view;
DROP VIEW question_element_view;
DROP VIEW question_choice_element_view;
DROP VIEW message_element_view;
DROP VIEW budget_distribution_element_view;
DROP VIEW textarea_element_view;
DROP VIEW layout_constraint_view;
DROP VIEW org_unit_model_view;
DROP VIEW partner_view;
DROP VIEW location_view;
DROP VIEW locationtype_view;
DROP VIEW adminlevel_view;
DROP VIEW country_view;
DROP VIEW quality_criterion_view;
DROP VIEW quality_framework_view;
DROP VIEW quality_criterion_type_view;
DROP VIEW quality_criterion_children_view;
DROP VIEW keyquestion_view;
DROP VIEW userlogin_view;
DROP VIEW userdatabase_view;
DROP VIEW project_userlogin_view;
DROP VIEW p

DROP VIEW project_funding_view;
DROP VIEW project_model_visibility_view;
DROP VIEW project_model_view;
DROP VIEW phase_view;
DROP VIEW phase_model_view;
DROP VIEW phase_model_sucessors_view;
DROP VIEW project_details_view;
DROP VIEW project_banner_view;
DROP VIEW layout_view;
DROP VIEW org_unit_details_view;
DROP VIEW org_unit_banner_view;
DROP VIEW indicator_view;
DROP VIEW indicator_datasource_view;
DROP VIEW indicator_labels_view;
DROP VIEW indicators_list_value_view;
DROP VIEW indicatorvalue_view;
DROP VIEW value_view;
DROP VIEW privacy_group_permission_view;
DROP VIEW category_element_view;
DROP VIEW projectreport_view;
DROP VIEW projectreportversion_view;
DROP VIEW projectreportmodel_view;
DROP VIEW richtextelement_view;
DROP VIEW projectreportmodelsection_view;
DROP VIEW orgunitpermission_view;
DROP VIEW partnerindatabase_view;
DROP VIEW phase_model_definition_view;
DROP VIEW reportsubscription_view;
DROP VIEW user_unit_view;
DROP VIEW user_unit_profiles_view;
DROP VIEW profile

DROP VIEW global_permission_view;
DROP VIEW category_type_view;
DROP VIEW locationadminlink_view;
DROP VIEW reminder_list_view;
DROP VIEW reminder_view;
DROP VIEW monitored_point_list_view;
DROP VIEW monitored_point_view;
DROP VIEW file_version_view;
DROP VIEW file_meta_view;
DROP VIEW layout_group_view;
DROP VIEW reportingperiod_view;
DROP VIEW activity_view;
DROP VIEW site_view;
DROP VIEW attributevalue_view;
DROP VIEW attribute_view;
DROP VIEW attributegroupinactivity_view;
DROP VIEW attributegroup_view;
DROP VIEW userpermission_view;
DROP VIEW reporttemplate_view;
DROP VIEW history_token_view;
DROP VIEW amendment_view;
DROP VIEW amendment_history_token_view;
DROP VIEW log_frame_view;
DROP VIEW log_frame_model_view;
DROP VIEW log_frame_group_view;
DROP VIEW log_frame_element_view;
DROP VIEW log_frame_prerequisite_view;
DROP VIEW log_frame_expected_result_view;
DROP VIEW log_frame_specific_objective_view;
DROP VIEW log_frame_activity_view;
DROP VIEW log_frame_indicators_view;
DROP V
-- MySQL dump 10.9
--
-- Host: localhost    Database: stuyspec_master
-- ------------------------------------------------------
-- Server version	4.1.21-standard
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLA
DROP TABLE IF EXISTS `tocat_roles`;
CREATE TABLE `tocat_roles` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(255) NOT NULL, `permissions` text, `position` int(11) NOT NULL DEFAULT '1', PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=6;
LOCK TABLES `tocat_roles` WRITE;
INSERT INTO `tocat_roles` VALUES (1,'TOCAT Administrator','---\n- :create_orders\n- :show_orders\n- :edit_orders\n- :destroy_orders\n- :complete_orders\n- :uncomplete_orders\n- :set_internal_orders\n- :remove_internal_orders\n- :show_commission\n- :update_commission\n- :create_invoices\n- :show_invoices\n- :destroy_invoices\n- :paid_invoices\n- :modify_accepted\n- :modify_resolver\n- :modify_budgets\n- :show_budgets\n- :show_issues\n- :show_aggregated_info\n- :can_request_review\n- :can_review_task\n- :set_expenses\n- :show_transactions\n- :create_transactions\n- :show_tocat_page\n- :has_protected_page\n- :can_see_public_pages\n- :is_admin\n- :show_status_page\n- :mark_alerts_as_checked\n- :show_activity_feed\n-
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Steve Ledridge
-- Create date:		05/21/2010
-- Description:		Check for parameter replacement in JobStep
-- =============================================
DROP TRIGGER dbo.sysjobsteps_Insert_Update 
GO
CREATE TRIGGER dbo.sysjobsteps_Insert_Update 
   ON  dbo.sysjobsteps 
   AFTER INSERT,UPDATE
AS 
BEGIN
	SET NOCOUNT ON;
    -- Insert statements for trigger here
    UPDATE	dbo.sysjobsteps
	SET	output_file_name = [dbaadmin].[dbo].[dbaudf_GetSharePath] ([dbaadmin].[dbo].[dbaudf_getShareUNC] ('SQLjob_logs')) + '\' + REPLACE(sj.name,' ','_') + '.txt'
		,flags = I.flags | 2	-- Append to output file
				 | 4	-- Write Transact-SQL job step output to step history
				-- | 8	-- Write log to table (overwrite existing history)
				-- | 16	-- Write log to table (append to existing history)
    FROM	dbo.sysjobsteps sjs
    JOIN	Inserted I
	ON	sjs.job_id = I.job_id
	AND	sjs.step_id = I.step_id
 
with BB_Auftraege as
	select ncsh.[External Document No_] as extDocNo
			,ncsh.[Order Date] as Datum
			, ncsl.[Line No_] as line_no
			, ncsl.No_ as No_
			,ncsh.[Status] as Status
				from Urban_Nav600_SL.dbo.[Urban-Brand GmbH$eBayNavCSalesHeader] ncsh with (nolock)
	join Urban_Nav600_SL.dbo.[Urban-Brand GmbH$eBayNavCSalesLine] ncsl with (nolock)
			on ncsl.[Document No_] = ncsh.No_
	where Urban_Nav600_SL.dbo.RegExisMatch('.*BB', ncsl.No_, 0) = 1
		and ncsh.[Order Date] > '2015-06-01'
		
),
Auftraege_ohne_BB as
	select ncsh.[External Document No_] as extDocNo
		, ncsl.[Line No_] as line_no
		, ncsl.No_
	from Urban_Nav600_SL.dbo.[Urban-Brand GmbH$eBayNavCSalesHeader] ncsh with (nolock)
	join Urban_Nav600_SL.dbo.[Urban-Brand GmbH$eBayNavCSalesLine] ncsl with (nolock)
			on ncsl.[Document No_] = ncsh.No_
	join BB_Auftraege
		on BB_Auftraege.extDocNo = ncsh.[External Document No_]
	-- 		where Urban_Nav600_SL.dbo.RegExisMatch('.*BB', ncsl.No_, 0) = 1
	where ncsh.[Order Date] >= '2015-06-0
-- get block IDs
SELECT @catBlockId := block_id FROM block WHERE name = 'Navigation_Block_CategoryNav';
SELECT @blockIdSiteNews := block_id FROM block WHERE name = 'Publisher_Block_SiteNews';
SELECT @blockIdRecentHtmlArticles2 := block_id FROM block WHERE name = 'Publisher_Block_RecentHtmlArticles2';
SELECT @blockIdSeagullGear := block_id FROM block WHERE title = 'Seagull Gear';
SELECT @blockIdDonate := block_id FROM block WHERE title = 'Donate';
DELETE FROM `block` WHERE block_id = @catNavBlockId;
DELETE FROM `block` WHERE block_id = @blockIdSiteNews;
DELETE FROM `block` WHERE block_id = @blockIdRecentHtmlArticles2;
DELETE FROM `block` WHERE block_id = @blockIdSeagullGear;
DELETE FROM `block` WHERE block_id = @blockIdDonate;
-- delete assignments
DELETE FROM `block_assignment` WHERE block_id = @catBlockId;
DELETE FROM `block_assignment` WHERE block_id = @blockIdSiteNews;
DELETE FROM `block_assignment` WHERE block_id = @blockIdRecentHtmlArticles2;
DELETE FROM `block_assignment` WHERE b
CREATE view [dbo].[vSISR_MaxEmail]
AS
SELECT     MAX(EmailID) AS EmailID
FROM         dbo.vSISR
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPa

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  

      End
      Begin Tables = 
         Begin Table = "vSISR (dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vSISR_MaxEmail';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo'
USE [VehicleTrackerDb];
GO
IF OBJECT_ID('[dbo].[usp_Message_Select]') IS NOT NULL
BEGIN
    DROP PROC [dbo].[usp_Message_Select]
END
GO
CREATE PROC [dbo].[usp_Message_Select]
    @Id INT
AS
	SET NOCOUNT ON
	SET XACT_ABORT ON
	BEGIN TRAN
	SELECT [Id], [SenderId], [RecieverId], [MessageText], [IsRead]
	FROM   [dbo].[Messages]
	WHERE  ([Id] = @Id OR @Id IS NULL)
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_Message_Insert]') IS NOT NULL
BEGIN
    DROP PROC [dbo].[usp_Message_Insert]
END
GO
CREATE PROC [dbo].[usp_Message_Insert]
    @SenderId int,
    @RecieverId int,
    @MessageText nvarchar(1000),
    @IsRead bit
AS
	SET NOCOUNT ON
	SET XACT_ABORT ON
	BEGIN TRAN
	INSERT INTO [dbo].[Messages] ([SenderId], [RecieverId], [MessageText], [IsRead])
	SELECT @SenderId, @RecieverId, @MessageText, @IsRead
	-- Begin Return Select <- do not remove
	SELECT [Id], [SenderId], [RecieverId], [MessageText], [IsRead]
	FROM   [dbo].[Messages]
	WHERE  [Id] = SCOPE_IDENTITY()
	-- End Return Select <- do not remove
	CO

GO
IF OBJECT_ID('[dbo].[usp_Message_Update]') IS NOT NULL
BEGIN
    DROP PROC [dbo].[usp_Message_Update]
END
GO
CREATE PROC [dbo].[usp_Message_Update]
    @Id int,
    @SenderId int,
    @RecieverId int,
    @MessageText nvarchar(1000),
    @IsRead bit
AS
	SET NOCOUNT ON
	SET XACT_ABORT ON
	BEGIN TRAN
	UPDATE [dbo].[Messages]
	SET    [SenderId] = @SenderId, [RecieverId] = @RecieverId, [MessageText] = @MessageText, [IsRead] = @IsRead
	WHERE  [Id] = @Id
	-- Begin Return Select <- do not remove
	SELECT [Id], [SenderId], [RecieverId], [MessageText], [IsRead]
	FROM   [dbo].[Messages]
	WHERE  [Id] = @Id
	-- End Return Select <- do not remove
	COMMIT
GO
IF OBJECT_ID('[dbo].[usp_Message_Delete]') IS NOT NULL
BEGIN
    DROP PROC [dbo].[usp_Message_Delete]
END
GO
CREATE PROC [dbo].[usp_Message_Delete]
    @Id int
AS
	SET NOCOUNT ON
	SET XACT_ABORT ON
	BEGIN TRAN
	DELETE
	FROM   [dbo].[Messages]
	WHERE  [Id] = @Id
	COMMIT
GO
-----------------------------------------------------------------------
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_HeaderGetAllByIFA]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_HeaderGetAllByIFA]
@param_IFA_ID		NVARCHAR(50),
@param_ClientName	NVARCHAR(50),
@param_Company		NVARCHAR(50),
@param_Status		INT,
@param_StartDate	NVARCHAR(10),
@param_EndDate		NVARCHAR(10)
AS
BEGIN
	SELECT 
		 SH.SwitchID
		,SH.PortfolioID
		,SH.ClientID 
		,SH.Status 
		,SH.Date_Created
		,SH.Created_By
		,SH.SecurityCodeAttempt
		,SH.Description
	FROM NavIntegrationDB.dbo.SwitchHeader SH 
	INNER JOIN NavGlobalDBwwwGUID.dbo.Portfolio P on P.ClientID = SH.ClientID AND P.PortfolioID = SH.PortfolioID
	INNER JOIN NavGlobalDBwwwGUID.dbo.Client C ON C.ClientID = SH.ClientID
	INNER JOIN NavGlobalDBwwwGUID.dbo.ClientWebDetails CWD ON CWD.ClientID = SH.ClientID
	INNER JOIN NavGlobalDBwwwGUID.dbo.Company CO ON CO.CompanyID = P.Company
	WHERE C.IFA_ID = @param_IFA_ID
	AND (UPPER(CW
DROP DATABASE CheapoMail;
CREATE DATABASE CheapoMail;
use CheapoMail;
CREATE TABLE User (
    id INT NOT NULL AUTO_INCREMENT,
    firstname VARCHAR(25) NOT NULL,
    lastname VARCHAR(25) NOT NULL,
    password VARCHAR(15) NOT NULL,
    username VARCHAR(15) NOT NULL,
    PRIMARY KEY(id)
    )ENGINE=MyISAM AUTO_INCREMENT=1000 DEFAULT CHARSET=utf8;
    
CREATE TABLE Message (
    id INT NOT NULL AUTO_INCREMENT,
    body VARCHAR(3000) NOT NULL,
    subject VARCHAR(1000) NOT NULL,
    user_id INT,
    recipient_ids VARCHAR(50) NOT NULL,
    PRIMARY KEY(id)
    )ENGINE=MyISAM AUTO_INCREMENT=2000 DEFAULT CHARSET=utf8;
CREATE TABLE Message_read (
    id INT AUTO_INCREMENT,
    message_id INT,
    reader_id INT,
    date DATETIME NOT NULL,
    PRIMARY KEY(id)
    )ENGINE=MyISAM AUTO_INCREMENT=3000 DEFAULT CHARSET=utf8;
    
INSERT INTO User(firstname, lastname, password,username) VALUES('Toni-Ann','Fitzgerald','Passw0rd','tonitiffy');
INSERT INTO User(firstname, lastname, password,username) VAL

INSERT INTO User(firstname, lastname, password,username) VALUES('Damoya','Jackson','Passw0rd','damoya-jackson');
INSERT INTO Message(body, subject, user_id, recipient_ids) VALUES('Hello, how are you doing?', 'Greetings', 1000, '1001');
INSERT INTO Message_read(message_id,reader_id,date) VALUES(2000,1001, STR_TO_DATE('11/29/2014 4:30:26 PM', '%c/%e/%Y %r'));
INSERT INTO Message(body, subject, user_id, recipient_ids) VALUES('Hello, I am doing fine thank you.', 'Greetings', 1001, '1000');
INSERT INTO Message_read(message_id,reader_id,date) VALUES(2001,1000, STR_TO_DATE('11/29/2014 4:32:26 PM', '%c/%e/%Y %r'));
INSERT INTO Message(body, subject, user_id, recipient_ids) VALUES('Will you be stopping by today?', 'Greetings', 1000, '1001');
INSERT INTO Message_read(message_id,reader_id,date) VALUES(2002,1001, STR_TO_DATE('11/29/2014 4:36:26 PM', '%c/%e/%Y %r'));
INSERT INTO Message(body, subject, user_id, recipient_ids) VALUES('Yes, I will stop by on my way home from work.', 'Greetings', 1001
USE KIPP_NJ
GO
ALTER VIEW REPORTING$transcript AS
WITH roster AS (
  SELECT co.student_number
        ,co.studentid
        ,co.year
        ,co.schoolid
        ,co.exitdate
        ,co.cohort        
        ,co.grade_level
        ,co.highest_achieved
        ,co.enroll_status
        ,co.first_name
        ,co.last_name
        ,co.MIDDLE_NAME        
        ,co.DOB
        ,co.HOME_PHONE
        ,co.STREET
        ,co.CITY
        ,co.STATE
        ,co.ZIP        
        ,ROW_NUMBER() OVER(
           PARTITION BY co.student_number
             ORDER BY co.year DESC) AS rn_curr
  FROM KIPP_NJ..COHORT$identifiers_long#static co WITH(NOLOCK)
  WHERE co.grade_level BETWEEN 5 AND 12
    AND co.rn = 1
 )
,naviance AS (
  SELECT [hs_student_id]      
        ,[email]
        ,[home_phone]
        ,[mobile_phone]
        ,CASE WHEN [street_address] = 'NULL' THEN NULL ELSE street_address END AS street_address
        ,CASE WHEN [street_address2] = 'NULL' THEN NULL ELSE street_address2 E

        ,CASE WHEN [city] = 'NULL' THEN NULL ELSE city END AS city
        ,CASE WHEN [state] = 'NULL' THEN NULL ELSE state END AS state
        ,CASE WHEN [zip] = 'NULL' THEN NULL ELSE zip END AS zip
        ,CASE WHEN [counselor_name] = 'NULL' THEN NULL ELSE counselor_name END AS counselor_name
        ,ROW_NUMBER() OVER(
           PARTITION BY hs_student_id
             ORDER BY hs_student_id) AS rn
  FROM [KIPP_NJ].[dbo].[AUTOLOAD$NAVIANCE_students] WITH(NOLOCK)
 )
,emails AS (
  SELECT dir.displayName
        ,dir.mail
  FROM KIPP_NJ..PEOPLE$AD_users#static dir WITH(NOLOCK)
  WHERE dir.is_active = 1
   AND dir.is_student = 0  
 )
SELECT r.student_number      
      ,r.year
      ,r.schoolid      
      ,r.cohort
      ,CASE 
        WHEN r.cohort <= KIPP_NJ.dbo.fn_Global_Academic_Year() AND r.enroll_status != 2 THEN FORMAT(r.exitdate,'MMMM dd, yyy') 
        ELSE CONCAT('June ', r.cohort)
       END AS grad_date
      ,CONCAT(r.first_name + ' ', r.middle_name + ' ', r.last_name)

      ,FORMAT(r.dob,'MM/dd/yyyy') AS DOB
      ,nav.email AS student_email
      ,COALESCE(nav.home_phone, r.home_phone) AS home_phone
      ,nav.mobile_phone AS student_mobile
      ,CASE
        WHEN nav.street_address IS NULL THEN CONCAT(r.street, CHAR(10), r.city + ', ', r.state + ' ', r.zip)
        WHEN CONCAT(nav.street_address, ' ' + nav.street_address2) + CHAR(10) + nav.city + ', ' + nav.state + ' ' + nav.zip IS NULL
             THEN CONCAT(r.street, CHAR(10), r.city + ', ', r.state + ' ', r.zip)
        ELSE CONCAT(nav.street_address, ' ' + nav.street_address2, CHAR(10), nav.city + ', ', nav.state + ' ', nav.zip)
       END AS full_address      
      ,nav.counselor_name
      ,emails.mail AS counselor_email
      ,gr.academic_year_header_yr_1
      ,gr.academic_year_header_yr_2
      ,gr.academic_year_header_yr_3
      ,gr.academic_year_header_yr_4
      ,gr.academic_year_header_yr_5
      ,gr.academic_year_header_yr_6
      ,gr.course_list_yr_1
      ,gr.course_list_yr_2

INSERT INTO "FieldPermission" (role, model, field, r, w)
VALUES
(6, 'ActionType', 'label', 'true', 'true');
INSERT INTO "FieldPermission" (role, model, field, r, w)
VALUES
(6, 'ActionType', 'desc', 'true', 'true');
INSERT INTO "FieldPermission" (role, model, field, r, w)
VALUES
(6, 'ActionType', 'priority', 'true', 'true');
INSERT INTO "FieldPermission" (role, model, field, r, w)
VALUES
(7, 'ActionType', 'label', 'true', 'false');
INSERT INTO "FieldPermission" (role, model, field, r, w)
VALUES
(7, 'ActionType', 'desc', 'true', 'false');
INSERT INTO "FieldPermission" (role, model, field, r, w)
VALUES
(7, 'ActionType', 'priority', 'true', 'false');
INSERT INTO "FieldPermission" (role, model, field, r, w)
VALUES
(6, 'ActionResult', 'label', 'true', 'true');
INSERT INTO "FieldPermission" (role, model, field, r, w)
VALUES
(7, 'ActionResult', 'label', 'true', 'false');
INSERT INTO "FieldPermission" (role, model, field, r, w)
VALUES
(6, 'DeferTime', 'time', 'true', 'true');
INSERT INTO "Field
﻿/*******************************************************************************
  Fan Database Data - v1.0
  DB Server: SqlServer, SqlAzure
  Author: Ray Fan
********************************************************************************/
/* App ---------------------------------------------------------------------- */
INSERT INTO [dbo].[Fan_App] VALUES('Blog', 'b', 1, 2, 'Ray Fan', '1.0', 'A blog app that allows you to post articles, photo galleries etc.')
GO
INSERT INTO [dbo].[Fan_App] VALUES('Calculator', NULL, 0, 0, 'DrABELL', '5.0', 'A calculator app')
GO
/* Nav ---------------------------------------------------------------------- */
INSERT INTO [dbo].[Fan_Nav] VALUES('Technology and Programming', 'tech', 'A tech and programming blog',  GETUTCDATE(), 1, 1)
GO
INSERT INTO [dbo].[Fan_Nav] VALUES('Living', 'living', 'My blog on daily life',  GETUTCDATE(), 1, 1)
GO
/* Frontpage ---------------------------------------------------------------- */
INSERT INTO [dbo].[Fan_Obj] ( [NavId]

VALUES  ( 1, -- SITE_NAVID
          'site-frontpage', -- Site_FrontPage_ObjKey
          3, -- Format Html
N'<div class="row">
  <div class="span6">
    <h3>
      Blogs    
    </h3>
    <a href="/tech" class="tile" style="background-color: #F06421">
      <span class="app-label">
        Technology and Programming      
      </span>
    </a>
    <a href="/living" class="tile" style="background-color: purple">
      <span class="app-label">
        Living      
      </span>
    </a>
  </div>
</div>
<br />
<div class="row">
  <div class="span6">
    <ul style="list-style:square">
      <li>
        Login with "admin", "admin123"
      </li>
      <li>
        Change username/password and/or create new user in Admin Panel
      </li>
      <li>
        Come back edit this page and remove this content
      </li>
      <li>
        Nav an app here
      </li>
    </ul>
  </div>
</div>
'  -- Data
GO
          
/* User -------------------------------------------------------------------

INSERT INTO [dbo].[Fan_User] ([UserName], [Email], [AccountStatus], [DisplayName], [Language], [TZone], [Bio]) 
VALUES(N'anonymous',N'anonymous@notset.com', 1, N'anonymous', 0, N'Pacific Standard Time', N'The anonymous user.')
GO
INSERT INTO [dbo].[Fan_User] ([UserName], [Email], [AccountStatus], [DisplayName], [Language], [TZone], [Bio]) 
VALUES (N'admin', N'admin@notset.com', 1, N'admin', 0, N'Pacific Standard Time', N'The admin user.');
GO
-- NOTE: the [webpages_Membership] does not have IDENTITY on the PK
INSERT INTO [dbo].[webpages_Membership] 
VALUES (0, GETUTCDATE(),NULL,1,NULL,0,N'',GETUTCDATE(),N'',NULL,NULL);
GO
INSERT INTO [dbo].[webpages_Membership] 
VALUES (1, GETUTCDATE(),NULL,1,NULL,0,N'AEFlg/BdxOi2ncQXEXrsnDimqRsMVapW6SYYGoq6PWi+/OPuwjg0mRLXVJykwL3GuA==',GETUTCDATE(),N'',NULL,NULL);
GO
/* Post --------------------------------------------------------------------- */
INSERT INTO [dbo].[Blog_Post]
     VALUES
           (NEWID() --<PostGuidId, uniqueidentifier,>
         
﻿drop table new_properties_final;
create table new_properties_final as (
	select 
		np.id as id,
		regexp_replace(regexp_replace(regexp_replace(lower(concat(np.new_unit_number, '-', np.new_street_number, '-', np.new_street_direction, '-', np.new_street_name, '-', c.name, '-', uid)), ' ', '-', 'g'), '--', '-', 'g'), '--', '-', 'g') as slug,
		regexp_replace(regexp_replace(regexp_replace(lower(concat(np.new_street_number, '-', np.new_street_direction, '-', np.new_street_name, '-', c.name)), ' ', '-', 'g'), '--', '-', 'g'), '--', '-', 'g') as parcel_slug,
		regexp_replace(regexp_replace(regexp_replace(regexp_replace(lower(concat(c.name, '/', np.new_street_direction, '-', np.new_street_name)), ' ', '-', 'g'), '--', '-', 'g'), '--', '-', 'g'), '/-', '/') as street_slug,
		lower(concat(c.name, '/', np.postal_code)) as postal_code_slug,
		np.new_street_number as street_number,
		np.new_street_name as street_name,
		np.new_street_direction as street_direction,
		np.new_unit_number as unit_numb

		np.city_id as city_id,
		np.postal_code as postal_code,
		regexp_replace(concat(np.new_unit_number, '-', np.new_street_number, ' ', np.new_street_name, ', ', c.name, ', ', p.code, ' ', postal_code, ', ', co.name), '  ', ' ', 'g') as formatted_address,
		np.latitude as latitude,
		np.longitude as longitude,
		np.geocode_source as geocode_source,
		np.geocode_type as geocode_type,
		np.geocode_status as geocode_status,
		np.new_legal_type as legal_type,
		np.new_strata_fee as strata_fee,
		np.new_property_tax as property_tax,
		np.new_year_built as year_built,
		np.new_floor_area as floor_area,
		np.new_bedroom as bedroom,
		np.new_bathroom as bathroom,
		np.new_assessed_type as assessed_type,
		np.new_lot_size as lot_size,
		np.created_at as created_at,
		np.updated_at as updated_at,
		np.new_den as den,
		np.new_normalized_type as normalized_type,
		np.parcel as parcel,
		np.published as published,
		np.new_lot_frontage as lot_frontage,
		np.new_lot_depth as lot_depth,
		np.use_poin
\c postgres
SELECT bdr.bdr_replicate_ddl_command($$
        CREATE TABLE public.test_read_only (
                data text
        );
$$);
-- set all nodes ro
SELECT bdr.bdr_node_set_read_only(node_name, true) FROM bdr.bdr_nodes;
SELECT pg_xlog_wait_remote_apply(pg_current_xlog_location(), pid) FROM pg_stat_replication;
-- errors
CREATE TABLE readonly_test_shoulderror(a int);
SELECT bdr.bdr_replicate_ddl_command($$
        CREATE TABLE public.readonly_test_shoulderror (
                data text
        );
$$);
INSERT INTO public.test_read_only VALUES('foo');
UPDATE public.test_read_only SET data = 'foo';
DELETE FROM public.test_read_only;
WITH cte AS (
	INSERT INTO public.test_read_only VALUES('foo') RETURNING *
SELECT * FROM cte;
-- success
CREATE TEMP TABLE test_read_only_temp (
        data text
);
INSERT INTO test_read_only_temp VALUES('foo');
UPDATE test_read_only_temp SET data = 'foo';
DELETE FROM test_read_only_temp;
WITH cte AS (
	INSERT INTO test_read_only_temp VALUES('foo') 
﻿CREATE TABLE [Production].[ProductModel] (
    [ProductModelID]     INT                                                            IDENTITY (1, 1) NOT NULL,
    [Name]               [dbo].[Name]                                                   NOT NULL,
    [CatalogDescription] XML(CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,
    [Instructions]       XML(CONTENT [Production].[ManuInstructionsSchemaCollection])   NULL,
    [rowguid]            UNIQUEIDENTIFIER                                               CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (newid()) ROWGUIDCOL NOT NULL,
    [ModifiedDate]       DATETIME                                                       CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED ([ProductModelID] ASC)
);
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name]
    ON [Production].[ProductModel]([Name] ASC);
GO
CREATE UNIQUE NONCLUSTERED

    ON [Production].[ProductModel]([rowguid] ASC);
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription]
    ON [Production].[ProductModel]([CatalogDescription])
    WITH (PAD_INDEX = OFF);
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_Instructions]
    ON [Production].[ProductModel]([Instructions])
    WITH (PAD_INDEX = OFF);
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unique nonclustered index.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'INDEX', @level2name = N'AK_ProductModel_Name';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unique nonclustered index. Used to support replication samples.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'INDEX', @level2name = N'AK_ProductModel_rowguid';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 

GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary XML index.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'INDEX', @level2name = N'PXML_ProductModel_Instructions';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default constraint value of GETDATE()', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'CONSTRAINT', @level2name = N'DF_ProductModel_ModifiedDate';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default constraint value of NEWID()', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'CONSTRAINT', @level2name = N'DF_ProductModel_rowguid';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key (clustered) constraint', @level0type = N'SCHEMA', @le
INSERT INTO widgetcatalog (code, titles, parameters, plugincode, parenttypecode, defaultconfig, locked) VALUES ('jpfacetnav_results', '<?xml version="1.0" encoding="UTF-8"?>
<properties>
<property key="en">Search Result</property>
<property key="it">Risultati Ricerca</property>
</properties>', '<config>
	<parameter name="contentTypesFilter">Content Type (optional)</parameter>
	<action name="facetNavResultConfig"/>
</config>', 'jpfacetnav', NULL, NULL, 1);
INSERT INTO widgetcatalog (code, titles, parameters, plugincode, parenttypecode, defaultconfig, locked) VALUES ('jpfacetnav_tree', '<?xml version="1.0" encoding="UTF-8"?>
<properties>
<property key="en">Facets Tree</property>
<property key="it">Albero delle faccette</property>
</properties>', '<config>
	<parameter name="facetRootNodes">Facet Category Root</parameter>
	<parameter name="contentTypesFilter">Content Type (optional)</parameter>
	<action name="facetNavTreeConfig"/>
</config>', 'jpfacetnav', NULL, NULL, 1);
INSERT INTO local
  --Contact View
SELECT dropIfExists('VIEW', 'contact', 'api');
  CREATE OR REPLACE VIEW api.contact AS
  SELECT 
    cntct_number::varchar AS contact_number,
    cntct_honorific AS honorific,
    cntct_first_name AS first,
    cntct_middle AS middle,
    cntct_last_name AS last,
    cntct_suffix AS suffix,
    cntct_initials AS initials,
    crmacct_number AS crm_account,
    cntct_active AS active,
    cntct_title AS job_title,
    cntct_phone AS voice,
    cntct_phone2 AS alternate,
    cntct_fax AS fax,
    cntct_email AS email,
    cntct_webaddr AS web,
    ''::TEXT AS contact_change, 
    addr_number AS address_number,
    addr_line1 AS address1,
    addr_line2 AS address2,
    addr_line3 AS address3,
    addr_city AS city,
    addr_state AS state,
    addr_postalcode AS postal_code,
    addr_country AS country,
    cntct_notes AS notes, 
    ''::TEXT AS address_change
  FROM
    cntct() 
      LEFT OUTER JOIN addr ON (cntct_addr_id=addr_id)
      LEFT OUTER JOIN crmacct ON (cntc

GRANT ALL ON TABLE api.contact TO xtrole;
COMMENT ON VIEW api.contact IS 'Contact';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.contact DO INSTEAD
SELECT saveCntct(
	  NULL,
          NEW.contact_number,
          getCrmAcctid(NEW.crm_account),
          saveAddr(
            getAddrId(NEW.address_number),
            NEW.address_number,
            NEW.address1,
            NEW.address2,
            NEW.address3,
            NEW.city,
            NEW.state,
            NEW.postal_code,
            NEW.country,
            NEW.address_change),
          NEW.honorific,
          NEW.first,
          NEW.middle,
          NEW.last,
          NEW.suffix,
          NEW.initials,
          COALESCE(NEW.active,TRUE),
          NEW.voice,
          NEW.alternate,
          NEW.fax,
          NEW.email,
          NEW.web,
          NEW.notes,
          NEW.job_title,
          NEW.contact_change
          );
CREATE OR REPLACE RULE "_UPDATE" AS
    ON UPDATE TO api.contact
﻿CREATE VIEW dbo.v_CurrentYearSeme
AS
SELECT          CurrentYearSeme, CurrentYear, CurrentSeme, Name
FROM              dbo.v_CurrentYearSeme_ican5
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[13] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      

      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin 

      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "v_CurrentYearSeme_ican5"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 140
               Right = 225
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 3900
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 3360
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
  
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `creature_loot_template`;
CREATE TABLE `creature_loot_template` (
  `entry` mediumint(8) unsigned NOT NULL DEFAULT '0',
  `item` mediumint(8) unsigned NOT NULL DEFAULT '0',
  `ChanceOrQuestChance` float NOT NULL DEFAULT '100',
  `lootmode` smallint(5) unsigned NOT NULL DEFAULT '1',
  `groupid` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `mincountOrRef` mediumint(9) NOT NULL DEFAULT 
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 05. März 2002 um 11:35
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_vers2`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `HeadNav`
CREATE TABLE HeadNav (
  ID int(11) NOT NULL default '0',
  CreatedBy int(11) NOT NULL default '0',
  CreatedDateTime float(16,4) NOT NULL default '0.0000',
  ChangedBy int(11) NOT NULL default '0',
  ChangedDateTime float(16,4) NOT NULL default '0.0000',
  active int(1) NOT NULL default '0',
  WordlistID int(11) NOT NULL default '0',
  TextID int(11) NOT NULL default '0',
  NameDE varchar(255) NOT NULL default '',
  Name_en varchar(255) NOT NULL default '',
  Name_es varchar(255) NOT NULL default '',
  Name_fr varchar(255) NOT NULL default '',
  Name_it varchar(255) NOT NULL default '',
  GruppenID int(1) NOT NULL default '0',

USE [DW_Staging]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [orion].[utl_read_type](
	[read_type_id] [numeric](18, 0) NOT NULL,
	[read_type_code] [varchar](10) NULL,
	[read_type_desc] [varchar](100) NULL,
	[active] [char](1) NULL,
	[insert_datetime] [datetime] NULL,
	[insert_user] [varchar](20) NULL,
	[insert_process] [varchar](20) NULL,
	[update_datetime] [datetime] NULL,
	[update_user] [varchar](20) NULL,
	[update_process] [varchar](20) NULL,
	[Meta_Insert_TaskExecutionInstanceId] [int] NULL,
	[Meta_LatestUpdate_TaskExecutionInstanceId] [int] NULL,
 CONSTRAINT [pk_read_type_idx] PRIMARY KEY CLUSTERED 
	[read_type_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [DATA]
) ON [DATA]
GO
SET ANSI_PADDING OFF
GO
CREATE NONCLUSTERED INDEX [IX_orion_utl_read_type_Meta_LatestUpdateId] ON [orion].[utl_read_type]
	[Meta_LatestUpdate_TaskExecutionInstanceId] ASC
)WITH (
/* 
	Date: 18 December 2011
	Migration: 50
	Description:
*/
/*==========================================================================*/
create table ca_commerce_communications_read_log
  log_id int(10) unsigned not null auto_increment,
  communication_id int unsigned not null,
  read_on int unsigned null,
  read_by_user_id int unsigned null,
  
  primary key (log_id),
   constraint fk_ca_commerce_communications_read_log_communication_id foreign key (communication_id)
      references ca_commerce_communications (communication_id) on delete restrict on update restrict,
      
   constraint ca_commerce_communications_read_log_read_by_user_id foreign key (read_by_user_id)
      references ca_users (user_id) on delete restrict on update restrict
) engine=innodb CHARACTER SET utf8 COLLATE utf8_general_ci;
create index i_communication_id on ca_commerce_communications_read_log(communication_id);
create index i_read_on on ca_commerce_communications_read_log(read_on);
create index i_read_by_u

/*==========================================================================*/
ALTER TABLE ca_commerce_communications ADD COLUMN read_on int null;
create index i_read_on on ca_commerce_communications(read_on);
ALTER TABLE ca_commerce_communications ADD COLUMN from_user_id int null references ca_users(user_id);
create index i_from_user_id on ca_commerce_communications(from_user_id);
ALTER TABLE ca_commerce_communications ADD COLUMN set_snapshot longtext not null;
ALTER TABLE ca_commerce_transactions ADD COLUMN set_id int unsigned null references ca_sets(set_id);
create index i_set_id on ca_commerce_transactions(set_id);
ALTER TABLE ca_commerce_communications DROP FOREIGN KEY fk_ca_commerce_communications_set_id;
ALTER TABLE ca_commerce_communications DROP COLUMN set_id;
/*==========================================================================*/
create index i_rank on ca_object_representations(rank);
/* -------------------------------------------------------------------------------- 
--------------------------------------------------------
--  DDL for Table CUSTOMER
--------------------------------------------------------
  CREATE TABLE "WWS"."CUSTOMER" 
   (	"CUSTOMER_ID" NUMBER, 
	"LOCAL_CUSTOMER_CODE" VARCHAR2(50 CHAR), 
	"SOURCE_TERRITORY_CODE" VARCHAR2(2 CHAR), 
	"TERRITORY_ID" NUMBER, 
	"ACCOUNT_CODE" VARCHAR2(30 CHAR), 
	"ACCOUNT_NAME" VARCHAR2(500 CHAR), 
	"ACCOUNT_SALES_CHANNEL" VARCHAR2(10 CHAR), 
	"HEAD_OFFICE_CODE" VARCHAR2(30 CHAR), 
	"HEAD_OFFICE_NAME" VARCHAR2(500 CHAR), 
	"PARENT_CODE" VARCHAR2(30 CHAR), 
	"PARENT_NAME" VARCHAR2(500 CHAR), 
	"GLOBAL_CUSTOMER_CODE" VARCHAR2(50 CHAR), 
	"GLOBAL_CUSTOMER_NAME" VARCHAR2(500 CHAR), 
	"CUSTOMER_CLASS" VARCHAR2(50 CHAR), 
	"CUSTOMER_TYPE" VARCHAR2(50 CHAR), 
	"LAST_REPORTED_DATE_DIG" DATE, 
	"LAST_REPORTED_DATE_PHYS" DATE, 
	"LAST_REPORTED_DATE_FLSH" DATE, 
	"WWS_CREATE_DATE" DATE, 
	"CUSTOM_ACCOUNT_NAME" VARCHAR2(500 BYTE), 
	"CUST_GRP1" VARCHAR2(100 BYTE), 
	"CUST_GRP2" VARCHAR2(100 BYTE), 
	"INTL_GRP1" 

	"LAST_SYNC_ON" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "WWS_DATA" 
  PARALLEL ;
--------------------------------------------------------
--  DDL for Index CUSTOMER_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "WWS"."CUSTOMER_PK" ON "WWS"."CUSTOMER" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "WWS_INDX" 
  PARALLEL ;
--------------------------------------------------------
--  Constraints for Table CUSTOMER
--------------------------------------------------------
  ALT
USE KIPP_NJ
GO
ALTER VIEW KTC$match_data AS
WITH act_subj AS
    (SELECT s.id AS studentid,
            a.academic_year,
            a.administration_round,
            a.administered_at,
            a.subject_area,
            a.scale_score
     FROM KIPP_NJ..ACT$test_prep_scores a
     JOIN KIPP_NJ..STUDENTS s WITH (NOLOCK)
       ON a.student_number = s.student_number
     WHERE rn_dupe = 1
       AND subject_area = 'Composite'
       AND scale_score IS NOT NULL
     ),
    best_practice_act AS
   (SELECT studentid,
           a.subject_area,
           MAX(scale_score) AS best_act
    FROM act_subj a
    GROUP BY a.studentid,
             a.subject_area
    ),
    nav_act AS
    (SELECT a.hs_student_id,
           a.composite
     FROM KIPP_NJ..AUTOLOAD$NAVIANCE_3_act_scores a
     WHERE a.composite > 0
       AND a.hs_student_id IS NOT NULL
     ),
     nav_sat AS
    (SELECT s.hs_student_id,
            CAST(s.math + s.verbal AS NUMERIC) AS sat_1600
     FROM KIPP_NJ..AUTOLOAD$NA

     WHERE s.math + s.verbal > 0
       AND hs_student_id IS NOT NULL
     ),
     nav_sat_equiv AS
     (SELECT hs_student_id, 
             CASE WHEN sat_1600 < 530 THEN 10 ELSE concord.act END AS act_equiv
      FROM nav_sat
      LEFT OUTER JOIN KIPP_NJ..KTC$act_sat_concordance#dense concord
        ON nav_sat.sat_1600 = concord.SAT
     ),
     best_naviance_act AS
     (SELECT hs_student_id AS studentid,
             'Composite' AS subject_area,
             MAX(composite) AS best_act
      FROM
           (SELECT *
            FROM nav_act
            UNION 
            SELECT *
            FROM nav_sat_equiv
            ) sub
      GROUP BY hs_student_id
     ),
   best_any_act AS
  (SELECT studentid,
          'Composite' AS subject_area,
          MAX(best_act) AS best_any_act
   FROM
        (SELECT *
         FROM best_practice_act
         UNION ALL
         SELECT *
         FROM best_naviance_act
         ) sub
   GROUP BY studentid
  ),
   roster AS
  (SELECT c.student

          c.lastfirst,
          c.grade_level AS cur_grade,
          c.cohort,
          CASE 
            WHEN ms.school_name IS NULL THEN 'New to NCA'
            ELSE ms.school_name
          END AS ms
   FROM KIPP_NJ..COHORT$comprehensive_long#static c
   LEFT OUTER JOIN KIPP_NJ..COHORT$middle_school_attended ms
     ON c.studentid = ms.studentid
   WHERE c.schoolid = 73253
     AND c.year = KIPP_NJ.dbo.fn_Global_Academic_Year()
     AND c.grade_level < 99
   )
SELECT TOP 100000000 roster.*,
       s.student_number,
       ktc.contact_id,
       p.best_act AS best_practice_act,
       n.best_act AS best_naviance_act,
       a.best_any_act,
       g.cumulative_Y1_gpa AS gpa
FROM roster
LEFT OUTER JOIN best_practice_act p
  ON roster.studentid = p.studentid
LEFT OUTER JOIN best_naviance_act n
  ON roster.studentid = n.studentid
LEFT OUTER JOIN best_any_act a
  ON roster.studentid = a.studentid
LEFT OUTER JOIN KIPP_NJ..GRADES$GPA_cumulative g
  ON roster.studentid = g.studentid
 AN
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_ModelGroupInsertUpdate]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_ModelGroupInsertUpdate]
 @param_IFA_ID INT,
 @param_ModelGroupID NVARCHAR(50),
 @param_ModelGroupName NVARCHAR(50)
 AS
 BEGIN
	 IF NOT EXISTS(SELECT * FROM NavIntegrationDB.dbo.ModelGroup WHERE ModelGroupID = @param_ModelGroupID AND IFA_ID = @param_IFA_ID) 
		BEGIN
			INSERT INTO NavIntegrationDB.dbo.ModelGroup (ModelGroupID, ModelGroupName, IFA_ID)
			VALUES (@param_ModelGroupID, @param_ModelGroupName, @param_IFA_ID)
		END
	 ELSE
		BEGIN
			IF (UPPER(RTRIM(LTRIM(@param_ModelGroupName))) <> (SELECT UPPER(RTRIM(LTRIM(ModelGroupName))) FROM NavIntegrationDB.dbo.ModelGroup WHERE ModelGroupID = @param_ModelGroupID AND IFA_ID = @param_IFA_ID))
			BEGIN
				UPDATE NavIntegrationDB.dbo.ModelGroup
					SET ModelGroupName = @param_ModelGroupName
				WHERE ModelGroupID = @param
create database oozie default character set utf8;
create database hive default character set utf8;
create database cm default character set utf8;
create database rman default character set utf8;
create database nav default character set utf8;
create database nava default character set utf8;
create database navm default character set utf8;
create database amon default character set utf8;
create database hue default character set utf8;
grant all privileges on hue.* to 'hue'@'localhost' identified by 'hue';
grant all privileges on hue.* to 'hue'@'%' identified by 'hue';
grant all privileges on amon.* to 'amon'@'localhost' identified by 'amon';
grant all privileges on amon.* to 'amon'@'%' identified by 'amon';
grant all privileges on nava.* to 'nava'@'localhost' identified by 'nava';
grant all privileges on nava.* to 'nava'@'%' identified by 'nava';
grant all privileges on oozie.* to 'oozie'@'localhost' identified by 'oozie';
grant all privileges on hive.* to 'hive'@'localhost' identified 
----------------------!!!!!!!!
--- add old2 for files
alter table files add old2 nvarchar(50)
update files set old = replace(old,'ll','l') where old like 'll%'
update files set old = REPLACE(old,'l-','l') where old like 'l-%'
----------------------
select old,* from dbo.files where old<>'' ---- 83323
---------------------------------------------------
select old,* from files where 
	id not in (select id from files where old like 'z%')
and id not in (select id from files where old like 'l%')	
and id not in (select id from files where old like '2%')	
and id not in (select id from files where old like 'g%')	
and id not in (select id from files where old like 'hk%')	
and id not in (select id from files where old like 'xy%')	
and id not in (select id from files where old like 'xb%')	
and old<>''
-------------------------------------------------  15 (05,08,10,31,ce,b,.z,无,马巍)
select old,* from files where old like 'z%' ---- 55934
select old,* from files where old like 'l%' ---- 16135 --- 201

select old,* from files where old like '2%' ---- 2016 ---- 2011及以后
select old,* from files where old like 'g%' ---- 881
select old,* from files where old like 'hk%' ---- 556
select old,* from files where old like 'xy%' ---- 2546
select old,* from files where old like 'xb%' ---- 5240
---------------------------------------------------- 83308
--====================================================================================
/*
按分类加前缀
注意需要处理数字补位以及L,2为同一分类及顺序关系
*/
--- pre proc
update files set old=REPLACE(old,' ','') --- remove blanks
update files set old=REPLACE(old,'、','') --- remove '、'
---------------------- Z:55934
select old,* from files where old like 'z%' ---- 55934
select old, left(old,2),
	left(SUBSTRING(old,3,len(old)-2),5),
	replace(space(5-len( left(SUBSTRING(old,3,len(old)-2),5) )),' ','0')+left(SUBSTRING(old,3,len(old)-2),5) 
from files where old like 'z%'
---------------------------------------- L:16135 L:2010及以前 L10(L1):3388+ L0:12268+ other:29  = 15685 少450个?
select 

select old,* from files where old like 'l%' and LEN(old)=8 ---- 16135 (8位LL,L-;7:15040; 6:1074;5...)
---update files set old = replace(old,'ll','l') where old like 'll%'
---update files set old = REPLACE(old,'l-','l') where old like 'l-%'
select max(LEN(old)),MIN(len(old)) from files where old like 'l%'  and LEN(old)>4 --8,3
select old, left(old,1),
	left(SUBSTRING(old,2,len(old)-1),8),
	replace(space(8-len( left(SUBSTRING(old,2,len(old)-1),8) )),' ','0')+ left(SUBSTRING(old,2,len(old)-1),8) 
from files where old like 'l%'
------------------------------------------ 2:2016
select old,* from files where old like '2%' and LEN(old)=5 ---- 2016 ---- 9:1;8:2013;7:1;5:1(垃圾) (2011及以后:2015; '22222':1;)
select MAX(len(old)),MIN(len(old)) from files where old like '2%' ---9,5 !!!!!
select old, left(old,1),
	left(SUBSTRING(old,2,len(old)-1),8),
	replace(space(8-len( left(SUBSTRING(old,2,len(old)-1),8) )),' ','0')+ left(SUBSTRING(old,2,len(old)-1),8) 
from files where old like '2%' and LEN(old)=5

create table COST_DETAIL_NEW 
 (corp              number(4,0), 
  rev_center        varchar2(8 byte), 
  charge_code       varchar2(8 byte), 
  provider_type     varchar2(1 byte), 
  cpt_modifier      varchar2(4 byte), 
  cost_component    varchar2(35 byte), 
  rvu               number(20,8), 
  total_cost        number(20,8), 
  year              number(4,0), 
  quarter           number(1,0)
  );
create bitmap index cost_detail_new_charge_code on cost_detail_new (charge_code);
create bitmap index cost_detail_new_corp on cost_detail_new (corp);
create bitmap index cost_detail_new_cost_comp on cost_detail_new (cost_component);
create bitmap index cost_detail_new_modifier on cost_detail_new (cpt_modifier);
create bitmap index cost_detail_new_prov_type on cost_detail_new (provider_type);
create bitmap index cost_detail_new_quarter on cost_detail_new (quarter) ;
create bitmap index cost_detail_new_rev_ctr on cost_detail_new (rev_center);
create bitmap index cost_detail_new_year on cost_det
-- =============================================
-- Author:		Shalini Nair
-- Create date: 10/07/14
-- Description:	Gets the similar car models(Alternate models) based on the ModelId passed 
-- Modified By :Shalini Nair
-- Description : Added order by clause and added columns ModelSequence,SortCol,IsFeatured,featuredModelId 
--[dbo].[GetSimilarCarModels] 571
-- =============================================
CREATE PROCEDURE [dbo].[GetSimilarCarModels]
	-- Add the parameters for the stored procedure here
	@ModelId INT
AS
DECLARE @ModelIds VARCHAR(max)
,@Model varchar(30)
,@SpotlightUrl varchar(max)
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT @ModelIds = SCM.SimilarModels
	FROM SimilarCarModels SCM WITH (NOLOCK)
	WHERE SCM.ModelId = @ModelId
	PRINT @ModelIds
	--Select Top 1 @Model=CVF.CarModelId 
	--FROM CompareFeaturedCar Cf WITH (NOLOCK)
	--JOIN  CarVersions AS CVF WITH (NOLOCK) ON CF.VersionId = CVF.ID

	--                          AND CVF.ID = CF.FeaturedVersionId 
	-- JOIN  fnSplitCSV(@ModelIds) MN ON  CVF.CarModelId=MN.ListMember 
	-- WHERE 	CF.IsActive = 1 
	-- AND CF.IsResearch = 1 
	Select Top 1 @Model=cvs.CarModelId ,@SpotlightUrl= Cf.SpotlightUrl
	FROM CompareFeaturedCar Cf WITH (NOLOCK)
	JOIN  CarVersions AS CVF WITH (NOLOCK) ON CF.VersionId = CVF.ID 
	                          join carversions cvs on cvs.ID = CF.FeaturedVersionId 
	 --JOIN  fnSplitCSV(@ModelId) MN ON  CVF.CarModelId=MN.ListMember 
	 WHERE cvf.CarModelId= @ModelId and	CF.IsActive = 1 
	 AND CF.IsResearch = 1 
	 print @Model
	SET @ModelIds= ISNULL(@Model,0)+ ','+ ISNULL(@ModelIds,0)
	print @ModelIds
	-- Insert statements for procedure here
	SELECT
	TOP 3 
	      CMA.NAME AS Make
		,CMO.ID AS ModelId
		,CMO.NAME AS Model
		,CMO.MaskingName
		,CMO.SmallPic
		,CMO.HostURL
		,CMO.MinPrice
		,CMO.MaxPrice
		,CMO.ReviewRate
		,CMO.ReviewCount
		,CMO.LargePic
		,CMO.CarVersionID_Top
		,M.id  ModelSequence		-- modifi

		,-1 AS SortCol, 0 as IsFeatured --modified by shalini
		,@Model as featuredModelId		--modified by shalini
		,@SpotlightUrl as spotLightUrl 
	FROM CarMakes CMA WITH(NOLOCK)
	 JOIN CarModels CMO WITH(NOLOCK) ON CMO.CarMakeId = CMA.ID
	 JOIN CarVersions CV WITH(NOLOCK) ON CMO.ID = CV.CarModelId
	  JOIN fnSplitCSVValuesWithIdentity(@ModelIds) M ON CMO.ID = M.ListMember
	WHERE 
		CV.New = 1
		AND CV.IsDeleted = 0
	GROUP BY CMA.NAME
		,CMO.ID
		,CMO.NAME
		,CMO.SmallPic
		,CMO.HostURL
		,CMO.MinPrice
		,CMO.MaxPrice
		,CMO.MaskingName
		,CMO.ReviewRate
		,CMO.ReviewCount
		,CMO.LargePic
		,CMO.CarVersionID_Top
		,M.id
		order by m.id 
	-- Select Cf.SpotlightUrl				-- added by shalini
	--FROM CompareFeaturedCar Cf WITH (NOLOCK)
	--JOIN  CarVersions AS CVF WITH (NOLOCK) ON CF.VersionId = CVF.ID 
	--                          AND CVF.ID = CF.FeaturedVersionId 
	-- JOIN  fnSplitCSV(@ModelIds) MN ON  CVF.CarModelId=MN.ListMember 
	-- WHERE 	CF.IsActive = 1 
	-- AND CF.IsResearch = 1
	-- Select 
IF OBJECT_ID('dbo.wsp_newCCTranInWaiting') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newCCTranInWaiting
    IF OBJECT_ID('dbo.wsp_newCCTranInWaiting') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newCCTranInWaiting >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newCCTranInWaiting >>>'
END
go
/******************************************************************************
**
** CREATION:
**   Author:  TK Chan
**   Date:    May 16 2005
**   Description:  Insert a row to CreditCardTransaction to mark a credit card transaction which has been authorized
**                 Copy of wsp_newCCTran
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
******************************************************************************/
CREATE PROCEDURE dbo.wsp_newCCTranInWaiting
  @xactionId  numeric(12,0)
AS
  DECLARE @rowcount INT
  DECLARE @error    INT
  DECLARE @return	INT
  DECLARE @dateGMT	DATETIME
  EXEC @return = dbo.wsp_GetDateGMT @dateGMT OUTPUT
 
CREATE OR REPLACE VIEW rgu_measures_mv_ch_of_service
AS 
WITH mv_ch_of_service
AS 
SELECT 
-- This view derives measures for 'Moves' and 'Change of Service'
-- For measures that are RGU-adds values of the new contract are selected, 
-- for measures that are RGU-drops values of the old contract are selected. 
       v_old.auftrag__no            auftrag__no_old
,      v_new.auftrag__no            auftrag__no_new       
,      v_old.service_elem__no       service_elem__no_old
,      v_new.service_elem__no       service_elem__no_new
,      v_old.ext_service_id         ext_service_id_old
,      v_new.ext_service_id         ext_service_id_new
,      v_old.cust_no                cust_no_old
,      v_new.cust_no                cust_no_new
,      v_old.oe__no                 oe__no_old
,      v_new.oe__no                 oe__no_new
,      v_old.is_price_0             is_price_0_old
,      v_new.is_price_0             is_price_0_new
,      v_old.con_contract_id        con_contract_id_old
,      

,      v_new.contract_updowngrade   -- only relevant for new
,      v_old.charge_from            charge_from_old
,      v_new.charge_from            charge_from_new
,      v_new.charge_to              charge_to_new
,      v_old.charge_to              charge_to_old
,      v_old.charge_from_rep        charge_from_rep_old
,      v_new.charge_from_rep        charge_from_rep_new
,      v_new.charge_to_rep          charge_to_rep_new
,      v_old.charge_to_rep          charge_to_rep_old
,      CASE
          WHEN v_new.contract_updowngrade = 'Übersiedlung'
           AND v_old.oe__no = v_new.oe__no
          THEN 1
          ELSE 0
       END     is_move
,      CASE       
          WHEN v_new.contract_updowngrade IN
                  ('Übernahme', 'Upgrade', 'Downgrade')
           AND v_new.product_group = v_old.product_group
          THEN 1
          ELSE 0
       END     is_change_of_service_no_move
,      CASE       
          WHEN v_new.contract_updowngrade = 'Übersiedlung'
          

           AND v_old.oe__no != v_new.oe__no          
           AND v_new.product_group = v_old.product_group
          THEN 1
          ELSE 0
       END     is_change_of_service_move
FROM   rgu_measures_base    v_old
,      rgu_measures_base    v_new
WHERE  v_old.cust_no = v_new.cust_no
AND    v_old.is_drop_plain = 1
AND    v_new.is_add_plain  = 1
AND    v_new.contract_updowngrade IN 
            ( 'Übernahme'
            , 'Upgrade'
            , 'Übersiedlung'
            , 'Downgrade' )
AND    EXISTS
          (SELECT 'Hit'
           FROM   contractupdowngrade  cud
           WHERE  cud.contract_id_old = v_old.con_contract_id
           AND    cud.contract_id_new = v_new.con_contract_id
          )
-- begin main query
SELECT 1                            is_add -- new
,      auftrag__no_new              auftrag__no
,      service_elem__no_new         service_elem__no
,      ext_service_id_new           ext_service_id
,      cust_no_new                  cust_no
,      oe__no_new 
-- Copyright (c) 2001-2014 Genome Research Ltd.
--
-- Authors: David Harper
--          Ed Zuiderwijk
--          Kate Taylor
--
-- This file is part of Arcturus.
--
-- Arcturus is free software: you can redistribute it and/or modify it under
-- the terms of the GNU General Public License as published by the Free Software
-- Foundation; either version 3 of the License, or (at your option) any later
-- version.
--
-- This program is distributed in the hope that it will be useful, but WITHOUT
-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-- FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
-- details.
--
-- You should have received a copy of the GNU General Public License along with
-- this program. If not, see <http://www.gnu.org/licenses/>.
-- find-free-read-details.sql
-- used to populate ORGANISM_HISTORY
-- for all projects in the database
create temporary table yesterday_reads_in_contigs as  
select READINFO.read_id, readname, c
alter table md_item add ContainerDesc varchar(50) null
go
insert into ACC_Permission values('Url_Production_ForceResume','强制恢复','Production')
go
insert into SYS_Menu values('Url_OrderTrace_View','物料拉动日志','Menu.Procurement.Info',420,'物料拉动日志','~/OrderTrace/Index','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_OrderTrace_View','物料拉动日志','Procurement')
go
insert into SYS_Menu values('Url_SequenceOrder_Receive','收货','Url_SequenceOrder',300,'收货','~/SequenceMaster/ReceiveIndex/10','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_SequenceOrder_Receive','收货','Procurement')
go
insert into SYS_Menu values('Url_SequenceOrder_Receive','收货','Url_SequenceOrder',300,'收货','~/SequenceMaster/ReceiveIndex/10','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_SequenceOrder_Receive','排序单收货','Procurement')
go
insert into SYS_Menu values('Url_SequenceOrder_Receive_Distribution','收货','Url_SequenceOrder_Distribution',20
CREATE TABLE [SalesLT].[ProductModel]
[ProductModelID] [int] NOT NULL IDENTITY(1, 1),
[Name] [dbo].[Name] NOT NULL,
[CatalogDescription] [xml] (CONTENT [SalesLT].[ProductDescriptionSchemaCollection]) NULL,
[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (newid()),
[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (getdate())
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE [SalesLT].[ProductModel] ADD CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED  ([ProductModelID]) ON [PRIMARY]
GO
ALTER TABLE [SalesLT].[ProductModel] ADD CONSTRAINT [AK_ProductModel_Name] UNIQUE NONCLUSTERED  ([Name]) ON [PRIMARY]
GO
ALTER TABLE [SalesLT].[ProductModel] ADD CONSTRAINT [AK_ProductModel_rowguid] UNIQUE NONCLUSTERED  ([rowguid]) ON [PRIMARY]
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription] ON [SalesLT].[ProductModel] ([CatalogDescription])
GO
EXEC sp_addextendedproperty N'MS_Descripti
USE [SERVICES]
GO
/****** Object:  Table [dbo].[SERVICE_STATUS]    Script Date: 02/25/2010 12:37:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SERVICE_STATUS](
	[name] [varchar](50) NOT NULL,
	[status] [varchar](50) NOT NULL,
	[date] [datetime] NOT NULL,
 CONSTRAINT [PK_SERVICE_STATUS_1] PRIMARY KEY CLUSTERED 
	[name] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[AppendLog]    Script Date: 02/25/2010 12:37:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[AppendLog]
	@uid					VARCHAR(100),
	@log					VARCHAR(255),
	@logIdx					int
AS
	DECLARE @c INT
	SELECT @c = ISNULL(COUNT(uid), 0) FROM dbo.SERVICE_LOG
		WHERE uid = @uid AND logidx = @logidx
		
	IF @c >= 100
		DELETE dbo.SERVICE_LOG
			WHERE data = (
				SELECT MIN(data) FROM

					WHERE uid = @uid AND logidx = @logidx
			);
	INSERT INTO dbo.SERVICE_LOG (
		uid,
		data,
		logidx,
		[log]
	) VALUES ( 
		@uid,
		GETDATE(),
		@logidx,
		@log );
GO
/****** Object:  StoredProcedure [dbo].[GetServiceCommand]    Script Date: 02/25/2010 12:37:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GetServiceCommand]
	@uid		varchar(100)
AS
	DECLARE @res VARCHAR(50)	
	DECLARE @id		BIGINT;
	SELECT 
		TOP 1 
			@id = id,
			@res = cmd
	FROM dbo.SERVICE_CMD_QUEUE
	WHERE uid = @uid 
	ORDER BY id;
	IF (@id IS NOT NULL)
		DELETE dbo.SERVICE_CMD_QUEUE WHERE id = @id;
		
	SELECT @res;
GO
/****** Object:  StoredProcedure [dbo].[CleanStatus]    Script Date: 02/25/2010 12:37:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[CleanStatus]
AS
	TRUNCATE TABLE SERVICE_STATUS;
GO
/****** Object:  StoredProcedure [dbo].[CHECK_SERVICES]    Script Date: 02/25/2010 12:37:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE

AS
	DECLARE @status	VARCHAR(50);
	DECLARE @date	DATETIME;	
	DECLARE @msg	VARCHAR(200);
	DECLARE @tmp	VARCHAR(50);		
	-- Controlla il guscio 
	SELECT	
			@status =	status,
			@date =		date 
	FROM SERVICE_STATUS
	WHERE [name] = 'ROOT';
	IF (ISNULL(@status, '') <> 'OK')
		BEGIN
			SELECT 'ERROR: Service status: '+ ISNULL(@status, '-- undefined --');
			RETURN; 
		END
	IF (@date IS NULL 			
			OR DATEADD(mi, -5, GETDATE()) > @date)
		BEGIN
			SELECT 'ERROR: Remoted service not responding';
			RETURN; 
		END;
	/*********************************************************
	 * Controlla i servizi
	 *********************************************************/
	-- Con errori
	IF EXISTS (SELECT * FROM SERVICE_STATUS WHERE NAME <> 'ROOT' AND status = 'ERROR')
		BEGIN
			
			SET @msg = '';
			SET @tmp = '';				
			DECLARE c CURSOR FOR
				SELECT name FROM SERVICE_STATUS WHERE NAME <> 'ROOT' AND status = 'ERROR';
					  
				OPEN c;
				FETCH NEXT FROM c
					INTO @tmp;					  
				WHILE @@FETCH_STATUS 
========================
clientes.sql
========================
customer_address_entity
customer_address_entity_datetime
customer_address_entity_decimal
customer_address_entity_int
customer_address_entity_text
customer_address_entity_text
customer_address_entity_varchar
customer_eav_attribute
customer_eav_attribute_website
customer_entity
customer_entity_datetime
customer_entity_decimal
customer_entity_int
customer_entity_text
customer_entity_varchar
customer_form_attribute
customer_group
========================
Deletar
========================
DROP TABLE `customer_address_entity`, `customer_address_entity_datetime`, `customer_address_entity_decimal`, `customer_address_entity_int`, `customer_address_entity_text`, `customer_address_entity_varchar`, `customer_eav_attribute`, `customer_eav_attribute_website`, `customer_entity`, `customer_entity_datetime`, `customer_entity_decimal`, `customer_entity_int`, `customer_entity_text`, `customer_entity_varchar`, `customer_form_attribute`, `custom
-- ViewName : PurchaseOrdersByAreaView_Right_Top
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'Purchase Orders Invoices';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'PurchaseOrdersByAreaView_Right_Top'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update 

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
DELIMITER $$
USE `ontarget`$$
DROP TRIGGER /*!50032 IF EXISTS */ `log_comment_add`$$
CREATE
    /*!50017 DEFINER = 'ontarget'@'localhost' */
    TRIGGER `log_comment_add` AFTER INSERT ON `project_task_comments` 
    FOR EACH ROW BEGIN
  INSERT INTO user_notification (TEXT, user_id, category) VALUES
    (CONCAT("Comment ", NEW.comment, " added on task ", NEW.project_task_id, " by ", NEW.comment_by), NEW.comment_by,
     1);
  INSERT INTO activity_log (TEXT, user_id, category) VALUES
    (CONCAT("Comment ", NEW.comment, " added on task ", NEW.project_task_id), NEW.comment_by,
     1);
END;
$$
DELIMITER ;
DELIMITER $$
USE `ontarget`$$
DROP TRIGGER /*!50032 IF EXISTS */ `log_dependentTask_add`$$
CREATE
    /*!50017 DEFINER = 'ontarget'@'localhost' */
    TRIGGER `log_dependentTask_add` AFTER INSERT ON `dependent_task` 
    FOR EACH ROW BEGIN
INSERT INTO activity_log (TEXT, category) VALUES (CONCAT("Task ", NEW.dependent_task_id," is made dependent on task ",NEW.task_id, " by user ", NEW.cr

INSERT INTO user_notification (TEXT, user_id, category) VALUES (CONCAT("Task ", NEW.dependent_task_id," is made dependent on task ",NEW.task_id, " by user ", NEW.created_by), NEW.created_by, 11);
END;
$$
DELIMITER ;
DELIMITER $$
USE `ontarget`$$
DROP TRIGGER /*!50032 IF EXISTS */ `log_plannedActualCost_add`$$
CREATE
    /*!50017 DEFINER = 'ontarget'@'localhost' */
    TRIGGER `log_plannedActualCost_add` AFTER INSERT ON `planned_actuals_cost` 
    FOR EACH ROW BEGIN
INSERT INTO activity_log (TEXT, category) VALUES (CONCAT("New planned cost added for task ", NEW.task_id, " by user ", NEW.created_by), 6);
INSERT INTO user_notification (TEXT, user_id, category) VALUES (CONCAT("New planned cost added for task ", " by ", NEW.created_by, NEW.task_id), NEW.created_by, 6);
END;
$$
DELIMITER ;
DELIMITER $$
USE `ontarget`$$
DROP TRIGGER /*!50032 IF EXISTS */ `log_plannedActualCost_update`$$
CREATE
    /*!50017 DEFINER = 'ontarget'@'localhost' */
    TRIGGER `log_plannedActualCost_update` AFTER U

    FOR EACH ROW BEGIN
INSERT INTO activity_log (TEXT, category) VALUES (CONCAT("planned cost updated for task ", NEW.task_id, " by user ", NEW.modified_by), 7);
INSERT INTO user_notification (TEXT, user_id, category) VALUES (CONCAT("planned cost updated for task ", NEW.task_id, " by ", NEW.modified_by), NEW.modified_by, 7);
END;
$$
DELIMITER ;
DELIMITER $$
USE `ontarget`$$
DROP TRIGGER /*!50032 IF EXISTS */ `log_projectMember_add`$$
CREATE
    /*!50017 DEFINER = 'ontarget'@'localhost' */
    TRIGGER `log_projectMember_add` AFTER INSERT ON `project_member` 
    FOR EACH ROW BEGIN
INSERT INTO activity_log (TEXT, category) VALUES (CONCAT("New member ", NEW.user_id," added for project ",NEW.project_id), 8);
INSERT INTO user_notification (TEXT, user_id, category) VALUES (CONCAT("New member ", NEW.user_id," added for project ",NEW.project_id), NEW.user_id, 8);
END;
$$
DELIMITER ;
DELIMITER $$
USE `ontarget`$$
DROP TRIGGER /*!50032 IF EXISTS */ `log_projectTaskFile_add`$$
CREATE
    /*!5001
-- Location View
SELECT dropIfExists('VIEW', 'location', 'api');
CREATE OR REPLACE VIEW api.location AS
  SELECT
    warehous_code::VARCHAR AS site,
    location_aisle::VARCHAR AS aisle,
    location_rack::VARCHAR AS rack,
    location_bin::VARCHAR AS bin,
    location_name::VARCHAR AS location,
    whsezone_name AS zone,
    location_netable AS netable,
    location_usable AS usable,
    location_restrict AS restricted,
    location_descrip AS description
    FROM location
       LEFT OUTER JOIN whsinfo ON (warehous_id=location_warehous_id)
       LEFT OUTER JOIN whsezone ON (whsezone_id=location_whsezone_id);
GRANT ALL ON TABLE api.location TO xtrole;
COMMENT ON VIEW api.location IS 'Location';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.location DO INSTEAD
  INSERT INTO location (
    location_warehous_id,
    location_name,
    location_descrip,
    location_restrict,
    location_netable,
    location_usable,
    location_whsezone_id,
    location_aisle,
    l

    location_bin
    )
  VALUES (
    getWarehousId(NEW.site, 'ACTIVE'),
    COALESCE(NEW.location,''),
    COALESCE(NEW.description, ''),
    COALESCE(NEW.restricted, false),
    COALESCE(NEW.netable, true),
    COALESCE(NEW.usable, true),
    getWhseZoneId(NEW.site, NEW.zone),
    COALESCE(NEW.aisle, ''),
    COALESCE(NEW.rack, ''),
    COALESCE(NEW.bin, '')
    );
CREATE OR REPLACE RULE "_UPDATE" AS 
    ON UPDATE TO api.location DO INSTEAD
  UPDATE location SET
    location_name=NEW.location,
    location_descrip=NEW.description,
    location_restrict=NEW.restricted,
    location_netable=NEW.netable,
    location_usable=NEW.usable,
    location_whsezone_id=getWhseZoneId(NEW.site, NEW.zone),
    location_aisle=NEW.aisle,
    location_rack=NEW.rack,
    location_bin=NEW.bin
  WHERE ( (location_warehous_id=getWarehousId(OLD.site, 'ACTIVE')) AND
          (location_name=OLD.location) );
           
CREATE OR REPLACE RULE "_DELETE" AS 
    ON DELETE TO api.location DO INSTEAD
  DELETE 
--------------------------------------------------------
--  File created - Ïîíåäåëíèê-Àïðèë-14-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ARTICLE_PART1
--------------------------------------------------------
  CREATE TABLE "ELSYS"."ARTICLE_PART1" 
   (	"NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ARTICLE_PART2
--------------------------------------------------------
  CREATE TABLE "ELSYS"."ARTICLE_PART2" 
   (	"ID" NUMBER, 
	"PUBLISHED_ON" DATE, 
	"CREATED_ON" DATE, 
	"USER_ID" NUMBER, 
	"TAG_ID" NUMBER
   ) SEGMENT CREATION IMMEDIA

  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."CATEGORY" 
   (	"ID" NUMBER, 
	"description" VARCHAR2(20 BYTE), 
	"CREATED_BY" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CATEGORY_TAG
--------------------------------------------------------
  CREATE 

   (	"C_ID" NUMBER, 
	"T_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG" 
   (	"ID" NUMBER, 
	"SECOND_PRIORITY" NUMBER, 
	"NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USERS
---------------------------
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
SET ANSI_PADDING ON
GO
CREATE TABLE [Production].[ProductModel] (
		[ProductModelID]         [int] IDENTITY(1, 1) NOT NULL,
		[Name]                   [dbo].[Name] NOT NULL,
		[CatalogDescription]     [xml](CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,
		[Instructions]           [xml](CONTENT [Production].[ManuInstructionsSchemaCollection]) NULL,
		[rowguid]                [uniqueidentifier] NOT NULL ROWGUIDCOL,
		[ModifiedDate]           [datetime] NOT NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModel]
	ADD
	CONSTRAINT [PK_ProductModel_ProductModelID]
	PRIMARY KEY
	CLUSTERED
	([ProductModelID])
	ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'PK_ProductModel_ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Clustered index created by a primary key const

GO
ALTER TABLE [Production].[ProductModel]
	ADD
	CONSTRAINT [DF_ProductModel_ModifiedDate]
	DEFAULT (getdate()) FOR [ModifiedDate]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_ModifiedDate'
GO
ALTER TABLE [Production].[ProductModel]
	ADD
	CONSTRAINT [DF_ProductModel_rowguid]
	DEFAULT (newid()) FOR [rowguid]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of NEWID()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_rowguid'
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name]
	ON [Production].[ProductModel] ([Name])
	ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Unique nonclustered index.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'INDEX', N'AK_ProductModel_Name'
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_rowguid]
	ON [Production].[ProductModel] ([row

	ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Unique nonclustered index. Used to support replication samples.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'INDEX', N'AK_ProductModel_rowguid'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Detailed product catalog information in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'CatalogDescription'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Manufacturing instructions in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Instructions'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Product model description.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Name'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key for ProductModel records.', 'S
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 05. März 2002 um 11:35
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_vers2`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `Object`
CREATE TABLE Object (
  ID int(11) NOT NULL auto_increment,
  ChangedDateTime double(16,6) NOT NULL default '0.000000',
  CreatedDateTime double(16,6) NOT NULL default '0.000000',
  CreatedBy int(11) NOT NULL default '1',
  ChangedBy int(11) NOT NULL default '1',
  HeadNavID int(11) NOT NULL default '0',
  SubNavID int(11) NOT NULL default '0',
  TextarticleGroup int(11) NOT NULL default '0',
  Head varchar(255) NOT NULL default '',
  Subhead varchar(255) NOT NULL default '',
  Excerpt text,
  Text longtext,
  active int(1) NOT NULL default '1',
  Date float(16,4) NOT NULL default '0.0000',
  Picture varchar(255) NOT NULL default
/* Updating the Enable column for older version to 0  */
Update [InsurerAnalyticsSupport].[FactAndDimensionDefinition]
set Enable = 0
where  Name = 'Client Dimension'
AND JobType = 'Claims'
/* Inserting the new metadata for the Extension Procedure */
insert into [InsurerAnalyticsSupport].[FactAndDimensionDefinition] ([Order],name,SQLStatement,[Enable],JobType,DefinitionType,[Description])
values (40,
	   'Client Dimension',
	   'DECLARE	
		@NewRecords int,
		@ChangedRecords int,
		@ExpiredSCD2Records int,
		@RecordsRead int
EXEC	[InsurerAnalyticsSupport].[ProcessClaimsClientDimension__Extension]
		@ExtractRunID = ?,
		@NewRecords = @NewRecords OUTPUT,
		@ChangedRecords = @ChangedRecords OUTPUT,
		@ExpiredSCD2Records = @ExpiredSCD2Records OUTPUT,
		@RecordsRead = @RecordsRead OUTPUT
SELECT	@NewRecords AS N''NewRecords'',
		@ChangedRecords AS N''ChangedRecords'',
		@ExpiredSCD2Records AS N''ExpiredSCD2Records'',
		@RecordsRead AS N''RecordsRead''',
		'Claims',
		'Dimension',
		'Definitio
﻿SET IDENTITY_INSERT dbo.[Address] ON;
GO
WITH cData(StreetNumber, AddressLine1, City, Region, PostCode, Country) AS (
	SELECT 65, '568-1433 Auctor St.', 'Chastre-Villeroux-Blanmont', 1, '931', 'New Zealand' UNION ALL
	SELECT 39, 'P.O. Box 463, 9290 Ipsum Road', 'Mansfield', 3, '7871', 'New Zealand' UNION ALL
	SELECT 115, '473-2540 Pede Av.', 'Belgaum', 4, '2427', 'New Zealand' UNION ALL
	SELECT 122, '3431 Magna. Av.', 'Raigarh', 3, '918', 'New Zealand' UNION ALL
	SELECT 12, 'Ap #628-1771 Neque Av.', 'College', 2, '9164', 'New Zealand' UNION ALL
	SELECT 139, 'P.O. Box 273, 4246 Nunc Road', 'Neuruppin', 4, '1056', 'New Zealand' UNION ALL
	SELECT 188, 'Ap #839-6396 Tellus, Ave', 'Woodstock', 3, '7771', 'New Zealand' UNION ALL
	SELECT 133, 'P.O. Box 735, 8633 Donec Street', 'Castiglione Messer Raimondo', 3, '8920', 'New Zealand' UNION ALL
	SELECT 160, 'Ap #986-1889 Enim. Avenue', 'San Maurizio Canavese', 1, '8370', 'New Zealand' UNION ALL
	SELECT 91, 'P.O. Box 632, 3268 Euismod Ave', 'Wil

	SELECT 113, '357 Quis Avenue', 'Mattersburg', 4, '4840', 'New Zealand' UNION ALL
	SELECT 200, 'P.O. Box 445, 3249 Egestas Ave', 'Biesme-sous-Thuin', 2, '1389', 'New Zealand' UNION ALL
	SELECT 51, 'Ap #261-1346 Cum Ave', 'Bhavnagar', 1, '2167', 'New Zealand' UNION ALL
	SELECT 96, '7421 Gravida. Rd.', 'Bear', 3, '1500', 'New Zealand' UNION ALL
	SELECT 94, '705-6861 Egestas Rd.', 'Anchorage', 3, '2082', 'New Zealand' UNION ALL
	SELECT 3, '336-6405 A, Rd.', 'Sint-Genesius-Rode', 3, '532', 'New Zealand' UNION ALL
	SELECT 197, 'P.O. Box 346, 177 Ligula. St.', 'Parramatta', 4, '1816', 'New Zealand' UNION ALL
	SELECT 30, '6994 Proin Avenue', 'Warrnambool', 3, '5677', 'New Zealand' UNION ALL
	SELECT 47, '662-8681 Pede Rd.', 'Coquitlam', 3, '3819', 'New Zealand' UNION ALL
	SELECT 85, 'P.O. Box 234, 6840 Nunc St.', 'Court-Saint-Etienne', 3, '8926', 'New Zealand' UNION ALL
	SELECT 153, 'P.O. Box 167, 9151 Nisl Av.', 'Nanton', 4, '5789', 'New Zealand' UNION ALL
	SELECT 42, 'P.O. Box 534, 3707 Eu,

	SELECT 180, '1112 Amet Rd.', 'San Jose', 4, '5319', 'New Zealand' UNION ALL
	SELECT 76, '2789 Consequat Avenue', 'Sprimont', 4, '80', 'New Zealand' UNION ALL
	SELECT 165, '390-2518 Vitae Road', 'Wazirabad', 4, '2194', 'New Zealand' UNION ALL
	SELECT 105, 'Ap #244-3817 Libero. Ave', 'Longueville', 3, '9742', 'New Zealand' UNION ALL
	SELECT 115, '1211 Placerat St.', 'Indore', 4, '4795', 'New Zealand' UNION ALL
	SELECT 155, 'Ap #991-906 In Rd.', 'Carovilli', 1, '149', 'New Zealand' UNION ALL
	SELECT 131, '5307 Sagittis Road', 'Deschambault', 2, '7490', 'New Zealand' UNION ALL
	SELECT 36, '294-8515 Vitae, Rd.', 'Piagge', 2, '1406', 'New Zealand' UNION ALL
	SELECT 13, '6807 Cursus Ave', 'Stranraer', 1, '1961', 'New Zealand' UNION ALL
	SELECT 163, 'P.O. Box 682, 7852 Posuere Rd.', 'Elversele', 4, '3711', 'New Zealand' UNION ALL
	SELECT 198, 'P.O. Box 820, 8273 Vehicula Street', 'Burdinne', 1, '3304', 'New Zealand' UNION ALL
	SELECT 162, 'P.O. Box 137, 9280 Urna Rd.', 'Des Moines', 2, '4493
USE sport_storage;
-- create
CREATE TABLE topics (id INT,
                        name CHAR(50),
                        isNew BOOL
                    );
-- index
ALTER TABLE topics
  ADD INDEX (id);
-- insert
INSERT INTO topics (id, name, isNew) VALUES (0, 'без темы',         1);
INSERT INTO topics (id, name, isNew) VALUES (1, 'Футбол',           1);
INSERT INTO topics (id, name, isNew) VALUES (2, 'Хоккей',           1);
INSERT INTO topics (id, name, isNew) VALUES (3, 'Баскетбол',        1);
INSERT INTO topics (id, name, isNew) VALUES (4, 'Волейбол',         1);
INSERT INTO topics (id, name, isNew) VALUES (5, 'Формула 1',        1);
INSERT INTO topics (id, name, isNew) VALUES (6, 'Зимние виды',      1);
INSERT INTO topics (id, name, isNew) VALUES (7, 'Летние виды',      1);
INSERT INTO topics (id, name, isNew) VALUES (8, 'Трансляция',       1);
INSERT INTO topics (id, name, isNew) VALUES (9, 'Fans',             1);
INSERT INTO topics (id, name, isNew) VALUES (10, 'Temp',            1
﻿SET search_path='blackface_dge', 'public', 'Pigs';
CREATE TABLE gtf_coverage
  library_id text,
  rname text,
  source text,
  feature text,
  f_start integer,
  f_end integer,
  score text,
  strand text,
  frame text,
  attributes text,
  no_tags int,
  no_nonzero_cov int,
  feature_length int,
  cov_ratio double precision
);
comment on table gtf_coverage is 'Coverage file produced by coverageBed see 09/01/2011.'
truncate table gtf_coverage;
select read_table($$ file:'F:/data/20101223_blackface/LN_all.nonzero.cov.gz', table:'gtf_coverage', append:True $$);
alter table gtf_coverage set tablespace hdd_free_agent;
select * from gtf_coverage limit 10;
drop table transcript_coverage;
create table gene_coverage AS (
  select library_id, min(rname) AS rname, min(f_start) AS f_start, max(f_end) AS f_end, min(strand) AS strand, 
         gtf_attribute(attributes, 'transcript_id') AS gene_id, sum(no_tags) AS coverage
  from gtf_coverage
  where feature like 'exon'  group by library_id, gtf_at
-- D.  These questions use the table 'score', which has fields 'student_id',
--     'event_id', and 'score'.
-- 
-- 1.  Write a query returning records only for student_id 10.
-- 2.  Write a query returning records only for event_id 3.
-- 3.  Write a query returning records with scores above 15.
-- 4.  Write a query returning records with scores above 15 for event_id 5.
-- 5.  Write a query counting the number of records for each event.
-- 6.  Write a query counting the number of records for each combination of
--      values for event_id and student_id.  (HINT: Add something to the GROUP BY
--      clause.)   Is there any count greater than one?
-- 7.  Write a query averaging the score for each event.
-- 8.  Write a query averaging the score for each student.
-- 9.  Write a query reporting the count of records and average score for each event.
-- 10.  BONUS Write a query returning the standard deviation for the score for
--     each event.  (Hint: Google.)
-- 
SELECT
    *
FROM
    sa
x = read.csv(file="expl_aggr_data.txt",head=TRUE,sep="\t")
cor(x$AVGQREADS, x$AVGQWRITES)
cor(x$AVGQREADS, x$AVGUREADS)
cor(x$AVGQREADS, x$AVGDREADS)
SELECT SUM(t0.id4) FROM ft_HT1 t0
SELECT t0.id3, SUM(t0.id1) FROM ft_HT1 t0 GROUP BY t0.id3
SELECT t0.id2, t0.id3, t0.id4, SUM(t0.id1) FROM ft_HT1 t0 GROUP BY t0.id2, t0.id3, t0.id4
SELECT t0.id1, t0.id2, t0.id4, SUM(t0.id3) FROM ft_HT1 t0 GROUP BY t0.id1, t0.id2, t0.id4
SELECT t0.id2, t0.id3, t0.id4, SUM(t0.id1) FROM ft_HT1 t0 GROUP BY t0.id2, t0.id3, t0.id4
SELECT t0.id1, t0.id2, t0.id3, SUM(t0.id4) FROM ft_HT1 t0 GROUP BY t0.id1, t0.id2, t0.id3
SELECT SUM(t0.id3) FROM ft_HT1 t0
SELECT t0.id2, SUM(t0.id3) FROM ft_HT1 t0 GROUP BY t0.id2
SELECT SUM(t0.id3) FROM ft_HT1 t0
SELECT t0.id1, t0.id2, t0.id4, SUM(t0.id3) FROM ft_HT1 t0 GROUP BY t0.id1, t0.id2, t0.id4
select  version,
        experimentname,
	dbms, 
	runid,
	querynum,
	card, 
	AVG_QP_READ_SYSCALLS_CNT as avgQReads,
	AVG_QP_WRITE_SYSCALLS_CNT as avgQWrites,
	AVG_UP_READ_SYSCALLS_CN

	AVG_UP_WRITE_SYSCALLS_CNT as avgUWrites,
	AVG_DP_READ_SYSCALLS_CNT as avgDReads,
	AVG_DP_WRITE_SYSCALLS_CNT as avgDWrites,
from Explrtry99
where querynum IN (0, 20, 40, 60, 80) 
and runID IN (228, 229, 230, 231, 246, 247, 248, 412)
order by runid, querynum, card desc
select  version,
        experimentname,
	dbms, 
	runid,
	querynum,
	card, 
	MIN_QP_READ_SYSCALLS_CNT as minQReads, 
	MAX_QP_READ_SYSCALLS_CNT as maxQReads,	
	AVG_QP_READ_SYSCALLS_CNT as avgQReads,
	MIN_QP_WRITE_SYSCALLS_CNT as minQWrites, 
	MAX_QP_WRITE_SYSCALLS_CNT as maxQWrites,	
	AVG_QP_WRITE_SYSCALLS_CNT as avgQWrites,
	MIN_UP_READ_SYSCALLS_CNT as minUReads, 
	MAX_UP_READ_SYSCALLS_CNT as maxUReads,	
	AVG_UP_READ_SYSCALLS_CNT as avgUReads,
	MIN_UP_WRITE_SYSCALLS_CNT as minUWrites, 
	MAX_UP_WRITE_SYSCALLS_CNT as maxUWrites,	
	AVG_UP_WRITE_SYSCALLS_CNT as avgUWrites,
	MIN_DP_READ_SYSCALLS_CNT as minDReads, 
	MAX_DP_READ_SYSCALLS_CNT as maxDReads,	
	AVG_DP_READ_SYSCALLS_CNT as avgDReads,
	MIN_DP_WRITE_SYSCALLS_CNT as mi

	MAX_DP_WRITE_SYSCALLS_CNT as maxDWrites,	
	AVG_DP_WRITE_SYSCALLS_CNT as avgDWrites,
from Explrtry99
where querynum IN (0, 20, 40, 60, 80) 
and runID IN (228, 229, 230, 231, 246, 247, 248, 412)
order by runid, querynum, card desc
MIN(QP_READ_BYTES_CNT) AS MIN_QP_READ_BYTES_CNT, 
MAX(QP_READ_BYTES_CNT) AS MAX_QP_READ_BYTES_CNT,	
ROUND(AVG(QP_READ_BYTES_CNT),2) AS AVG_QP_READ_BYTES_CNT, 
ROUND(STDDEV(QP_READ_BYTES_CNT),2) AS STD_QP_READ_BYTES_CNT, 
ROUND(MEDIAN(QP_READ_BYTES_CNT),2) AS MED_QP_READ_BYTES_CNT, 
-- query process read chars
MIN(QP_READ_CHAR_CNT) AS MIN_QP_READ_CHAR_CNT, 
MAX(QP_READ_CHAR_CNT) AS MAX_QP_READ_CHAR_CNT, 
ROUND(AVG(QP_READ_CHAR_CNT),2) AS AVG_QP_READ_CHAR_CNT, 
ROUND(STDDEV(QP_READ_CHAR_CNT),2) AS STD_QP_READ_CHAR_CNT, 
ROUND(MEDIAN(QP_READ_CHAR_CNT),2) AS MED_QP_READ_CHAR_CNT, 
-- query process read syscalls
MIN(QP_READ_SYSCALLS_CNT) AS MIN_QP_READ_SYSCALLS_CNT, 
MAX(QP_READ_SYSCALLS_CNT) AS MAX_QP_READ_SYSCALLS_CNT,	
ROUND(AVG(QP_READ_SYSCALLS_CNT),2) AS AVG_
﻿USE [LCCHPDev]
GO
/****** Object:  StoredProcedure [dbo].[usp_upFamily]    Script Date: 4/26/2015 8:29:36 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		William Thier
-- Create date: 20150214
-- Description:	Stored Procedure to update Family information
-- =============================================
CREATE PROCEDURE [dbo].[usp_upFamily]  
	-- Add the parameters for the stored procedure here
	@Family_ID int = NULL,
	@New_Last_Name varchar(50) = NULL,
	@New_Number_of_Smokers tinyint = 0,
	@New_Primary_Language_ID tinyint = 1,
	@New_Notes varchar(3000) = NULL,
	@New_Pets tinyint = NULL,
	@New_Frequently_Wash_Pets bit = NULL,
	@New_Pets_in_and_out bit = NULL,
	@New_Primary_Property_ID int = NULL,
	@New_ForeignTravel bit = NULL,
	@DEBUG BIT = 0
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
	DEC

			, @NotesID INT, @Recompile BIT = 1;
	BEGIN TRY -- update Family information
		-- BUILD update statement
		IF (@New_Last_Name IS NULL)
			SELECT @New_Last_Name = LastName from family where FamilyID = @Family_ID;
		SELECT @spupdateFamilysqlStr = N'update Family set Lastname = @LastName'
		IF (@New_Number_of_Smokers IS NOT NULL)
			SELECT @spupdateFamilysqlStr = @spupdateFamilysqlStr + N', NumberofSmokers = @NumberofSmokers'
		IF (@New_Primary_Language_ID IS NOT NULL)
			SELECT @spupdateFamilysqlStr = @spupdateFamilysqlStr + N', PrimaryLanguageID = @PrimaryLanguageID'
		IF (@New_Pets IS NOT NULL)
			SELECT @spupdateFamilysqlStr = @spupdateFamilysqlStr + N', Pets = @Pets'
		IF (@New_Frequently_Wash_Pets IS NOT NULL)
			SELECT @spupdateFamilysqlStr = @spupdateFamilysqlStr + N', FrequentlyWashPets = @FrequentlyWashPets'	
			
		IF (@New_Pets_in_and_out IS NOT NULL)
			SELECT @spupdateFamilysqlStr = @spupdateFamilysqlStr + N', Petsinandout = @Petsinandout'
		IF (@New_Primary_Property_ID IS

			SELECT @spupdateFamilysqlStr = @spupdateFamilysqlStr + N', PrimaryPropertyID = @PrimaryPropertyID'
		IF (@New_ForeignTravel IS NOT NULL)
			SELECT @spupdateFamilysqlStr = @spupdateFamilysqlStr + N', ForeignTravel = @ForeignTravel'
		SELECT @spupdateFamilysqlStr = @spupdateFamilysqlStr + N' WHERE FamilyID = @FamilyID'
		IF @DEBUG = 1
			SELECT @spupdateFamilysqlStr, 'Lastname' = @New_Last_Name, 'NumberofSmokers' = @New_Number_of_Smokers
				, 'PrimaryLanguageID' = @New_Primary_Language_ID, 'Pets' = @New_Pets, 'Petsinandout' = @New_Pets_in_and_out
				, 'PrimaryPropertyID' = @New_Primary_Property_ID, 'FrequentlyWashPets' = @New_Frequently_Wash_Pets
				, 'ForeignTravel' = @New_ForeignTravel
			
			IF (@New_Notes IS NOT NULL)
			BEGIN
				IF @DEBUG = 1
					SELECT 'EXEC [dbo].[usp_InsertFamilyNotes] @Family_ID = @Family_ID, @Notes = @New_Notes, @InsertedNotesID = @NotesID OUTPUT ' 
						, @Family_ID, @New_Notes 
				EXEC	[dbo].[usp_InsertFamilyNotes]
							@Family_ID = @Family_ID,
	
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_ModelPortfolioSave]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--select * from dbo.ModelPortfolio
CREATE PROCEDURE [dbo].[SWITCH_ModelPortfolioSave]
@param_ModelPortfolioID		nvarchar(50),
@param_ModelGroupID			nvarchar(50),
@param_ModelPortfolioName	nvarchar(50),
@param_ModelPortfolioDesc	nvarchar(max) = null
AS
BEGIN
	IF EXISTS(SELECT ModelPortfolioID FROM [NavIntegrationDB].[dbo].[ModelPortfolio] WHERE ModelGroupID = @param_ModelGroupID AND ModelPortfolioID = @param_ModelPortfolioID)
		BEGIN
			IF (UPPER(RTRIM(LTRIM(@param_ModelPortfolioName))) = (SELECT UPPER(RTRIM(LTRIM(ModelPortfolioName))) FROM [NavIntegrationDB].[dbo].[ModelPortfolio] WHERE ModelGroupID = @param_ModelGroupID AND ModelPortfolioID = @param_ModelPortfolioID))
				BEGIN
					UPDATE [NavIntegrationDB].[dbo].[ModelPortfolio]
					   SET [ModelPortfolioName] = @param_ModelPortfolioName
					 WHERE
drop table c3p0_test_table;
alter table scene change state_persistence old_state_persistence char(1);
alter table scene change reset_action old_reset_action char(1);
alter table scene_condition change action_type old_action_type char(1);
alter table scene_action_condition change action_type old_action_type char(1);
alter table scene_condition change time_after_before old_time_after_before char(1);
alter table scene_action_condition change time_after_before old_time_after_before char(1);
alter table scene_condition change time_when old_time_when char(1);
alter table scene_action_condition change time_when old_time_when char(1);
alter table scene_condition change time_plus_minus old_time_plus_minus char(1);
alter table scene_action_condition change time_plus_minus old_time_plus_minus char(1);
alter table scene_condition change scene_group_on_off old_scene_group_on_off char(1);
alter table scene_action_condition change scene_group_on_off old_scene_group_on_off char(1);
alter table scene_c
SET PARQUET_COMPRESSION_CODEC=snappy;
DROP TABLE IF EXISTS;
CREATE TABLE LIKE STORED AS PARQUETFILE LOCATION;
-- Overwrite the table with historical data
INSERT OVERWRITE SELECT
	GLOBALEVENTID,
	SQLDATE,
	MonthYear,
	Year,
	FractionDate,
	Actor1Code,
	Actor1Name,
	Actor1CountryCode,
	Actor1KnownGroupCode,
	Actor1EthnicCode,
	Actor1Religion1Code,
	Actor1Religion2Code,
	Actor1Type1Code,
	Actor1Type2Code,
	Actor1Type3Code,
	Actor2Code,
	Actor2Name,
	Actor2CountryCode,
	Actor2KnownGroupCode,
	Actor2EthnicCode,
	Actor2Religion1Code,
	Actor2Religion2Code,
	Actor2Type1Code,
	Actor2Type2Code,
	Actor2Type3Code,
	IsRootEvent,
	EventCode,
	EventBaseCode,
	EventRootCode,
	QuadClass,
	GoldsteinScale,
	NumMentions,
	NumSources,
	NumArticles,
	AvgTone,
	Actor1Geo_Type,
	Actor1Geo_FullName,
	Actor1Geo_CountryCode,
	Actor1Geo_ADM1Code,
	Actor1Geo_Lat,
	Actor1Geo_Long,
	Actor1Geo_FeatureID,
	Actor2Geo_Type,
	Actor2Geo_FullName,
	Actor2Geo_CountryCode,
	Actor2Geo_ADM1Code,
	Actor2Geo_Lat,
	Actor2Geo_Long
INSERT INTO `{$table_prefix}term_taxonomy` (`term_taxonomy_id`, `term_id`, `taxonomy`, `description`, `parent`, `count`) VALUES (1,1,'category','',0,0),(2,2,'link_category','',0,7),(3,3,'nav_menu','',0,24),(67,67,'post_tag','',0,1),(16,16,'post_format','',0,1),(17,17,'post_format','',0,0),(18,18,'category','Articles about the main theme features: typography, responsive layout, widget rules and styles etc.',0,2),(85,84,'post_tag','',0,1),(39,39,'post_tag','',0,1),(42,42,'post_tag','',0,1),(92,92,'category','',0,3),(93,93,'category','',0,3),(94,94,'category','',0,3),(98,98,'post_tag','',0,1),(97,97,'post_tag','',0,1),(96,96,'post_tag','',0,1),(95,95,'nav_menu','',0,4),(73,73,'link_category','',0,5),(74,74,'link_category','',0,5),(75,75,'link_category','',0,5),(76,76,'link_category','',0,5),(77,77,'link_category','',0,5),(78,78,'link_category','',0,5),(79,79,'post_format','',0,1),(80,80,'category','Examples of usage the Post Formats feature.',0,5),(81,81,'post_format','',0,1),(82,80,'post
SET IDENTITY_INSERT [#__extensions] ON;
INSERT INTO [#__extensions] ([extension_id], [name], [type], [element], [folder], [client_id], [enabled], [access], [protected], [manifest_cache], [params], [custom_data], [system_data], [checked_out], [checked_out_time], [ordering], [state])
SELECT 28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2016 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '1900-01-01 00:00:00', 0, 0;
SET IDENTITY_INSERT [#__extensions] OFF;
INSERT INTO [#__menu] ([menutype], [title], [alias], [note], [path], [link], [type], [published], [parent_id], [level], [component_id], [ordering], [checked_out], [checked_out_time], [browserNav], [access], [img], [
-- Drop the existing table (if any)
DROP TABLE "CS414S16"."MULTPILE_CHOICE_CHOICE";
--------------------------------------------------------
--  DDL for Table MULTPILE_CHOICE_CHOICE
--------------------------------------------------------
  CREATE TABLE "CS414S16"."MULTPILE_CHOICE_CHOICE" 
   (	"MULTIPLE_CHOICE_CHOICE_ID" NUMBER, 
	"QUESTION_ID" NUMBER, 
	"CHOICE_TEXT" VARCHAR2(100 BYTE), 
	"SET_ORDER" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MULTPILE_CHOICE_CHOICE_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "CS414S16"."MULTPILE_CHOICE_CHOICE_PK" ON "CS414S16"."MULTPILE_CHOICE_CHOICE" ("MULTIPLE_CHOICE_CHO

  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MULTPILE_CHOICE_CHOICE_UK1
--------------------------------------------------------
  CREATE UNIQUE INDEX "CS414S16"."MULTPILE_CHOICE_CHOICE_UK1" ON "CS414S16"."MULTPILE_CHOICE_CHOICE" ("QUESTION_ID", "SET_ORDER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table MULTPILE_CHOICE_CHOICE
--------------------------------------------------------
  ALTER TABLE "CS414S16"."MULTPILE_

  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "CS414S16"."MULTPILE_CHOICE_CHOICE" ADD CONSTRAINT "MULTPILE_CHOICE_CHOICE_PK" PRIMARY KEY ("MULTIPLE_CHOICE_CHOICE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "CS414S16"."MULTPILE_CHOICE_CHOICE" MODIFY ("SET_ORDER" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."MULTPILE_CHOICE_CHOICE" MODIFY ("CHOICE_TEXT" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."MULTPILE_CHOICE_CHOICE" MODIFY ("QUESTION_ID" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."MULTPILE_CHOICE_CHOIC
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
TRUNCATE TABLE `ARTICLECOMMANDE`;
TRUNCATE TABLE `FACTURE`;
TRUNCATE TABLE `COMMANDE`;
TRUNCATE TABLE `UTILISATEUR`;
TRUNCATE TABLE `ROLE`;
TRUNCATE TABLE `ARTICLE`; 
TRUNCATE TABLE `CATEGORIE`;
/*!40000 ALTER TABLE `account` DISABLE KEYS */;
/*!40000 ALTER TABLE `account` ENABLE KEYS */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@O
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `guild_bank_item`;
CREATE TABLE `guild_bank_item` (
  `guildid` int(10) unsigned NOT NULL DEFAULT '0',
  `TabId` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `SlotId` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `item_guid` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guildid`,`TabId`,`SlotId`),
  KEY `guildid_key` (`guildid`),
  KEY `Idx_item_guid` (`item_guid`)
) ENGINE=In
SET DEFINE OFF;
CREATE TABLE D_CITY_CODES
  CC_CODE          VARCHAR2(3 BYTE),
  DESCRIPTION      VARCHAR2(200 BYTE),
  COUNTRYCODE      VARCHAR2(2 BYTE),
  OUTBOUND         VARCHAR2(1 BYTE),
  DESTINATION      VARCHAR2(1 BYTE),
  CITY             VARCHAR2(1 BYTE),
  COUNTRY          VARCHAR2(1 BYTE),
  GOUPING_LEVEL1   VARCHAR2(250 BYTE),
  ADDITIONAL_DATA  VARCHAR2(1000 BYTE)
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_CITY_CODES_PK ON D_CITY_CODES
(CC_CODE)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
    
﻿select 
  C.CODER   --  id кодировщика в ФЭНСИ
  ,C.SHARE   --  id актива в ФЭНСИ
  ,C.CODE   --  код Тикера актива в ФЭНСИ
  ,F.NAME CODER_NAME --  наименование кодировщика в ФЭНСИ  
  ,S.MNEM  SHARE_MNEM --  мнемоника актива в ФЭНСИ
  ,CONVERT(int,null) SPD_CODER --  id кодировщика в СПД
  ,CONVERT(int,null) SPD_SHARE  --  id актива в СПД
  ,CONVERT(int,null) SPD_TICKER --  id тикера в СПД
  ,CONVERT(varchar(50),null) SPD_CODE  --  код Тикера актива в СПД
  ,CONVERT(varchar(250),null) SPD_CODER_NAME  --  наименование кодировщика в СПД
  ,CONVERT(varchar(250),null) SPD_SHARE_NAME --  наименование актива в СПД
  ,CONVERT(varchar(250),null) SPD_Text01  --  примечание к активу в СПД
  ,CONVERT(varchar(250),null) SPD_Text02  --  наименование ДЕПО актива в СПД
into #TempFansy
from [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_VALUE_CODERS C
join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_FACES F on F.SELF_ID=C.CODER and LAST_FLAG=1
join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_SHARES S on S.ID=C.SHARE
--select distinct

--проставим id аналогичного кодировщика из СПД
--select TF.*, A.NameAnalit 
update TF set 
  SPD_CODER  = M2.ClientId,
  SPD_CODER_NAME = A.NameAnalit
from #TempFansy TF
left join NaviconMDM.dbo.CodesMappingDetails M1 on M1.EntityName='LegalEntity' collate Cyrillic_General_CI_AS 
  and M1.ClientName='FANSY' collate Cyrillic_General_CI_AS 
  and M1.ClientId=TF.CODER 
left join NaviconMDM.dbo.CodesMappingDetails M2 on M2.EntityName='LegalEntity' collate Cyrillic_General_CI_AS 
  and M2.ClientName='SPD' collate Cyrillic_General_CI_AS 
  and M2.MasterCode=M1.MasterCode 
left join [SPD-NAV].GL_SPD.dbo.Analit A on A.id=M2.ClientId
--where A.id is null --не подставились id-шники:
  --ANNA-CFI
  --НП "РТС" (Классический рынок)
  --Санкт-Петербургская валютная биржа
--проставим id аналогичного актива из СПД
--select TF.*, A.NameAnalit
update TF set 
  SPD_SHARE = M2.ClientId,
  SPD_SHARE_NAME = A.NameAnalit,
  SPD_Text01 = A.Text01,
  SPD_Text02 = A.Text02
from #TempFansy TF
left join NaviconM

  and M1.ClientName='FANSY' collate Cyrillic_General_CI_AS 
  and M1.ClientId=TF.SHARE
left join NaviconMDM.dbo.CodesMappingDetails M2 on M2.EntityName='Asset' collate Cyrillic_General_CI_AS 
  and M2.ClientName='SPD' collate Cyrillic_General_CI_AS 
  and M2.MasterCode=M1.MasterCode 
left join [SPD-NAV].GL_SPD.dbo.Analit A on A.id=M2.ClientId
--проставим код Тикера актива из СПД + id Тикера актива из СПД
--select TF.*,
update TF set
  SPD_CODE =  case  --  код Тикера актива из СПД
  when SPD_CODER_NAME='ЗАО "ФБ ММВБ"' then A.Text04
  when SPD_CODER_NAME='НКО ЗАО НРД' then A.Text09
  when SPD_CODER_NAME='ЗАО "ДКК"' then A.Text07
  when SPD_CODER_NAME='ФСФР России' then A.Text12
  when SPD_CODER_NAME='ОАО "Фондовая биржа РТС"' then A.Text05
  when CODER_NAME='НП "РТС" (Классический рынок)' then A.Text02  --с этим кодировщиком надо уточнить
  when CODER_NAME='Санкт-Петербургская валютная биржа' then A.Text03 --с этим кодировщиком надо уточнить
 end,
  SPD_TICKER = case  --  id Тикера акт
DROP TRIGGER IF EXISTS players_by_platform_and_time_trigger#
CREATE TRIGGER players_by_platform_and_time_trigger
AFTER INSERT ON rpt_players_by_platform_and_time
FOR EACH ROW
BEGIN
  DECLARE source_val varchar(255) DEFAULT '';
  
  SELECT s.SOURCE into source_val
		FROM rpt_account_sources_mv s
		WHERE s.ACCOUNT_ID = NEW.ACCOUNT_ID;
  INSERT INTO rpt_players_by_platform_and_time_count(PERIOD,AUDIT_DATE,GAME_TYPE,PLATFORM,PLAYERS,SOURCE)
  	VALUES(NEW.PERIOD,NEW.AUDIT_DATE,NEW.GAME_TYPE,
  		IF(NEW.PLATFORM = '*' , '*', IF(NEW.PLATFORM = 'IOS','iOS',IF(NEW.PLATFORM = 'ANDROID', 'Android', 'Web'))),1,IFNULL(source_val,'Natural'))
  	ON DUPLICATE KEY
	  	UPDATE PLAYERS = PLAYERS+1;
	  	
  INSERT INTO rpt_players_by_platform_and_time_count_all_sources(PERIOD,AUDIT_DATE,GAME_TYPE,PLATFORM,PLAYERS)
  	VALUES(NEW.PERIOD,
  		IF(NEW.PERIOD = 'mon',NEW.AUDIT_DATE - INTERVAL DAYOFMONTH(NEW.AUDIT_DATE) - 1 DAY,
		IF(NEW.PERIOD = 'week',NEW.AUDIT_DATE - INTERVAL WEEKDAY(NEW.AUDIT_DATE) day, NEW.AU
REVOKE ALL ON DATABASE nasa FROM nasa_read;
-- public schema
REVOKE ALL ON SCHEMA public FROM nasa_read;
REVOKE ALL ON ALL SEQUENCES IN SCHEMA public FROM nasa_read;
REVOKE ALL ON ALL TABLES IN SCHEMA public FROM nasa_read;
REVOKE ALL ON ALL FUNCTIONS IN SCHEMA public FROM nasa_read;
ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE ALL ON TABLES FROM nasa_read;
ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE ALL ON SEQUENCES FROM nasa_read;
ALTER DEFAULT PRIVILEGES IN SCHEMA public REVOKE ALL ON FUNCTIONS FROM nasa_read;
-- data SCHEMA
REVOKE ALL ON SCHEMA data FROM nasa_read;
REVOKE ALL ON ALL SEQUENCES IN SCHEMA data FROM nasa_read;
REVOKE ALL ON ALL TABLES IN SCHEMA data FROM nasa_read;
REVOKE ALL ON ALL FUNCTIONS IN SCHEMA data FROM nasa_read;
ALTER DEFAULT PRIVILEGES IN SCHEMA data REVOKE ALL ON TABLES FROM nasa_read;
ALTER DEFAULT PRIVILEGES IN SCHEMA data REVOKE ALL ON SEQUENCES FROM nasa_read;
ALTER DEFAULT PRIVILEGES IN SCHEMA data REVOKE ALL ON FUNCTIONS FROM nasa_read;
DROP
CREATE DATABASE IF NOT EXISTS fst;
USE fst;
GRANT ALL PRIVILEGES ON fst.* TO 't99342'@'localhost' IDENTIFIED BY 't99342';
DROP TABLE IF EXISTS `NewToCategory`;
DROP TABLE IF EXISTS `UserLikesNew`;
DROP TABLE IF EXISTS `Category`;
DROP TABLE IF EXISTS `New`;
DROP TABLE IF EXISTS `User`;
CREATE TABLE `User` (
    id     INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(250)
    -- ...
) COLLATE 'utf8mb4_general_ci';;
CREATE TABLE `New` (
    id      INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    content VARCHAR(243)
    -- ...
) COLLATE 'utf8mb4_general_ci';
-- Если запись существует, пользователю новость нравится
CREATE TABLE `UserLikesNew` (
    userId      INT UNSIGNED,
    newId       INT UNSIGNED,
    lastLiked   BIGINT UNSIGNED NULL DEFAULT NULL,
    PRIMARY KEY pk(newId, userId),
    INDEX       userLike(userId),
    FOREIGN KEY fkLikeUser(userId) REFERENCES `User`(id) ON DELETE CASCADE ON UPDATE RESTRICT,
    FOREIGN KEY fkLikeNew(newId) REFERENCES `New`(id) ON DELETE CAS
BEGIN
MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2007' KEY, 
        'PRTR-Meldung 2007' NAME,
        'PRTR-Meldung 2007' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);
MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2008' KEY, 
        'PRTR-Meldung 2008' NAME,
        'PRTR-Meldung 2008' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    W

    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);
MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2009' KEY, 
        'PRTR-Meldung 2009' NAME,
        'PRTR-Meldung 2009' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);
MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2010' KEY, 
        'PRTR-Meldung 2010' NAME,
        'PRTR-Meldung 2010' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
 

   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NEW_TAG.TAGGROUP_KEY);
MERGE INTO TAG EXISTING_TAG USING
  (SELECT 
        '2011' KEY, 
        'PRTR-Meldung 2011' NAME,
        'PRTR-Meldung 2011' DESCRIPTION,
        TAGGROUP.ID TAGGROUP,
        TAGGROUP.KEY TAGGROUP_KEY
   FROM TAGGROUP
   WHERE TAGGROUP.KEY = 'EPRTR.NOTIFICATION_PERIOD') NEW_TAG ON (EXISTING_TAG.KEY = NEW_TAG.KEY
   AND EXISTING_TAG.TAGGROUP = NEW_TAG.TAGGROUP) 
    WHEN NOT matched THEN insert(KEY, NAME, DESCRIPTION, TAGGROUP, TAGGROUP_KEY)
    VALUES(NEW_TAG.KEY, NEW_TAG.NAME,
                        NEW_TAG.DESCRIPTION,
                        NEW_TAG.TAGGROUP,
                        NE
﻿ DECLARE	@job_name			sysname
			,@job_id			uniqueidentifier
			,@output_file_name	nvarchar(200)
  
 SET		@job_name			= 'APPL - PumpAudio DB Refresh'
 -- GET JOB_ID FROM JOB NAME
 SELECT		@job_id				= job_id
 FROM		msdb.dbo.sysjobs
 WHERE		name = @job_name
-- GET EXISTING STEP1 OUTPUT FILE NAME
SELECT		@output_file_name	= output_file_name 
From		msdb.dbo.sysjobsteps
WHERE		job_id = @job_id
	AND		step_id = 1
exec msdb.dbo.sp_add_jobstep @job_name = @job_name
		,@step_id			= 1
		,@step_name			= 'Check for Production Environment'
		,@subsystem			= 'TSQL'
		,@command			= 'IF (SELECT [env_detail] FROM [dbaadmin].[dbo].[Local_ServerEnviro] WHERE [env_type] = ''ENVname'') != ''production'' RAISERROR(''DBA INFO: JOB NOT NEEDED IN NON-PRODUCTION ENVIRONMENT, ABORTING.'',16,-1) WITH LOG'
		,@on_success_action	= 3 -- GO TO NEXT STEP
		,@on_fail_action	= 1 -- EXIT WITH SUCCESS
		,@output_file_name	= @output_file_name
		,@flags				= 38 -- Append Output = 2, Write tsql output = 4, Write all output =
﻿USE [Fox_2014]
GO
/****** Object:  Table [dbo].[ShowDate]    Script Date: 10/02/2016 18:21:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ShowDate](
	[Id] [int] IDENTITY(10000,1) NOT FOR REPLICATION NOT NULL,
	[dtDateOfShow] [datetime] NOT NULL,
	[ShowTime] [varchar](50) NULL,
	[bLateNightShow] [bit] NOT NULL,
	[TShowId] [int] NOT NULL,
	[bActive] [bit] NOT NULL,
	[PricingText] [varchar](500) NULL,
	[TicketUrl] [varchar](500) NULL,
	[TAgeId] [int] NOT NULL,
	[TStatusId] [int] NOT NULL,
	[MenuBilling] [varchar](300) NULL,
	[bAutoBilling] [bit] NOT NULL,
	[dtStamp] [datetime] NOT NULL,
 CONSTRAINT [PK_ShowDateTime] PRIMARY KEY CLUSTERED 
	[Id] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 90) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
ALTER TABLE [dbo].[ShowDate]  WITH NOCHECK ADD  CONSTRAINT [FK_ShowDate_Age] FOREIGN KEY([TA

REFERENCES [dbo].[Age] ([Id])
GO
ALTER TABLE [dbo].[ShowDate] CHECK CONSTRAINT [FK_ShowDate_Age]
GO
ALTER TABLE [dbo].[ShowDate]  WITH NOCHECK ADD  CONSTRAINT [FK_ShowDate_Show] FOREIGN KEY([TShowId])
REFERENCES [dbo].[Show] ([Id])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[ShowDate] CHECK CONSTRAINT [FK_ShowDate_Show]
GO
ALTER TABLE [dbo].[ShowDate]  WITH NOCHECK ADD  CONSTRAINT [FK_ShowDate_ShowStatus] FOREIGN KEY([TStatusId])
REFERENCES [dbo].[ShowStatus] ([Id])
GO
ALTER TABLE [dbo].[ShowDate] CHECK CONSTRAINT [FK_ShowDate_ShowStatus]
GO
ALTER TABLE [dbo].[ShowDate] ADD  CONSTRAINT [DF_ShowDate_bLateNightShow]  DEFAULT ((0)) FOR [bLateNightShow]
GO
ALTER TABLE [dbo].[ShowDate] ADD  CONSTRAINT [DF_ShowDate_bActive]  DEFAULT ((1)) FOR [bActive]
GO
ALTER TABLE [dbo].[ShowDate] ADD  CONSTRAINT [DF_ShowDate_TAgesId]  DEFAULT ((10000)) FOR [TAgeId]
GO
ALTER TABLE [dbo].[ShowDate] ADD  CONSTRAINT [DF_ShowDate_TStatusId]  DEFAULT ((10000)) FOR [TStatusId]
GO
ALTER TABLE [dbo].[ShowDate] ADD  
use nextbook;
CREATE TABLE books (
  	isbn13 VARCHAR(100) NOT NULL ,
	title VARCHAR(255) NOT NULL ,
	author VARCHAR(100) ,
	pub_nm VARCHAR(100) ,
	link VARCHAR(255) ,
	cover_l_url VARCHAR(255) ,
	category VARCHAR(100) NOT NULL ,
	PRIMARY KEY (isbn13));
use nextbook;
INSERT INTO books(isbn, title, author, publisher, category)
VALUES ('978-86-6077-438-4','미래를 바꾼 아홉가지 알고리즘', '존 맥코빅 지음 / 민병교 옮김', '에이콘', '1');
INSERT INTO books(isbn, title, author, publisher, category)
VALUES ('978-89-8437-075-3','구해줘', '기욤 뮈소 지음 / 윤미연 옮김', '밝은세상', '2');
INSERT INTO books(isbn, title, author, publisher, category)
VALUES ('978-89-509-2629-8','생각 버리기 연습', '코이케 류노스케 지음 / 유윤환 옮김', '21세기북스', '3');
use nextbook;
CREATE TABLE read_books (
	read_book_id INT(11) NOT NULL AUTO_INCREMENT,
  	username VARCHAR(45) NOT NULL ,
	isbn13 VARCHAR(45) NOT NULL ,
	PRIMARY KEY (read_book_id),
	FOREIGN KEY (username) REFERENCES users (username),
	FOREIGN KEY (isbn13) REFERENCES books (isbn13));
use nextbook;
INSERT INTO read_book
DROP TABLE IF EXISTS TX_CHANGE_LOGS;
CREATE TABLE TX_CHANGE_LOGS(
	OBJ_CLASS varchar(255) NOT NULL,
	OBJ_ID int(11) NOT NULL,
	OBJ_ATTR varchar(255) NOT NULL,
	TX_NUMBER int(11)
) ENGINE=InnoDB;
DROP TABLE IF EXISTS LAST_TX_PROCESSED;
CREATE TABLE LAST_TX_PROCESSED(
        SERVER varchar(255) NOT NULL,
	LAST_TX int(11) NOT NULL,
	LAST_UPDATE timestamp
) ENGINE=InnoDB;
CREATE TABLE `TRANSACTION_STATISTICS` (
  `SERVER` varchar(255) NOT NULL default '',
  `NUM_REPORT` int(11) NOT NULL,
  `NUM_READS` int(11) NOT NULL,
  `NUM_WRITES` int(11) NOT NULL,
  `NUM_ABORTS` int(11) NOT NULL,
  `NUM_CONFLICTS` int(11) NOT NULL,
  `SECONDS` int(11) NOT NULL,
  `STATS_WHEN` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `READ_ONLY_READS_MIN` int(11),
  `READ_ONLY_READS_MAX` int(11),
  `READ_ONLY_READS_SUM` BIGINT,
  `READ_WRITE_READS_MIN` int(11),
  `READ_WRITE_READS_MAX` int(11),
  `READ_WRITE_READS_SUM` BIGINT,
  `READ_WRITE_WRITES_MIN` int(11),
  `READ_WRITE_WRITES_MAX` int(11),
  `READ_WRITE_WR
-- Drop the existing table (if any)
DROP TABLE "CS414S16"."TEST_TAKEN";
--------------------------------------------------------
--  DDL for Table TEST_TAKEN
--------------------------------------------------------
  CREATE TABLE "CS414S16"."TEST_TAKEN" 
   (	"TEST_TAKEN_ID" NUMBER, 
	"ENROLLMENT_ID" NUMBER, 
	"TEST_ID" NUMBER, 
	"POINTS_EARNED" NUMBER, 
	"GRADE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index TEST_TAKEN_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "CS414S16"."TEST_TAKEN_PK" ON "CS414S16"."TEST_TAKEN" ("TEST_TAKEN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 

  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table TEST_TAKEN
--------------------------------------------------------
  ALTER TABLE "CS414S16"."TEST_TAKEN" ADD CONSTRAINT "TEST_TAKEN_PK" PRIMARY KEY ("TEST_TAKEN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "CS414S16"."TEST_TAKEN" MODIFY ("TEST_ID" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."TEST_TAKEN" MODIFY ("ENROLLMENT_ID" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."TEST_TAKEN" MODIFY ("TEST_TAKEN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table TEST_TAKEN
----------------
---
name: _inherit_contingent_donor
description: |
 Returns all contingent donors for a given user with their priority.
returns: TABLE
returns_columns:
 -
  name: donor
  description: User from which contingents are inherited
  type: user.t_user
 -
  name: priority_list
  type: integer[]
  description:
parameters:
 -
  name: p_owner
  type: user.t_user
---
RETURN QUERY
WITH RECURSIVE contingent_donor(donor, priority_list, cycle_detector) AS
   -- cast to varchar, since arrays of t_user are not defined
   SELECT p_owner, ARRAY[]::integer[], ARRAY[CAST(p_owner AS varchar)]
   UNION
   SELECT
    curr.donor,
    prev.priority_list || curr.priority,
    cycle_detector || CAST(curr.donor AS varchar)
   FROM system.inherit_contingent AS curr
    JOIN contingent_donor AS prev
    ON
     prev.donor = curr.owner AND
     curr.donor <> ALL (prev.cycle_detector)
SELECT
 contingent_donor.donor,
 array_append(contingent_donor.priority_list, NULL)
FROM contingent_donor
-- Appending the NULL changes
INSERT INTO contacts(id, date_entered, date_modified, modified_user_id, created_by, description, deleted, assigned_user_id, salutation, first_name, title, department, phone_home, phone_mobile, phone_work, phone_fax, primary_address_street, primary_address_city, primary_adress_postalcode, primary_address_country, birthdate)
values (
                sb_SugarInsert.Append("id, ");
                sb_SugarInsert.Append("date_entered, ");
                sb_SugarInsert.Append("date_modified, ");
                sb_SugarInsert.Append("modified_user_id, ");
                sb_SugarInsert.Append("created_by, ");
                sb_SugarInsert.Append("description, ");
                sb_SugarInsert.Append("deleted, ");
                sb_SugarInsert.Append("assigned_user_id, ");
                sb_SugarInsert.Append("salutation, ");
                sb_SugarInsert.Append("first_name, ");
                sb_SugarInsert.Append("last_name, ");
                sb_SugarInsert.Append("title, ");
     
SELECT 't1', path, ST_AsText(geom)
FROM (
  SELECT (ST_Dump(g.geom)).*
  FROM
    (SELECT
       'POINT (0 9)'::geometry AS geom
    ) AS g
  ) j;
SELECT 't2', path, ST_AsText(geom)
FROM (
  SELECT (ST_Dump(g.geom)).*
  FROM
    (SELECT
       'LINESTRING (
                0 0,
                0 9,
                9 9,
                9 0,
                0 0
            )'::geometry AS geom
    ) AS g
  ) j;
SELECT 't3', path, ST_AsText(geom)
FROM (
  SELECT (ST_Dump(g.geom)).*
  FROM
    (SELECT
       'POLYGON ((
                0 0,
                0 9,
                9 9,
                9 0,
                0 0
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT 't4', path, ST_AsText(geom)
FROM (
  SELECT (ST_Dump(g.geom)).*
  FROM
    (SELECT
       'TRIANGLE ((
                0 0,
                0 9,
                9 0,
                0 0
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT 't5', path, ST_AsText(geom)
FROM (
  SELECT (ST_Dump(g.geom)).*
  FROM

    (SELECT
       'POLYGON ((
                0 0,
                0 9,
                9 9,
                9 0,
                0 0
            ), (
                1 1,
                1 3,
                3 2,
                1 1
            ), (
                7 6,
                6 8,
                8 8,
                7 6
            ))'::geometry AS geom
    ) AS g
  ) j;
SELECT 't6', path, ST_AsText(geom)
FROM (
  SELECT (ST_Dump(g.geom)).*
  FROM
    (SELECT
       'MULTIPOLYGON (((
                0 0,
                0 3,
                4 3,
                4 0,
                0 0
            )), ((
                2 4,
                1 6,
                4 5,
                2 4
            ), (
                7 6,
                6 8,
                8 8,
                7 6
            )))'::geometry AS geom
    ) AS g
  ) j;
SELECT 't7', path, ST_AsEWKT(geom)
FROM (
  SELECT (ST_Dump(g.geom)).*
   FROM
     (SELECT
       'POLYHEDRALSURFACE (((
                

                0 0 1,
                0 1 1,
                0 1 0,
                0 0 0
            )), ((
                0 0 0,
                0 1 0,
                1 1 0,
                1 0 0,
                0 0 0
            ))
            )'::geometry AS geom
   ) AS g
  ) j;
SELECT 't8', path, ST_AsEWKT(geom)
FROM (
  SELECT (ST_Dump(g.geom)).*
   FROM
     (SELECT
       'TIN (((
                0 0 0,
                0 0 1,
                0 1 0,
                0 0 0
            )), ((
                0 0 0,
                0 1 0,
                1 1 0,
                0 0 0
            ))
            )'::geometry AS geom
   ) AS g
  ) j;
SELECT 't9', path, ST_AsText(geom)
FROM (
  SELECT (ST_Dump(g.geom)).*
  FROM
    (SELECT
       'GEOMETRYCOLLECTION(
          POINT(99 98),
          LINESTRING(1 1, 3 3),
          POLYGON((0 0, 0 1, 1 1, 0 0)),
          POLYGON((0 0, 0 9, 9 9, 9 0, 0 0), (5 5, 5 6, 6 6, 5 5)),
          MULTIPOLYGON(((0 0, 0 9, 9 9, 9 0, 0 0), (5
CREATE DATABASE DataCollectionSystem
GO
USE [DataCollectionSystem]
GO
CREATE TABLE Operators
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](20) NOT NULL,
	[Description] [nvarchar](100) NOT NULL,
	[AlgorithmModel] [nvarchar](50) NOT NULL,
	[OperatorModel] [nvarchar](50) NOT NULL,
	PRIMARY KEY (ID)
GO
CREATE TABLE Realizations
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](20) NOT NULL,
	[SignName] [nvarchar](1) NOT NULL,
	PRIMARY KEY (ID)
GO
CREATE TABLE Operations
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](20) NOT NULL,
	[Description] [nvarchar](100) NOT NULL,
	[AlgorithmModel] [nvarchar](100) NOT NULL,
	PRIMARY KEY (ID)
GO
INSERT INTO Operators (Name, Description, AlgorithmModel, OperatorModel)
		VALUES ('A(B)', 'íà÷àëî âûïîëíåíèÿ', 'A(B)', 'A(B)');
INSERT INTO Operators (Name, Description, AlgorithmModel, OperatorModel)
		VALUES ('A(E)', 'êîíåö âûïîëíåíèÿ', 'A(E)', 'A(E)');
INSERT INTO Operators (Name, Description, AlgorithmModel, OperatorModel)
		VALUES (

INSERT INTO Operators (Name, Description, AlgorithmModel, OperatorModel)
		VALUES ('>>', 'êîíåö öûêëà', '>>', 'F(op)[>>]');
INSERT INTO Operators (Name, Description, AlgorithmModel, OperatorModel)
		VALUES ('[', 'îòêðûâàþùÿÿ ñêîáêà', '[', '[');
INSERT INTO Operators (Name, Description, AlgorithmModel, OperatorModel)
		VALUES (']', 'çàêðûâàþùÿÿ ñêîáêà', ']', ']');
INSERT INTO Operators (Name, Description, AlgorithmModel, OperatorModel)
		VALUES ('||', 'èëè', '||', '||');
GO
INSERT INTO Realizations (Name, SignName)
		VALUES ('àïïàðàòíàÿ', 'à');
INSERT INTO Realizations (Name, SignName)
		VALUES ('ïðîãðàììíàÿ', 'p');
GO
INSERT INTO Operations (Name, Description, AlgorithmModel)
		VALUES ('C(p1/p2)', 'èíèöèàëèçàöèÿ êîíñòàíòû', 'E(C;(p1);(p2))');
INSERT INTO Operations (Name, Description, AlgorithmModel)
		VALUES ('F(p1,p2)', 'èñ÷èñëåíèå ôóíêöèè', 'E(C:N(p1);(p1);(p2))');
INSERT INTO Operations (Name, Description, AlgorithmModel)
		VALUES ('I(p1/p2)', 'èçìåðåíèÿ', 'E(S:N,g;(p1);(p2,p3))')
-- ----------------------------
-- Table structure for `random_dungeons`
-- ----------------------------
DROP TABLE IF EXISTS `random_dungeons`;
CREATE TABLE `random_dungeons` (
  `src_x` int(10) unsigned NOT NULL,
  `src_y` int(10) unsigned NOT NULL,
  `src_map_id` int(10) unsigned NOT NULL,
  `new_x1` int(10) unsigned NOT NULL DEFAULT '0',
  `new_y1` int(10) unsigned NOT NULL DEFAULT '0',
  `new_map_id1` int(10) unsigned NOT NULL DEFAULT '0',
  `new_x2` int(10) unsigned NOT NULL DEFAULT '0',
  `new_y2` int(10) unsigned NOT NULL DEFAULT '0',
  `new_map_id2` int(10) unsigned NOT NULL DEFAULT '0',
  `new_x3` int(10) unsigned NOT NULL DEFAULT '0',
  `new_y3` int(10) unsigned NOT NULL DEFAULT '0',
  `new_map_id3` int(10) unsigned NOT NULL DEFAULT '0',
  `new_x4` int(10) unsigned NOT NULL DEFAULT '0',
  `new_y4` int(10) unsigned NOT NULL DEFAULT '0',
  `new_map_id4` int(10) unsigned NOT NULL DEFAULT '0',
  `new_x5` int(10) unsigned NOT NULL DEFAULT '0',
  `new_y5` int(10) unsigned NOT NULL
USE [master]
GO
/****** Object:  Database [<!Freetime.Model!>]    Script Date: 07/01/2011 12:10:55 ******/
CREATE DATABASE [<!Freetime.Model!>] ON  PRIMARY 
( NAME = N'<!Freetime.Model!>', FILENAME = N'<!Freetime.Database.Location!>\<!Freetime.Model!>.mdf' , SIZE = 2048KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'<!Freetime.Model!>_log', FILENAME = N'<!Freetime.Database.Location!>\<!Freetime.Model!>_log.ldf' , SIZE = 1024KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
GO
ALTER DATABASE [<!Freetime.Model!>] SET COMPATIBILITY_LEVEL = 100
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [<!Freetime.Model!>].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [<!Freetime.Model!>] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET ARITHAB

GO
ALTER DATABASE [<!Freetime.Model!>] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET AUTO_CREATE_STATISTICS ON 
GO
ALTER DATABASE [<!Freetime.Model!>] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [<!Freetime.Model!>] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [<!Freetime.Model!>] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET  DISABLE_BROKER 
GO
ALTER DATABASE [<!Freetime.Model!>] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [<!Freetime.Model!>] SET ALLOW_SNAPSH
DROP TRIGGER IF EXISTS T_edit_insert;
DROP TRIGGER IF EXISTS T_edit_update;
DELIMITER //
CREATE TRIGGER T_edit_insert AFTER INSERT
ON edits
FOR EACH ROW 
BEGIN
	CALL F_Update_Tag_Scores((SELECT edit_origin_id FROM edits));
END;//
DELIMITER ;
CREATE TRIGGER T_edit_update BEFORE UPDATE
ON edits
FOR EACH ROW
SET NEW.edit_dist=(case when (NEW.edit_origin_id <> 0 AND NEW.edit_origin_id <> NEW.id) then levenshtein(NEW.description,(SELECT description FROM edits WHERE( id=NEW.edit_origin_id OR edit_origin_id=NEW.edit_origin_id) ORDER BY id DESC LIMIT 1)) else 0 END);
SET NEW.edit_dist=(case when (NEW.edit_origin_id <> 0 AND NEW.edit_origin_id <> NEW.id) then levenshtein(NEW.description,(SELECT description FROM edits WHERE( id=NEW.edit_origin_id OR edit_origin_id=NEW.edit_origin_id) ORDER BY id DESC LIMIT 1)) else 0 END);
	SET NEW.descr_real_percent_contrib = ROUND(100*(LENGTH((SELECT description FROM edits WHERE( id=NEW.edit_origin_id OR edit_origin_id=NEW.edit_origin_id) ORDER BY id DESC LIMI
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
SET ANSI_PADDING ON
GO
CREATE TABLE [Production].[ProductModel] (
		[ProductModelID]         [int] IDENTITY(1, 1) NOT NULL,
		[Name]                   [dbo].[Name] NOT NULL,
		[CatalogDescription]     [xml](CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,
		[Instructions]           [xml](CONTENT [Production].[ManuInstructionsSchemaCollection]) NULL,
		[rowguid]                [uniqueidentifier] NOT NULL ROWGUIDCOL,
		[ModifiedDate]           [datetime] NOT NULL,
		CONSTRAINT [PK_ProductModel_ProductModelID]
		PRIMARY KEY
		CLUSTERED
		([ProductModelID])
	ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'PK_ProductModel_ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Clustered index created by a primary key constraint.', 'SCHEMA', N'Production', 'TABLE', 

GO
ALTER TABLE [Production].[ProductModel]
	ADD
	CONSTRAINT [DF_ProductModel_ModifiedDate]
	DEFAULT (getdate()) FOR [ModifiedDate]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_ModifiedDate'
GO
ALTER TABLE [Production].[ProductModel]
	ADD
	CONSTRAINT [DF_ProductModel_rowguid]
	DEFAULT (newid()) FOR [rowguid]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of NEWID()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_rowguid'
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name]
	ON [Production].[ProductModel] ([Name])
	ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Unique nonclustered index.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'INDEX', N'AK_ProductModel_Name'
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_rowguid]
	ON [Production].[ProductModel] ([row

	ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Unique nonclustered index. Used to support replication samples.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'INDEX', N'AK_ProductModel_rowguid'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Detailed product catalog information in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'CatalogDescription'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Manufacturing instructions in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Instructions'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Product model description.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Name'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key for ProductModel records.', 'S
select xt.create_view('xt.quheadinfo', $$
  select quhead.*,  
    xt.quote_schedule_date(quhead) as schedule_date,  
    xt.quote_freight_weight(quhead) as freight_weight,  
    xt.quote_subtotal(quhead) as subtotal,  
    xt.quote_tax_total(quhead) as tax_total,  
    xt.quote_total(quhead) as total,  
    xt.quote_margin(quhead) as margin,
    ophead_number,
    customer_prospect.number as cust_number 
  from quhead
    left join xt.customer_prospect on customer_prospect.id = quhead_cust_id
    left join ophead on ophead_id = quhead_ophead_id;
$$, false);
create or replace rule "_INSERT" as on insert to xt.quheadinfo do instead 
insert into quhead (
  quhead_id,
  quhead_number,
  quhead_cust_id,
  quhead_quotedate,
  quhead_shipto_id,
  quhead_shiptoname,
  quhead_shiptoaddress1,
  quhead_shiptoaddress2,
  quhead_shiptoaddress3,
  quhead_shiptocity,
  quhead_shiptostate,
  quhead_shiptozipcode,
  quhead_shiptophone,
  quhead_salesrep_id,
  quhead_terms_id,
  quhead_freight,
  quhea

  quhead_shipcomments,
  quhead_billtoname,
  quhead_billtoaddress1,
  quhead_billtoaddress2,
  quhead_billtoaddress3,
  quhead_billtocity,
  quhead_billtostate,
  quhead_billtozip,
  quhead_commission,
  quhead_custponumber,
  quhead_fob,
  quhead_shipvia,
  quhead_warehous_id,
  quhead_packdate,
  quhead_prj_id,
  quhead_misc,
  quhead_misc_accnt_id,
  quhead_misc_descrip,
  quhead_billtocountry,
  quhead_shiptocountry,
  quhead_curr_id,
  quhead_imported,
  quhead_expire,
  quhead_calcfreight,
  quhead_shipto_cntct_id,
  quhead_shipto_cntct_honorific,
  quhead_shipto_cntct_first_name,
  quhead_shipto_cntct_middle,
  quhead_shipto_cntct_last_name,
  quhead_shipto_cntct_suffix,
  quhead_shipto_cntct_phone,
  quhead_shipto_cntct_title,
  quhead_shipto_cntct_fax,
  quhead_shipto_cntct_email,
  quhead_billto_cntct_id,
  quhead_billto_cntct_honorific,
  quhead_billto_cntct_first_name,
  quhead_billto_cntct_middle,
  quhead_billto_cntct_last_name,
  quhead_billto_cntct_suffix,
  quhead_bi

  quhead_billto_cntct_title,
  quhead_billto_cntct_fax,
  quhead_billto_cntct_email,
  quhead_taxzone_id,
  quhead_taxtype_id,
  quhead_ophead_id,
  quhead_status,
  quhead_saletype_id,
  quhead_shipzone_id
) values (
  new.quhead_id,
  new.quhead_number,
  new.quhead_cust_id,
  new.quhead_quotedate,
  new.quhead_shipto_id,
  new.quhead_shiptoname,
  new.quhead_shiptoaddress1,
  new.quhead_shiptoaddress2,
  new.quhead_shiptoaddress3,
  new.quhead_shiptocity,
  new.quhead_shiptostate,
  new.quhead_shiptozipcode,
  new.quhead_shiptophone,
  new.quhead_salesrep_id,
  new.quhead_terms_id,
  new.quhead_freight,
  new.quhead_ordercomments,
  new.quhead_shipcomments,
  new.quhead_billtoname,
  new.quhead_billtoaddress1,
  new.quhead_billtoaddress2,
  new.quhead_billtoaddress3,
  new.quhead_billtocity,
  new.quhead_billtostate,
  new.quhead_billtozip,
  new.quhead_commission,
  new.quhead_custponumber,
  new.quhead_fob,
  new.quhead_shipvia,
  new.quhead_warehous_id,
  new.quhead_packdate,
  
/*group inserts*/
insert into permissions(action, target) VALUES
/*agency access permissions*/       
('record', 'agency'), /*1 : Admin*/
('view', 'agency'), /*2 : RO, Beam, Admin*/
('record', 'agency submitted requirements'),  /*3 : RO, Beam, Admin*/
('view', 'agency submitted requirements'), /*4 :RO, Beam, Admin*/
('process', 'monthly cash allocation'), /*5 : Beam*/
('record', 'monthly report'), /*6 : Beam*/
('view', 'allotment releases'), /*7 : Beam*/
('record', 'allotment releases'), /* 8: Beam */
('view', 'request received'), /*9 : RO, Beam*/
('record', 'request received'), /*10 : RO*/
('record', 'wfp'), /*11: Beam*/
('print', 'comprehensive performance report'), /* 12: Beam*/
/** General reports : BPAC/BEAM**/
('print', 'running balances'), /*13*/
('print', 'total releases'), /*14*/
('print', 'monthly reports'), /*15*/
('print', 'quarterly report'), /*16*/
('print', 'analysis report'), /*17*/
('print', 'fund distribution'), /*18*/
('print', 'agencies with complete requirements'),

('print', 'agencies with incomplete requirements'), /*20*/
('print', 'transaction history'),
/*user permissions*/
('record', 'user'), /*21*/
('view', 'user'); /*22*/
insert into groups(name) VALUES
('Recording Officer'),
('BEAM'),
('BPAC'),
('Administrator');
insert into group_perm(group_id, permission_id) VALUES
/*recording officer*/
(1, 2),
(1, 3),
(1, 4),
(1, 6),
(1, 9),
(1, 10),
(1, 19),
(1, 20),
/*BEAM*/
(2, 1),
(2, 2),
(2, 3),
(2, 4),
(2, 5),
(2, 6),
(2, 7),
(2, 8),
(2, 9),
(2, 10),
(2, 11),
(2, 12),
(2, 13),
(2, 14),
(2, 15),
(2, 16),
(2, 17),
(2, 18),
(2, 19),
(2, 20),
/*BPAC*/
(3, 18),
(3, 7),
(3, 13),
(3, 14),
(3, 15),
(3, 16),
(3, 17),
/*administrative director*/
(4, 1),
(4, 2),
(4, 3),
(4, 4),
(4, 5),
(4, 6),
(4, 7),
(4, 8),
(4, 9),
(4, 10),
(4, 11),
(4, 12),
(4, 13),
(4, 14),
(4, 15),
(4, 16),
(4, 17),
(4, 18),
(4, 19),
(4, 20),
(4, 21),
(4, 22);
insert into sector(name) values
('Environmental Conservation & Mgt & Human Settlement'),
('Regional Legislative Services'),
('A

('Health Services'),
('Education, Science & Technology'),
('Livelihood, Social Welfare and Protection Services'),
('Employment Promotion & Development & Industrial Peace'),
('Trade Industry & Investment Development'),
('Transportation & Communication Regulation Services'),
('Road Network, Public Infra & Other Development');
insert into quarterly_req(name)
values
('Statement of Allotment, Obligation and balances'),
('Status of Funds'),
('Reports of Detailed Disbursement'),
('Notice of Fund Transfer'),
('Narrative Accomplishment Reports');
/*views*/
CREATE VIEW user_permissions AS
SELECT auth_user.id, auth_user.username,
	groups.name, permissions.action, permissions.target
FROM auth_user
       INNER JOIN user_group ON
       user_group.user_id=auth_user.id
       INNER JOIN groups ON 
       groups.id = user_group.group_id
       INNER JOIN group_perm ON
       group_perm.group_id=groups.id
       INNER JOIN permissions ON 
       permissions.id=group_perm.permission_id;
create table p
﻿CREATE VIEW dbo.MoreThan10
AS
SELECT        dbo.Products.ProductName, COUNT(*) AS Expr1
FROM            dbo.Products INNER JOIN
                         dbo.[Order Details] ON dbo.Products.ProductID = dbo.[Order Details].ProductID
GROUP BY dbo.Products.ProductName
HAVING        (COUNT(*) > 10)
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
        

      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfigurati

         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Products"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 212
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Order Details"
            Begin Extent = 
               Top = 6
               Left = 250
               Bottom = 136
               Right = 420
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append =
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table dumb_model (
  id                        bigint auto_increment not null,
  text                      varchar(255),
  constraint pk_dumb_model primary key (id))
create table dumb_relation_model (
  id                        bigint auto_increment not null,
  value                     varchar(255),
  constraint pk_dumb_relation_model primary key (id))
create table dumb_model_dumb_relation_model (
  dumb_model_id                  bigint not null,
  dumb_relation_model_id         bigint not null,
  constraint pk_dumb_model_dumb_relation_model primary key (dumb_model_id, dumb_relation_model_id))
alter table dumb_model_dumb_relation_model add constraint fk_dumb_model_dumb_relation_model_dumb_model_01 foreign key (dumb_model_id) references dumb_model (id) on delete restrict on update restrict;
alter table dumb_model_dumb_relation_model add constraint fk_dumb_model_d
CREATE VIEW ingredients_per_day_view AS SELECT 
  ingredients_log_view.day,
  SUM(ingredients_log_view.amount) as amount,
  SUM(ingredients_log_view.amount_with_consumption) as amount_with_consumption,
  ingredients_log_view.ingredient_id,
  ingredients_log_view.ingredient_price as cost_per_unit,
  @SUM(ingredients_log_view.amount) * ingredients_log_view.ingredient_price as total_cost,
  @SUM(ingredients_log_view.amount_with_consumption) * ingredients_log_view.ingredient_price as total_cost_with_consumption,
  ingredients.name,
  ingredients.code,
  ingredients.unit,
  ingredients.supply_flag,
  suppliers.name_abbr AS supplier_short,
  suppliers.name AS supplier
FROM ingredients_log_view
LEFT JOIN ingredients ON ingredients.id = ingredients_log_view.ingredient_id
LEFT JOIN suppliers ON suppliers.id = ingredients.supplier_id
GROUP BY ingredients_log_view.day, ingredients_log_view.ingredient_id,  ingredients_log_view.ingredient_price, ingredients.name, ingredients.code, ingredients.suppl
  CREATE OR REPLACE  VIEW HV_NAV_COMPUTATION (SCHEME, SCHCLASS, SCH_AUM_CR, SCH_UNITS_CR, AUM_CR, UNITS_CR, NAV, TOTAL_EXPENSE, PLANWISE_INCOME, MGMT_RECUR_EXP, NET_ADDITION_PLANWISE, NAV_MOV, MANUAL_CURRENT_DAY_NAV, WKNAV_SCHEME, WEEKEND_DT, SCHEME_NAME, NAME, TOTAL_INCOME) AS 
  SELECT hv_aum_units_nav.SCHEME,
  hv_aum_units_nav.SCHCLASS,
  SCH_AUM.SCH_AUM_Cr,
  SCH_AUM.SCH_UNITS_Cr,
  ROUND((hv_aum_units_nav.LNA             /10000000),8) AUM_Cr,
  ROUND((NVL(hv_aum_units_nav.ACNT_UNIT,0)/10000000),8) UNITS_Cr,
  ROUND(hv_aum_units_nav.NAV,8) NAV,
  HV_TOTAL_EXPENSE.TOTAL_EXPENSE,
  -- ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0)* ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000 PLANWISE_INCOME,
  Decode(SCH_AUM.SCH_AUM_Cr,0,0,ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0)* ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000)PLANWISE_INCOME,
  --(-((hv_aum_units_nav.LNA/10000000) + ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_A

  decode(SCH_AUM.SCH_AUM_Cr,0,0,(-((hv_aum_units_nav.LNA/10000000) + ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0) * ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000)* NVL( HV_TOTAL_EXPENSE.TOTAL_EXPENSE,0))/365) MGMT_RECUR_EXP,
  --(ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0)          * ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000) + -((hv_aum_units_nav.LNA/10000000) + ((( ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr)/10000000))* (NVL( HV_TOTAL_EXPENSE.TOTAL_EXPENSE,0)/365) NET_ADDITION_PLANWISE,
  decode(SCH_AUM.SCH_AUM_Cr,0,0,(ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0)          * ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000) + -((hv_aum_units_nav.LNA/10000000) + ((( ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr)/10000000))* (NVL( HV_TOTAL_EXPENSE.TOTAL_EXPENSE,0)/365)) NET_ADDITION_PLANWISE,
  --ROUND(( (ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOT

  DECODE(SCH_AUM.SCH_AUM_Cr,0,0,ROUND(( (ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0) * ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000) + -((hv_aum_units_nav.LNA/10000000) + ((( ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr)/10000000))* ((NVL( HV_TOTAL_EXPENSE.TOTAL_EXPENSE,0)/365)/100))/(NVL(hv_aum_units_nav.ACNT_UNIT,0)/10000000),8))NAV_MOV,
  --(ROUND(( (ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0) * ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000) + -((hv_aum_units_nav.LNA/10000000) + ((( ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr)/10000000))* (NVL( HV_TOTAL_EXPENSE.TOTAL_EXPENSE,0)/365))/(NVL(hv_aum_units_nav.ACNT_UNIT,0)/10000000),8)+ hv_aum_units_nav.LAST_NAV) MANUAL_CURRENT_DAY_NAV,
  decode(SCH_AUM.SCH_AUM_Cr,0,0,(ROUND(( (ROUND( (( NVL(SUM(HV_SCHEME_INCOME.TOTAL_AMOUNT),0) * ROUND((hv_aum_units_nav.LNA/10000000),5))/ SCH_AUM.SCH_AUM_Cr),8)/10000000) + -((hv_aum_units_nav.L
CREATE TABLE os.ao_queue
  queue_id serial NOT NULL,
  status text NOT NULL check(status in ('queued', 'success', 'failed', 'processing')),
  queue_date timestamp without time zone NOT NULL,
  start_date timestamp without time zone,
  end_date timestamp,
  error_message text,
  num_rows int not null default 0,
--from os.job
  id int NOT NULL,
  refresh_type text NOT NULL,
  
  target_schema_name text,
  target_table_name text,
  target_append_only boolean NOT NULL,
  target_compressed boolean NOT NULL,
  target_row_orientation boolean NOT NULL,
  
  source_type text, 
  source_server_name text,
  source_instance_name text,
  source_port int, 
  source_database_name text,
  source_schema_name text,
  source_table_name text,
  source_user_name text,
  source_pass text,
  
  column_name text,
  sql_text text,
  snapshot boolean NOT NULL,
  deleted boolean NOT NULL DEFAULT FALSE,
  insert_id serial NOT NULL)
 WITH (appendonly=true)
:DISTRIBUTED_BY;
 --DISTRIBUTED BY (queue_id);
CREATE VIEW

SELECT queue_id, status, queue_date, start_date, end_date, error_message, 
       num_rows, id, refresh_type, target_schema_name, target_table_name, 
       target_append_only, target_compressed, target_row_orientation, 
       source_type, source_server_name, source_instance_name, source_port, 
       source_database_name, source_schema_name, source_table_name, 
       source_user_name, source_pass, column_name, sql_text, snapshot
FROM    (
        SELECT queue_id, status, queue_date, start_date, end_date, error_message, 
               num_rows, id, refresh_type, target_schema_name, target_table_name, 
               target_append_only, target_compressed, target_row_orientation, 
               source_type, source_server_name, source_instance_name, source_port, 
               source_database_name, source_schema_name, source_table_name, 
               source_user_name, source_pass, column_name, sql_text, snapshot,
               row_number() OVER (PARTITION BY queue_id ORDER BY ins
CREATE TABLE func_new_issue(
    change_id INTEGER NOT NULL,
    id INTEGER NOT NULL DEFAULT (nextval('topics')),
    topic_id INTEGER NOT NULL,
    issue_status_id INTEGER NOT NULL,
    title VARCHAR(1024) NOT NULL DEFAULT ''
);
CREATE TRIGGER
    func_new_issue_bi_1
BEFORE INSERT ON
    func_new_issue
FOR EACH ROW
BEGIN
    SELECT debug(
        'TRIGGER func_new_issue_bi_1',
        NEW.id,
        NEW.topic_id,
        NEW.issue_status_id,
        NEW.title,
        NEW.change_id
    );
    INSERT INTO issues(
        id
    )
    VALUES(
        NEW.topic_id
    );
    INSERT INTO
        issue_deltas(
            change_id,
            new,
            issue_id,
            project_id,
            issue_status_id,
            title
        )
    SELECT
        NEW.change_id,
        1,
        NEW.topic_id,
        issue_status.project_id,
        NEW.issue_status_id,
        NEW.title
    FROM
        issue_status
    WHERE
        issue_status.id = NEW.issue_status_id
    ;
   
/*
  Custom annotation of affymetrix chip porcine na30.
  See LabBook 10 May 10
*/
-- drop table tmp_affy_transcriptome;
-- This file produced by 20100510_bowtie_porcine_na30.sh
select readbowtie('C:/Tritume/porcine_na30_Sus_scrofa.Sscrofa9.56.cdna.all.bowtiemap', 'tmp_affy_transcriptome');
select * from tmp_affy_transcriptome limit 20;
create temp table affy_tome AS(
-- Extract probe_set_id and probe_id from full fasta name
select substring(read_name 
                 from position('probe_set_id:' in read_name)+13 for 
                 position('|' in read_name) - (position('probe_set_id:' in read_name)+13)
                 ) AS probe_set_id,
       substring(read_name 
                 from position('probe_id:' in read_name)+9 for 
                 length(read_name) - (position('probe_id:' in read_name)+8)
                 ) AS probe_id,        
* from tmp_affy_transcriptome
);
select * from affy_tome limit 10;
-- Extract annotate probes not previously reported from Biomart
drop tabl

create temp table new_affy AS(
select 
   affy_tome.probe_set_id, 
   affy_tome.refseq_name AS transcript_id, 
   count(probe_id) AS mapped_probes, -- Number of probes from probe_set_id matching this transcript
   no_probes -- Total number of probes in this probe_set_id
from affy_tome left join porcine_na30_ensembl on 
     -- Link to Biomart annotation
     affy_tome.probe_set_id = porcine_na30_ensembl.probe_set_id 
inner join 
     -- Number of probes in each probe_set_id
     (select count(probe_id) AS no_probes, probe_set_id from affy_tome group by probe_set_id) AS t1 on
     t1.probe_set_id = affy_tome.probe_set_id     
where porcine_na30_ensembl.probe_set_id is null
group by affy_tome.probe_set_id, affy_tome.refseq_name, no_probes
);
copy new_affy to 'C:/Tritume/affy_annotation.txt' with csv header delimiter E'\t';
-----------------------------------[ Tritume ]------------------------------------
select probe_set_id, count(transcript_id) from new_affy group by probe_set_id;
sele
﻿select *
from
        -- Lane changes to the right
        select
          l.subject as "subject",
          l.start as "lane_change_start",
          l.cross as "lane_change_cross",
          l.end as "lane_change_end",
          _flash.on,
          _flash.off,
          _flash.duration,
          l.start - _flash.on as "turnsignal_onset",
          l.end - _flash.off as "turnsignal_offset",
          l.direction,
          l.start_lane,
          l.end_lane
        from "2009-onrd-pta".lanechanges l, lateral (
          select
            min(unique_unix_timestamp) as "on",
            max(unique_unix_timestamp) as "off",
            max(unique_unix_timestamp) - min(unique_unix_timestamp) as "duration"
          from "2009-onrd-pta".daq d
          where d.subject_id = l.subject and
          d.unique_unix_timestamp between
            ( select greatest(max(_inner.end), l.start - 10)
              from "2009-onrd-pta".lanechanges _inner
              where _inner.end < l.start
   

            )
            and
            ( select least(min(_inner.start), l.end + 10)
              from "2009-onrd-pta".lanechanges _inner
              where _inner.start > l.end
              and _inner.subject = l.subject
            )
            and d.turn_indicator_flash = 2
        ) _flash
        where l.direction = 'R'
        union
        -- Lane changes to the left
        select
          l.subject as "subject",
          l.start as "lane_change_start",
          l.cross as "lane_change_cross",
          l.end as "lane_change_end",
          _flash.on,
          _flash.off,
          _flash.duration,
          l.start - _flash.on as "turnsignal_onset",
          l.end - _flash.off as "turnsignal_offset",
          l.direction,
          l.start_lane,
          l.end_lane
        from "2009-onrd-pta".lanechanges l, lateral (
          select
            min(unique_unix_timestamp) as "on",
            max(unique_unix_timestamp) as "off",
            max(unique_unix_time
CREATE TABLE [Production].[ProductModel]
[ProductModelID] [int] NOT NULL IDENTITY(1, 1),
[Name] [dbo].[Name] NOT NULL,
[CatalogDescription] [xml] (CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,
[Instructions] [xml] (CONTENT [Production].[ManuInstructionsSchemaCollection]) NULL,
[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (newid()),
[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (getdate())
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModel] ADD CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED  ([ProductModelID]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name] ON [Production].[ProductModel] ([Name]) ON [PRIMARY]
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_rowguid] ON [Production].[ProductModel] ([rowguid]) ON [PRIMARY]
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription] ON [Production].[Pro

GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_Instructions] ON [Production].[ProductModel] ([Instructions])
GO
EXEC sp_addextendedproperty N'MS_Description', N'Product model classification.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', NULL, NULL
GO
EXEC sp_addextendedproperty N'MS_Description', N'Detailed product catalog information in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'CatalogDescription'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Manufacturing instructions in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Instructions'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Product model description.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Name'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primar

GO
EXEC sp_addextendedproperty N'MS_Description', N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'rowguid'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of NEWID()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_rowguid'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'PK_ProductModel_ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Unique nonclustered index.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'INDEX', N'AK_ProductModel_Name'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Un
{Photoshop version 1.0.1, file: UDraw.p.inc
  Computer History Museum, www.computerhistory.org
  This material is (C)Copyright 1990 Adobe Systems Inc.
  It may not be distributed to third parties.
  It is licensed for non-commercial use according to 
  www.computerhistory.org/softwarelicense/photoshop/ }
PROCEDURE InitDrawing; EXTERNAL;
FUNCTION DoEraserTool (view: TImageView; magic: BOOLEAN): TCommand; EXTERNAL;
FUNCTION DoPencilTool (view: TImageView; pt: Point): TCommand; EXTERNAL;
FUNCTION DoBrushTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoAirbrushTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoBlurTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoSharpenTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoSmudgeTool (view: TImageView; dip: BOOLEAN): TCommand; EXTERNAL;
FUNCTION DoStampTool (view: TImageView): TCommand; EXTERNAL;
FUNCTION DoStampPadTool (view: TImageView; pt: Point): TCommand; EXTERNAL;
FUNCTION DoEraseAll (view: TImageView): TCommand; 
CREATE TABLE project_related_changes_merkle (
    project_id INTEGER NOT NULL,
    hub_id INTEGER NOT NULL,
    prefix VARCHAR NOT NULL COLLATE NOCASE,
    hash VARCHAR NOT NULL,
    num_changes INTEGER NOT NULL,
    FOREIGN KEY(project_id) REFERENCES projects(id) ON DELETE CASCADE,
    FOREIGN KEY(hub_id) REFERENCES hubs(id) ON DELETE CASCADE,
    UNIQUE(project_id,hub_id,prefix)
);
-- -----------------------------------------------------------------------
-- When the prefix being inserted is a "leaf" (length of 5) we
-- remove all parent prefixes for this project that contained the
-- old version of this leaf.
-- -----------------------------------------------------------------------
CREATE TRIGGER
    project_related_changes_merkle_bi_1
BEFORE INSERT ON
    project_related_changes_merkle
FOR EACH ROW WHEN
    length(NEW.prefix) = 5
BEGIN
    SELECT debug(
        NEW.project_id,
        NEW.hub_id,
        NEW.prefix,
        NEW.hash,
        NEW.num_changes
    );
    DELETE FROM


    WHERE
        project_id = NEW.project_id AND
        hub_id = NEW.hub_id AND
        prefix IN (
            substr(NEW.prefix,1,1),
            substr(NEW.prefix,1,2),
            substr(NEW.prefix,1,3),
            substr(NEW.prefix,1,4),
            NEW.prefix
        )
    ;
END;
-- -----------------------------------------------------------------------
-- If a prefix is added with zero changes then remove it
--
-- (Remember SQLite triggers are LIFO)
-- -----------------------------------------------------------------------
CREATE TRIGGER
    project_related_changes_merkle_ai_2
AFTER INSERT ON
    project_related_changes_merkle
FOR EACH ROW WHEN
    NEW.num_changes = 0
BEGIN
    SELECT debug(
        'project_related_changes_merkle_ai_2',
        NEW.project_id,
        NEW.hub_id,
        NEW.prefix,
        NEW.hash,
        NEW.num_changes
    );
    DELETE FROM
        project_related_changes_merkle
    WHERE
        project_id = NEW.project_id AND
        hub_id = NEW.hu

        prefix = NEW.prefix
    ;
END;
-- -----------------------------------------------------------------------
-- When the prefix just inserted was a "leaf" (length of 5) we
-- recalculate all parent prefixes for this project
-- (Remember SQLite triggers are LIFO)
-- -----------------------------------------------------------------------
CREATE TRIGGER
    project_related_changes_merkle_ai_1
AFTER INSERT ON
    project_related_changes_merkle
FOR EACH ROW WHEN
    length(NEW.prefix) = 5
BEGIN
    SELECT debug(
        NEW.project_id,
        NEW.hub_id,
        NEW.prefix,
        NEW.hash,
        NEW.num_changes
    );
    INSERT INTO
        project_related_changes_merkle(
            project_id,
            hub_id,
            prefix,
            hash,
            num_changes
        )
    SELECT
        NEW.project_id,
        NEW.hub_id,
        substr(NEW.prefix,1,4) as prefix,
        substr(agg_sha1_hex(hash, hash),1,8),
        sum(num_changes) AS sum_num_changes
    FROM

CREATE TABLE func_import_entity_delta(
    change_uuid VARCHAR(40) NOT NULL,
    entity_uuid VARCHAR(40) NOT NULL,
    name VARCHAR,
    contact_uuid VARCHAR(40),
    default_contact_method_uuid VARCHAR(40)
);
CREATE TRIGGER
    func_import_entity_delta_bi_1
BEFORE INSERT ON
    func_import_entity_delta
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_uuid,
        NEW.entity_uuid,
        NEW.name,
        NEW.contact_uuid,
        NEW.default_contact_method_uuid
    );
    INSERT INTO
        entity_deltas(
            change_id,
            entity_id,
            name,
            contact_id,
            default_contact_method_id
        )
    SELECT
        c.id,
        e.id,
        NEW.name,
        ct.id,
        dcm.id
        
    FROM
        topics e
    INNER JOIN
        changes c
    ON
        c.uuid = NEW.change_uuid
    LEFT JOIN
        topics ct
    ON
        ct.uuid = NEW.contact_uuid
    LEFT JOIN
        topics dcm
    ON
        dcm.uuid = NEW.default_co
-- phpMyAdmin SQL Dump
-- version 4.1.14
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: Mar 02, 2015 at 06:56 PM
-- Server version: 5.6.17
-- PHP Version: 5.5.12
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `megoadmincms`
--
-- --------------------------------------------------------
--
-- Table structure for table `megoadmincms_nav`
--
CREATE TABLE IF NOT EXISTS `megoadmincms_nav` (
  `nav_id` int(11) NOT NULL AUTO_INCREMENT,
  `sk_name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `sk_name_seo` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `model_id` int(11) NOT NULL,
  `sk_content` longtext COLLATE utf8_unicode_ci NOT NULL,
  `private` int(11) NOT NULL,
  `date` datetime NOT NULL,
  PRIMARY K

  UNIQUE KEY `sk_name` (`sk_name`,`sk_name_seo`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci AUTO_INCREMENT=2 ;
--
-- Dumping data for table `megoadmincms_nav`
--
INSERT INTO `megoadmincms_nav` (`nav_id`, `sk_name`, `sk_name_seo`, `model_id`, `sk_content`, `private`, `date`) VALUES
(1, 'Domov', 'domov', 2, 'There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don''t look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn''t anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefor
DELETE FROM
  item
WHERE
<dtml-in uid>
  uid=<dtml-sqlvar sequence-item type="int"><dtml-if sequence-end><dtml-else> OR </dtml-if>
</dtml-in>
<dtml-var "'\0'">
<dtml-let movement_list="[]">
  <dtml-in prefix="loop" expr="_.range(_.len(uid))">
    <dtml-if "isMovement[loop_item] and isAccountable[loop_item] and getAggregateUidList[loop_item]">
      <dtml-call expr="movement_list.append(loop_item)">
    </dtml-if>
  </dtml-in>
  <dtml-if expr="_.len(movement_list) > 0">
INSERT INTO
  item
VALUES
    <dtml-in prefix="loop" expr="movement_list">
      <dtml-in "getAggregateUidList[loop_item]">
( 
  <dtml-sqlvar expr="uid[loop_item]" type="int">,
  <dtml-sqlvar expr="getStopDate[loop_item]" type="datetime" optional>,
  <dtml-sqlvar expr="getBaobabDestinationUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getBaobabDestinationSectionUid[loop_item]" type="int" optional>,
  <dtml-sqlvar expr="getResourceUid[loop_item]" type="int" optional>,
  <dtml-sqlvar sequence-item type="int" op
/* ================================================  
 * Oracle XFiles Demonstration.  
 *    
 * Copyright (c) 2014 Oracle and/or its affiliates.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS 
alter table sensor_model add (dynamic_static varchar(1));
update sensor_model set dynamic_static='D' where model='BL';
update sensor_model set dynamic_static='D' where model='BT';
update sensor_model set dynamic_static='D' where model='CD';
update sensor_model set dynamic_static='D' where model='CE';
update sensor_model set dynamic_static='S' where model='CR';
update sensor_model set dynamic_static='D' where model='DT';
update sensor_model set dynamic_static='D' where model='DW';
update sensor_model set dynamic_static='S' where model='EC';
update sensor_model set dynamic_static='S' where model='ET';
update sensor_model set dynamic_static='S' where model='EW';
update sensor_model set dynamic_static='S' where model='FG';
update sensor_model set dynamic_static='S' where model='FL';
update sensor_model set dynamic_static='S' where model='FT';
update sensor_model set dynamic_static='S' where model='FW';
update sensor_model set dynamic_static='S' where model='HC';
update sensor_model set dyn

update sensor_model set dynamic_static='S' where model='KB';
update sensor_model set dynamic_static='D' where model='LE';
update sensor_model set dynamic_static='S' where model='MC';
update sensor_model set dynamic_static='S' where model='MH';
update sensor_model set dynamic_static='S' where model='MM';
update sensor_model set dynamic_static='S' where model='MT';
update sensor_model set dynamic_static='D' where model='PA';
update sensor_model set dynamic_static='D' where model='PG';
update sensor_model set dynamic_static='D' where model='PK';
update sensor_model set dynamic_static='S' where model='PL';
update sensor_model set dynamic_static='S' where model='PT';
update sensor_model set dynamic_static='S' where model='RE';
update sensor_model set dynamic_static='S' where model='RG';
update sensor_model set dynamic_static='S' where model='RH';
update sensor_model set dynamic_static='S' where model='RM';
update sensor_model set dynamic_static='S' where model='RP';
update sensor_model set

update sensor_model set dynamic_static='S' where model='RW';
update sensor_model set dynamic_static='D' where model='SC';
update sensor_model set dynamic_static='D' where model='SS';
update sensor_model set dynamic_static='S' where model='SW';
update sensor_model set dynamic_static='S' where model='TB';
update sensor_model set dynamic_static='S' where model='TC';
update sensor_model set dynamic_static='S' where model='TD';
update sensor_model set dynamic_static='D' where model='TE';
update sensor_model set dynamic_static='S' where model='TL';
update sensor_model set dynamic_static='S' where model='TM';
update sensor_model set dynamic_static='S' where model='TT';
update sensor_model set dynamic_static='S' where model='VG';
update sensor_model set dynamic_static='S' where model='VM';
update sensor_model set dynamic_static='S' where model='VW';
update sensor_model set dynamic_static='S' where model='WM';
update sensor_model set dynamic_static='S' where model='XB';
update sensor_model set
/**************************************************************************
* Copyright 2016 Observational Health Data Sciences and Informatics (OHDSI)
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* http://www.apache.org/licenses/LICENSE-2.0
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
* Authors: Timur Vakhitov, Christian Reich
* Date: 2016
**************************************************************************/
-- 1. Update latest_update field to new date 
DECLARE
   cNDDFDate   DATE;
   cNDDFVer    VARCHAR2 (100);
BEGIN
   SELECT TO_DATE (NDDF_VERSION, 'YYYYMMDD'), NDDF_VERSION || ' R

     INTO cNDDFDate, cNDDFVer
     FROM NDDF_PRODUCT_INFO;
   DEVV5.VOCABULARY_PACK.SetLatestUpdate (pVocabularyName        => 'GCN_SEQNO',
                                          pVocabularyDate        => cNDDFDate,
                                          pVocabularyVersion     => cNDDFVer,
                                          pVocabularyDevSchema   => 'DEV_GCNSEQNO');
END;
COMMIT;
-- 2. Truncate all working tables
TRUNCATE TABLE concept_stage;
TRUNCATE TABLE concept_relationship_stage;
TRUNCATE TABLE concept_synonym_stage;
TRUNCATE TABLE pack_content_stage;
TRUNCATE TABLE drug_strength_stage;
--3. Add GCN_SEQNO to concept_stage from rxnconso
INSERT /*+ APPEND */ INTO  concept_stage (concept_name,
                           domain_id,
                           vocabulary_id,
                           concept_class_id,
                           standard_concept,
                           concept_code,
                           valid_start_date,
                          

                           invalid_reason)
   SELECT SUBSTR (c.str, 1, 255) AS concept_name,
          'Drug' AS domain_id,
          'GCN_SEQNO' AS vocabulary_id,
          'GCN_SEQNO' AS concept_class_id,
          NULL AS standard_concept,
          c.code AS concept_code,
		 (select v.latest_update from vocabulary v where v.vocabulary_id = 'GCN_SEQNO' ) AS valid_start_date,
		 TO_DATE ('20991231', 'yyyymmdd') AS valid_end_date,
          NULL AS invalid_reason
     FROM rxnconso c
    WHERE c.sab = 'NDDF' AND c.tty = 'CDC';
COMMIT;
--4. Load into concept_relationship_stage
INSERT /*+ APPEND */ INTO  concept_relationship_stage (concept_code_1,
                                        concept_code_2,
                                        vocabulary_id_1,
                                        vocabulary_id_2,
                                        relationship_id,
                                        valid_start_date,
                                        valid_end_date,
   
DROP TABLE "MESSAGE" cascade constraints;
DROP TABLE "CUST_RATE_MSG" cascade constraints;
DROP TABLE "CLASSCUST_REVIEW_ITEM" cascade constraints;
DROP TABLE "THREAD" cascade constraints;
DROP TABLE "CUST_GENERATE_TRANS" cascade constraints;
DROP TABLE "CUSTOMER" cascade constraints;
DROP TABLE "CUST_BID_ITEM" cascade constraints;
DROP TABLE "KEYWORDS" cascade constraints;
DROP TABLE "MESSAGE_REPLY" cascade constraints;
DROP TABLE "CUST_POST_THREAD" cascade constraints;
DROP TABLE "CLASSIFIED_CUSTOMER" cascade constraints;
DROP TABLE "CUSTOMER_TRADE_ITEM" cascade constraints;
DROP TABLE "GOLD" cascade constraints;
DROP TABLE "PLATINUM_MODERATE_THREAD" cascade constraints;
DROP TABLE "CUSTOMER_TRADE" cascade constraints;
DROP TABLE "CUST_POST_MSG" cascade constraints;
DROP TABLE "ITEM" cascade constraints;
DROP TABLE "PLATINUM" cascade constraints;
DROP TABLE "PLATINUM_REVIEW_CUSTOMER" cascade constraints;
DROP TABLE "TRANS_INVOLVE_ITEM" cascade constraints;
DROP TABLE "TRANSACTION" casc

DROP SEQUENCE "THREAD_SEQ";
DROP SEQUENCE "TRANSACTION_SEQ";
DROP VIEW "V10C";
DROP VIEW "V09B";
DROP VIEW "V13B";
DROP VIEW "V14B";
DROP VIEW "V10D";
DROP VIEW "V13F";
DROP VIEW "V09C";
DROP VIEW "V01A";
DROP VIEW "V13C";
DROP VIEW "V01C";
DROP VIEW "V14D";
DROP VIEW "V10E";
DROP VIEW "V14C";
DROP VIEW "V13A";
DROP VIEW "V11A";
DROP VIEW "V13";
DROP VIEW "V13D";
DROP VIEW "V14A";
DROP VIEW "V12A";
DROP VIEW "V09A";
DROP VIEW "V13E";
DROP VIEW "V10A";
DROP VIEW "V10F";
DROP VIEW "V14";
DROP VIEW "V10B";
DROP VIEW "V11B";
DROP VIEW "V14E";
DROP VIEW "V14F";
DROP VIEW "V14G";
DROP VIEW "V17A";
DROP VIEW "V17B";
DROP VIEW "V19A";
DROP VIEW "V19B";
DROP VIEW "V21";
DROP VIEW "V21A";
DROP VIEW "V22";
DROP VIEW "V22A";
DROP VIEW "V23";
DROP VIEW "V24";
DROP VIEW "V25";
DROP VIEW "V4";
DROP VIEW "V5";
DROP VIEW "V6";
DROP VIEW "V6A";
DROP VIEW "V6B";
DROP VIEW "V6C";
DROP VIEW "V6D";
DROP VIEW "V6E";
DROP VIEW "V7";
DROP VIEW "V7A";
DROP VIEW "V7B";
DROP VIEW "V7C";
DROP VIEW "V7D";
DROP VIE
CREATE TABLE sites (
    id SMALLINT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    path VARCHAR(255) UNIQUE,
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE nav (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    site_id SMALLINT UNSIGNED DEFAULT 1,
    parent_id INT UNSIGNED DEFAULT 0,
    content_id INT UNSIGNED DEFAULT NULL UNIQUE,
    title VARCHAR(255),
    path VARCHAR(255),
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status ENUM('active','disabled') DEFAULT 'active',
    UNIQUE(site_id, parent_id, path)
);
CREATE TABLE content (
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    nav_id INT UNSIGNED DEFAULT 0,
    path VARCHAR(255),
    title VARCHAR(255),
    person_id INT UNSIGNED,
    created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified TIMESTAMP,
    description text,
    content text,
    status ENUM('new','pending','active','disabled') DEFAULT 'new',
    UNIQUE(nav_id, path)
);
CREATE TABLE content_archive LIKE content;
USE Member
go
IF OBJECT_ID('dbo.wsp_getNewMembersListNoStatus') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_getNewMembersListNoStatus
    IF OBJECT_ID('dbo.wsp_getNewMembersListNoStatus') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_getNewMembersListNoStatus >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_getNewMembersListNoStatus >>>'
END
go
/******************************************************************************
**
** CREATION:
**   Author: Mike Stairs
**   Date:  Jan 14, 2005  
**   Description:  gets list of new users within time range 
**          
** REVISION(S):
**   Author: Yan Liu 
**   Date:  July 20, 2006
**   Description: append a few new columns in the result set.
**
******************************************************************************/
CREATE PROCEDURE wsp_getNewMembersListNoStatus
    @startSeconds INT,
    @endSeconds   INT
AS
BEGIN
    SELECT user_id,
           signuptime,
           firstidentitytime,
           signup_
CREATE TABLE new_event_draft_information (
	id SERIAL,
	site_id INTEGER NOT NULL,
	slug INTEGER NOT NULL,
	details TEXT NOT NULL,
	not_duplicate_events TEXT NULL,
	event_id INTEGER NULL,
	was_existing_event_id INTEGER NULL,
	user_account_id INTEGER NULL,
	updated_at timestamp without time zone NOT NULL,
	created_at timestamp without time zone NOT NULL,
	PRIMARY KEY(id)
);
CREATE UNIQUE INDEX new_event_draft_information_slug ON new_event_draft_information(site_id, slug);
ALTER TABLE new_event_draft_information ADD CONSTRAINT new_event_draft_information_site_id FOREIGN KEY (site_id) REFERENCES site_information(id);
ALTER TABLE new_event_draft_information ADD CONSTRAINT new_event_draft_information_event_id FOREIGN KEY (event_id) REFERENCES event_information(id);
ALTER TABLE new_event_draft_information ADD CONSTRAINT new_event_draft_information_was_existing_event_id FOREIGN KEY (was_existing_event_id) REFERENCES event_information(id);
ALTER TABLE new_event_draft_information ADD CONSTRAINT 

CREATE TABLE new_event_draft_history (
  new_event_draft_id INTEGER,
  details TEXT NULL,
  details_changed SMALLINT DEFAULT '0' NOT NULL,
  not_duplicate_events TEXT NULL,
  not_duplicate_events_changed SMALLINT DEFAULT '0' NOT NULL,
	event_id INTEGER NULL,
	event_id_changed SMALLINT DEFAULT '0' NOT NULL,
	was_existing_event_id INTEGER NULL,
	was_existing_event_id_changed SMALLINT DEFAULT '0' NOT NULL,
	user_account_id INTEGER NULL,
	created_at timestamp without time zone NOT NULL,
	PRIMARY KEY (new_event_draft_id, created_at)
);
ALTER TABLE new_event_draft_history ADD CONSTRAINT new_event_draft_history_new_event_draft_id FOREIGN KEY (new_event_draft_id) REFERENCES new_event_draft_information(id);
ALTER TABLE new_event_draft_history ADD CONSTRAINT new_event_draft_history_event_id FOREIGN KEY (event_id) REFERENCES event_information(id);
ALTER TABLE new_event_draft_history ADD CONSTRAINT new_event_draft_history_was_existing_event_id FOREIGN KEY (was_existing_event_id) REFERENCES event_
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[account_qualification_groups]'))
drop table [dbo].[account_qualification_groups]
create table account_qualification_groups (
account_qualification_group VARCHAR(100),
row_num INTEGER,
include VARCHAR(1000),
include_filter VARCHAR(1000),
source_field VARCHAR(1000),
target_field VARCHAR(1000),
output_field VARCHAR(1000),
append_to_list VARCHAR(1000),
filter VARCHAR(4000)
 );
 INSERT INTO account_qualification_groups
 (account_qualification_group, row_num, 
 include, include_filter, source_field, target_field, output_field, append_to_list,
 filter)
 VALUES('self',1,
 NULL,NULL,NULL,NULL,NULL,NULL,
 '1 == 1');
  INSERT INTO account_qualification_groups
 (account_qualification_group, row_num, 
 include, include_filter, source_field, target_field, output_field, append_to_list,
 filter)
 VALUES('self_owners',1,
 'T_AV_INTERNAL',NULL,NULL,NULL,NULL,NULL,
 NULL);
   INSERT INTO account_qualification_groups
 (account_qualifica

 include, include_filter, source_field, target_field, output_field, append_to_list,
 filter)
 VALUES('self_owners',2,
 NULL,NULL,NULL,NULL,NULL,NULL,
 'OBJECT.c_invoicemethod == "1834"');
  INSERT INTO account_qualification_groups
 (account_qualification_group, row_num, 
 include, include_filter, source_field, target_field, output_field, append_to_list,
 filter)
 VALUES('child_owners',1,
 'T_ACCOUNT_ANCESTOR','num_generations != 0',NULL,'id_ancestor','id_descendent','yes',
 NULL);
    INSERT INTO account_qualification_groups
 (account_qualification_group, row_num, 
 include, include_filter, source_field, target_field, output_field, append_to_list,
 filter)
 VALUES('child_owners',2,
 'T_AV_INTERNAL',NULL,NULL,NULL,NULL,NULL,
 'OBJECT.c_invoicemethod ne "1834"');
     INSERT INTO account_qualification_groups
 (account_qualification_group, row_num, 
 include, include_filter, source_field, target_field, output_field, append_to_list,
 filter)
 VALUES('child_owners',3,
 NULL,NULL,NULL,NULL,
select COUNT(D.Vphd_View_SSPI)
from 
( 
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date,  Vphd_View_Event_Origin_Date
	from dbo.VSPC_ProcessHistoryArchive_View
WHERE Vphd_View_Event_Description = 'post retail sale processing' AND Vphd_View__Program_Number = '102'
union
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date, Vphd_View_Event_Origin_Date
    from dbo.VSPC_ProcessHistoryDetail_View
WHERE Vphd_View_Event_Description = 'post retail sale processing' AND Vphd_View__Program_Number = '102'
) AS D
--WHERE D.Vphd_View_Event_Origin_Date BETWEEN '2012-06-01' AND '2012-10-01'
where D.Vphd_View_Last_Exit_Date is not null
----------
-----------
select D.Vphd_View_SSPI, D.Vphd_View_Last_Exit_Date
from 
( 
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date,  Vphd_View_Event_Origin_Date
	from dbo.VSPC_ProcessHistoryArchive_View
WHERE Vphd_View_Event_Description = 'post retail sale processing' AND Vphd_View__Program_Number = '102'
union
SELECT Vphd_View_SSPI, Vphd_View_Last_Exit_Date, Vphd_View_Even
SELECT *
FROM TransformEquipmentFacilitiesEquipmentModelIDLookup modid 
WHERE modid.SourceModelID LIKE '%CERABAR%'
	--modid.TargetModelID LIKE 'L/2%'
	modid.Manufacturer_ID = 'FLYGT PUMPS'
ORDER BY Manufacturer_ID, SourceModelID, TargetModelID
UPDATE TransformEquipmentFacilitiesEquipmentModelIDLookup
SET SourceModelID = 'CP 3152', TargetModelID = 'CP 3152'
WHERE Manufacturer_ID = 'FLYGT PUMPS'
	AND SourceModelID = 'CP-3152' AND TargetModelID = 'NP3102'
SELECT OE.OBJECT_ID, oe.FAC_MODEL
FROM SourceWicm210ObjectEquipment OE
WHERE OE.[OBJECT_ID] = 'PIT1671'
	--OE.FAC_MODEL LIKE 'IGF%'
	--VENDOR LIKE 'BJM%'
SELECT *
FROM TransformEquipmentManufacturerModel
WHERE CleansedManufacturerID = 'PUMPS%'
UPDATE TransformEquipmentManufacturerModel
SET CleansedModelID = '24RXL',
	ModelName = '24RXL'
WHERE CleansedManufacturerID = 'BYRON JACKSON'
	AND CleansedModelID = '24RX-L'
	AND ModelName = '24RX-L'
		-- ModelID Cleansing
		--INNER JOIN TransformEquipmentFacilitiesEquipmentModelIDLookup modid 
		-
refresh materialized view pm_adr_object_nummeraand;
refresh materialized view pm_ander_natuurlijk_persoon;
refresh materialized view pm_appartementsrecht;
refresh materialized view pm_benoemd_obj_kad_onr_zk;
refresh materialized view pm_benoemd_object;
refresh materialized view pm_benoemd_terrein;
refresh materialized view pm_gebouwd_obj_gebruiksdoel;
refresh materialized view pm_gebouwd_object;
refresh materialized view pm_gemeente;
refresh materialized view pm_ingeschr_natuurlijk_persoon;
refresh materialized view pm_kad_onr_zk_aantek;
refresh materialized view pm_kad_onr_zk_his_rel;
refresh materialized view pm_kad_onroerende_zaak;
refresh materialized view pm_kad_perceel;
refresh materialized view pm_ligplaats;
refresh materialized view pm_ligplaats_nummeraand;
refresh materialized view pm_natuurlijk_persoon;
refresh materialized view pm_niet_ingezetene;
refresh materialized view pm_niet_natuurlijk_persoon;
refresh materialized view pm_pand;
refresh materialized view pm_persoon;
re
/*
Short database description "Computer firm":
The database scheme consists of four tables:
Product(maker, model, type)
PC(code, model, speed, ram, hd, cd, price)
Laptop(code, model, speed, ram, hd, screen, price)
Printer(code, model, color, type, price)
The table "Product" includes information about the maker, model number, and type ('PC', 'Laptop', or 'Printer'). It is assumed that model numbers in the Product table are unique for all the makers and product types. Each PC uniquely specifying by a code in the table "PC" is characterized by model (foreign key referencing to Product table), speed (of the processor in MHz), total amount of RAM - ram (in Mb), hard disk drive capacity - hd (in Gb), CD ROM speed - cd (for example, '4x'), and the price. The table "Laptop" is similar to that one of PCs except for the CD ROM speed, which is replaced by the screen size - screen (in inches). For each printer in the table "Printer" it is told whether the printer is color or not (color attribute i
[prepare]
table_num=1
table_names=simple_table
# table fin_influx_payer
simple_table = id(1,1);number(1,1)
[run]
point_query                 = select id, number from simple_table where id=?;1,1,int,1
range_query                 = select id, number from simple_table where id=?;1,1,int,1
range_sum_query             = select id, number from simple_table where id=?;1,1,int,1
range_orderby_query         = select id, number from simple_table where id=?;1,1,int,1
range_distinct_query        = select id, number from simple_table where id=?;1,1,int,1
point_join_query            = select id, number from simple_table where id=?;1,1,int,1
range_join_query            = select id, number from simple_table where id=?;1,1,int,1
range_join_sum_query        = select id, number from simple_table where id=?;1,1,int,1
range_join_orderby_query    = select id, number from simple_table where id=?;1,1,int,1
range_join_distinct_query   = select id, number from simple_table where id=?;1,1,int,1
delete           
IF OBJECT_ID('dbo.wsp_newPayPalRefund') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newPayPalRefund
    IF OBJECT_ID('dbo.wsp_newPayPalRefund') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newPayPalRefund >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newPayPalRefund >>>'
END
go
/*******************************************************************
**
** CREATION:
**   Author:      Andy Tran
**   Date:        July 2009
**   Description: Inserts row into PayPalRefund
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
*******************************************************************/
CREATE PROCEDURE wsp_newPayPalRefund
 @xactionId        NUMERIC(12,0)
,@refPaymentNumber VARCHAR(19)
,@refundType       VARCHAR(7)
,@refundAmount     VARCHAR(7)
,@currencyCode     CHAR(3)
AS
DECLARE
 @dateNow DATETIME
,@return  INT
EXEC @return = dbo.wsp_GetDateGMT @dateNow OUTPUT
IF @return != 0
    BEGIN
        RETURN @return
    END
BEGIN TRAN TRAN_newPayPalR
SELECT DateTime('now'),'create.berlin_segments_db.sql [begin] -with "BEGIN" and "COMMIT"';
SELECT DateTime('now'),'sample: spatialite berlin_segments.db < create.berlin_segments_db.sql';
--- 
-- BEGIN/COMMIT done in script
.read ../source_sql/segments.berlin_admin_tables.sql UTF8
---
--- 
-- BEGIN/COMMIT done in script
-- importing older format berlin_ortsteil_segments into new format berlin_ortsteil_segments
-- .read ../source_sql/import_berlin_ortsteil_segmente.sql UTF8
-- importing and rebuilding geometries of  berlin_ortsteil_segments
.read ../source_sql/segments.import_berlin_segments.sql UTF8
---
-- BEGIN/COMMIT done in script
.read ../source_sql/segments.create_segments_spatialviews.sql UTF8
-- BEGIN/COMMIT done in script
.read ../source_sql/segments.build_geometries.sql UTF8
.read ../source_sql/segments.create_geometries_spatialviews.sql UTF8
-- SELECT * FROM berlin_geometries WHERE soldner_polygon IS NULL AND soldner_segments IS NOT NULL;
SELECT DateTime('now'),'Updating Stati
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [internal].[append_parameter]
        @project_id             bigint,
        @object_version_lsn     bigint,
        @object_type smallint,
        @object_name nvarchar(260),
        @parameter_name nvarchar(128),
        @parameter_data_type nvarchar(128),
        @required bit,
        @sensitive bit,
        @description nvarchar (1024) = NULL,
        @design_default_value sql_variant = NULL,
        @value_set bit  
AS
    SET NOCOUNT ON
    
    DECLARE @result bit
    IF (@project_id IS NULL  OR @object_version_lsn IS NULL OR 
        @object_type IS NULL OR @object_name IS NULL OR
        @parameter_name IS NULL OR @parameter_data_type IS NULL OR
        @required  IS NULL OR @sensitive IS NULL )
    BEGIN
        RAISERROR(27138, 16 , 6) WITH NOWAIT 
        RETURN 1     
    END
    
    IF (@project_id <= 0)
    BEGIN
        RAISERROR(27101, 16 , 10, N'project_id') WITH NOWAIT
        RETURN 1 
    END
    

    BEGIN
        RAISERROR(27101, 16 , 10, N'object_version_lsn') WITH NOWAIT
        RETURN 1  
    END
    
    IF (@parameter_data_type NOT IN 
            (SELECT [ssis_data_type] FROM [internal].[data_type_mapping]))   
    BEGIN
        RAISERROR(27101, 16 , 10, N'parameters_data_type') WITH NOWAIT
        RETURN 1
    END                                   
        
    IF NOT EXISTS (SELECT [object_version_lsn] FROM [internal].[object_versions] 
                WHERE [object_version_lsn] = @object_version_lsn AND [object_type] = 20
                AND [object_id] = @project_id AND [object_status] = 'D')
    BEGIN
        RAISERROR(27194 , 16 , 1) WITH NOWAIT
        RETURN 1         
    END
    
    SET @result = [internal].[check_permission] 
    (
        2,
        @project_id,
        2
    ) 
    
    IF @result = 0        
    BEGIN
        RAISERROR(27194 , 16 , 1) WITH NOWAIT
        RETURN 1        
    END
   
    
    INSERT INTO [internal].[object_parameters]
    
CREATE VIEW [dbo].[Fdp_TakeRateSummaryByModelAndMarket_VW] AS
	WITH TotalsByModelAndMarket AS
	(
		SELECT 
			  H.FdpVolumeHeaderId
			, D.Id				AS DocumentId
			, D.Programme_Id	AS ProgrammeId
			, D.Gateway
			, S.MarketId
			, S.ModelId
			, S.FdpModelId
			, S.Volume AS TotalVolume
			, S.PercentageTakeRate
			, S.FdpTakeRateSummaryId
		FROM
		Fdp_VolumeHeader			AS H
		JOIN OXO_Doc				AS D	ON H.DocumentId	= D.Id
		JOIN Fdp_TakeRateSummary	AS S	ON H.FdpVolumeHeaderId = S.FdpVolumeHeaderId
											AND (S.ModelId IS NOT NULL OR S.FdpModelId IS NOT NULL)
	)
	SELECT
		  T.FdpVolumeHeaderId 
		, T.DocumentId
		, T.ProgrammeId
		, T.Gateway
		, T.MarketId
		, MK.Market_Name AS MarketName
		, MK.Market_Group_Id AS MarketGroupId
		, MK.Market_Group_Name AS MarketGroup
		, T.ModelId
		, T.FdpModelId
		, CASE
			WHEN T.ModelId IS NOT NULL THEN M.BMC
			WHEN T.FdpModelId IS NOT NULL THEN M1.BMC
		  END
		  AS BMC
		, M.Trim_Id AS TrimId
		, M1.FdpTrimId
		, T.TotalVolume
		, T.PercentageTak
DROP VIEW market_summary_view;
CREATE OR REPLACE VIEW market_summary_view AS
 SELECT m.market_id, m.scale, m.base_currency_id, m.quote_currency_id, ( SELECT max(o.price) AS max
           FROM order_view o
          WHERE o.market_id = m.market_id AND o.side = 0 AND o.volume > 0) AS bid, ( SELECT min(o.price) AS min
           FROM order_view o
          WHERE o.market_id = m.market_id AND o.side = 1 AND o.volume > 0) AS ask, ( SELECT om.price
           FROM match_view om
      JOIN "order" bo ON bo.order_id = om.bid_order_id
     WHERE bo.market_id = m.market_id
     ORDER BY om.created DESC
    LIMIT 1) AS last, ( SELECT max(om.price) AS max
           FROM match_view om
      JOIN "order" bo ON bo.order_id = om.bid_order_id
     WHERE bo.market_id = m.market_id AND age(om.created) < '1 day'::interval) AS high, ( SELECT min(om.price) AS min
           FROM match_view om
      JOIN "order" bo ON bo.order_id = om.bid_order_id
     WHERE bo.market_id = m.market_id AND age(om.created) <
CREATE TABLE [Production].[ProductModelProductDescriptionCulture]
[ProductModelID] [int] NOT NULL,
[ProductDescriptionID] [int] NOT NULL,
[CultureID] [nchar] (6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate] DEFAULT (getdate())
) ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY CLUSTERED  ([ProductModelID], [ProductDescriptionID], [CultureID]) ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY ([CultureID]) REFERENCES [Production].[Culture] ([CultureID])
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIG

GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture] ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])
GO
EXEC sp_addextendedproperty N'MS_Description', N'Cross-reference table mapping product descriptions and the language the description is written in.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', NULL, NULL
GO
EXEC sp_addextendedproperty N'MS_Description', N'Culture identification number. Foreign key to Culture.CultureID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'COLUMN', N'CultureID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductDescription.

GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductModel.ProductModelID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'COLUMN', N'ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'DF_ProductModelProductDescriptionCulture_ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing Culture.CultureID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'FK_ProductModelProductDescriptionCulture_Culture_CultureID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing ProductDescription.ProductDescriptionID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'FK_ProductModelProductDescriptionCulture_ProductDescription_Pro
--by Scott Bailey 'Artacus' in postgresql wiki
CREATE OR REPLACE FUNCTION _final_median(numeric[])
   RETURNS numeric AS
$$
   SELECT AVG(val)
   FROM (
     SELECT val
     FROM unnest($1) val
     ORDER BY 1
     LIMIT  2 - MOD(array_upper($1, 1), 2)
     OFFSET CEIL(array_upper($1, 1) / 2.0) - 1
   ) sub;
$$
LANGUAGE 'sql' IMMUTABLE;
CREATE AGGREGATE median(numeric) (
  SFUNC=array_append,
  STYPE=numeric[],
  FINALFUNC=_final_median,
  INITCOND='{}'
);
--by Scott Bailey 'Artacus' in postgresql wiki
CREATE OR REPLACE FUNCTION _final_mode(anyarray)
  RETURNS anyelement AS
$BODY$
    SELECT a
    FROM unnest($1) a
    GROUP BY 1 
    ORDER BY COUNT(1) DESC, 1
    LIMIT 1;
$BODY$
LANGUAGE 'sql' IMMUTABLE;
-- Tell Postgres how to use our aggregate
CREATE AGGREGATE mode(anyelement) (
  SFUNC=array_append, --Function to call for each row. Just builds the array
  STYPE=anyarray,
  FINALFUNC=_final_mode, --Function to call after everything has been added to array
  INITCOND='{}' --Initializ
use osso;
-- For some reason the union takes much longer than
-- Individual queries
-- Can research later
DROP   VIEW IF EXISTS person_view_reg_union;
CREATE VIEW           person_view_reg_union AS
SELECT * FROM osso.reg_main_view_all
UNION ALL
SELECT * FROM eayso.reg_main_view_all
DROP VIEW IF EXISTS person_view_reg;
CREATE VIEW         person_view_reg AS
SELECT
  person.id            AS id,
  person_reg.reg_type  AS reg_type,
  person_reg.reg_num   AS reg_num,
  reg_main_view_all.reg_main_fname AS fname,
  reg_main_view_all.reg_main_lname AS lname,
  reg_main_view_all.reg_main_nname AS nname,
  reg_main_view_all.reg_org_org_id AS org_id,
  reg_main_view_all.org_desc1      AS org_desc1,
  reg_main_view_all.reg_cert_cat   AS cert_cat,
  reg_main_view_all.reg_cert_type  AS cert_type,
  reg_main_view_all.reg_cert_date  AS cert_date,
  reg_main_view_all.reg_prop_type  AS prop_type,
  reg_main_view_all.reg_prop_value AS prop_value
FROM person
LEFT JOIN person_reg ON person_reg.person_id = 
CREATE DATABASE  IF NOT EXISTS `sheweb2013` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `sheweb2013`;
-- MySQL dump 10.13  Distrib 5.5.28, for debian-linux-gnu (i686)
--
-- Host: localhost    Database: sheweb2013
-- ------------------------------------------------------
-- Server version	5.5.28-0ubuntu0.12.04.3-log
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `usergroups_access`
--
DROP TABLE IF EXISTS `usergroups_a

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `usergroups_access` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `element` int(3) NOT NULL,
  `element_id` bigint(20) NOT NULL,
  `module` varchar(140) NOT NULL,
  `controller` varchar(140) NOT NULL,
  `permission` varchar(7) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=140 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `usergroups_access`
--
LOCK TABLES `usergroups_access` WRITE;
/*!40000 ALTER TABLE `usergroups_access` DISABLE KEYS */;
INSERT INTO `usergroups_access` VALUES (2,2,4,'Parametros','pais','read'),(5,2,5,'Parametros','pais','read'),(8,2,5,'Parametros','autor','read'),(9,2,5,'Parametros','autor','write'),(10,2,5,'Parametros','autor','admin'),(11,2,5,'Parametros','pais','write'),(12,2,5,'Parametros','pais','admin'),(13,2,5,'Parametros','bodega','read'),(14,2,5,'Parametros','bo
IF OBJECT_ID('dbo.wsp_FixProfileShow_ad') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_FixProfileShow_ad
    IF OBJECT_ID('dbo.wsp_FixProfileShow_ad') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_FixProfileShow_ad >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_FixProfileShow_ad >>>'
END
go
/******************************************************************************
**
** CREATION:
**   Author:  Jason C.
**   Date:    May 12 2005
**   Description: 
**   1. UPDATE a_profile_dating SET show = "N" WHERE show_prefs = LOWER(show_prefs) AND show = "Y"
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
******************************************************************************/
CREATE PROCEDURE dbo.wsp_FixProfileShow_ad
AS
BEGIN
DECLARE @user_id            numeric(12,0)
DECLARE @errorReturn        int
DECLARE @rowCountEffected   int
DECLARE @msgReturn          varchar(255)
SELECT  @rowCountEffected = 0 
--SELECT user_id
--INTO tempdb..TEMP_Fix

--FROM a_profile_dating
--WHERE show_prefs = LOWER(show_prefs) AND show = "Y"
DECLARE CUR_FixProfileShow_ad CURSOR FOR
SELECT user_id from tempdb..TEMP_FixProfileShow_ad
FOR READ ONLY
OPEN CUR_FixProfileShow_ad
FETCH CUR_FixProfileShow_ad INTO @user_id
WHILE @@sqlstatus != 2
BEGIN
    IF @@sqlstatus = 1
    BEGIN
       CLOSE CUR_FixProfileShow_ad
       DEALLOCATE CURSOR CUR_FixProfileShow_ad
       SELECT @msgReturn = "error: there is something wrong with CUR_FixProfileShow_ad"
       PRINT @msgReturn
       RETURN 99
    END
    ELSE BEGIN
       BEGIN TRAN TRAN_FixProfileShow_ad
       
       UPDATE a_profile_dating SET show_prefs = LOWER(show_prefs)  WHERE user_id = @user_id AND show_prefs = UPPER(show_prefs)
       IF @@error = 0
       BEGIN
          COMMIT TRAN TRAN_FixProfileShow_ad
          SELECT @rowCountEffected = @rowCountEffected + 1
       END
       ELSE BEGIN
          ROLLBACK TRAN TRAN_FixProfileShow_ad
       END
      
    END
    FETCH CUR_FixProfileShow_ad I
-- Item Site
DROP VIEW api.itemsite;
CREATE VIEW api.itemsite
AS 
   SELECT
     item_number::varchar(100) AS item_number,
     warehous_code::varchar(100) AS warehouse,
     itemsite_active AS active,
     itemsite_supply AS supplied_at_warehouse,
     itemsite_createpr AS create_prs,
     itemsite_createwo AS create_wos,
     itemsite_sold AS sold_from_warehouse,
     itemsite_soldranking AS ranking,
     CASE
       WHEN itemsite_controlmethod = 'N' THEN
         'None'
       WHEN itemsite_controlmethod = 'R' THEN
         'Regular'
       WHEN itemsite_controlmethod = 'S' THEN
         'Serial #'
       WHEN itemsite_controlmethod = 'L' THEN
         'Lot #'
     END AS control_method,
     itemsite_perishable AS perishable,
     plancode_code AS planner_code,
     costcat_code AS cost_category,
     itemsite_loccntrl AS multiple_location_control,
     formatlocationname(itemsite_location_id) AS location,
     itemsite_location AS user_defined_location,
     itemsite_location_comm

     itemsite_disallowblankwip AS disallow_blank_wip_locations,
     itemsite_stocked AS stocked,
     itemsite_abcclass AS abc_class,
     itemsite_autoabcclass AS allow_automatic_updates,
     itemsite_cyclecountfreq AS cycl_cnt_freq,
     itemsite_eventfence AS event_fence,
     itemsite_useparams AS enforce_order_parameters,
     itemsite_reorderlevel AS reorder_level,
     itemsite_ordertoqty AS order_up_to,
     itemsite_minordqty AS minimum_order,
     itemsite_maxordqty AS maximum_order,
     itemsite_multordqty AS order_multiple,
     itemsite_useparamsmanual AS enforce_on_manual_orders,
     itemsite_ordergroup AS group_mps_mrp_orders,
     itemsite_mps_timefence AS mps_time_fence,
     itemsite_leadtime AS lead_time,
     itemsite_safetystock AS safety_stock,
     itemsite_notes AS notes
   FROM item, itemsite
     LEFT OUTER JOIN location ON (itemsite_location_id=location_id),
     plancode,costcat,whsinfo
   WHERE ((item_id=itemsite_item_id)
   AND (itemsite_plancode_id=p

   AND (itemsite_costcat_id=costcat_id)
   AND (itemsite_warehous_id=warehous_id));     
GRANT ALL ON TABLE api.itemsite TO openmfg;
COMMENT ON VIEW api.itemsite IS 'Item Site';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.itemsite DO INSTEAD
INSERT INTO itemsite (
     itemsite_item_id,
     itemsite_warehous_id,
     itemsite_active,
     itemsite_supply,
     itemsite_createpr,
     itemsite_createwo,
     itemsite_sold,
     itemsite_soldranking,
     itemsite_controlmethod,
     itemsite_perishable,
     itemsite_plancode_id,
     itemsite_costcat_id,
     itemsite_loccntrl,
     itemsite_location_id,
     itemsite_location,
     itemsite_location_comments,
     itemsite_disallowblankwip,
     itemsite_stocked,
     itemsite_abcclass,
     itemsite_autoabcclass,
     itemsite_cyclecountfreq,
     itemsite_eventfence,
     itemsite_useparams,
     itemsite_reorderlevel,
     itemsite_ordertoqty,
     itemsite_minordqty,
     itemsite_maxordqty,
     itemsite_mu
--------------------------------------------------------
--  File created - Friday-May-10-2013   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table BOOK
--------------------------------------------------------
  CREATE TABLE "TABLE_1"."BOOK" 
   (	"BOOK_ID" NUMBER, 
	"TITLE" VARCHAR2(50 BYTE), 
	"EDITION" NUMBER, 
	"AUTHOR" VARCHAR2(50 BYTE), 
	"CATEGORY" VARCHAR2(50 BYTE), 
	"COPY" NUMBER DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into TABLE_1.BOOK
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index BOOK_PK
--------------------------------------------------------
  CREATE UNIQUE INDE
--------------------------------------------------------
--  File created - Ïîíåäåëíèê-Àïðèë-14-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ARTICLE
--------------------------------------------------------
  CREATE TABLE "ELSYS"."ARTICLE" 
   (	"ID" NUMBER, 
	"published_on" DATE, 
	"created_on" DATE, 
	"price" FLOAT(126)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."CATEGORY" 
   (	"ID" NUMBER, 
	"name" VARCHAR2(20 BYTE), 
	"DATE_CREATED_ON" DATE
   ) SEGMENT CREATION IMMED

  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG_PART1
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG_PART1" 
   (	"SECOND_PRIORITY" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG_PART2
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG_PART2" 
   (	"ID" NUMBER, 


	"NAME" VARCHAR2(20 BYTE), 
	"USERS_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table Tag_user
--------------------------------------------------------
  CREATE TABLE "ELSYS"."Tag_user" 
   (	"tag_id" NUMBER, 
	"user_id" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USERS
--------------------------------------
USE [Development_MSCRM];
UPDATE [Opportunity] SET [new_50ServicesRevenue] = 0 WHERE ISNUMERIC([new_ServicesRevenue]) = 0;	
UPDATE [Opportunity] SET [new_FirstYearRevenue] = 0 WHERE ISNUMERIC([new_FirstYearRevenue]) = 0;
UPDATE [Opportunity] SET [new_HardwareRevenue]  = 0 WHERE ISNUMERIC([new_HardwareRevenue]) = 0;
UPDATE [Opportunity] SET [new_HardwareSupportRevenue] = 0 WHERE ISNUMERIC([new_HardwareSupportRevenue]) = 0;
UPDATE [Opportunity] SET [new_partnerservicesrevenue] = 0 WHERE ISNUMERIC([new_partnerservicesrevenue]) = 0;
UPDATE [Opportunity] SET [new_PreferredCustomerDiscount] = 0 WHERE ISNUMERIC([new_PreferredCustomerDiscount]) = 0;
UPDATE [Opportunity] SET [new_ServicesDollarstoPartner] = 0 WHERE ISNUMERIC([new_ServicesDollarstoPartner]) = 0;
UPDATE [Opportunity] SET [new_ServicesRevenue] = 0 WHERE ISNUMERIC([new_ServicesRevenue]) = 0;
UPDATE [Opportunity] SET [new_SoftwareDiscountPercentage] = 0 WHERE ISNUMERIC([new_SoftwareDiscountPercentage]) = 0;
UPDATE [Opportunity] SET [

UPDATE [Opportunity] SET [new_SoftwareMaintenanceRevenue] = 0 WHERE ISNUMERIC([new_SoftwareMaintenanceRevenue]) = 0;
UPDATE [Opportunity] SET [new_SoftwareRevenue] = 0 WHERE ISNUMERIC([new_SoftwareRevenue]) = 0;
UPDATE [Opportunity] SET [new_TotalRevenue] = 0 WHERE ISNUMERIC([new_TotalRevenue]) = 0;
UPDATE [Opportunity] SET [new_TrainingDollarstoPartner] = 0 WHERE ISNUMERIC([new_TrainingDollarstoPartner]) = 0;
UPDATE [Opportunity] SET [new_TrainingRevenue] = 0 WHERE ISNUMERIC([new_TrainingRevenue]) = 0;
UPDATE [Opportunity] SET [new_50ServicesRevenue] = [new_ServicesRevenue] / 2.0;
UPDATE [Opportunity] SET [new_SoftwareRevenue] = [new_SoftwareListPrice] * ( 1.0 - [new_SoftwareDiscountPercentage] / 100.0 );
UPDATE [Opportunity] SET [new_HDPLUSWSWRevenue] = [new_HardwareRevenue] + [new_SoftwareRevenue];
UPDATE [Opportunity] SET [new_FutureAGSRevenueTotal] = [new_50ServicesRevenue] + [new_HDPLUSWSWRevenue];
UPDATE [Opportunity] SET [new_InitialVerintRevenue] = [new_TotalRevenue] - [new_5
---------------------------------------------------------------------------------------
-- In this block we're going to:
--   1) Add the FeatureUsage table
---------------------------------------------------------------------------------------
create schema TrialBalanceReporting
go
create table TrialBalanceReporting.FeatureUsageRecords (
	FeatureUsageRecordId uniqueidentifier not null constraint [PK_FeatureUsageRecords] primary key clustered,
	ApplicationName varchar(50) not null,
	ApplicationVersion varchar(50) not null,
	FeatureGroup varchar(300) not null,
	FeatureName varchar(300) not null,
	FeatureDetails varchar(300) not null,
	OperatingSystem varchar(70) not null,
	ClientIPAddress varchar(30) not null,
	DateRecorded datetime not null
go
create procedure TrialBalanceReporting.AppendFeatureUsageRecord (
	@applicationName varchar(50) not null,
	@applicationVersion varchar(50) not null,
	@featureGroup varchar(300) not null,
	@featureName varchar(300) not null,
	@featureDetails varcha
create database mopita DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
use mopita;
    drop table if exists acct_group;
    drop table if exists acct_group_permission;
    drop table if exists acct_user;
    drop table if exists acct_user_group;
    create table acct_group (
        id bigint not null auto_increment,
        name varchar(255) not null unique,
        primary key (id)
    ) ENGINE=InnoDB;
    create table acct_group_permission (
        group_id bigint not null,
        permission varchar(255) not null
    ) ENGINE=InnoDB;
    create table acct_user (
        id bigint not null auto_increment,
        email varchar(255),
        login_name varchar(255) not null unique,
        name varchar(255),
        password varchar(255),
        salt varchar(64),
        status varchar(32),
        primary key (id)
    ) ENGINE=InnoDB;
    create table acct_user_group (
        user_id bigint not null,
        group_id bigint not null
    ) ENGINE=InnoDB;
create table f_categor

	id int not null auto_increment,
	name varchar(50) not null,
	value varchar(50),
	description varchar(100),
	parent_id int,
	dtype varchar(32) not null,
	primary key(id)
)ENGINE=InnoDB;
create table f_file(
	id int not null auto_increment,
	name varchar(50) not null,
	title varchar(50),
	ux_size int,
	apk_size int,
	ux_w_path varchar(255),
	ux_h_path varchar(255),
	apk_path varchar(255),
	avail_machine varchar(255),
	unavail_machine varchar(255),
	icon_path varchar(255),
	ad_path varchar(255),
	pre_web_path varchar(255),
	pre_client_path varchar(255),
	market_url varchar(100),
	version varchar(10),
	create_time varchar(30),
	modify_time varchar(30),
	primary key(id)
)ENGINE=InnoDB;
create table f_third_url(
	id int not null auto_increment,
	c_mobile varchar(255),
	c_unicome varchar(255),
	c_tele varchar(255),
	theme_id int,
	primary key(id)
)ENGINE=InnoDB;
create table f_file_info(
	id int not null auto_increment,
	title varchar(50) not null,
	language varchar(10),
	author varchar(50)

	short_description varchar(255),
	long_description varchar(500),
	price float,
	f_id int,
	primary key(id)
)ENGINE=InnoDB;
create table f_store_info(
	id int not null auto_increment,
	title varchar(50) not null,
	language varchar(10),
	author varchar(50),
	short_description varchar(255),
	long_description varchar(500),
	price float,
	f_id int,
	fi_id int,
	store_id int,
	primary key(id)
)ENGINE=InnoDB;
create table f_file_shelf(
	id int not null auto_increment,
	f_id int,
	s_id int,
	sort int,
	primary key(id)
)ENGINE=InnoDB;
create table f_file_store(
	id int not null auto_increment,
	f_id int,
	s_id int,
	primary key(id)
)ENGINE=InnoDB;
create table f_category_file(
	id int not null auto_increment,
	category_id int,
	file_id int,
	primary key(id)
)ENGINE=InnoDB;
create table f_market(
	id int not null auto_increment,
	name varchar(50),
	value varchar(50),
	pk_name varchar(100),
	market_key varchar(255),
	primary key(id)
)ENGINE=InnoDB;
create table f_market_file(
	id int not null au
/****** Object:  StoredProcedure [dbo].[AddFTICRUmcCSStats] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE dbo.AddFTICRUmcCSStats
/****************************************************	
**	Adds row to the T_FTICR_UMC_CS_Stats table table
**  Modelled after AddFTICRUmcMember
**
**	Returns 0 if success; error number on failure
**
**	Auth:	mem
**	Date:	01/13/2010
**
****************************************************/
	@UMCResultsID int,				-- Reference to T_FTICR_UMC_Results table
	@ChargeState smallint,
	@MemberCount smallint,
	@MonoisotopicMass float,		-- Average or median monoisotopic mass of the members in this charge state
	@Abundance float,
	@ElutionTime real,
	@DriftTime real
As
	Set NoCount On
	declare @returnvalue int
	set @returnvalue=0
		
	--append new row to the T_FTICR_UMC_CS_Stats table
	INSERT INTO T_FTICR_UMC_CS_Stats( UMC_Results_ID,
	                                  Charge_State,
	                                  Member_Count,
	             
-- MySQL dump 10.10
--
-- Host: localhost    Database: CMAP
-- ------------------------------------------------------
-- Server version	5.0.21
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Dumping data for table cmap_attribute
--
--
-- Dumping data for table cmap_correspondence_evidence
--
INSERT INTO cmap_correspondence_evidence VALUES (1,'1',1,'ANB',NULL,1);
INSERT INTO cmap_correspondence_evidence VALUES (2,'2',2,'ANB',NULL,1);
INSERT INTO cmap_correspondence_evidence VALUES (3,'3',3,'ANB',NULL,1);
INSERT INTO cmap_correspondence_evidence VALUES (4,'4',4,'ANB',NULL,1);
INSERT INTO cmap_correspondence_evidence VALUES (5,'5',5,'ANB',NULL,1);
--
-- Dumping data for 

--
INSERT INTO cmap_correspondence_lookup VALUES (21,6,1,2200.00,1000.00,2700.00,2000.00,3,1,'read','read');
INSERT INTO cmap_correspondence_lookup VALUES (6,21,1,1000.00,2200.00,2000.00,2700.00,1,3,'read','read');
INSERT INTO cmap_correspondence_lookup VALUES (18,5,2,450.00,450.00,1000.00,1000.00,3,1,'read','read');
INSERT INTO cmap_correspondence_lookup VALUES (5,18,2,450.00,450.00,1000.00,1000.00,1,3,'read','read');
INSERT INTO cmap_correspondence_lookup VALUES (23,10,3,3100.00,3100.00,4000.00,4000.00,3,1,'read','read');
INSERT INTO cmap_correspondence_lookup VALUES (10,23,3,3100.00,3100.00,4000.00,4000.00,1,3,'read','read');
INSERT INTO cmap_correspondence_lookup VALUES (26,8,4,500.00,2200.00,1000.00,2700.00,4,1,'read','read');
INSERT INTO cmap_correspondence_lookup VALUES (8,26,4,2200.00,500.00,2700.00,1000.00,1,4,'read','read');
INSERT INTO cmap_correspondence_lookup VALUES (25,7,5,0.00,2000.00,500.00,2300.00,4,1,'read','read');
INSERT INTO cmap_correspondence_lookup VALUES (7,2

--
-- Dumping data for table cmap_correspondence_matrix
--
INSERT INTO cmap_correspondence_matrix VALUES ('1','T1','TI2006','TS','3','T3','TI2006_2','TS',3);
INSERT INTO cmap_correspondence_matrix VALUES ('1','T1','TI2006','TS','4','T4','TI2006_2','TS',2);
INSERT INTO cmap_correspondence_matrix VALUES ('3','T3','TI2006_2','TS','1','T1','TI2006','TS',3);
INSERT INTO cmap_correspondence_matrix VALUES ('4','T4','TI2006_2','TS','1','T1','TI2006','TS',2);
--
-- Dumping data for table cmap_feature
--
INSERT INTO cmap_feature VALUES (1,'1',1,'contig','T1.1',0,0.00,1000.00,1,1);
INSERT INTO cmap_feature VALUES (2,'2',1,'contig','T1.2',0,1000.00,2000.00,1,1);
INSERT INTO cmap_feature VALUES (3,'3',1,'contig','T1.3',0,2000.00,4000.00,1,1);
INSERT INTO cmap_feature VALUES (4,'4',1,'read','R1.g1',0,0.00,500.00,1,1);
INSERT INTO cmap_feature VALUES (5,'5',1,'read','R2.g1',0,450.00,1000.00,1,1);
INSERT INTO cmap_feature VALUES (6,'6',1,'read','R3.g1',0,1000.00,2000.00,1,1);
INSERT INTO cmap_feature
select * from Product
select * from PC
SELECT P1.model, P2.model 
FROM Product P1 JOIN 
 Product P2 ON P1.model <= P2.model
SELECT COUNT(*) no, P2.model 
FROM Product P1 JOIN 
 Product P2 ON P1.model <= P2.model 
GROUP BY P2.model
select * from Product
ORDER BY Product.model
select ROW_NUMBER() OVER(ORDER BY Product.model) no, Product.model from Product
SELECT id_psg 
FROM pass_in_trip;
select * from Pass_in_trip
SELECT COUNT(*) num, P2.id_psg
FROM (SELECT *, CAST(date AS CHAR(11)) +
                RIGHT('00' + CAST(id_psg AS VARCHAR(2)), 2)+
                CAST(trip_no AS CHAR(4)) dit
       FROM Pass_in_trip
      ) P1 JOIN
      (SELECT *, CAST(date AS CHAR(11)) +
                 RIGHT('00' + CAST(id_psg AS VARCHAR(2)), 2)+
                 CAST(trip_no AS CHAR(4)) dit
       FROM pass_in_trip
       ) P2 ON P1.dit <= P2.dit
GROUP BY P2.dit, P2.id_psg
ORDER BY 1;
SELECT ROW_NUMBER() OVER(ORDER BY date, id_psg, trip_no) num, id_psg
FROM Pass_in_trip
ORDER BY num;
select ROW_NUMBER

select * from Product WHERE Product.maker = 'A' or Product.maker = 'E' 
ORDER BY Product.type
select row_number() over(ORDER BY p1.cnt desc) no,p1.maker from 
(select p.maker,count(*) cnt from Product p
GROUP by p.maker,p.model) p1
--ORDER BY p1.cnt desc
select * from Product p 
/*
Ïðîíóìåðîâàòü ñòðîêè èç òàáëèöû Product â ñëåäóþùåì ïîðÿäêå: èìÿ ïðîèçâîäèòåëÿ â ïîðÿäêå 
óáûâàíèÿ ÷èñëà ïðîèçâîäèìûõ èì ìîäåëåé (ïðè îäèíàêîâîì ÷èñëå ìîäåëåé èìÿ ïðîèçâîäèòåëÿ 
â àëôàâèòíîì ïîðÿäêå ïî âîçðàñòàíèþ), íîìåð ìîäåëè (ïî âîçðàñòàíèþ).
Âûâîä: íîìåð â ñîîòâåòñòâèè ñ çàäàííûì ïîðÿäêîì, èìÿ ïðîèçâîäèòåëÿ (maker), ìîäåëü (model) 
*/
/*
no	maker	model
1	A	1232
10	E	2112
11	E	2113
12	B	1121
13	B	1750
14	D	1288
15	D	1433
16	C	1321
2	A	1233
3	A	1276
4	A	1298
5	A	1401
6	A	1408
7	A	1752
8	E	1260
9	E	1434
*/
select * from Product p 
select count(*) as A from Product p WHERE p.maker='A'
select count(*) as E  from Product p WHERE p.maker='E'
select count(*) AS B from Product p WHERE p.maker='B'
select count(*

select count(*) AS C from Product p WHERE p.maker='C'
with cte AS (SELECT ROW_NUMBER() OVER(partition by p.maker ORDER BY  p.model) no,p.maker, p.model from Product p)
--select x.no, x.maker, x.model from cte x
--ORDER BY  (select max(no) FROM cte c )
select  rn,vv.maker,vv.model from (
SELECT row_number() over(ORDER BY pr.model,mn,v.maker)rn, v.mn,v.maker,pr.model from (
select count(p.model) mn,p.maker from cte p
group BY p.maker) v
left JOIN
(select row_number()over(ORDER BY p.model) row,p.maker,p.model from Product p) pr
 ON pr.maker=v.maker) vv
ORDER BY  vv.mn desc, vv.model, vv.maker
select row_number()over(order by count(c.no)) row from cte c
--_yizraor [AR]
SELECT N = ROW_NUMBER() OVER (ORDER BY Q DESC, MAKER ASC, MODEL ASC), MAKER, MODEL
 FROM (   SELECT MAKER, MODEL, Q = COUNT(*) OVER (PARTITION BY MAKER)   FROM PRODUCT ) T
 --herrRo [AR]
 Select row_number() over(order by cc desc,maker,model),
  maker,
  model From Product p 
  Cross Apply ( Select count(model) cc From Prod
<dtml-let row_list="[]">
  <dtml-in prefix="loop" expr="_.range(_.len(uid))">
    <dtml-if "not(isInventoryMovement[loop_item]) and isMovement[loop_item] and getResourceUid[loop_item]">
      <dtml-if "getDestinationUid[loop_item]">
        <dtml-call expr="row_list.append([
                    uid[loop_item], 
                    order_id[loop_item],
                    getExplanationUid[loop_item],
                    getDestinationUid[loop_item],
                    getDestinationSectionUid[loop_item],
                    getDestinationPaymentUid[loop_item],
                    getDestinationFunctionUid[loop_item],
                    getDestinationProjectUid[loop_item], 
                    getDestinationFundingUid[loop_item], 
                    getLedgerUid[loop_item],
                    getDestinationPaymentRequestUid[loop_item], 
                    getSourceSectionUid[loop_item], 
                    getSourceUid[loop_item], 
                    getResourceUid[loop_item],
  

                    isCancellationAmount[loop_item],
                    isAccountable[loop_item],
                    getStopDate[loop_item], 
                    getStartDate[loop_item], 
                    getDestinationInventoriatedTotalAssetPrice[loop_item], 
                    getPortalType[loop_item], 
                    getSimulationState[loop_item], 
                    getVariationText[loop_item],
                    getSubVariationText[loop_item]])">
      </dtml-if>
      <dtml-if "getSourceUid[loop_item]">
        <dtml-call expr="row_list.append([
                    uid[loop_item], 
                    mirror_order_id[loop_item],
                    getExplanationUid[loop_item],
                    getSourceUid[loop_item],
                    getSourceSectionUid[loop_item],
                    getSourcePaymentUid[loop_item],
                    getSourceFunctionUid[loop_item],
                    getSourceProjectUid[loop_item], 
                    getSourceFundingUi

                    getLedgerUid[loop_item],
                    getSourcePaymentRequestUid[loop_item], 
                    getDestinationSectionUid[loop_item], 
                    getDestinationUid[loop_item], 
                    getResourceUid[loop_item],
                    -(getInventoriatedQuantity[loop_item] or 0), 
                    isCancellationAmount[loop_item],
                    isAccountable[loop_item],
                    getStartDate[loop_item], 
                    getStopDate[loop_item],
                    getSourceInventoriatedTotalAssetPrice[loop_item], 
                    getPortalType[loop_item], 
                    getSimulationState[loop_item], 
                    getVariationText[loop_item],
                    getSubVariationText[loop_item]])">
      </dtml-if>
    </dtml-if>
  </dtml-in>  
  <dtml-if "row_list">
INSERT INTO
  stock
VALUES
    <dtml-in prefix="row" expr="row_list">
  <dtml-sqlvar expr="row_item[0]" type="int">,
  <dtml-sqlvar expr="r
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `group_member`;
CREATE TABLE `group_member` (
  `guid` int(10) unsigned NOT NULL,
  `memberGuid` int(10) unsigned NOT NULL,
  `memberFlags` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `subgroup` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `roles` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`memberGuid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Groups';
LOCK TABLES 
/*
Navicat MySQL Data Transfer
Source Server         : local
Source Server Version : 50547
Source Host           : localhost:3306
Source Database       : rulemanage
Target Server Type    : MYSQL
Target Server Version : 50547
File Encoding         : 65001
Date: 2017-08-15 07:49:24
*/
SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `chaos_admin_nav`
-- ----------------------------
DROP TABLE IF EXISTS `chaos_admin_nav`;
CREATE TABLE `chaos_admin_nav` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '菜单表',
  `pid` int(11) unsigned DEFAULT '0' COMMENT '所属菜单',
  `name` varchar(15) DEFAULT '' COMMENT '菜单名称',
  `mca` varchar(255) DEFAULT '' COMMENT '模块、控制器、方法',
  `ico` varchar(20) DEFAULT '' COMMENT 'font-awesome图标',
  `order_number` int(11) unsigned DEFAULT NULL COMMENT '排序',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=76 DEFAULT CHARSET=utf8;
-- ----------------------------
-- Records of chaos_admin_nav
-- ----------------------------
INSERT

INSERT INTO `chaos_admin_nav` VALUES ('45', '2', '菜单添加', 'admin/nav/add', '', null);
INSERT INTO `chaos_admin_nav` VALUES ('2', '0', '系统设置', 'admin/nav/index', '', '1');
INSERT INTO `chaos_admin_nav` VALUES ('68', '2', '权限管理', 'admin/authRule/index', '', null);
INSERT INTO `chaos_admin_nav` VALUES ('69', '2', '权限添加', 'admin/authRule/add', '', null);
INSERT INTO `chaos_admin_nav` VALUES ('71', '2', '用户组管理', 'admin/authRule/group', '', null);
INSERT INTO `chaos_admin_nav` VALUES ('72', '2', '添加用户组', 'admin/authRule/addGroup', '', null);
INSERT INTO `chaos_admin_nav` VALUES ('73', '2', '用户列表', 'admin/AuthRule/adminUserList', '', null);
INSERT INTO `chaos_admin_nav` VALUES ('74', '2', '添加用户', 'admin/AuthRule/addUser', '', null);
INSERT INTO `chaos_admin_nav` VALUES ('75', '0', '首页', 'admin/index/index', '', null);
-- ----------------------------
-- Table structure for `chaos_auth_group`
-- ----------------------------
DROP TABLE IF EXISTS `chaos_auth_group`;
CREATE TABLE `chaos_auth_group

  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `title` char(100) NOT NULL DEFAULT '',
  `status` tinyint(1) NOT NULL DEFAULT '1',
  `rules` char(80) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;
-- ----------------------------
-- Records of chaos_auth_group
-- ----------------------------
INSERT INTO `chaos_auth_group` VALUES ('1', '管理员', '1', '19,5,6,7,8,10,18,24,25,26,27,28,13,14,15,16,20,21,22,23,29');
INSERT INTO `chaos_auth_group` VALUES ('4', 'test', '1', '');
INSERT INTO `chaos_auth_group` VALUES ('5', 'test2', '1', '');
INSERT INTO `chaos_auth_group` VALUES ('7', '普通用户', '1', '');
-- ----------------------------
-- Table structure for `chaos_auth_group_access`
-- ----------------------------
DROP TABLE IF EXISTS `chaos_auth_group_access`;
CREATE TABLE `chaos_auth_group_access` (
  `uid` mediumint(8) unsigned NOT NULL,
  `group_id` mediumint(8) unsigned NOT NULL,
  UNIQUE KEY `uid_group_id` (`uid`,`group_id`),
  KEY `u
﻿CREATE View [dbo].[vFABData]
AS
SELECT ItemID, Ticket, State, Area, srcXML
FROM  dbo._FAB
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes =

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  

      End
      Begin Tables = 
         Begin Table = "_FAB (dbo)"
            Begin Extent = 
               Top = 7
               Left = 48
               Bottom = 143
               Right = 222
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   En
set feedback on
--1st query--
select avg(MPG)
from cars_data
where cylinders = 8 and year between 1970 and 1979
--2nd query--
select year, avg(Edispl)
from countries, car_makers, cars_data, model_list, car_names
where countryname = 'usa' and countryid = country and
car_makers.id = model_list.maker and model_list.model = car_names.model and
car_names.id = cars_data.id
group by year
order by year asc
--3rd query--
select min(weight)
from cars_data, continents, countries, model_list, car_makers, car_names
where continents.continent = 'europe' and contid = countries.continent and
countryid = car_makers.country and car_makers.id = model_list.maker and
model_list.model = car_names.model and car_names.id = cars_data.id
--4th query--
select count(*)
from car_names, car_makers, cars_data, model_list, countries
where countryname != 'usa' and countryid = car_makers.country and
car_makers.id = model_list.maker and model_list.model = car_names.model and
car_names.id = cars_data.id and cylinders = 4

group by car_makers.fullname
order by count(*) asc
--5th query--
select max(accelerate), min(accelerate), count(*)
from car_names, car_makers, cars_data, model_list, countries
where countryname = 'usa' and countryid = car_makers.country and
car_makers.id = model_list.maker and model_list.model = car_names.model and
car_names.id = cars_data.id and year = 1975
group by car_makers.fullname
order by car_makers.fullname asc
--6th query--
select max(q2.fordweight), min(q2.fordweight), avg(q2.fordweight)
from (select count(*) as numModels, gmcars.gmweight as fordweight, gmcars.gmyear as years
      from (select cars_data.weight as gmWeight, cars_data.year as gmYear,
            car_names.model as gmModel
           from car_makers, model_list,
           cars_data, car_names
            where car_makers.id = model_list.maker and
            model_list.model = car_names.model and
            car_names.model = 'ford' and
            car_names.id = cars_data.id and car_makers.maker = 'gm') gmCa
-- =============================================
-- Author:		Eduardo Getassi da Rosa
-- Project:		Clinica
-- Create date: 10/10/2013
-- Description:	Stored Procedure que insere um registro da tabela Logradouro
-- =============================================
IF EXISTS 
	SELECT * 
		FROM INFORMATION_SCHEMA.ROUTINES 
	WHERE 
		SPECIFIC_SCHEMA = 'dbo' AND
		SPECIFIC_NAME = 'LogradouroInsert' 
   DROP PROCEDURE dbo.LogradouroInsert
GO
CREATE PROCEDURE LogradouroInsert
	StringBuilder temp = new StringBuilder();
	Boolean flag = false; 
	foreach (Campo campo in projeto.Tabelas.Find(p => p.Nome.Equals(projeto.Tabela)).Campos) 
	{
		if (flag)
		{
			temp.Append("   @"); 
			temp.Append(campo.Nome);
			temp.Append(" ");
			if(campo.Tipo.Equals("varchar"))
			{
				temp.Append(campo.Tipo);
				temp.Append("(");
				temp.Append(campo.TamanhoMax);
				temp.Append(")");
			}
			else
			{ 
				temp.Append(campo.Tipo); 
			}
			if(Convert.ToBoolean(campo.PermiteNulo))
			{
				temp.Append(" = null");

/*
Navicat MySQL Data Transfer
Source Server         : snake.ics.uci.edu - synonyms
Source Server Version : 50528
Source Host           : snake.ics.uci.edu:3306
Source Database       : synonyms
Target Server Type    : MYSQL
Target Server Version : 50528
File Encoding         : 65001
Date: 2013-08-14 11:51:45
*/
SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `pair`
-- ----------------------------
DROP TABLE IF EXISTS `pair`;
CREATE TABLE `pair` (
  `word1` varchar(255) NOT NULL,
  `word2` varchar(255) NOT NULL,
  `type` char(1) DEFAULT 's',
  PRIMARY KEY (`word1`,`word2`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- ----------------------------
-- Records of pair
-- ----------------------------
INSERT INTO pair VALUES ('unzip', 'extract', 's');
INSERT INTO pair VALUES ('zip', 'compress', 's');
INSERT INTO pair VALUES ('to', 'convert', 's');
INSERT INTO pair VALUES ('to', '2', 's');
INSERT INTO pair VALUES ('util', 'helper', 's');
INSERT INTO pair VALUES (

INSERT INTO pair VALUES ('create', 'new', 's');
INSERT INTO pair VALUES ('make', 'new', 's');
INSERT INTO pair VALUES ('check', 'if', 's');
INSERT INTO pair VALUES ('test', 'if', 's');
INSERT INTO pair VALUES ('exceeds', 'greater', 's');
INSERT INTO pair VALUES ('check', 'is', 's');
INSERT INTO pair VALUES ('full', 'max', 's');
INSERT INTO pair VALUES ('create', 'clone', 's');
INSERT INTO pair VALUES ('save', 'output', 's');
INSERT INTO pair VALUES ('dumps', 'export', 's');
INSERT INTO pair VALUES ('add', 'plus', 's');
INSERT INTO pair VALUES ('remove', 'cleanup', 's');
INSERT INTO pair VALUES ('same', 'equal', 's');
INSERT INTO pair VALUES ('delete', 'remove', 's');
INSERT INTO pair VALUES ('start', 'begin', 's');
INSERT INTO pair VALUES ('make', 'create', 's');
INSERT INTO pair VALUES ('add', 'append', 's');
INSERT INTO pair VALUES ('determine', 'check', 's');
INSERT INTO pair VALUES ('write', 'save', 's');
INSERT INTO pair VALUES ('display', 'show', 's');
INSERT INTO pair VALUES ('

INSERT INTO pair VALUES ('last', 'end', 's');
INSERT INTO pair VALUES ('first', 'start', 's');
INSERT INTO pair VALUES ('clone', 'copy', 's');
INSERT INTO pair VALUES ('create', 'construct', 's');
INSERT INTO pair VALUES ('new', 'make', 's');
INSERT INTO pair VALUES ('node', 'entry', 's');
INSERT INTO pair VALUES ('token', 'element', 's');
INSERT INTO pair VALUES ('copy', 'instance', 's');
INSERT INTO pair VALUES ('link', 'reference', 's');
INSERT INTO pair VALUES ('search', 'find', 's');
INSERT INTO pair VALUES ('give', 'specify', 's');
INSERT INTO pair VALUES ('entry', 'element', 's');
INSERT INTO pair VALUES ('append', 'insert', 's');
INSERT INTO pair VALUES ('value', 'element', 's');
INSERT INTO pair VALUES ('get', 'return', 's');
INSERT INTO pair VALUES ('node', 'element', 's');
INSERT INTO pair VALUES ('node', 'token', 's');
INSERT INTO pair VALUES ('or', 'either', 's');
INSERT INTO pair VALUES ('soft', 'weak', 's');
INSERT INTO pair VALUES ('error', 'warning', 's');
INSERT INTO
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_GenerateCodeInsert]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_GenerateCodeInsert]
	  @param_Code			NVARCHAR(16)
	 ,@param_SwitchID		INT 
	 ,@param_ClientID		NVARCHAR(20)
	 ,@param_PortfolioID	NVARCHAR(20)
AS
BEGIN
	DECLARE @return_Valid int
SET NOCOUNT ON;
IF NOT EXISTS (SELECT [Code]  FROM [NavIntegrationDB].[dbo].[SwitchGenerateCode] WHERE [Code] = @param_Code)
 BEGIN
	INSERT INTO [NavIntegrationDB].[dbo].[SwitchGenerateCode]
		([Code])
	 VALUES
		(@param_Code);
		
	 IF ((SELECT COUNT(*) FROM  [NavIntegrationDB].[dbo].[SwitchClientSecurityCode] WHERE SwitchID = @param_SwitchID and ClientID = @param_ClientID and PortfolioID = @param_PortfolioID) > 0)
		BEGIN
			DELETE FROM [NavIntegrationDB].[dbo].[SwitchGenerateCode] WHERE Code = 
				(SELECT Code FROM [NavIntegrationDB].[dbo].[SwitchClientSecurityCode] WHERE SwitchID = @param_Swi

			UPDATE [NavIntegrationDB].[dbo].[SwitchClientSecurityCode]
				SET Code = @param_Code, IsConsumed = 0
			WHERE SwitchID = @param_SwitchID and ClientID = @param_ClientID and PortfolioID = @param_PortfolioID
		END
	  ELSE 
		BEGIN
			INSERT INTO [NavIntegrationDB].[dbo].[SwitchClientSecurityCode]
				(Code, SwitchID, ClientID, PortfolioID)
			VALUES
				(@param_Code, @param_SwitchID, @param_ClientID, @param_PortfolioID)
		END
		SET @return_Valid = 1
	END
ELSE IF EXISTS (SELECT [Code]  FROM [NavIntegrationDB].[dbo].[SwitchGenerateCode] WHERE DATEDIFF(dd,DateCreated,GETDATE())  > 30 AND [Code] = @param_Code)
	BEGIN
		UPDATE [NavIntegrationDB].[dbo].[SwitchGenerateCode]
			SET DateCreated = GETDATE()
			WHERE Code = @param_Code
		IF ((SELECT COUNT(*) FROM  [NavIntegrationDB].[dbo].[SwitchClientSecurityCode] WHERE SwitchID = @param_SwitchID and ClientID = @param_ClientID and PortfolioID = @param_PortfolioID) > 0)
		BEGIN
			DELETE FROM [NavIntegrationDB].[dbo].[SwitchGenerateCode] WHERE 
﻿CREATE VIEW dbo.v_GroupSeme_ican5std
AS
SELECT          CONVERT(int, para_phsiname) AS Value, para_dispname AS Name
FROM              iCAN5_STD.dbo.ican_para
WHERE          (para_code = 'p_seme')
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[9] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1[50] 2[25] 3) )"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
 

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 5
   End

   Begin DiagramPane = 
      PaneHidden = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ican_para (iCAN5_STD.dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 140
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      PaneHidden = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         
# Tests for the performance schema
# ==========================================
# HELPER include/event_aggregate_cleanup.inc
# ==========================================
--disable_query_log
revoke all privileges, grant option from user1@localhost;
revoke all privileges, grant option from user2@localhost;
revoke all privileges, grant option from user3@localhost;
revoke all privileges, grant option from user4@localhost;
drop user user1@localhost;
drop user user2@localhost;
drop user user3@localhost;
drop user user4@localhost;
flush privileges;
drop procedure dump_thread;
drop procedure dump_one_thread;
drop prepare dump_waits_account;
drop prepare dump_waits_user;
drop prepare dump_waits_host;
drop prepare dump_waits_history;
drop prepare dump_waits_global;
drop prepare dump_stages_account;
drop prepare dump_stages_user;
drop prepare dump_stages_host;
drop prepare dump_stages_history;
drop prepare dump_stages_global;
drop prepare dump_statements_account;
drop prepare dump_statements_user
CREATE ROLE view_only;
GRANT SELECT ON TABLE MEDICAL_INSTITUTION TO ROLE view_only;
GRANT SELECT ON TABLE STAFF TO ROLE view_only;
GRANT SELECT ON TABLE CYCLE_OF_PATIENT TO ROLE view_only;
GRANT SELECT ON TABLE MEDICAL_HISTORY TO ROLE view_only;
GRANT SELECT ON TABLE APPLICATION_TIMETABLE TO ROLE view_only;
GRANT SELECT ON TABLE SURVEY TO ROLE view_only;
GRANT SELECT ON TABLE OPERATION_TYPE TO ROLE view_only;
GRANT SELECT ON TABLE PATIENT_SERVICE TO ROLE view_only;
GRANT SELECT ON TABLE SURVEY_OF_PATIENT TO ROLE view_only;
GRANT SELECT ON TABLE SURVEY_TYPE TO ROLE view_only;
GRANT SELECT ON TABLE TRACED_SURVEY TO ROLE view_only;
GRANT SELECT ON TABLE UNIT TO ROLE view_only;
GRANT SELECT ON TABLE OPERATION TO ROLE view_only;
GRANT SELECT ON TABLE EQUIPMENT TO ROLE view_only;
GRANT SELECT ON TABLE LEAVE TO ROLE view_only;
GRANT SELECT ON TABLE ILLNESS_IN_HISTORY TO ROLE view_only;
GRANT SELECT ON TABLE MEDICINE TO ROLE view_only;
GRANT SELECT ON TABLE CUSTOM TO ROLE view_only;
GRANT SELE
DELETE FROM `mangos_string` WHERE `entry` IN (11600, 11601, 11602, 11603, 11604, 11605, 11606, 11607, 11608);
INSERT INTO `mangos_string` (`entry`, `content_default`, `content_loc1`, `content_loc2`, `content_loc3`, `content_loc4`, `content_loc5`, `content_loc6`, `content_loc7`, `content_loc8`) VALUES
(11600, 'ChatSpy appended to player |cffff0000%s|r(%u)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'ChatSpy присоединён к игроку |cffff0000%s|r(%u)'),
(11601, 'ChatSpy for player |cffff0000%s|r(%u) cancelled by massive ChatSpy cancel.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'ChatSpy для игрока |cffff0000%s|r(%u) отменён массовым сбросом системы ChatSpy.'),
(11602, 'All ChatSpys reset.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'ChatSpy для всех игроков сброшен.'),
(11603, 'Player %s(%u) has no ChatSpy.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'К игроку %s(%u) не прикреплён ChatSpy.'),
(11604, 'You were ChatSpying player, cancelled.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'ChatS
DROP TABLE IF EXISTS SX_PRODUCTOS_LOG
CREATE TABLE `sx_productos_log` (
  `ID` bigint(20) NOT NULL auto_increment,
  `PRODUCTO_ID` bigint(20) NOT NULL ,
  `ARTFACNECR` bit(1) default NULL,
  `ACABADO` varchar(20) default NULL,
  `activo` bit(1) NOT NULL,
  `ACTIVO_COM` bit(1) default NULL,
  `ACTIVO_COM_OBS` varchar(40) default NULL,
  `ACTIVO_INV` bit(1) default NULL,
  `ACTIVO_INV_OBS` varchar(40) default NULL,
  `ACTIVO_VEN` bit(1) default NULL,
  `ACTIVO_VEN_OBS` varchar(40) default NULL,
  `ancho` double NOT NULL,
  `calibre` int(11) NOT NULL,
  `caras` int(11) NOT NULL,
  `CLAVE` varchar(10) NOT NULL,
  `COLOR` varchar(25) default NULL,
  `deLinea` bit(1) NOT NULL,
  `DESCRIPCION` varchar(250) NOT NULL,
  `ELIMINADO` bit(1) default NULL,
  `GRAMOS` int(11) NOT NULL,
  `inventariable` bit(1) NOT NULL,
  `KILOS` double NOT NULL,
  `largo` double NOT NULL,
  `LIN_ORIG` varchar(10) default NULL,
  `modoDeVenta` varchar(255) default NULL,
  `nacional` bit(1) NOT NULL,
  `precioContado

  `precioCredito` double NOT NULL,
  `PRESENTACION` varchar(15) NOT NULL,
  `servicio` bit(1) NOT NULL,
  `TRS` bit(1) default NULL,
  `CREADO` datetime default NULL,
  `CREADO_USERID` varchar(255) default NULL,
  `MODIFICADO` datetime default NULL,
  `MODIFICADO_USERID` varchar(255) default NULL,
  `version` int(11) NOT NULL,
  `LINEA_ID` bigint(20) NOT NULL,
  `UNIDAD` varchar(3) NOT NULL,
  `CLASE_ID` bigint(20) NOT NULL,
  `MARCA_ID` bigint(20) default NULL,
  `TX_IMPORTADO` datetime default NULL,
  `TX_REPLICADO` datetime default NULL,
  PRIMARY KEY  (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1 ;
/** SOlO PARA PRODUCCION (OFICINAS) **/
DROP TRIGGER IF EXISTS PRODUCTOS_BEF_UPD 
DROP TRIGGER IF EXISTS PRODUCTOS_TRG_BU
CREATE TRIGGER PRODUCTOS_TRG_BU
BEFORE UPDATE ON SX_PRODUCTOS
FOR EACH ROW 
BEGIN
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
SET NEW.MODIFICADO=NOW(),NEW.TX_REPLICADO=NULL;
INSERT INTO sx_productos_log  (PRODUCTO_ID,ARTFACNECR,ACABADO,activo,ACTIVO_C

                        VALUES(NEW.PRODUCTO_ID
,NEW.ARTFACNECR
,NEW.ACABADO
,NEW.activo
,NEW.ACTIVO_COM
,NEW.ACTIVO_COM_OBS
,NEW.ACTIVO_INV
,NEW.ACTIVO_INV_OBS
,NEW.ACTIVO_VEN
,NEW.ACTIVO_VEN_OBS
,NEW.ancho
,NEW.calibre
,NEW.caras
,NEW.CLAVE
,NEW.COLOR
,NEW.deLinea
,NEW.DESCRIPCION
,NEW.ELIMINADO
,NEW.GRAMOS
,NEW.inventariable
,NEW.KILOS
,NEW.largo
,NEW.LIN_ORIG
,NEW.modoDeVenta
,NEW.nacional
,NEW.precioContado
,NEW.precioCredito
,NEW.PRESENTACION
,NEW.servicio
,NEW.TRS
,NEW.CREADO
,NEW.CREADO_USERID
,NEW.MODIFICADO
,NEW.MODIFICADO_USERID
,NEW.version
,NEW.LINEA_ID
,NEW.UNIDAD
,NEW.CLASE_ID
,NEW.MARCA_ID
,NULL
,NULL);
END;
DROP TRIGGER IF EXISTS PRODUCTOS_TRG_BI
CREATE TRIGGER PRODUCTOS_TRG_BI
BEFORE INSERT ON SX_PRODUCTOS
FOR EACH ROW 
BEGIN
    SET NEW.MODIFICADO=NOW(),NEW.CREADO=NOW();
END;
DROP TRIGGER IF EXISTS PRODUCTOS_TRG_AI
CREATE TRIGGER PRODUCTOS_TRG_AI
AFTER INSERT ON SX_PRODUCTOS
FOR EACH ROW 
BEGIN
	--DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
        INSERT INTO sx_produ
CREATE TABLE cm_flashaltcontent(
flashaltcontentid INT NOT NULL AUTO_INCREMENT,
sectionid INT NOT NULL,
createdby INT NOT NULL,
modifiedby INT,
title VARCHAR(255),
content MEDIUMTEXT NOT NULL,
inserttimestamp TIMESTAMP NOT NULL,
updatetimestamp datetime NOT NULL,
FOREIGN KEY (sectionid) REFERENCES cuyahoga_section (sectionid),
PRIMARY KEY (flashaltcontentid));
/*
 *  Table data
 */
INSERT INTO cuyahoga_moduletype ( name, assemblyname, classname, path, editpath, inserttimestamp, updatetimestamp) VALUES ( 'Flash', 'Cuyahoga.Modules.Flash', 'Cuyahoga.Modules.Flash.FlashModule', 'Modules/Flash/Flash.ascx', 'Modules/Flash/EditFlash.aspx', '2005-05-15 14:36:28.324', '2004-05-15 14:36:28.324');
SELECT @moduletypeid := last_insert_id();
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIEALIGN', 'Movie Align', 'Cuyahoga.Modules.Flash.MovieAlign', 1, 0);
INSERT INTO cuyahoga_modulesetting ( moduletypeid,

INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIEHEIGHT', 'Movie Height', 'System.String', 0, 1);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIEWIDTH', 'Movie Width', 'System.String', 0, 1);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIENAME', 'Movie Name', 'System.String', 0, 1);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIEQUALITY', 'Movie Quality', 'Cuyahoga.Modules.Flash.MovieQuality', 1, 1);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MOVIESCRIPTACCESS', 'Movie Script Access', 'Cuyahoga.Modules.Flash.Mov

INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MAJORPLUGINVERSION', 'Major Plugin Version', 'System.Int32', 0, 1);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MAJORPLUGINVERSIONREVISION', 'Major Plugin Version Revision', 'System.Int32', 0, 1);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MINORPLUGINVERSION', 'Minor Plugin Version', 'System.Int32', 0, 1);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid, 'MINORPLUGINVERSIONREVISION', 'Minor Plugin Version Revision', 'System.Int32', 0, 0);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( @moduletypeid,
CREATE MATERIALIZED VIEW LOG ON T_XRD_RAW_FILE WITH SEQUENCE, ROWID
user_dn,
user_vo,
file_lfn,
client_host,
client_domain,
server_host,
server_domain,
server_username,
unique_id, 
start_time, 
end_time,
write_bytes_at_close, 
read_bytes_at_close, 
starttimestamp,
endtimestamp,
inserttimestamp ,
file_size             ,
read_vector_bytes                ,
read_single_average              ,
read_vector_count_average             ,
read_vector_min           ,
read_vector_count_max             ,
read_min                  ,
read_bytes               ,
read_vector_count_min             ,
read_vector_average       ,              
read_vector_sigma         ,       
read_max                 ,
read_vector_operations            ,
read_operations           ,
read_single_min           ,
read_single_bytes                 ,
read_single_max           ,
read_average             ,
read_sigma                ,
read_vector_count_sigma           ,
read_single_sigma                 ,
read_single_operations     
-- Создание базы данных
CREATE DATABASE IF NOT EXISTS module7;
USE module7;
START TRANSACTION;
SELECT id, name FROM teachers;
INSERT INTO teachers (id, name) VALUES (17, 'Новый препад 17');
DELETE FROM teachers WHERE id = 11;
ROLLBACK;
COMMIT;
SET AUTOCOMMIT = 0;
INSERT INTO teachers (id, name) VALUES (18, 'Новый препад 18');
COMMIT;
SET AUTOCOMMIT = 1;
SET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
SET GLOBAL TRANSACTION ISOLATION LEVEL READ COMMITTED;
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
SHOW GLOBAL VARIABLES LIKE "%iso%";
SHOW SESSION VARIABLES LIKE "%iso%";
--или
SELECT  @@tx_isolation; -- смотрим сессионный уровень транзакции
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;
SET GLOBAL TRANSACTION ISOLATION LEVEL REPEATABLE READ;
SET GLOBAL TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SET SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE;
START TRANSACTION;
SELECT * FROM teachers;
INSERT INTO
﻿SET XACT_ABORT ON
BEGIN TRAN
--*************************************************************************************************
-- сопоставление записей 109 спр СКАУТ-бух со счетами депо ФЭНСИ
--*************************************************************************************************
--select * from [SC1C-NAV].GL_INF.dbo.AnalitColumns where IDAnalitType=109 --ищем id-шники исторических полей
select 
 A.id, A.IDAnalit --id
 ,A.NameAnalit --наименование
 ,FullName = isnull(AH1.Value, A.Text02) --полное наименование
 ,FullNameAcc = isnull(AH2.Value, A.Text10) --полное наименование для счетов и актов
 ,INN1 = ltrim(rtrim(A.NumAnalit)) --ИНН
 ,KPP1 = ltrim(rtrim(isnull(AH3.Value, A.Text05))) --КПП
 ,OGRN1 = ltrim(rtrim(A.Text01)) --ОГРН
 ,OKPO1 = ltrim(rtrim(A.Text07)) --ОКПО
 ,DepoCode = ltrim(rtrim(A.Text20)) --код ДЕПО (последние 5 цифр счет ДЕПО) 
into #TempSCOUT
from [SC1C-NAV].GL_INF.[dbo].[Analit] A
left join [SC1C-NAV].GL_INF.dbo.AnalitHistory AH1 on AH1.IDAnalitType=109 a

left join [SC1C-NAV].GL_INF.dbo.AnalitHistory AH2 on AH2.IDAnalitType=109 and AH2.IDAnalit=A.IDAnalit and AH2.IDAnalitColumns=291 and AH2.DateTo is null --полное наименование для счетов и актов 
left join [SC1C-NAV].GL_INF.dbo.AnalitHistory AH3 on AH3.IDAnalitType=109 and AH3.IDAnalit=A.IDAnalit and AH3.IDAnalitColumns=191 and AH3.DateTo is null --КПП
where A.IDAnalitType = 109
select 
 ID_F = T.ID 
 ,LINK_NUMBER = ltrim(rtrim(LINK_NUMBER)) --Номер счета у корреспондента – указывается в 109 спр СКАУТбух в поле Код ДЕПО (Text20)
 ,NUMBER = ltrim(rtrim(T.NUMBER))
 ,NAME_DEPOACC = T.NAME 
 ,F.SELF_ID
 ,NAME_DEPONENT = F.NAME 
 ,INN = ltrim(rtrim(F.INN))
 ,KPP = ltrim(rtrim(F.KPP))
 ,OKPO = ltrim(rtrim(U.OKPO))
 ,OGRN = ltrim(rtrim(U.OGRN))
into #TempFANSY
from [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_CLIENTS T
left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_CLIENTS_REC R on R.CLIENT=T.ID and R.E_DATE='01.01.9999' 
left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_FACES F on F.SELF_ID=T.FACE and F.LAST_FLAG=

left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_U_FACES U on U.FACE=F.SELF_ID
where PLAN_ID=4
select 
 S.id  AS ScoutCOde,
 F.ID_F AS FansyCode -- где ID_F - идентификатор счета депо в ФЭНСИ
 -- где id - идентификатор контрагента в СКАУТбух
 INTO #Temp
from #TempFANSY F
left join #TempSCOUT S on S.DepoCode=F.LINK_NUMBER collate Cyrillic_General_CI_AS and len(S.DepoCode)>=5
where 1=1
 and S.DepoCode is not null
 and F.NUMBER not like '%/NCC/%' --не делаем привязку к счетам вида: '%/NCC/%'
 and F.NUMBER not like '%/NSD/%' --не делаем привязку к счетам вида: '%/NSD/%'
 and F.NUMBER not like '%/SPC/%' --не делаем привязку к счетам вида: '%/SPC/%'
-- and F.LINK_NUMBER not in ('00258','00285','00305','00309','00426','00772','00928') --это проблемные записи: 1 записи в ФЭНСИ сопоставляются по коду ДЕПО 2 записи в СКАУТ (на бою это уже исправлено)
order by F.LINK_NUMBER
SELECT * FROM #Temp
SELECT t.ScoutCOde, cdFansyAccount.MasterCode
INTO #AccountScout
FROM #Temp t
JOIN NaviconMDM.dbo.CodesMappin
---------------------------------------------------------------------------------------------
-- Add non-clustered pubublications.
---------------------------------------------------------------------------------------------
-- Collect all non-clustered combinations of blocks and publications.
if object_id('tempdb.dbo.#new_ids_nonclustered') is not null drop table #new_ids_nonclustered
select new_id
into #new_ids_nonclustered
from sample_unique
except
select new_id
from npl_publn_clusters
-- Prepare separate cluster numbers for all non-clustered publications.
if object_id('tempdb.dbo.#new_ids_clusters_inserts') is not null drop table #new_ids_clusters_inserts
select new_id, rank_no = row_number() over (order by new_id)
into #new_ids_clusters_inserts
from #new_ids_nonclustered
group by new_id
--deterternube nax clusters
declare @max_cluster int = (select max(cluster) from npl_publn_clusters)
-- Insert all non-clustered new_ids as separate clusters.
insert npl_publn_clusters(cluster, new
/*
 * This file is intended to upgrade your database from the state in the
 * previous commit to the current schema.  It only needs to be run once.
 *
 * Jeffrey Melloy <jmelloy@visualdistortion.org>
 *
 */
\set ON_ERROR STOP;
create view im.meta_names as (
select meta_id, name, service, username, user_id
from im.meta_container
natural join im.meta_contact
natural join im.users
);
create or replace rule insert_meta_contact as
on insert to im.meta_names
do instead (
    insert into im.meta_container (name)
    select new.name
    where not exists (
        select  'x'
        from    im.meta_container
        where   name = new.name);
    insert into im.meta_contact (meta_id, user_id, preferred)
    select (select meta_id from im.meta_container where name = new.name),
        (select user_id from im.users
        where username = lower(new.username) and service = new.service),
        exists (select 'x' from im.meta_contact where user_id =
            (select user_id from users where us

            and service = new.service));
    );
alter table messages add column random_id float8;
update messages set random_id = random();
alter table messages alter column random_id set default random();
vacuum analyze;
alter table im.user_statistics add column period date;
alter table im.user_statistics drop column last_message;
alter table im.user_statistics drop constraint user_statistics_pkey;
truncate im.user_statistics;
insert into im.user_statistics
    (select sender_id,
            recipient_id,
            count(*),
            date_trunc('month', message_date)::date
    from    messages
    group by sender_id,
            recipient_id,
            date_trunc('month', message_date)::date);
create or replace rule insert_message_v as
on insert to im.message_v
do instead  (
    -- Usernames
    insert into im.users (username,service)
    select lower(new.sender_sn), coalesce(new.sender_service, 'AIM')
    where not exists (
        select 'x'
        from im.users
        whe

        and service ilike coalesce(new.sender_service, 'AIM'));
    insert into im.users (username, service)
    select lower(new.recipient_sn), coalesce(new.recipient_service, 'AIM')
    where not exists (
        select 'x'
        from im.users
        where username = lower(new.recipient_sn)
        and service ilike coalesce(new.recipient_service, 'AIM'));
    -- Display Names
    insert into im.user_display_name
    (user_id, display_name, effdate)
    select user_id,
        case when new.sender_display is null
        or new.sender_display = ''
        then new.sender_sn
        else new.sender_display end,
        coalesce(new.message_date, now())
    from   im.users
    where  username = lower(new.sender_sn)
     and   service ilike coalesce(new.sender_service, 'AIM')
    and not exists (
        select 'x'
        from   im.user_display_name udn
        where  user_id =
               (select user_id from im.users
                where  username = lower(new.sender_sn)
     
--------------------------------------------------------
-- Create user 
--------------------------------------------------------
create user root123 identified by password;
grant connect to root123;
grant all privileges to root123 identified by password;
--------------------------------------------------------
--  File created - Wednesday-May-27-2015   
--------------------------------------------------------
DROP TABLE "ROOT123"."USERCRK" cascade constraints;
DROP TABLE "ROOT123"."ORDERDETAILS" cascade constraints;
DROP TABLE "ROOT123"."PRODUCTS" cascade constraints;
DROP TABLE "ROOT123"."SUPPLIER" cascade constraints;
--------------------------------------------------------
--  DDL for Table USERCRK
--------------------------------------------------------
  CREATE TABLE "ROOT123"."USERCRK" 
   (	"USERID" NUMBER(19,0), 
	"ADDRESS" VARCHAR2(100 CHAR), 
	"EMAIL" VARCHAR2(100 CHAR), 
	"PHONENO" VARCHAR2(100 CHAR), 
	"NAME" VARCHAR2(100 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10

  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ORDERDETAILS
--------------------------------------------------------
  CREATE TABLE "ROOT123"."ORDERDETAILS" 
   (	"ORDERID" NUMBER(19,0), 
	"AMOUNT" FLOAT(126), 
	"ORDERDATE" TIMESTAMP (6), 
	"PRODUCT" VARCHAR2(100 CHAR), 
	"QUANTITY" NUMBER(19,0), 
	"SUPPLIERID" VARCHAR2(100 CHAR), 
	"TOTAL_AMT" FLOAT(126), 
	"USERID" NUMBER(19,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Tab

--------------------------------------------------------
  CREATE TABLE "ROOT123"."PRODUCTS" 
   (	"PRODUCTID" NUMBER(19,0), 
	"BANNER" VARCHAR2(100 CHAR), 
	"CODE" VARCHAR2(100 CHAR), 
	"NAME" VARCHAR2(100 CHAR), 
	"PRICE" FLOAT(126), 
	"SUPPLIERID" NUMBER(19,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SUPPLIER
--------------------------------------------------------
  CREATE TABLE "ROOT123"."SUPPLIER" 
   (	"SUPPLIERID" NUMBER(19,0), 
	"CODE" VARCHAR2(100 CHAR), 
	"NAME" VARCHAR2(100 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS
** TRIGGER BEFORE UPDATE PARA BITACORA Y REPLICACION DE CLIENTES CREDITO **/
drop TRIGGER if exists CLIENTES_CREDITO_TRG_BU
CREATE TRIGGER CLIENTES_CREDITO_TRG_BU 
    BEFORE UPDATE ON SX_CLIENTES_CREDITO
    FOR EACH ROW     
    BEGIN          
            INSERT INTO SX_CLIENTES_CREDITO_LOG (
            	CREDITO_ID
            	,POSTFECHADO
            	,CLAVE,CNOTA
            	,DESC_ESTIMADO
            	,DIA_COBRO
            	,DIA_REVISION
            	,LINEA,LINEA_MON
            	,NOMBRE
            	,OPERADOR_CXC
            	,PLAZO
            	,REVISION
            	,SUSP_DESCTO
            	,CRED_SUSPENDIDO
            	,VENCE_FACTURA
            	,MODIFICADO            	
            	)
            VALUES(
            	 NEW.CREDITO_ID
            	,NEW.POSTFECHADO
	            ,NEW.CLAVE
    	        ,NEW.CNOTA
        	    ,NEW.DESC_ESTIMADO
            	,NEW.DIA_COBRO
	            ,NEW.DIA_REVISION
	            ,NEW.LINEA
	            ,NEW.LINEA_MON
	            ,NEW.NO
SET DEFINE OFF;
CREATE TABLE D_BOOK_PASSENGER
  RES_NUMBER       NUMBER(18)                   NOT NULL,
  CONTACT_ID       INTEGER                      NOT NULL,
  PASSENGER_SEQ    INTEGER                      NOT NULL,
  ROOM_NUMBER      INTEGER,
  RECEIVED_AMOUNT  NUMBER(18,2),
  WHOSTAMP         VARCHAR2(50 BYTE),
  DATESTAMP        DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_BOOK_PASSENGER_PK ON D_BOOK_PASSENGER
(RES_NUMBER, CONTACT_ID, PASSENGER_SEQ)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
    
insert into `secRole` (role_name, description) values('psychiatrist', 'psychiatrist');
insert into `secRole` (role_name, description) values('RN', 'Registered Nurse');
insert into `secRole` (role_name, description) values('RPN', 'Registered Practical Nurse');
insert into `secRole` (role_name, description) values('Nurse Manager', 'Nurse Manager');
insert into `secRole` (role_name, description) values('Clinical Social Worker','Clinical Social Worker');
insert into `secRole` (role_name, description) values('Clinical Case Manager','Clinical Case Manager');
insert into `secRole` (role_name, description) values('Medical Secretary', 'Medical Secretary');
insert into `secRole` (role_name, description) values('Clinical Assistant', 'Clinical Assistant');
insert into `secRole` (role_name, description) values('secretary', 'secretary');
insert into `secRole` (role_name, description) values('counsellor', 'counsellor');
insert into `secRole` (role_name, description) values('Case Manager', 'Case Manag

insert into `secRole` (role_name, description) values('Housing Worker', 'Housing Worker');
insert into `secRole` (role_name, description) values('Support Worker', 'Support Worker');
insert into `secRole` (role_name, description) values('Client Service Worker', 'Client Service Worker');
insert into access_type (name, type) values("read ticklers assigned to a doctor","access");
insert into access_type (name, type) values("read ticklers assigned to a psychiatrist","access");
insert into access_type (name, type) values("write psychiatrist issues","access");
insert into access_type (name, type) values("read psychiatrist issues","access");
insert into access_type (name, type) values("read psychiatrist notes","access");
insert into access_type (name, type) values("read ticklers assigned to a RN","access");
insert into access_type (name, type) values("write RN issues","access");
insert into access_type (name, type) values("read RN issues","access");
insert into access_type (name, type) values

insert into access_type (name, type) values("read ticklers assigned to a RPN","access");
insert into access_type (name, type) values("write RPN issues","access");
insert into access_type (name, type) values("read RPN issues","access");
insert into access_type (name, type) values("read RPN notes","access");
insert into access_type (name, type) values("read ticklers assigned to a Nurse Manager","access");
insert into access_type (name, type) values("write Nurse Manager issues","access");
insert into access_type (name, type) values("read Nurse Manager issues","access");
insert into access_type (name, type) values("read Nurse Manager notes","access");
insert into access_type (name, type) values("read ticklers assigned to a Clinical Social Worker","access");
insert into access_type (name, type) values("write Clinical Social Worker issues","access");
insert into access_type (name, type) values("read Clinical Social Worker issues","access");
insert into access_type (name, type) values("read 
#########################################
# Author: Benjamin Renard benj@fb.com
# Date: 11/15/2013
# Purpose: Showing the difference between current innodb rows stats and the ones recorded at the beginning of the test
# Requirements: Having @[master|slave]_[system_]rows_[read|inserted|deleted|updated] counters already created
#########################################
--connection master
--echo ==========MASTER==========
select variable_value into @rows_read from information_schema.global_status where variable_name = 'innodb_rows_read';
select @rows_read - @master_rows_read;
select variable_value into @rows_updated from information_schema.global_status where variable_name = 'innodb_rows_updated';
select @rows_updated - @master_rows_updated;
select variable_value into @rows_deleted from information_schema.global_status where variable_name = 'innodb_rows_deleted';
select @rows_deleted - @master_rows_deleted;
select variable_value into @rows_inserted from information_schema.global_status w

select @rows_inserted - @master_rows_inserted;
select variable_value into @system_rows_read from information_schema.global_status where variable_name = 'innodb_system_rows_read';
select @system_rows_read - @master_system_rows_read;
select variable_value into @system_rows_updated from information_schema.global_status where variable_name = 'innodb_system_rows_updated';
select @system_rows_updated - @master_system_rows_updated;
select variable_value into @system_rows_deleted from information_schema.global_status where variable_name = 'innodb_system_rows_deleted';
select @system_rows_deleted - @master_system_rows_deleted;
select variable_value into @system_rows_inserted from information_schema.global_status where variable_name = 'innodb_system_rows_inserted';
select @system_rows_inserted - @master_system_rows_inserted;
--sync_slave_with_master
--echo ==========SLAVE===========
select variable_value into @rows_read from information_schema.global_status where variable_name = 'innodb_rows_re

select @rows_read - @slave_rows_read;
select variable_value into @rows_updated from information_schema.global_status where variable_name = 'innodb_rows_updated';
select @rows_updated - @slave_rows_updated;
select variable_value into @rows_deleted from information_schema.global_status where variable_name = 'innodb_rows_deleted';
select @rows_deleted - @slave_rows_deleted;
select variable_value into @rows_inserted from information_schema.global_status where variable_name = 'innodb_rows_inserted';
select @rows_inserted - @slave_rows_inserted;
select variable_value into @system_rows_read from information_schema.global_status where variable_name = 'innodb_system_rows_read';
select @system_rows_read - @slave_system_rows_read;
select variable_value into @system_rows_updated from information_schema.global_status where variable_name = 'innodb_system_rows_updated';
select @system_rows_updated - @slave_system_rows_updated;
select variable_value into @system_rows_deleted from information_schema.g
CREATE TABLE func_new_topic(
    change_id INTEGER,
    id INTEGER NOT NULL DEFAULT (nextval('topics')),
    kind VARCHAR
);
CREATE TRIGGER
    func_new_topic_bi_1
BEFORE INSERT ON
    func_new_topic
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_id,
        NEW.id,
        NEW.kind
    );
    -- TODO if we ever create topic_deltas then move this into there
    UPDATE
        changes
    SET
        ucount = ucount + 1
    WHERE
        id = NEW.change_id
    ;
    -- TODO if we ever create topic_deltas then move this into there
    UPDATE
        changes_pending
    SET
        terms = terms
            || '-' || x'0A'
            || '  _: topic' || x'0A'
            || '  kind: ' || NEW.kind || x'0A'
    WHERE
        change_id = NEW.change_id
    ;
    INSERT INTO
        topics(
            id,
            first_change_id,
            last_change_id,
            kind,
            ctime,
            ctimetz,
            mtime,
            mtimetz,
            lang,
        
UPDATE data set categories = array_append(categories, 'Geographie, Geologie und Geobasisdaten') WHERE categories @> ARRAY['Stadtentwicklung und Bebauung'];
UPDATE data set categories = array_append(categories, 'Infrastruktur, Bauen und Wohnen') WHERE categories @> ARRAY['Stadtentwicklung und Bebauung'] or categories @> ARRAY['Wohnen und Immobilien'] or categories @> ARRAY['Energie, Ver- und Entsorgung'];
UPDATE data set categories = array_append(categories, 'Kultur, Freizeit, Sport, Tourismus') WHERE categories @> ARRAY['Kunst und Kultur'] or categories @> ARRAY['Sport und Freizeit'] or categories @> ARRAY['Tourismus'];
UPDATE data set categories = array_append(categories, 'Soziales') WHERE categories @> ARRAY['Sozialleistungen'];
UPDATE data set categories = array_append(categories, 'Umwelt und Klima') WHERE categories @> ARRAY['Umwelt'];
UPDATE data set categories = array_append(categories, 'Öffentliche Verwaltung, Haushalt und Steuern') WHERE categories @> ARRAY['Haushalt und Steuer
SELECT model, res_id, module FROM ir_model_data 
	WHERE model = 'ir.actions.act_window' 
	  AND NOT EXISTS (SELECT 1 FROM ir_act_window WHERE id = ir_model_data.res_id);
SELECT model, res_id, module FROM ir_model_data 
	WHERE model = 'ir.ui.menu' 
	  AND NOT EXISTS (SELECT 1 FROM ir_ui_menu WHERE id = ir_model_data.res_id);
SELECT model, res_id, module FROM ir_model_data 
	WHERE model = 'ir.ui.view' 
	  AND NOT EXISTS (SELECT 1 FROM ir_ui_view WHERE id = ir_model_data.res_id);
DONT DELETE FROM ir_model_data 
	WHERE model = 'ir.actions.act_window' 
	  AND NOT EXISTS (SELECT 1 FROM ir_act_window WHERE id = ir_model_data.res_id);
	  
DONT DELETE FROM ir_model_data 
	WHERE model = 'ir.ui.menu' 
	  AND NOT EXISTS (SELECT 1 FROM ir_ui_menu WHERE id = ir_model_data.res_id);
DONT DELETE FROM ir_model_data 
	WHERE model = 'ir.module.module' 
	  AND NOT EXISTS (SELECT 1 FROM ir_module_module WHERE id = ir_model_data.res_id);
DONT DELETE FROM ir_model_data 
	WHERE model = 'ir.model.fields' 
	  AN
/*
Table of data to return to client, after completing a successful search.
September 2014
*/
USE Gazetteer;
GO
IF OBJECT_ID('AppData.FeatureGuide') IS NOT NULL
    DROP TABLE AppData.FeatureGuide;
CREATE TABLE AppData.FeatureGuide
FeatureGuide_pk  INT NOT NULL IDENTITY(1,1) CONSTRAINT PK_FeatureGuide PRIMARY KEY,
FeatureID INT NOT NULL,                                        --one record per feature ID
FeatureName VARCHAR(120) NOT NULL,            --"official" feature name
StateName VARCHAR(40) NOT NULL,                  --full state name, as opposed to Postal Code
AltermativeNameList VARCHAR(MAX) NOT NULL,  -- append together all unofficial names names, in date order (per [Citiation], on [date] in (if known, not 1899).
FeatureDescription VARCHAR(3000) NOT NULL,
FeatureHistory  VARCHAR(3000) NOT NULL,
FeatureCitation  VARCHAR(4000) NOT NULL,     -- the "official" entry in the All Names table
DisplayOnMapFlag BIT NOT NULL,                       --from the "Consise" table
ElevationInMet
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `game_event_condition_save`;
CREATE TABLE `game_event_condition_save` (
  `event_id` smallint(5) unsigned NOT NULL,
  `condition_id` int(10) unsigned NOT NULL DEFAULT '0',
  `done` float DEFAULT '0',
  PRIMARY KEY (`event_id`,`condition_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `game_event_condition_save` WRITE;
/*!40000 ALTER TABLE `game_event_condition_save` DISABLE K
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `guild_bank_right`;
CREATE TABLE `guild_bank_right` (
  `guildid` int(10) unsigned NOT NULL DEFAULT '0',
  `TabId` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `rid` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `gbright` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `SlotPerDay` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guildid`,`TabId`,`rid`),
  KEY `guildid_key` (`guildid
--liquibase formatted sql
--This is for the sparrow_dss schema
--logicalFilePath: changeLog13AddPartition.sql
--changeset lmurphy:addpartitiona
alter table model_reach add partition sparrow_model_25 VALUES (25)
--rollback alter table model_reach drop partition sparrow_model_25;
--changeset lmurphy:addpartitionc
alter table model_reach_attrib add partition sparrow_model_25 VALUES (25)
--rollback alter table model_reach_attrib drop partition sparrow_model_25;
--changeset lmurphy:addpartitiond
alter table reach_coef add partition sparrow_model_25 VALUES (25)
--rollback alter table reach_coef drop partition sparrow_model_25;
--changeset lmurphy:addpartitione
alter table source_reach_coef add partition sparrow_model_25 VALUES (25)
--rollback alter table source_reach_coef drop partition sparrow_model_25;
--changeset lmurphy:addpartitionf
alter table source_value add partition sparrow_model_25 VALUES (25)
--rollback alter table source_value drop partition sparrow_model_25;
--changeset lmurphy
insert into nav_layouts ( introtext_id ) select distinct moduleid from nav where !isnull(moduleid) and moduleid !='' and navid != '' and !isnull(navid) order by moduleid;
insert into nav_layouts ( class_id ) select distinct classlist from nav where !isnull(classlist) and classlist !='' and navid != '' and !isnull(navid) order by classlist;
insert into nav_layouts ( section_id ) select distinct typeid from nav where !isnull(typeid) and typeid !='' and navid != '' and !isnull(navid) order by typeid;
insert into nav_layouts ( section_id_list ) select distinct typelist from nav where !isnull(typelist) and typelist !='' and navid != '' and !isnull(navid) order by typelist;
update nav_layouts a, moduletext b set a.name = b.name where a.introtext_id = b.id;
update nav_layouts set name = 'Standard' where introtext_id = 1;
update nav_layouts set name = 'Front Page' where introtext_id = 2;
update nav_layouts a, class b set a.name = b.class where a.class_id = b.id;
update nav_layouts a, articlety
/*L
   Copyright SAIC
   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/cabio/LICENSE.txt for details.
L*/
create index NEW_LOCATION__MARKER_ID on NEW_LOCATION_TV_BK(MARKER_ID) tablespace CABIO_MAP_FUT;
create index NEW_LOCATION__ID on NEW_LOCATION_TV_BK(ID) tablespace CABIO_MAP_FUT;
create index NEW_LOCATION__GENE_ID on NEW_LOCATION_TV_BK(GENE_ID) tablespace CABIO_MAP_FUT;
create index NEW_LOCATION__NUCLEIC_ACID_ID on NEW_LOCATION_TV_BK(NUCLEIC_ACID_ID) tablespace CABIO_MAP_FUT;
create index NEW_LOCATION__SNP_ID on NEW_LOCATION_TV_BK(SNP_ID) tablespace CABIO_MAP_FUT;
create index NEW_LOCATION__CHROMOSOME_ID on NEW_LOCATION_TV_BK(CHROMOSOME_ID) tablespace CABIO_MAP_FUT;
create index NEW_LOCATION__CHROMOSOMAL_STA on NEW_LOCATION_TV_BK(CHROMOSOMAL_START_POSITION) tablespace CABIO_MAP_FUT;
create index NEW_LOCATION__CHROMOSOMAL_END on NEW_LOCATION_TV_BK(CHROMOSOMAL_END_POSITION) tablespace CABIO_MAP_FUT;
create index NEW_LOCATION__EXON_REPORTER_I on
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table email_model (
  id                            bigint not null,
  constraint pk_email_model primary key (id)
);
create sequence email_model_seq;
create table password_model (
  id                            bigint not null,
  constraint pk_password_model primary key (id)
);
create sequence password_model_seq;
create table tags_model (
  id                            bigint not null,
  constraint pk_tags_model primary key (id)
);
create sequence tags_model_seq;
create table tarea_model (
  id                            bigint not null,
  constraint pk_tarea_model primary key (id)
);
create sequence tarea_model_seq;
create table usuario_model (
  id                            bigint not null,
  nombre                        varchar(255),
  edad                          integer,
  constraint pk_usuario_model primary key (id)
);
create sequence usuario_model_seq;
/***************************江苏移动 added by frank******************************************/
ALTER TABLE `bss_panel_package`
ADD COLUMN `version`  bigint(19) NULL DEFAULT NULL AFTER `district_code`,
ADD COLUMN `max_page_number`  int(3) NULL DEFAULT NULL AFTER `version`,
ADD COLUMN `default_background`  varchar(255) NULL DEFAULT NULL AFTER `max_page_number`,
ADD COLUMN `common_top_nav`  varchar(128) NULL DEFAULT NULL AFTER `default_background`,
ADD COLUMN `zip_url`  varchar(128) NULL DEFAULT NULL AFTER `common_top_nav`,
ADD COLUMN `zipUrl1080p`  varchar(128) NULL DEFAULT NULL AFTER `zip_url`;
ALTER TABLE `bss_panel`
ADD COLUMN `version`  bigint(19) NULL DEFAULT NULL AFTER `district_code`,
ADD COLUMN `resolution`  varchar(10) NULL DEFAULT NULL AFTER `version`;
ALTER TABLE `bss_panel_item`
ADD COLUMN `version`  bigint(19) NULL DEFAULT NULL AFTER `category_id`,
ADD COLUMN `defaultfocus`  varchar(10) NULL DEFAULT NULL AFTER `version`,
ADD COLUMN `params`  varchar(1024) NULL DEFAULT NULL AFTER
-- Drop the existing table (if any)
DROP TABLE "CS414S16"."SECTION"
-- Create a new Relational table with 3 columns
--------------------------------------------------------
--  DDL for Table SECTION
--------------------------------------------------------
  CREATE TABLE "CS414S16"."SECTION" 
   (	"SECTION_ID" NUMBER, 
	"TEACHER_ID" NUMBER, 
	"CLASS_ID" NUMBER, 
	"SEMESTER" VARCHAR2(12 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SECTION_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "CS414S16"."SECTION_PK" ON "CS414S16"."SECTION" ("SECTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 10

  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table SECTION
--------------------------------------------------------
  ALTER TABLE "CS414S16"."SECTION" MODIFY ("CLASS_ID" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."SECTION" MODIFY ("TEACHER_ID" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."SECTION" MODIFY ("SEMESTER" NOT NULL ENABLE);
  ALTER TABLE "CS414S16"."SECTION" ADD CONSTRAINT "SECTION_PK" PRIMARY KEY ("SECTION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "CS414S16"."SECTION" MODIFY ("SECTION_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Con
-- Updates the database schema to add a many-to-many junction table between model_run, admin_unit (global/tropical) and disease_extent_class.
-- Copyright (c) 2014 University of Oxford
-- Represents the mapping of admin units to disease extent classes which were submitted for modelling for each model run.
CREATE TABLE model_run_admin_unit_disease_extent_class (
    id serial
        CONSTRAINT pk_model_run_admin_unit_disease_extent_class PRIMARY KEY,
    model_run_id integer NOT NULL
        CONSTRAINT fk_model_run_admin_unit_disease_extent_class_model_run REFERENCES model_run (id),
    global_gaul_code integer
        CONSTRAINT fk_model_run_admin_unit_disease_extent_class_admin_unit_global REFERENCES admin_unit_global (gaul_code),
    tropical_gaul_code integer
        CONSTRAINT fk_model_run_admin_unit_disease_extent_class_admin_unit_tropical REFERENCES admin_unit_tropical (gaul_code),
    disease_extent_class varchar(20) NOT NULL
        CONSTRAINT fk_model_run_admin_unit_disease_e
SELECT     dbo.knowledge.onetsoc_code, data_value, dbo.knowledge.scale_id, dbo.knowledge.element_id, dbo.content_model_reference.element_name, dbo.content_model_reference.description
FROM         dbo.knowledge INNER JOIN
                      dbo.content_model_reference ON dbo.knowledge.element_id = dbo.content_model_reference.element_id
WHERE     (dbo.knowledge.recommend_suppress = 'Y')
UNION
SELECT     dbo.skills.onetsoc_code,data_value, dbo.skills.scale_id, dbo.skills.element_id, dbo.content_model_reference.element_name, dbo.content_model_reference.description
FROM         dbo.skills INNER JOIN
                      dbo.content_model_reference ON dbo.skills.element_id = dbo.content_model_reference.element_id
WHERE     (dbo.skills.recommend_suppress = 'Y')
UNION
SELECT     dbo.abilities.onetsoc_code,data_value, dbo.abilities.scale_id, dbo.abilities.element_id, dbo.content_model_reference.element_name, dbo.content_model_reference.description
FROM         dbo.abilities INNER JOIN
     

WHERE     (dbo.abilities.recommend_suppress = 'Y')
UNION
SELECT     dbo.work_styles.onetsoc_code,data_value, dbo.work_styles.scale_id, dbo.work_styles.element_id, dbo.content_model_reference.element_name, dbo.content_model_reference.description
FROM         dbo.work_styles INNER JOIN
                      dbo.content_model_reference ON dbo.work_styles.element_id = dbo.content_model_reference.element_id
WHERE     (dbo.work_styles.recommend_suppress = 'Y')
UNION
SELECT     dbo.work_activities.onetsoc_code,data_value, dbo.work_activities.scale_id, dbo.work_activities.element_id, dbo.content_model_reference.element_name, dbo.content_model_reference.description
FROM         dbo.work_activities INNER JOIN
                      dbo.content_model_reference ON dbo.work_activities.element_id = dbo.content_model_reference.element_id
WHERE     (dbo.work_activities.recommend_suppress = 'Y')
UNION
SELECT     dbo.work_context.onetsoc_code, data_value, dbo.work_context.scale_id, dbo.work_context.elem
CREATE TABLE IF NOT EXISTS `categorys` (
`id` int(30) NOT NULL AUTO_INCREMENT,
`parent_id` int(30) NOT NULL,
`title` string NOT NULL,
`url` string NOT NULL,
`description` string NOT NULL,
`meta_keywords` string NOT NULL,
`meta_description` string NOT NULL,
`position` int(30) NOT NULL,
`date` int(12) NOT NULL,
`update` int(12) NOT NULL,
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 ;
INSERT INTO `categorys` (`id`, `parent_id`, `title`, `url`, `description`, `meta_keywords`, `meta_description`, `position`, `date`, `update`) VALUES 
('25', '0','Проекты','proekty','Список проектов','','','0','1377266956','1377266956'),
('27', '25','Подкатегория','podkategoriia','фывфыв','','','0','1377568940','1377568940');
CREATE TABLE IF NOT EXISTS `menus` (
`id` int(30) NOT NULL AUTO_INCREMENT,
`title` string NOT NULL,
`name` string NOT NULL,
`description` string NOT NULL,
`template` string NOT NULL,
`date` int(13) NOT NULL,
`update` int(13) NOT NULL,
`class` string NOT NULL,
`parent_class` string NOT NULL,
) E

INSERT INTO `menus` (`id`, `title`, `name`, `description`, `template`, `date`, `update`, `class`, `parent_class`) VALUES 
('4', 'Левое меню','left_menu','Меню выводиться слева','','1377261858','1377261858','nav nav-list sidebar','nav nav-list'),
('5', 'Верхнее меню','top_menu','Верхнее меню','','1377261979','1377261979','nav nav-pills pull-right','dropdown-menu');
CREATE TABLE IF NOT EXISTS `links` (
`id` int(30) NOT NULL AUTO_INCREMENT,
`menu_id` int(30) NOT NULL,
`icons` string NOT NULL,
`title` string NOT NULL,
`hidden` int(1) NOT NULL,
`parent_id` int(30) NOT NULL,
`description` string NOT NULL,
`data` string NOT NULL,
`date` int(13) NOT NULL,
`classes` string NOT NULL,
`position` int(31) NOT NULL,
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 ;
INSERT INTO `links` (`id`, `menu_id`, `icons`, `title`, `hidden`, `parent_id`, `description`, `data`, `date`, `classes`, `position`) VALUES 
('22', '4','icon-book','Wiki','0','0','Wiki page','a:5:{s:4:"type";s:1:"4";s:5:"first";s:1:"0";s:6:"second

('21', '4','icon-pencil','Контакты','0','0','','a:4:{s:4:"type";s:1:"2";s:5:"first";s:1:"0";s:6:"second";s:8:"contacts";s:3:"url";s:8:"contacts";}','1377267597','','2'),
('20', '4','icon-home','Главная','0','0','','a:4:{s:4:"type";s:1:"3";s:5:"first";s:1:"/";s:6:"second";i:0;s:3:"url";s:1:"/";}','1377267516','','0'),
('19', '5','','Главная','0','0','Ссылка на главную страницу','a:4:{s:4:"type";s:1:"3";s:5:"first";s:1:"/";s:6:"second";i:0;s:3:"url";s:1:"/";}','1377262024','','0'),
('23', '4','','Проекты','0','0','','a:5:{s:4:"type";s:1:"4";s:5:"first";i:0;s:6:"second";i:0;s:6:"threed";s:0:"";s:3:"url";s:0:"";}','1377470882','nav-header','5'),
('24', '4','icon-shopping-cart','Демо магазина','0','0','','a:5:{s:4:"type";s:1:"4";s:5:"first";i:0;s:6:"second";i:0;s:6:"threed";s:24:"http://shop.sxservice.ru";s:3:"url";s:24:"http://shop.sxservice.ru";}','1377471524','','4'),
('25', '4','','Демо','0','0','','a:5:{s:4:"type";s:1:"4";s:5:"first";s:1:"0";s:6:"second";i:0;s:6:"threed";s:0:"";s:3:"u
--------------------------------------------------------
-- Archivo creado  - viernes-abril-04-2014   
--------------------------------------------------------
DROP TABLE "REFERENCIA"."TPRY_TIPO_OBRA" cascade constraints;
--------------------------------------------------------
--  DDL for Table TPRY_TIPO_OBRA
--------------------------------------------------------
  CREATE TABLE "REFERENCIA"."TPRY_TIPO_OBRA" 
   (	"TOBR_ID" NUMBER, 
	"TOBR_OBRA" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA" ;
REM INSERTING into REFERENCIA.TPRY_TIPO_OBRA
SET DEFINE OFF;
Insert into REFERENCIA.TPRY_TIPO_OBRA (TOBR_ID,TOBR_OBRA) values (1,'Obra Civil');
Insert into REFERENCIA.TPRY_TIPO_OBRA (TOBR_ID,TOBR_OBRA) values (2,'Obra de

Insert into REFERENCIA.TPRY_TIPO_OBRA (TOBR_ID,TOBR_OBRA) values (3,'Obra Electromecánica');
Insert into REFERENCIA.TPRY_TIPO_OBRA (TOBR_ID,TOBR_OBRA) values (5,'Restauración');
--------------------------------------------------------
--  DDL for Index TGEN_TIPO_OBRA_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "REFERENCIA"."TGEN_TIPO_OBRA_PK" ON "REFERENCIA"."TPRY_TIPO_OBRA" ("TOBR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  Constraints for Table TPRY_TIPO_OBRA
--------------------------------------------------------
  ALTER TABLE "REFERENCIA"."TPRY_TIPO_OBRA" ADD CONSTRAINT "PK01_TOBR_ID" PRIMARY KEY ("TOBR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COM
/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */
IF OBJECT_ID('view_employee', 'U') IS NOT NULL
  DROP TABLE [view_employee];
GO
IF OBJECT_ID('view_employer', 'U') IS NOT NULL
  DROP TABLE [view_employer];
GO
IF OBJECT_ID('view_country', 'U') IS NOT NULL
  DROP TABLE [view_country];
GO
CREATE TABLE [view_country] (
  [code] VARCHAR(256) NOT NULL PRIMARY KEY,
  [name] VARCHAR(512) NOT NULL);
GO
CREATE TABLE [view_employer] (
  [id] BIGINT NOT NULL PRIMARY KEY,
  [name] VARCHAR(512) NOT NULL);
GO
CREATE TABLE [view_employee] (
  [id] BIGINT NOT NULL PRIMARY KEY,
  [first] VARCHAR(512) NOT NULL,
  [last] VARCHAR(512) NOT NULL,
  [age] SMALLINT NOT NULL,
  [residence] VARCHAR(256) NULL,
  [nationality] VARCHAR(256) NULL,
  [employed_by] BIGINT NULL
  /*
  CONSTRAINT [view_employee_residence_fk]
    FOREIGN KEY ([residence])
    REFERENCES [view_country] ([code])
  */
  /*
  CONSTRAINT [view_employee_nationality_fk]
    FOREIGN KEY ([nationality])

-- 1.4.3
-- * using ib_util.ib_util_malloc library
-- * Fix ReadLnFromTextFile: return by CSTRING(32000) free_it
-- * Type handle of object: integer -> bigint for x64_86 build
-- * Fix declaration:CSTRING(256) --> CSTRING(32000) : WriteToTextFile, WriteLnToTextFile
DECLARE EXTERNAL FUNCTION CreateTextFile
    CSTRING(256)
RETURNS BIGINT BY VALUE
ENTRY_POINT 'CreateTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION ResetTextFile
    BIGINT
RETURNS INTEGER BY VALUE
ENTRY_POINT 'ResetTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION CloseTextFile
    BIGINT
RETURNS INTEGER BY VALUE
ENTRY_POINT 'CloseTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION WriteToTextFile
    BIGINT,CSTRING(32765)
RETURNS INTEGER BY VALUE
ENTRY_POINT 'WriteToTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION WriteLnToTextFile
    BIGINT,CSTRING(32765)
RETURNS INTEGER BY VALUE
ENTRY_POINT 'WriteLnToTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION Rewr

    BIGINT
RETURNS INTEGER BY VALUE
ENTRY_POINT 'RewriteTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION ReadLnFromTextFile
    BIGINT
RETURNS CSTRING(32765) FREE_IT
ENTRY_POINT 'ReadLnFromTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION EofTextFile
    BIGINT
RETURNS INTEGER BY VALUE
ENTRY_POINT 'EofTextFile' MODULE_NAME 'afutextfile';
-- 1.3
DECLARE EXTERNAL FUNCTION FlushTextFile
    BIGINT
RETURNS INTEGER BY VALUE
ENTRY_POINT 'FlushTextFile' MODULE_NAME 'afutextfile';
-- 1.4.3
DECLARE EXTERNAL FUNCTION AppendTextFile
    BIGINT
RETURNS INTEGER BY VALUE
ENTRY_POINT 'AppendTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION ReadCharFromTextFile
    BIGINT
RETURNS CSTRING(32765) FREE_IT
ENTRY_POINT 'ReadCharFromTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION WriteCharToTextFile
    BIGINT,CSTRING(1)
RETURNS INTEGER BY VALUE
ENTRY_POINT 'WriteToTextFile' MODULE_NAME 'afutextfile';
DECLARE EXTERNAL FUNCTION WriteInt32ToTextFile
    
--
-- database_schema_3-4.sql
--
-- Version: $Revision$
--
-- Date:    $Date: 2012-05-29
--
-- The contents of this file are subject to the license and copyright
-- detailed in the LICENSE and NOTICE files at the root of the source
-- tree and available online at
--
-- http://www.dspace.org/license/
--
--
-- SQL commands to upgrade the database schema of a live DSpace 3 or 3.x
-- to the DSpace 4 database schema
--
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST.
--
-------------------------------------------
-- Add support for DOIs (table and seq.) --
-------------------------------------------
CREATE SEQUENCE doi_seq;
CREATE TABLE Doi
  doi_id           INTEGER PRIMARY KEY,
  doi              VARCHAR(256) UNIQUE,
  re

  resource_id      INTEGER,
  status           INTEGER
);
-- index by handle, commonly looked up
CREATE INDEX doi_doi_idx ON Doi(doi);
-- index by resource id and resource type id
CREATE INDEX doi_resource_id_and_type_idx ON Doi(resource_id, resource_type_id);
-------------------------------------------
-- DS-1456 table of currently running webapps
-------------------------------------------
CREATE SEQUENCE webapp_seq;
CREATE TABLE Webapp
    webapp_id INTEGER NOT NULL PRIMARY KEY,
    AppName VARCHAR(32),
    URL VARCHAR,
    Started TIMESTAMP,
    isUI INTEGER
);
-------------------------------------------------------
-- DS-824 RequestItem table
-------------------------------------------------------
CREATE SEQUENCE requestitem_seq;
CREATE TABLE requestitem
  requestitem_id int4 NOT NULL,
  token varchar(48),
  item_id int4,
  bitstream_id int4,
  allfiles bool,
  request_email varchar(64),
  request_name varchar(64),
  request_date timestamp,
  accept_request bool,
  decision_date 
﻿--USE [StorageSpace]
--GO
IF OBJECT_ID ( '[BasicInfo].[UnitView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[UnitView];
	GO
-----------------------------------------------------------------------------------
IF OBJECT_ID ( '[BasicInfo].[CurrencyView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[CurrencyView];
	GO
-----------------------------------------------------------------------------------
IF OBJECT_ID ( '[BasicInfo].[SharedGoodView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[SharedGoodView];
	GO
-----------------------------------------------------------------------------------
IF OBJECT_ID ( '[BasicInfo].[CompanyView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[CompanyView];
	GO
-----------------------------------------------------------------------------------
IF OBJECT_ID ( '[BasicInfo].[CompanyVesselView]', 'view' ) IS NOT NULL 
		DROP VIEW [BasicInfo].[CompanyVesselView];
	GO
------------------------------------------------------------------------------
USE moodle;
DROP TRIGGER IF EXISTS mdl_user__onDelete;
CREATE TRIGGER  mdl_user__onDelete
         AFTER  DELETE
            ON  moodle.mdl_user
  FOR EACH ROW  DELETE IGNORE FROM elis.mdl_user WHERE id=OLD.id;
DROP TRIGGER IF EXISTS mdl_user__onInsert;
CREATE TRIGGER  mdl_user__onInsert
         AFTER  INSERT
            ON  moodle.mdl_user
  FOR EACH ROW  INSERT INTO elis.mdl_user (`id`, `auth`, `confirmed`, `policyagreed`, `deleted`, `mnethostid`, `username`, `password`, `idnumber`, `firstname`, `lastname`, `email`, `emailstop`, `icq`, `skype`, `yahoo`, `aim`, `msn`, `phone1`, `phone2`, `institution`, `department`, `address`, `city`, `country`, `lang`, `theme`, `timezone`, `firstaccess`, `lastaccess`, `lastlogin`, `currentlogin`, `lastip`, `secret`, `picture`, `url`, `description`, `mailformat`, `maildigest`, `maildisplay`, `htmleditor`, `ajax`, `autosubscribe`, `trackforums`, `timemodified`, `trustbitmask`, `imagealt`, `screenreader`)
                     VALUES (NEW.`id`, NEW.`aut

DROP TRIGGER IF EXISTS mdl_user__onUpdate;
CREATE TRIGGER  mdl_user__onUpdate
         AFTER  UPDATE
            ON  moodle.mdl_user
  FOR EACH ROW  REPLACE INTO elis.mdl_user (`id`, `auth`, `confirmed`, `policyagreed`, `deleted`, `mnethostid`, `username`, `password`, `idnumber`, `firstname`, `lastname`, `email`, `emailstop`, `icq`, `skype`, `yahoo`, `aim`, `msn`, `phone1`, `phone2`, `institution`, `department`, `address`, `city`, `country`, `lang`, `theme`, `timezone`, `firstaccess`, `lastaccess`, `lastlogin`, `currentlogin`, `lastip`, `secret`, `picture`, `url`, `description`, `mailformat`, `maildigest`, `maildisplay`, `htmleditor`, `ajax`, `autosubscribe`, `trackforums`, `timemodified`, `trustbitmask`, `imagealt`, `screenreader`)
                      VALUES (NEW.`id`, NEW.`auth`, NEW.`confirmed`, NEW.`policyagreed`, NEW.`deleted`, NEW.`mnethostid`, NEW.`username`, NEW.`password`, NEW.`idnumber`, NEW.`firstname`, NEW.`lastname`, NEW.`email`, NEW.`emailstop`, NEW.`icq`, NEW.`skype`,

-- TRUNCATE moodle.mdl_user;
-- TRUNCATE elis.mdl_user;
-- INSERT INTO `mdl_user` (`id`, `auth`, `confirmed`, `policyagreed`, `deleted`, `mnethostid`, `username`, `password`, `idnumber`, `firstname`, `lastname`, `email`, `emailstop`, `icq`, `skype`, `yahoo`, `aim`, `msn`, `phone1`, `phone2`, `institution`, `department`, `address`, `city`, `country`, `lang`, `theme`, `timezone`, `firstaccess`, `lastaccess`, `lastlogin`, `currentlogin`, `lastip`, `secret`, `picture`, `url`, `description`, `mailformat`, `maildigest`, `maildisplay`, `htmleditor`, `ajax`, `autosubscribe`, `trackforums`, `timemodified`, `trustbitmask`, `imagealt`, `screenreader`) VALUES (7, 'manual', 1, 0, 1, 4, 'justinvincent7@yahoo.com.1268142624', '7ea61fd824dc83d2be1fb56c9338321a', '', 'Precyse', 'Demo', '0a0ae3255410271a474433c54faa1057', 0, '', '', '', '', '', '', '', '', '', '', 'Remote', 'US', 'en_us_utf8', '', '99', 1262696503, 1266613655, 1266611861, 1266612213, '99.60.39.50', '', 0, '', '', 1, 0, 0, 1, 1, 1, 1, 1
alter table facility add column useQuickConsent tinyint(1) not null;
update facility set useQuickConsent=1;
update bed set facility_id=1 where facility_id=0;
update room set facility_id=1 where facility_id=0;
update intake set facility_id=1 where facility_id is NULL;
update room set occupancy=20 where occupancy=0;
update custom_filter set end_date='8888-12-30' where end_date='0000-00-00';
insert into provider_facility select provider_no, "1" from provider;
insert into room_demographic select b.room_id,bd.demographic_no,bd.provider_no,reservation_start,reservation_end,'' from bed_demographic bd, bed b where bd.bed_id=b.bed_id; 
-- insert into access_type (name,type) values ("read RPN ticklers","access");
update facility set useQuickConsent=1;
update bed set facility_id=1 where facility_id=0;
update room set facility_id=1 where facility_id=0;
update intake set facility_id=1 where facility_id is NULL;
update room set occupancy=20 where occupancy=0;
update custom_filter set end_date='8888-

insert into provider_facility select provider_no, "1" from provider;
insert into room_demographic select b.room_id,bd.demographic_no,bd.provider_no,reservation_start,reservation_end,'' from bed_demographic bd, bed b where bd.bed_id=b.bed_id; 
insert into `secObjectName` (`objectName`,`description`,`orgapplicable`) values ('_pmm.eidtor','Caisi Intake Editor',0);
insert into `secObjPrivilege` values('admin','_pmm.editor','x',0,999998);
-- The following lines are only used for seaton house
-- insert into access_type (name,type) values ("read RPN ticklers","access");
-- insert into access_type (name,type) values ("read RN ticklers","access");
-- insert into access_type (name,type) values ("read Reception Staff ticklers","access");
-- insert into access_type (name,type) values ("read Program Supervisor ticklers","access");
-- insert into access_type (name,type) values ("read Shift Leader ticklers","access");
-- insert into access_type (name,type) values ("read Housing Worker ticklers","acc
# ************************************************************
# Sequel Pro SQL dump
# Version 4096
# http://www.sequelpro.com/
# http://code.google.com/p/sequel-pro/
# Host: 127.0.0.1 (MySQL 5.6.10)
# Database: todoapp
# Generation Time: 2013-10-13 19:33:50 +0000
# ************************************************************
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
# Dump of table access
# ------------------------------------------------------------
DROP TABLE IF EXISTS `access`;
# Dump of table list
# ------------------------------------------------------------
DROP TABLE IF EXISTS `list
select * from(select row_number() over(
ORDER BY b.xn,b.xq, b.kh
)as row,b.* from(SELECT DISTINCT L_VIEW_CLASS_FX.YEAR AS xn,L_VIEW_CLASS_FX.TERM AS xq,
      L_view_class_fx.courseno + L_view_class_fx.[group] kh, ls_km.km AS km,
      ls_xkrs.xkrs AS xkrs, ls.yxrs yxrs, ls_lhrs.lhrs AS lhrs,
      ls_zdrs.zdrs AS zdrs, ls_jgrs.jgrs AS jgrs, ls_bjgrs.bjgrs AS bjg,
      ls_qkrs.qkrs AS qkrs
FROM L_view_class_fx
LEFT OUTER JOIN
          (SELECT courses.courseno AS kh, courses.coursename km
         FROM courses) AS ls_km ON L_view_class_fx.courseno = ls_km.kh
LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_class_fx.courseno)
               AS xkrs
         FROM L_view_class_fx
	WHERE L_view_class_fx.classno=:CONE and L_view_class_fx.year=:YONE AND
L_view_class_fx.TERM=:TONE
         GROUP BY L_view_class_fx.classno, L_view_class_fx.YEAR,L_view_class_fx.TERM,  L_view_class_fx.courseno + L_vi

ON L_view_class_fx.YEAR=ls_xkrs.year and L_view_class_fx.term=ls_xkrs.term and L_view_class_fx.courseno + L_view_class_fx.[group] = ls_xkrs.xx
LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_class_fx.courseno)
               AS yxrs
         FROM L_view_class_fx
         WHERE L_view_class_fx.classno=:CTWO   and L_view_class_fx.year=:YTWO AND
L_view_class_fx.TERM=:TTWO  and
               (L_view_class_fx.testscore = '优秀' OR
               L_view_class_fx.examscore >= 90)
         GROUP BY L_view_class_fx.classno,L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group]) AS ls
ON  L_view_class_fx.YEAR=ls.year and L_view_class_fx.term=ls.term and
      L_view_class_fx.courseno + L_view_class_fx.[group] = ls.xx
 LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_c

               AS lhrs
         FROM L_view_class_fx
         WHERE L_view_class_fx.classno=:CTHREE  and L_view_class_fx.year=:YTHREE AND
L_view_class_fx.TERM=:TTHREE  and (L_view_class_fx.testscore = '良好' OR
               (L_view_class_fx.examscore >= 80 AND L_view_class_fx.examscore < 90))
         GROUP BY L_view_class_fx.classno,L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group]) AS ls_lhrs ON
      L_view_class_fx.courseno + L_view_class_fx.[group] = ls_lhrs.xx
LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_class_fx.courseno)
               AS zdrs
         FROM L_view_class_fx
         WHERE L_view_class_fx.classno=:CFOUR  and L_view_class_fx.year=:YFOUR AND
L_view_class_fx.TERM=:TFOUR  and  (L_view_class_fx.testscore = '中等' OR
               (L_view_class_fx.examscore >= 70 AND L_view_class_fx.examscore < 80))
         GROUP BY L_view_cla
  CREATE TABLE "DEVELOPER"."EAR_AGGREGATE_CONTENTION" 
   (	"VET_ID" NUMBER(*,0), 
	"CLAIM_ID" NUMBER(*,0), 
	"DOB" NUMBER(4,0), 
	"END_PRODUCT_CODE" VARCHAR2(12 BYTE), 
	"RO_NUMBER" NUMBER(*,0), 
	"CLAIM_DATE" DATE, 
	"MAX_PROFILE_DATE" DATE, 
	"CONTENTION_COUNT" NUMBER(3,0), 
	"EAR_CONTENTION_COUNT" NUMBER(3,0), 
	"C2200" NUMBER(3,0), 
	"C2210" NUMBER(3,0), 
	"C2220" NUMBER(3,0), 
	"C3140" NUMBER(3,0), 
	"C3150" NUMBER(3,0), 
	"C4130" NUMBER(3,0), 
	"C4210" NUMBER(3,0), 
	"C4700" NUMBER(3,0), 
	"C4920" NUMBER(3,0),
	"C5000" NUMBER(3,0),
	"C5010" NUMBER(3,0),
	"C5710" NUMBER(3,0),	
	"C6850" NUMBER(3,0),
	"TXT_LOSS" NUMBER(3,0),
	"TXT_TINITU" NUMBER(3,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 COMPRESS FOR OLTP NOLOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "VBMS_TS" ;
  CREATE INDEX "D
--liquibase formatted sql
--This is for the sparrow_dss schema
--logicalFilePath: changeLog4ModelReachWatershed.sql
--changeset lmurphy:watershed4a
alter table model_reach_watershed rename to model_reach_watershed_old;
--rollback alter table model_reach_watershed_old rename to model_reach_watershed;
--changeset lmurphy:watershedb
alter table model_reach_watershed_old rename constraint model_reach_id_fk to model_reach_id_fk_old;
--rollback alter table model_reach_watershed_old rename constraint model_reach_id_fk_old to model_reach_id_fk;
--changeset lmurphy:watershedc
alter table model_reach_watershed_old rename constraint watershed_id_fk to watershed_id_fk_old;
--rollback alter table model_reach_watershed_old rename constraint watershed_id_fk_old to watershed_id_fk;
--changeset lmurphy:watershed4c
alter table predefined_watershed rename to predefined_watershed_old;
--rollback alter table predefined_watershed_old rename to predefined_watershed;
--changeset lmurphy:watershed4d
alter tabl

--rollback alter table predefined_watershed_old rename constraint predefined_watershed_pk_old to predefined_watershed_pk;
--changeset lmurphy:watershed4e
alter index predefined_watershed_pk rename to predefined_watershed_pk_old;
--rollback alter index predefined_watershed_pk_old rename to predefined_watershed_pk;
--changeset lmurphy:watershed4f
create table predefined_watershed
(watershed_id                    number                               constraint nn_pred_watershed_wid not null
,name                            VARCHAR2(50 CHAR)                        constraint nn_pred_watershed_nm not null
,description                    VARCHAR2(200 CHAR)
,date_added                        DATE
,parameter_type                 VARCHAR2(20 CHAR)                       
,watershed_parameters           VARCHAR2(200 CHAR)                      
,sparrow_model_id        number(9)                               constraint nn_pred_watershed_mid not null                              
,constraint prede

   primary key (watershed_id)
,constraint pred_watershed_model_fk
   foreign key (sparrow_model_id)
     references sparrow_model (sparrow_model_id)
partition by list (sparrow_model_id)
(partition sparrow_model_22 values (22)
,partition sparrow_model_23 values (23)
,partition sparrow_model_24 values (24)
,partition sparrow_model_30 values (30)
,partition sparrow_model_35 values (35)
,partition sparrow_model_36 values (36)
,partition sparrow_model_37 values (37)
,partition sparrow_model_38 values (38)
,partition sparrow_model_41 values (41)
,partition sparrow_model_42 values (42)
,partition sparrow_model_43 values (43)
,partition sparrow_model_44 values (44)
,partition sparrow_model_49 values (49)
,partition sparrow_model_50 values (50)
,partition sparrow_model_51 values (51)
,partition sparrow_model_52 values (52)
,partition sparrow_model_53 values (53)
,partition sparrow_model_54 values (54)
,partition sparrow_model_55 values (55)
,partition sparrow_model_57 values (57)
,partition sp
﻿-- View: plantdb_vegetationview
-- DROP VIEW plantdb_vegetationview;
CREATE OR REPLACE VIEW plantdb_vegetationview AS 
 SELECT plantdb_vegetationview.row_number,
    plantdb_vegetationview.vegetationid,
    plantdb_vegetationview.plantid,
    plantdb_vegetationview.rootstockid,
    plantdb_vegetationview.cultivarid,
    plantdb_vegetationview.legacy_pfaf_latin_name,
    plantdb_vegetationview.family,
    plantdb_vegetationview.genus,
    plantdb_vegetationview.species,
    plantdb_vegetationview.ssp,
    plantdb_vegetationview.common_name,
    plantdb_vegetationview.plant_function,
    plantdb_vegetationview.border_colour,
    plantdb_vegetationview.fill_colour,
    plantdb_vegetationview.symbol,
    plantdb_vegetationview.form,
    plantdb_vegetationview.locations,
    plantdb_vegetationview.width,
    plantdb_vegetationview.height,
    plantdb_vegetationview.grafted,
    plantdb_vegetationview.comment,
    plantdb_vegetationview.germination_date,
    plantdb_vegetationview.habitat,


    plantdb_vegetationview.wind_upper_limit,
    plantdb_vegetationview.light_lower_limit,
    plantdb_vegetationview.light_upper_limit,
    plantdb_vegetationview.nitrogen_fixer,
    plantdb_vegetationview.supports_wildlife,
    plantdb_vegetationview.flower_type,
    plantdb_vegetationview.pollinators,
    plantdb_vegetationview.self_fertile,
    plantdb_vegetationview.pollution,
    plantdb_vegetationview.cultivation_details,
    plantdb_vegetationview.known_hazards,
    plantdb_vegetationview.cultivarname,
    plantdb_vegetationview.notes_on_cultivar,
    plantdb_vegetationview.synonyms,
    plantdb_vegetationview.scented,
    plantdb_vegetationview.wind_tolerance,
    plantdb_vegetationview.hardiness,
    plantdb_vegetationview.range,
    plantdb_vegetationview.frost_tender,
    plantdb_vegetationview.production_startmonth,
    plantdb_vegetationview.production_endmonth,
    plantdb_vegetationview.leaf_startmonth,
    plantdb_vegetationview.leaf_endmonth,
    plantdb_vegetationvi

    plantdb_vegetationview.flower_endmonth,
    plantdb_vegetationview.seed_start_month,
    plantdb_vegetationview.seed_endmonth,
    plantdb_vegetationview.rootstockname,
    plantdb_vegetationview.notes_on_rootstock,
    plantdb_vegetationview.vigour,
    plantdb_vegetationview."pH_lower_limit",
    plantdb_vegetationview."pH_upper_limit",
    plantdb_vegetationview.salinity_lower_limit,
    plantdb_vegetationview.salinity_upper_limit,
    plantdb_vegetationview.moisture_lower_limit,
    plantdb_vegetationview.moisture_upper_limit,
    plantdb_vegetationview.soiltexture_lower_limit,
    plantdb_vegetationview.soiltexture_upper_limit
   FROM ( SELECT row_number() OVER (ORDER BY plantdb_vegetation.id) AS row_number,
            plantdb_vegetation.id AS vegetationid,
            plantdb_plant.id AS plantid,
            plantdb_plant.legacy_pfaf_latin_name,
            plantdb_plant.family,
            plantdb_plant.genus,
            plantdb_plant.species,
            plantdb_plant.ss
UPDATE stories SET tid='diary' WHERE section='Diary' and tid like 'diary_%';
DELETE FROM vars WHERE name = 'ads_in_everything_sec';
DELETE FROM vars WHERE name = 'sections_excluded_from_all' and (value = '' OR value IS NULL);
INSERT IGNORE INTO vars VALUES ('sections_excluded_from_all','Diary, advertisements','<P>This variable determines which sections will not be shown in the \"Everything\" pseudo-section or the RDF feed.  The possible values are a comma-separated list of section names.  The default list contains the Diary and adverts sections.</p>','text','Stories');
INSERT IGNORE INTO vars VALUES ('story_nav_bar_sections','Diary, advertisements','<P>Contains a comma separated list of sections.<br>This controls what stories are shown in the Next and Previous story positions if the story nav bar is shown (see the disable_story_navbar control)<br>When the story is displayed, if it is in one of the sections listed, only stories from the same section as the current story will be shown in
--common
alter table user add timezone_id decimal (5,0);
alter table user add constraint foreign key 
	(timezone_id)
	references timezone_lu
	(timezone_id) 
	constraint user_timezonelu_fk;
drop trigger trig_audit_user;
drop procedure proc_user_update(varchar(50), decimal(10,0));
drop procedure proc_user_update;
create procedure proc_user_update(
new_handle varchar(50),
user_id decimal(10,0))
UPDATE user SET handle_lower = lower(new_handle), modify_date = current WHERE user.user_id = user_id;
end procedure;
create procedure proc_user_update(
user_id DECIMAL(10,0),
old_first_name VARCHAR(64),
new_first_name VARCHAR(64),
old_last_name VARCHAR(64),
new_last_name VARCHAR(64),
old_handle VARCHAR(50),
new_handle VARCHAR(50),
old_status VARCHAR(3),
new_status VARCHAR(3),
old_password VARCHAR(15),
new_password VARCHAR(15),
old_activation_code VARCHAR(32),
new_activation_code VARCHAR(32),
old_middle_name VARCHAR(64),
new_middle_name VARCHAR(64),
old_timezone_id decimal(5,0),
new_timezone_id deci

      if ((old_first_name != new_first_name) or (old_last_name != new_last_name ) or (old_middle_name != new_middle_name )) then
         insert into audit_user (column_name, old_value, new_value,
user_id)
         values ('NAME', NVL(old_first_name, '') || ' ' || NVL(old_middle_name, '') || ' ' || NVL(old_last_name, ''),
                 NVL(new_first_name, '') || ' ' || NVL(new_middle_name,
'') || ' ' || NVL(new_last_name, ''), user_id);
      End if;
      
      if (old_handle != new_handle) then 
         insert into audit_user (column_name, old_value, new_value,
user_id)
         values ('HANDLE', old_handle, new_handle, user_id);
      End If;
      if (old_status != new_status) then 
         insert into audit_user (column_name, old_value, new_value,
user_id)
         values ('STATUS', old_status, new_status, user_id);
      End If;
      if (old_password != new_password) then 
         insert into audit_user (column_name, old_value, new_value,
user_id)
         values ('PASSW

      End If;
      if (old_activation_code != new_activation_code) then 
         insert into audit_user (column_name, old_value, new_value,
user_id)
         values ('ACTIVATION_CODE', old_activation_code, new_activation_code, user_id);
      End If;
      if (old_timezone_id != new_timezone_id) then 
         insert into audit_user (column_name, old_value, new_value,
user_id)
         values ('TIMEZONE_ID', old_timezone_id, new_timezone_id, user_id);
      End If;
      UPDATE user SET handle_lower = lower(new_handle), modify_date = current WHERE user.user_id = user_id;
end procedure;
create trigger trig_audit_user update of first_name,last_name,handle,last_login,status,password,activation_code,middle_name,timezone_id on "informix".user referencing old as old new as new    for each row
        (
        execute procedure "informix".proc_user_update(old.user_id ,old.first_name ,new.first_name ,old.last_name ,new.last_name ,old.handle ,new.handle ,old.status ,new.status ,old.password
-- Define an updateable view for dav_principal which conbines the AWL usr
-- record 1:1 with the principal table
DROP VIEW dav_principal CASCADE;
CREATE OR REPLACE VIEW dav_principal AS
  SELECT user_no, usr.active AS user_active, joined AS created, updated AS modified,
         username, password, fullname, email,
         email_ok, date_format_type, locale,
         principal_id, type_id, displayname, default_privileges,
         TRUE AS is_principal,
         FALSE AS is_calendar,
         principal_id AS collection_id,
         FALSE AS is_addressbook,
          '/' || username || '/' AS dav_name,
         '<DAV::collection/><DAV::principal/>'::text AS resourcetypes
    FROM usr JOIN principal USING(user_no);
CREATE or REPLACE RULE dav_principal_insert AS ON INSERT TO dav_principal
DO INSTEAD
  INSERT INTO usr ( user_no, active, joined, updated, username, password, fullname, email, email_ok, date_format_type, locale )
    VALUES(
      COALESCE( NEW.user_no, nextval('usr_user_no_se

      COALESCE( NEW.user_active, TRUE),
      current_timestamp,
      current_timestamp,
      NEW.username, NEW.password,
      COALESCE( NEW.fullname, NEW.displayname ),
      NEW.email, NEW.email_ok,
      COALESCE( NEW.date_format_type, 'E'),
      NEW.locale
    );
  INSERT INTO principal ( user_no, principal_id, type_id, displayname, default_privileges )
    VALUES(
      COALESCE( NEW.user_no, currval('usr_user_no_seq')),
      COALESCE( NEW.principal_id, nextval('dav_id_seq')),
      NEW.type_id,
      COALESCE( NEW.displayname, NEW.fullname ),
      COALESCE( NEW.default_privileges, 0::BIT(24))
    );
);
CREATE or REPLACE RULE dav_principal_update AS ON UPDATE TO dav_principal
DO INSTEAD
  UPDATE usr
    SET
      user_no=NEW.user_no,
      active=NEW.user_active,
      updated=current_timestamp,
      username=NEW.username,
      password=NEW.password,
      fullname=NEW.fullname,
      email=NEW.email,
      email_ok=NEW.email_ok,
      date_format_type=NEW.date_format_typ
-- FIGURE 2.20 --
INSERT INTO Product(maker, model, ptype)
VALUES('A', '1001', 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('A', 1002, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('A', 1003, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('A', 2004, 'laptop');
INSERT INTO Product(maker, model, ptype)
VALUES('A', 2005, 'laptop');
INSERT INTO Product(maker, model, ptype)
VALUES('A', 2006, 'laptop');
INSERT INTO Product(maker, model, ptype)
VALUES('B', 1004, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('B', 1005, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('B', 1006, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('B', 2007, 'laptop');
INSERT INTO Product(maker, model, ptype)
VALUES('C', 1007, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('D', 1008, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('D', 1009, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('D', 1010, 'pc');
INSERT INTO Product(maker, model, ptype)

VALUES('D', 3004, 'printer');
INSERT INTO Product(maker, model, ptype)
VALUES('D', 3005, 'printer');
INSERT INTO Product(maker, model, ptype)
VALUES('E', 1011, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('E', 1012, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('E', 1013, 'pc');
INSERT INTO Product(maker, model, ptype)
VALUES('E', 2001, 'laptop');
INSERT INTO Product(maker, model, ptype)
VALUES('E', 2002, 'laptop');
INSERT INTO Product(maker, model, ptype)
VALUES('E', 3001, 'printer');
INSERT INTO Product(maker, model, ptype)
VALUES('E', 3002, 'printer');
INSERT INTO Product(maker, model, ptype)
VALUES('E', 3003, 'printer');
INSERT INTO Product(maker, model, ptype)
VALUES('F', 2008, 'laptop');
INSERT INTO Product(maker, model, ptype)
VALUES('F', 2009, 'laptop');
INSERT INTO Product(maker, model, ptype)
VALUES('G', 2010, 'laptop');
INSERT INTO Product(maker, model, ptype)
VALUES('H', 3006, 'printer');
INSERT INTO Product(maker, model, ptype)
VALUES('H', 3007, 'printe

-- FIGURE 2.20 --
-- FIGURE 2.21: (A) --
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1001, 2.66, 1024, 250, 2114);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1002, 2.10, 512, 250, 995);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1003, 1.42, 512, 80, 478);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1004, 2.80, 1024, 250, 649);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1005, 3.20, 512, 250, 630);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1006, 3.20, 1024, 320, 1049);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1007, 2.20, 1024, 200, 510);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1008, 2.20, 2048, 250, 770);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1009, 2.00, 1024, 250, 650);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1010, 2.80, 2048, 300, 770);
INSERT INTO PC(model, speed, ram, hd_size, price)
VALUES (1011, 1.86, 2048, 160, 959);
INS
-- IUBMB view is not used anymore, let's clean up our data.
update cofactors
set web_view = 'INTENZ' where web_view = 'IUBMB_INTENZ';
update cofactors
set web_view = 'SIB' where web_view = 'IUBMB_SIB';
update comments
set web_view = 'INTENZ' where web_view = 'IUBMB_INTENZ';
update comments
set web_view = 'SIB' where web_view = 'IUBMB_SIB';
update links
set web_view = 'INTENZ' where web_view = 'IUBMB_INTENZ';
update links
set web_view = 'SIB' where web_view = 'IUBMB_SIB';
update names
set web_view = 'INTENZ' where web_view = 'IUBMB_INTENZ';
update names
set web_view = 'SIB' where web_view = 'IUBMB_SIB';
update publications
set web_view = 'INTENZ' where web_view = 'IUBMB_INTENZ';
update publications
set web_view = 'SIB' where web_view = 'IUBMB_SIB';
update reactions
set web_view = 'INTENZ' where web_view = 'IUBMB_INTENZ';
update reactions
set web_view = 'SIB' where web_view = 'IUBMB_SIB';
update reactions_map
set web_view = 'INTENZ' where web_view = 'IUBMB_INTENZ';
update reactions_map
s
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `lag_reports`;
CREATE TABLE `lag_reports` (
  `report_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `player` int(10) unsigned NOT NULL DEFAULT '0',
  `lag_type` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `map` smallint(5) unsigned NOT NULL DEFAULT '0',
  `posX` float NOT NULL DEFAULT '0',
  `posY` float NOT NULL DEFAULT '0',
  `posZ` float NOT NULL DEFAULT '0',
  PRIMARY KEY (`re
create or replace procedure PP_OB_IK
-- Èíâåíòàðíàÿ êàðòî÷êà ïî îáîðîòêå
(nIDENT in number) is
  cursor a(nIDENT in number) is
    select AG.AGNFAMILYNAME || ' ' || AG.AGNFIRSTNAME || ' ' || AG.AGNLASTNAME sAGNNAME, --
           DN.NOMEN_NAME,
           DN.NOMEN_CODE,
           DA.ACC_NUMBER,
           V.DATE_TO,
           V.ACNT_RES_QUANT,
           V.ACNT_RES_SUM,
           V.ACNT_RES_SUM / V.ACNT_RES_QUANT ACNT_RES_PRICE
      from VALTURNS   V, --
           AGNLIST    AG,
           DICNOMNS   DN,
           DICACCS    DA,
           SELECTLIST S
     where V.RN = S.DOCUMENT
       and S.IDENT = nIDENT
       and AG.RN = V.AGENT
       and DN.RN = V.NOMENCLATURE
       and DA.RN = V.ACCOUNT
       and V.ACNT_RES_QUANT <> 0
     order by NOMEN_NAME;
  r1 number;
  r2 number;
  n number;
  --
  procedure excel_init is
  begin
    prsg_excel.PREPARE;
    prsg_excel.SHEET_SELECT('ÈÊ ãðóïïîâîãî ó÷åòà ÎÑ');
    prsg_excel.CELL_DESCRIBE('Äåíü');
    prsg_excel.CELL_DESCRIBE('Ìåñÿö

    prsg_excel.CELL_DESCRIBE('Ãîä');
    prsg_excel.CELL_DESCRIBE('Äàòà');
    prsg_excel.CELL_DESCRIBE('Íàèìåíîâàíèå');
    prsg_excel.CELL_DESCRIBE('ÌÎË');
    prsg_excel.CELL_DESCRIBE('Ñ÷åò');
    prsg_excel.LINE_DESCRIBE('Ñòðîêà1');
    prsg_excel.LINE_DESCRIBE('Ñòðîêà2');
    prsg_excel.LINE_CELL_DESCRIBE('Ñòðîêà1', 'Íà÷àëüíàÿÑòîèìîñòüÅä');
    prsg_excel.LINE_CELL_DESCRIBE('Ñòðîêà2', 'ÈíâÍîìåð');
    prsg_excel.LINE_CELL_DESCRIBE('Ñòðîêà2', 'ÏîñòóïèëîÊîëè÷');
    prsg_excel.LINE_CELL_DESCRIBE('Ñòðîêà2', 'ÏîñòóïèëîÑóììà');
  end;
  --
  procedure excel_fini is
  begin
    prsg_excel.LINE_DELETE('Ñòðîêà1');
    prsg_excel.LINE_DELETE('Ñòðîêà2');
  end;
begin
  excel_init;
  for c in a(nIDENT) loop
    r1 := prsg_excel.LINE_APPEND('Ñòðîêà1');
    r2 := prsg_excel.LINE_APPEND('Ñòðîêà2');
    if n is null then
      prsg_excel.CELL_VALUE_WRITE('Íàèìåíîâàíèå', c.nomen_name);
      prsg_excel.CELL_VALUE_WRITE('ÌÎË', c.sagnname);
      prsg_excel.CELL_VALUE_WRITE('Ñ÷åò', c.acc_number);

-- --------------------------------------------------------
-- Copyright (c) 2013 Matthew Pate and Daniel Catalano
-- [This program is licensed under the "MIT License"]
-- Please see the file COPYING in the source distribution
-- of this software for license terms.
-- --------------------------------------------------------
\c stormking
CREATE EXTENSION postgis;
CREATE TABLE model_run (
  model_run_date date NOT NULL,
  model_run_time timetz NOT NULL,
  model_run_pkey SERIAL PRIMARY KEY,
  UNIQUE (model_run_date, model_run_time)
);
CREATE TABLE forecast_hour (
  forecast_hour interval NOT NULL,
  forecast_hour_pkey SERIAL PRIMARY KEY,
  UNIQUE (forecast_hour)
);
CREATE TABLE model_forecast_relation (
  model_run_pkey integer NOT NULL REFERENCES model_run (model_run_pkey),
  forecast_hour_pkey integer NOT NULL REFERENCES forecast_hour (forecast_hour_pkey),
  model_forecast_relation_pkey SERIAL PRIMARY KEY,
  UNIQUE (model_run_pkey, forecast_hour_pkey)
);
CREATE TABLE met_param (
  level

  level_unit text NOT NULL, 
  attribute text NOT NULL, 
  attribute_unit text NOT NULL, 
  met_param_pkey SERIAL PRIMARY KEY,
  UNIQUE (level, attribute)
);
CREATE TABLE region (
  region_name text NOT NULL,
  region_abbv text UNIQUE NOT NULL,
  fs_region_num smallint NOT NULL,
  region_pkey SERIAL PRIMARY KEY
);
-- TODO create uniqueness in region_ref_number & regional_grid
CREATE TABLE model_grid_points (
  model_grid_points_pkey SERIAL PRIMARY KEY, 
  region_pkey smallint NOT NULL REFERENCES region (region_pkey),
  region_ref_number smallint NOT NULL, 
  regional_grid text,
  national_ref_number smallint UNIQUE, 
  location bigint -- TODO replace "bigint" with "geography(POINT,4326)"
);
CREATE TABLE met_data ( 
    value real NOT NULL,
    met_data_pkey SERIAL PRIMARY KEY, 
    met_param_pkey smallint NOT NULL REFERENCES met_param (met_param_pkey),
    model_grid_points_pkey integer NOT NULL REFERENCES model_grid_points (model_grid_points_pkey), 
    model_forecast_relation_pkey i
--------------------------------------------------------
--  ÆÄÀÏÀÌ »ý¼ºµÊ - ¸ñ¿äÀÏ-2¿ù-02-2017   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table PURCHASER
--------------------------------------------------------
  CREATE TABLE "SCOTT"."PURCHASER" 
   (	"PURCHASERNAME" VARCHAR2(20 BYTE), 
	"PURCHASERADDRESS" VARCHAR2(50 BYTE), 
	"PURCHASERPHONE" NUMBER, 
	"PURCHASEREMAIL" VARCHAR2(40 BYTE), 
	"PURCHASERID" NUMBER, 
	"PURCHASESEQ" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PURCHASER_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX
select xt.create_view('xt.site', $$
  select * from whsinfo;
$$, false);
create or replace rule "_INSERT" as on insert to xt.site do instead
insert into whsinfo (
  warehous_id,
  warehous_code,
  warehous_descrip,
  warehous_fob,
  warehous_active,
  warehous_counttag_prefix,
  warehous_counttag_number,
  warehous_bol_prefix,
  warehous_bol_number,
  warehous_shipping,
  warehous_useslips,
  warehous_usezones,
  warehous_aislesize,
  warehous_aislealpha,
  warehous_racksize,
  warehous_rackalpha,
  warehous_binsize,
  warehous_binalpha,
  warehous_locationsize,
  warehous_locationalpha,
  warehous_enforcearbl,
  warehous_default_accnt_id,
  warehous_shipping_commission,
  warehous_cntct_id,
  warehous_addr_id,
  warehous_transit,
  warehous_shipform_id,
  warehous_shipvia_id,
  warehous_shipcomments,
  warehous_costcat_id,
  warehous_sitetype_id,
  warehous_taxzone_id,
  warehous_sequence
) values (
  new.warehous_id,
  new.warehous_code,
  new.warehous_descrip,
  new.warehous_fob,
  

  new.warehous_counttag_prefix,
  new.warehous_counttag_number,
  new.warehous_bol_prefix,
  new.warehous_bol_number,
  new.warehous_shipping,
  new.warehous_useslips,
  new.warehous_usezones,
  new.warehous_aislesize,
  new.warehous_aislealpha,
  new.warehous_racksize,
  new.warehous_rackalpha,
  new.warehous_binsize,
  new.warehous_binalpha,
  new.warehous_locationsize,
  new.warehous_locationalpha,
  new.warehous_enforcearbl,
  new.warehous_default_accnt_id,
  new.warehous_shipping_commission,
  new.warehous_cntct_id,
  new.warehous_addr_id,
  COALESCE(new.warehous_transit, false),
  new.warehous_shipform_id,
  new.warehous_shipvia_id,
  new.warehous_shipcomments,
  new.warehous_costcat_id,
  new.warehous_sitetype_id,
  new.warehous_taxzone_id,
  COALESCE(new.warehous_sequence, 0)
);
create or replace rule "_UPDATE" as on update to xt.site do instead
update whsinfo set
  warehous_code=new.warehous_code,
  warehous_descrip=new.warehous_descrip,
  warehous_fob=new.warehous_fob,
  war

  warehous_counttag_prefix=new.warehous_counttag_prefix,
  warehous_counttag_number=new.warehous_counttag_number,
  warehous_bol_prefix=new.warehous_bol_prefix,
  warehous_bol_number=new.warehous_bol_number,
  warehous_shipping=new.warehous_shipping,
  warehous_useslips=new.warehous_useslips,
  warehous_usezones=new.warehous_usezones,
  warehous_aislesize=new.warehous_aislesize,
  warehous_aislealpha=new.warehous_aislealpha,
  warehous_racksize=new.warehous_racksize,
  warehous_rackalpha=new.warehous_rackalpha,
  warehous_binsize=new.warehous_binsize,
  warehous_binalpha=new.warehous_binalpha,
  warehous_locationsize=new.warehous_locationsize,
  warehous_locationalpha=new.warehous_locationalpha,
  warehous_enforcearbl=new.warehous_enforcearbl,
  warehous_default_accnt_id=warehous_default_accnt_id,
  warehous_shipping_commission=new.warehous_shipping_commission,
  warehous_cntct_id=new.warehous_cntct_id,
  warehous_addr_id=new.warehous_addr_id,
  warehous_transit=COALESCE(new.warehous_
-- phpMyAdmin SQL Dump
-- version 3.3.9
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Jun 14, 2013 at 01:02 PM
-- Server version: 5.5.8
-- PHP Version: 5.3.5
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `fixit`
--
-- --------------------------------------------------------
--
-- Table structure for table `issues`
--
CREATE TABLE IF NOT EXISTS `issues` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `issue_tag` varchar(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=39 ;
--
-- Dumping data for table `issues`
--
INSERT INTO `issues` (`id`, `issue_tag`) VALUES
(1, '#brokenchair'),
(2, '#noshowercurtains'),
(3, '#brokendoorhandle'),
(4, '#clocknotworking'),
(5, '#brokentable'),
(6, '#wetchair'),

(7, '#nomarkers'),
(8, '#stiffdoorhandle'),
(9, '#weakchair'),
(10, '#tornshowercurtains'),
(11, '#brokentaphandle'),
(12, '#brokenbed'),
(13, '#nowater'),
(14, '#brokenglass'),
(15, '#stiffdoor'),
(16, '#noshowercurtains'),
(17, '#brokenfridgehandle'),
(18, '#brokenbowl'),
(19, '#nomicrowave'),
(20, '#brokenrail'),
(21, '#brokentile'),
(22, '#noshowerhandle'),
(23, '#brokenfrigdedoor'),
(24, '#brokencabinet'),
(25, '#noblinds'),
(26, '#brokenkeyboard'),
(27, '#brokenscreen'),
(28, '#nointernet'),
(29, '#brokenlightbox');
-- --------------------------------------------------------
--
-- Table structure for table `jobs`
--
CREATE TABLE IF NOT EXISTS `jobs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `issue_id` int(11) NOT NULL,
  `location_id` int(11) NOT NULL,
  `timestamp` datetime NOT NULL,
  `status` enum('NEW','ON-GOING','COMPLETED','CANCELLED') NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=175 ;
--
-- Dumping data for table `jobs`
--
INSERT

(1, 1, 29, '2013-06-10 12:59:32', 'NEW'),
(2, 2, 28, '2013-06-10 12:59:48', 'NEW'),
(3, 3, 27, '2013-06-10 13:00:15', 'NEW'),
(4, 4, 26, '2013-06-10 13:00:31', 'NEW'),
(5, 5, 25, '2013-06-10 12:59:32', 'NEW'),
(6, 6, 24, '2013-06-10 12:59:48', 'NEW'),
(7, 7, 23, '2013-06-10 13:00:15', 'NEW'),
(8, 8, 22, '2013-06-10 13:00:31', 'NEW'),
(9, 9, 21, '2013-06-10 12:59:32', 'NEW'),
(10, 10, 20, '2013-06-10 12:59:48', 'NEW'),
(11, 11, 19, '2013-06-10 13:00:15', 'NEW'),
(12, 12, 19, '2013-06-10 13:00:31', 'NEW'),
(13, 13, 17, '2013-06-10 12:59:32', 'NEW'),
(14, 14, 16, '2013-06-10 12:59:48', 'NEW'),
(15, 15, 15, '2013-06-10 13:00:15', 'NEW'),
(16, 16, 14, '2013-06-10 12:59:48', 'NEW'),
(17, 17, 13, '2013-06-10 13:00:15', 'NEW'),
(18, 18, 12, '2013-06-10 13:00:31', 'NEW'),
(19, 19, 11, '2013-06-10 12:59:32', 'NEW'),
(20, 20, 10, '2013-06-10 12:59:48', 'NEW'),
(21, 21, 9, '2013-06-10 13:00:15', 'NEW'),
(22, 22, 8, '2013-06-10 12:59:48', 'NEW'),
(23, 23, 7, '2013-06-10 13:00:15', 'NEW'),
(24, 24,
-->Final Project Database<--
CREATE SCHEMA final_project;
SET search_path = final_project, public;
DROP TABLE IF EXISTS new_car_infor;
DROP TABLE IF EXISTS used_car_infor;
DROP TABLE IF EXISTS user_info;
DROP TABLE IF EXISTS user_authentication;
DROP TABLE IF EXISTS adm_info;
DROP TABLE IF EXISTS adm_authentication;
DROP TABLE IF EXISTS log;
CREATE TABLE new_car_infor (
  make char(20) NOT NULL default '',
  model char(20) NOT NULL default '',
  base_price INT NOT NULL  default '0',
  city_MPG INT NOT NULL  default '0',
  Hway_MPG INT NOT NULL  default '0',
  doors INT NOT NULL  default '0',
  engine char(10) NOT NULL default '',
  PRIMARY KEY (model)
);
INSERT INTO new_car_infor VALUES ('Jeep','Wrangler',25995,16,20,4,'Gas');
INSERT INTO new_car_infor VALUES ('Jeep','Compass',18495,21,27,4,'Gas');
INSERT INTO new_car_infor VALUES ('Jeep','Grand Cherokee',28759,17,24,4,'Gas');
INSERT INTO new_car_infor VALUES ('Jeep','Patriot',15995,21,28,4,'Gas');
INSERT INTO new_car_infor VALUES ('Do

INSERT INTO new_car_infor VALUES ('Dodge','Challenger',26295,18,27,2,'Gas');
INSERT INTO new_car_infor VALUES ('Dodge','Charger',26295,19,31,4,'Gas');
INSERT INTO new_car_infor VALUES ('Dodge','Durango',29795,16,23,4,'Diesel');
INSERT INTO new_car_infor VALUES ('Dodge','Dart',15995,24,34,4,'Gas');
INSERT INTO new_car_infor VALUES ('KIA','Sorento',24100,20,26,4,'Gas');
INSERT INTO new_car_infor VALUES ('KIA','RIO',13800,28,36,4,'Hybrid');
INSERT INTO new_car_infor VALUES ('KIA','Soul',14700,24,30,4,'Gas');
INSERT INTO new_car_infor VALUES ('Chrysler','200 Series',21195,19,31,4,'Gas');
INSERT INTO new_car_infor VALUES ('Chrysler','300 Series',30545,19,31,4,'Gas');
INSERT INTO new_car_infor VALUES ('Hyundai','Sonata',21350,22,34,4,'Gas');
INSERT INTO new_car_infor VALUES ('Nissan','XTerra',22940,16,22,4,'Gas');
INSERT INTO new_car_infor VALUES ('Nissan','370Z',33120,18,26,2,'Gas');
INSERT INTO new_car_infor VALUES ('Nissan','Versa',13990,27,36,4,'Gas');
INSERT INTO new_car_infor VALUES (

INSERT INTO new_car_infor VALUES ('Nissan','Maxima',31000,19,26,4,'Gas');
INSERT INTO new_car_infor VALUES ('Nissan','Sentra',15990,27,36,4,'Gas');
INSERT INTO new_car_infor VALUES ('Nissan','Murano',28440,18,24,4,'Gas');
INSERT INTO new_car_infor VALUES ('Ford','C-MAX',25200,40,45,4,'Hybrid');
INSERT INTO new_car_infor VALUES ('Ford','Fiesta',14000,29,39,4,'Gas');
INSERT INTO new_car_infor VALUES ('Ford','Focus',16505,26,36,4,'Gas');
INSERT INTO new_car_infor VALUES ('Ford','Fusion',21900,22,34,4,'Hybrid');
INSERT INTO new_car_infor VALUES ('Ford','Mustang',22200,19,29,2,'Gas');
INSERT INTO new_car_infor VALUES ('Ford','Escape',22700,22,31,4,'Gas');
INSERT INTO new_car_infor VALUES ('Ford','Explorer',29600,17,24,4,'Gas');
INSERT INTO new_car_infor VALUES ('Ford','F-150',24070,17,23,2,'Gas');
INSERT INTO new_car_infor VALUES ('Ford','Super Duty',30080,15,18,4,'Diesel');
INSERT INTO new_car_infor VALUES ('Honda','Accord',30200,30,36,4,'Gas');
INSERT INTO new_car_infor VALUES ('Honda','
-- phpMyAdmin SQL Dump
-- version 4.5.2
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Dec 04, 2016 at 05:20 PM
-- Server version: 10.1.16-MariaDB
-- PHP Version: 5.6.24
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
--
-- Database: `blog`
--
-- --------------------------------------------------------
--
-- Table structure for table `comments`
--
CREATE TABLE `comments` (
  `id` int(11) NOT NULL,
  `post_id` int(11) NOT NULL,
  `created` datetime NOT NULL,
  `author` varchar(255) NOT NULL,
  `body` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
-- --------------------------------------------------------
--
-- Table structure for table `nav_subject`
--
CREATE TABLE `nav_subject` (
  `sub_id` int(4) NOT NULL,
  

  `position` int(3) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
--
-- Dumping data for table `nav_subject`
--
INSERT INTO `nav_subject` (`sub_id`, `menu_name`, `position`) VALUES
(30, 'Home', 1);
-- --------------------------------------------------------
--
-- Table structure for table `posts`
--
CREATE TABLE `posts` (
  `p_id` int(4) NOT NULL,
  `sub_name` varchar(15) NOT NULL,
  `title` text NOT NULL,
  `visible` tinyint(1) NOT NULL,
  `content` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
-- --------------------------------------------------------
--
-- Table structure for table `post_photo`
--
CREATE TABLE `post_photo` (
  `photo_id` int(4) NOT NULL,
  `post_id` int(4) NOT NULL,
  `file_name` varchar(90) NOT NULL,
  `size` int(10) NOT NULL,
  `type` varchar(15) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
-- --------------------------------------------------------
--
-- Table structure for table `profile_photo`
--
CREATE TABLE `profile_photo` (
  `photo_id` int(

  `type` varchar(15) NOT NULL,
  `size` int(11) NOT NULL,
  `file_name` varchar(255) NOT NULL,
  `blog_name` varchar(30) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
--
-- Dumping data for table `profile_photo`
--
INSERT INTO `profile_photo` (`photo_id`, `type`, `size`, `file_name`, `blog_name`) VALUES
(1, 'image/jpeg', 40741, 'produce.jpg', '');
-- --------------------------------------------------------
--
-- Table structure for table `users`
--
CREATE TABLE `users` (
  `id` int(4) NOT NULL,
  `username` varchar(30) NOT NULL,
  `password` varchar(30) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(30) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
--
-- Dumping data for table `users`
--
INSERT INTO `users` (`id`, `username`, `password`, `first_name`, `last_name`) VALUES
(1, 'admin', 'admin', 'ashok', 'poudel');
--
-- Indexes for dumped tables
--
--
-- Indexes for table `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`);
--
-- Indexes for table `
/*
    Merge together two disctinct MySQL tables
    mysqldump [options] uspto -T /var/lib/mysql/uspto
    mysql -u [user] -p --local-infile=1 -h [db] [tbl]
    
    READ THIS: http://dev.mysql.com/doc/refman/5.5/en/optimizing-innodb-bulk-data-loading.html
*/
SELECT "new base", NOW();
SET FOREIGN_KEY_CHECKS = 0;
SET UNIQUE_CHECKS = 0;
SET SESSION tx_isolation='READ-UNCOMMITTED';
SET innodb_lock_wait_timeout = 500;
SET autocommit=0; 
SELECT "patent";
LOAD DATA LOCAL INFILE 'new/patent.txt' INTO TABLE uspto_new.patent FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "rawlocation";
LOAD DATA LOCAL INFILE 'new/rawlocation.txt' IGNORE INTO TABLE uspto_new.rawlocation FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "subclass";
LOAD DATA LOCAL INFILE 'new/subclass.txt' IGNORE INTO TABLE uspto_new.subclass FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "mainclass";
LOAD DATA LOCAL INFILE 'new/mainclass.txt' IGNORE INTO TABLE uspto_new.mainclass FIELDS TERMINATED by '\t' ENCLOSED BY '\

SELECT "application";
LOAD DATA LOCAL INFILE 'new/application.txt' INTO TABLE uspto_new.application FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "rawassignee";
LOAD DATA LOCAL INFILE 'new/rawassignee.txt' INTO TABLE uspto_new.rawassignee FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "rawinventor";
LOAD DATA LOCAL INFILE 'new/rawinventor.txt' INTO TABLE uspto_new.rawinventor FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "ipcr";
LOAD DATA LOCAL INFILE 'new/ipcr.txt' INTO TABLE uspto_new.ipcr FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "rawlawyer";
LOAD DATA LOCAL INFILE 'new/rawlawyer.txt' INTO TABLE uspto_new.rawlawyer FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "usreldoc";
LOAD DATA LOCAL INFILE 'new/usreldoc.txt' INTO TABLE uspto_new.usreldoc FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "uspc";
LOAD DATA LOCAL INFILE 'new/uspc.txt' INTO TABLE uspto_new.uspc FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
COMMIT;
SET autocommit=1; 
SET innodb_lock_wait_

SET UNIQUE_CHECKS = 1;
SET FOREIGN_KEY_CHECKS = 1;
SET SESSION tx_isolation='REPEATABLE-READ';
SELECT NOW();
/* ------------------------------- */
SELECT "new citatons", NOW();
SET FOREIGN_KEY_CHECKS = 0;
SET UNIQUE_CHECKS = 0;
SET SESSION tx_isolation='READ-UNCOMMITTED';
SET innodb_lock_wait_timeout = 500;
SET autocommit=0; 
SELECT "foreigncitation";
LOAD DATA LOCAL INFILE 'new/foreigncitation.txt' INTO TABLE uspto_new.foreigncitation FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "otherreference";
LOAD DATA LOCAL INFILE 'new/otherreference.txt' INTO TABLE uspto_new.otherreference FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "usapplicationcitation";
LOAD DATA LOCAL INFILE 'new/usapplicationcitation.txt' INTO TABLE uspto_new.usapplicationcitation FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
SELECT "uspatentcitation";
LOAD DATA LOCAL INFILE 'new/uspatentcitation.txt' INTO TABLE uspto_new.uspatentcitation FIELDS TERMINATED by '\t' ENCLOSED BY '\"';
COMMIT;
SET autocommit=1; 
SE
  --Address View
SELECT dropIfExists('VIEW', 'address', 'api');
  CREATE OR REPLACE VIEW api.address AS
  SELECT 
    addr_number::varchar AS address_number,
    addr_line1 AS address1,
    addr_line2 AS address2,
    addr_line3 AS address3,
    addr_city AS city,
    addr_state AS state,
    addr_postalcode AS postal_code,
    addr_country AS country,
    addr_active AS active,
    addr_notes AS notes,
    ''::TEXT AS change       
  FROM
    addr;
GRANT ALL ON TABLE api.address TO xtrole;
COMMENT ON VIEW api.address IS 'Address';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.address DO INSTEAD
SELECT    saveAddr(
	    NULL,
            NEW.address_number,
            NEW.address1,
            NEW.address2,
            NEW.address3,
            NEW.city,
            NEW.state,
            NEW.postal_code,
            NEW.country,
            COALESCE(NEW.active,TRUE),
            NEW.notes,
            NULL);
CREATE OR REPLACE RULE "_UPDATE" AS
    ON UPDATE TO api.
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (449, "Batch Comment Spam Deletion", "4.1", "1.0.5", "3.6", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (48205, 449, "PW_BCPD", "process_batch", "/batch-comment-spam-deletion.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (48206, 449, "PW_BCPD", "init", "/batch-comment-spam-deletion.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (48207, 449, "PW_BCPD", "admin_head", "/batch-comment-spam-deletion.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (48208, 449, "PW_BCPD", "processing_page", "/batch-comment-spam-deletion.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, c

insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (48210, 449, "PW_BCPD", "admin_notices", "/batch-comment-spam-deletion.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (48211, 449, "PW_BCPD", "text_domain", "/batch-comment-spam-deletion.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (48212, 449, "PW_BCPD", "admin_menu", "/batch-comment-spam-deletion.php", now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (4316, 449, "admin_head", "array('PW_BCPD','admin_head')", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (4317, 449, "manage_comments_nav", "array('PW_BCPD','comments_nav')", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, ho
create table student(
  id integer primary key autoincrement,
  name varchar(20) not null,
  age integer not null
);
insert into student(name,age ) values('jack',26);
insert into student(name,age ) values('tom',18);
insert into student(name,age ) values('史泰龙',56);
insert into student(name,age ) values('泰森',38);
select * from student;
drop table Product;
drop table tb_Product;
drop table User;
drop table tb_User;
drop table tb_order;
drop table sqlite_sequence;
--创建产品表（Product）
create table tb_product(
  productId integer primary key autoincrement,
  name varchar(50) not null,
  price numeric(5,2) not null
);
--创建用户表（User）
create table tb_user(
  userId integer primary key autoincrement,
  name varchar(50) not null
);
--创建订单表（Order）
create table tb_order(
  orderId integer primary key autoincrement,
  orderTotalPrice numeric(10,2) not null,
  userId integer,
  foreign key(userId) references tb_user(userId)
);
--创建订单项表（OrderItem）
create table tb_orderitem(
  orderItemId integer primary k

  productId integer,
  amount integer,
  orderItemPrice numeric(8,2) not null,
  orderId integer,
  foreign key(productId) references tb_product(productId),
  foreign key(orderId) references tb_order(orderId)
);
StringBuilder stringBuilder = new StringBuilder();
		stringBuilder
				.append("create table tb_product(                                   ");
		stringBuilder
				.append("  productId integer primary key autoincrement,             ");
		stringBuilder
				.append("  name varchar(50) not null,                               ");
		stringBuilder
				.append("  price numeric(5,2) not null                              ");
		stringBuilder
				.append(");                                                         ");
		stringBuilder
				.append("                                                           ");
		stringBuilder
				.append("create table tb_user(                                      ");
		stringBuilder
				.append("  userId integer primary key autoincrement,                ");


				.append("  name varchar(50) not null                                ");
		stringBuilder
				.append(");                                                         ");
		stringBuilder
				.append("                                                           ");
		stringBuilder
				.append("create table tb_order(                                     ");
		stringBuilder
				.append("  orderId integer primary key autoincrement,               ");
		stringBuilder
				.append("  orderTotalPrice numeric(10,2) not null,                  ");
		stringBuilder
				.append("  userId integer,                                          ");
		stringBuilder
				.append("  foreign key(userId) references tb_user(userId)           ");
		stringBuilder
				.append(");                                                         ");
		stringBuilder
				.append("                                                           ");
		stringBuilder
				.append("create table tb_orderitem(                                 ");
		s
-- Sep 3, 2008 5:01:15 PM EEST
-- 
UPDATE AD_Tab SET IsInsertRecord='N', IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:15','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Tab_ID=53034
-- Sep 3, 2008 5:01:27 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:27','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53635
-- Sep 3, 2008 5:01:29 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:29','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53634
-- Sep 3, 2008 5:01:48 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:48','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53623
-- Sep 3, 2008 5:01:49 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:49','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53624
-- Sep 3, 2008 5:01:50 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:50','

-- Sep 3, 2008 5:01:51 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:51','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53626
-- Sep 3, 2008 5:01:52 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:52','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53627
-- Sep 3, 2008 5:01:53 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:53','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53628
-- Sep 3, 2008 5:01:54 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:54','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53629
-- Sep 3, 2008 5:01:55 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:55','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53630
-- Sep 3, 2008 5:01:55 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_TIMESTAMP('2008-09-03 17:01:55','YYYY-MM-DD HH24
﻿CREATE VIEW [dbo].[V_AUDIT_TRAIL]
AS
SELECT     TOP (100) PERCENT trail_code, module, description, username, createdte
FROM         dbo.TCCG_AUDIT_TRAIL
ORDER BY createdte DESC
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configura

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "TCCG_AUDIT_TRAIL"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 197
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
        
/*insert into NAV_ELEMENT_MODE_ROLE values('cmx_storepc_upl','--DEFAULT--','CMX_BBGNBB','STPRCCM');  
insert into NAV_ELEMENT_MODE_ROLE values('cmx_storepc_upl','--DEFAULT--','CMX_BBGNBB','STPRCCA');  
insert into NAV_ELEMENT_MODE_ROLE values('cmx_storepc_upl','--DEFAULT--','CMX_BBGNBB','STPRCCB');*/
SELECT * FROM NAV_ELEMENT_MODE_ROLE WHERE  ELEMENT='cmx_storepc_upl' FOR UPDATE;
--NAV_ELEMENT_MODE_ROLE是关联RMS的MODE和ROLE权限
--ELEMENT模块名字
--FOLDER存放文件夹
--ROLE权限名称
--STPRCCI	222	门店生鲜变价导入
insert into NAV_ELEMENT_MODE_ROLE values('cmx_storepc_upl','--DEFAULT--','CMX_BBGNBB','STPRCCI');
SELECT * FROM NAV_ELEMENT_MODE WHERE ELEMENT='cmx_storepc_upl';
SELECT * FROM NAV_ELEMENT_MODE_ROLE WHERE ELEMENT='cmx_storepc_upl';
--创建角色
create role STPRCCI;
--授权给余学明
GRANT STPRCCI TO  RMS01;
--授权给RMS业务
GRANT STPRCCI TO  RMSYW01;
SELECT * FROM RAINY_USER WHERE USER_ID='RMS01'
SELECT * FROM RAINY_ROLE;
SELECT * FROM sec_form_action_role WHERE ROLE='STPRCCM';
SELECT * FROM SEC_FORM_ACTION WHERE SEC_FORM_ACTION_
drop view F15A6_sys_admin_view;
drop view F15A6_lab_director_view;
drop view F15A6_exec_dir_view;
drop view F15A6_chairperson_view;
drop view F15A6_requester_view;
create view F15A6_sys_admin_view as
SELECT 
	emp_id,
	emp_name,
	emp_email,
	emp_office,
	emp_phone,
	emp_status,
	status_eff_date,
	sys_admin_flag,
	lab_director_flag,
	exec_director_flag,
	chairperson_flag,
	F15A6_Auth_auth_id,
	F15A6_Lab_lab_id
FROM F15A6_Emp where sys_admin_flag = 'Y';
create or replace TRIGGER F15A6_sys_admin_trigger
     INSTEAD OF insert ON F15A6_sys_admin_view
     FOR EACH ROW
BEGIN
    insert into F15A6_Emp( 
	emp_id,
	emp_name,
	emp_email,
	emp_office,
	emp_phone,
	emp_status,
	status_eff_date,
	sys_admin_flag,
	lab_director_flag,
	exec_director_flag,
	chairperson_flag,
	F15A6_Auth_auth_id,
	F15A6_Lab_lab_id)
	VALUES (:NEW.emp_id,
		:NEW.emp_name,
		:NEW.emp_email,
		:NEW.emp_office,
		:NEW.emp_phone,
		:NEW.emp_status,
		:NEW.status_eff_date,
		'Y',
		:NEW.lab_director_flag,
		:NEW.exec_director_

		:NEW.chairperson_flag,
		:NEW.F15A6_Auth_auth_id,
		:NEW.F15A6_Lab_lab_id);
END;
create view F15A6_lab_director_view as
SELECT 
	emp_id,
	emp_name,
	emp_email,
	emp_office,
	emp_phone,
	emp_status,
	status_eff_date,
	sys_admin_flag,
	lab_director_flag,
	exec_director_flag,
	chairperson_flag,
	F15A6_Auth_auth_id,
	F15A6_Lab_lab_id
FROM F15A6_Emp where lab_director_flag = 'Y';
create or replace TRIGGER F15A6_lab_director_trigger
     INSTEAD OF insert ON F15A6_lab_director_view
     FOR EACH ROW
BEGIN
    insert into F15A6_Emp( 
	emp_id,
	emp_name,
	emp_email,
	emp_office,
	emp_phone,
	emp_status,
	status_eff_date,
	sys_admin_flag,
	lab_director_flag,
	exec_director_flag,
	chairperson_flag,
	F15A6_Auth_auth_id,
	F15A6_Lab_lab_id)
	VALUES (:NEW.emp_id,
		:NEW.emp_name,
		:NEW.emp_email,
		:NEW.emp_office,
		:NEW.emp_phone,
		:NEW.emp_status,
		:NEW.status_eff_date,
		:NEW.sys_admin_flag,
		'Y',
		:NEW.exec_director_flag,
		:NEW.chairperson_flag,
		:NEW.F15A6_Auth_auth_id,
		:NEW.F15A6_

END;
create view F15A6_exec_dir_view as
SELECT 
	emp_id,
	emp_name,
	emp_email,
	emp_office,
	emp_phone,
	emp_status,
	status_eff_date,
	sys_admin_flag,
	lab_director_flag,
	exec_director_flag,
	chairperson_flag,
	F15A6_Auth_auth_id,
	F15A6_Lab_lab_id
FROM F15A6_Emp where exec_director_flag = 'Y' ;
create or replace TRIGGER F15A6_exec_dir_trigger
     INSTEAD OF insert ON F15A6_exec_dir_view
     FOR EACH ROW
BEGIN
    insert into F15A6_Emp( 
	emp_id,
	emp_name,
	emp_email,
	emp_office,
	emp_phone,
	emp_status,
	status_eff_date,
	sys_admin_flag,
	lab_director_flag,
	exec_director_flag,
	chairperson_flag,
	F15A6_Auth_auth_id,
	F15A6_Lab_lab_id)
	VALUES (:NEW.emp_id,
		:NEW.emp_name,
		:NEW.emp_email,
		:NEW.emp_office,
		:NEW.emp_phone,
		:NEW.emp_status,
		:NEW.status_eff_date,
		:NEW.sys_admin_flag,
		:NEW.lab_director_flag,
		'Y',
		:NEW.chairperson_flag,
		:NEW.F15A6_Auth_auth_id,
		:NEW.F15A6_Lab_lab_id);
END;
create view F15A6_chairperson_view as
SELECT 
	emp_id,
	emp_name,
	emp_
CREATE OR REPLACE TRIGGER "TRG_INSERT_GLDL"
   AFTER INSERT OR UPDATE
   ON gld_gmr_link_detail
   FOR EACH ROW
BEGIN
   IF UPDATING
   THEN
      IF :NEW.is_active = 'Y'
      THEN
         INSERT INTO gldl_gmr_link_detail_log
                     (gld_id, internal_action_ref_no,
                      activity_ref_no, activity_date,
                      product_id, product_name, quality_id,
                      quality_name, source_internal_gmr_ref_no,
                      source_gmr_ref_no,
                      source_int_contract_ref_no,
                      source_contract_ref_no,
                      source_int_contract_item_no,
                      source_contract_item_ref_no,
                      source_contract_type, source_corporate_id,
                      target_internal_gmr_ref_no,
                      target_gmr_ref_no,
                      target_int_contract_ref_no,
                      target_contract_ref_no,
                      target_int_contract_item_no

                      target_contract_item_ref_no,
                      target_contract_type, target_corporate_id,
                      is_active, created_by, created_date,
                      updated_by, updated_date, VERSION,
                      entry_type
                     )
              VALUES (:NEW.gld_id, :NEW.internal_action_ref_no,
                      :NEW.activity_ref_no, :NEW.activity_date,
                      :NEW.product_id, :NEW.product_name, :NEW.quality_id,
                      :NEW.quality_name, :NEW.source_internal_gmr_ref_no,
                      :NEW.source_gmr_ref_no,
                      :NEW.source_int_contract_ref_no,
                      :NEW.source_contract_ref_no,
                      :NEW.source_int_contract_item_no,
                      :NEW.source_contract_item_ref_no,
                      :NEW.source_contract_type, :NEW.source_corporate_id,
                      :NEW.target_internal_gmr_ref_no,
                      :NEW.target_gmr_re

                      :NEW.target_int_contract_ref_no,
                      :NEW.target_contract_ref_no,
                      :NEW.target_int_contract_item_no,
                      :NEW.target_contract_item_ref_no,
                      :NEW.target_contract_type, :NEW.target_corporate_id,
                      'Y', :NEW.created_by, :NEW.created_date,
                      :NEW.updated_by, :NEW.updated_date, :NEW.VERSION,
                      'Update'
                     );
      ELSE
         -- IsActive is Cancelled
         INSERT INTO gldl_gmr_link_detail_log
                     (gld_id, internal_action_ref_no,
                      activity_ref_no, activity_date,
                      product_id, product_name, quality_id,
                      quality_name, source_internal_gmr_ref_no,
                      source_gmr_ref_no,
                      source_int_contract_ref_no,
                      source_contract_ref_no,
                      source_int_contract_item_no,
     
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table auth_role_model (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_auth_role_model primary key (id))
create table auth_rule_model (
  id                        bigint not null,
  subject_id                bigint,
  role_id                   bigint,
  ticket_id                 bigint,
  constraint pk_auth_rule_model primary key (id))
create table auth_subject_model (
  id                        bigint not null,
  name                      varchar(255),
  user_id                   bigint,
  constraint pk_auth_subject_model primary key (id))
create table auth_ticket_model (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_auth_ticket_model primary key (id))
create table blog_model (
  id                        bigint not null,
  name                      

  constraint pk_blog_model primary key (id))
create table ticket_model (
  id                        bigint not null,
  constraint pk_ticket_model primary key (id))
create table user_model (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_user_model primary key (id))
create sequence auth_role_model_seq;
create sequence auth_rule_model_seq;
create sequence auth_subject_model_seq;
create sequence auth_ticket_model_seq;
create sequence blog_model_seq;
create sequence ticket_model_seq;
create sequence user_model_seq;
alter table auth_rule_model add constraint fk_auth_rule_model_subject_1 foreign key (subject_id) references auth_subject_model (id) on delete restrict on update restrict;
create index ix_auth_rule_model_subject_1 on auth_rule_model (subject_id);
alter table auth_rule_model add constraint fk_auth_rule_model_role_2 foreign key (role_id) references auth_role_model (id) on delete restrict on update restrict;
create index ix_a
CREATE TABLE TEMP_QUARTER_DX_INFO PARTITION BY LIST(MONTH_ID)
(PARTITION M201201 VALUES (201201)) NOLOGGING PARALLEL 4 AS
SELECT A.MONTH_ID
       ,B.IDW_PATIENT_ID
       ,A.IMS_PAT_NBR
       ,A.DX_CD
       ,A.PROCEDURE_CD
FROM DX_TRANSACTION_TAB_R1 A
INNER JOIN TMP_SCH_PAT_XREF_0415 B
ON(A.IMS_PAT_NBR=B.PAT_IDB_COMB+1005107)
WHERE A.MONTH_ID=201201
AND 1=2;
BEGIN
  FOR X IN (SELECT DISTINCT MONTH_ID FROM V_CALENDAR@IDW WHERE MONTH_ID BETWEEN 201201 AND 201410 ORDER BY 1)
    LOOP
    P_TRUNCATE_OR_CREATE_PARTITION(PV_TABLE_NAME     => 'TEMP_QUARTER_DX_INFO',
                                   PV_PART_NAME      => 'M'||TO_CHAR(X.MONTH_ID),
                                   PV_THRU_VAL       => TO_CHAR(X.MONTH_ID),
                                   PV_STORAGE_CLAUSE => NULL);
      INSERT /* +APPEND */  INTO TEMP_QUARTER_DX_INFO
      SELECT A.MONTH_ID
            ,B.IDW_PATIENT_ID
            ,A.IMS_PAT_NBR
            ,A.DX_CD
            ,A.PROCEDURE_CD
     FROM DX_TRANSACTION_

     INNER JOIN TMP_SCH_PAT_XREF_0415 B
     ON(A.IMS_PAT_NBR=B.PAT_IDB_COMB+1005107)
     WHERE A.MONTH_ID = X.MONTH_ID;
    COMMIT;
  END LOOP;
  
  FOR X IN (SELECT DISTINCT MONTH_ID FROM V_CALENDAR@IDW WHERE MONTH_ID BETWEEN 201411 AND 201412 ORDER BY 1)
    LOOP
    P_TRUNCATE_OR_CREATE_PARTITION(PV_TABLE_NAME     => 'TEMP_QUARTER_DX_INFO',
                                   PV_PART_NAME      => 'M'||TO_CHAR(X.MONTH_ID),
                                   PV_THRU_VAL       => TO_CHAR(X.MONTH_ID),
                                   PV_STORAGE_CLAUSE => NULL);
      INSERT /* +APPEND */  INTO TEMP_QUARTER_DX_INFO
      SELECT A.MONTH_ID
            ,B.IDW_PATIENT_ID
            ,A.IMS_PAT_NBR
            ,A.DX_CD
            ,A.PROCEDURE_CD
     FROM DX_TRANSACTION_TAB_R0415 A
     INNER JOIN TMP_SCH_PAT_XREF_0415 B
     ON(A.IMS_PAT_NBR=B.PAT_IDB_COMB+1005107)
     WHERE A.MONTH_ID = X.MONTH_ID;
    COMMIT;
  END LOOP;
END;
CREATE TABLE TEMP_QUARTER_DX_INFO_2 NOLOGGING PARALLEL 4 
define numrows=10000000
drop table big_table purge;
create table big_table
as
select rownum id, OWNER, OBJECT_NAME, SUBOBJECT_NAME, OBJECT_ID,
DATA_OBJECT_ID, OBJECT_TYPE, CREATED, LAST_DDL_TIME, TIMESTAMP,
STATUS, TEMPORARY, GENERATED, SECONDARY, NAMESPACE, EDITION_NAME
  from all_objects
 where 1=0
alter table big_table nologging;
declare
  l_cnt number;
  l_rows number := &numrows;
begin
  insert /*+ append */
  into big_table
  select rownum id, OWNER, OBJECT_NAME, SUBOBJECT_NAME, OBJECT_ID,
  DATA_OBJECT_ID, OBJECT_TYPE, CREATED, LAST_DDL_TIME, TIMESTAMP,
  STATUS, TEMPORARY, GENERATED, SECONDARY, NAMESPACE, EDITION_NAME
  from all_objects
  where rownum <= &numrows;
  --
  l_cnt := sql%rowcount;
  commit;
  while (l_cnt < l_rows)
  loop
    insert /*+ APPEND */ into big_table
    select rownum+l_cnt,OWNER, OBJECT_NAME, SUBOBJECT_NAME, OBJECT_ID,
    DATA_OBJECT_ID, OBJECT_TYPE, CREATED, LAST_DDL_TIME, TIMESTAMP,
    STATUS, TEMPORARY, GENERATED, SECONDARY, NAMESPACE, EDITION_NAME
/******************************************************************************/
/****               Generated by IBExpert 18/04/05 17:28:18                ****/
/******************************************************************************/
SET SQL DIALECT 3;
SET NAMES NONE;
/******************************************************************************/
/****                                Tables                                ****/
/******************************************************************************/
CREATE TABLE EQSALDOLOTE (
    CODEMP         INTEGER NOT NULL,
    CODFILIAL      SMALLINT NOT NULL,
    CODPROD        INTEGER NOT NULL,
    CODLOTE           CHAR(13) NOT NULL,
    CODEMPAX       INTEGER NOT NULL,
    CODFILIALAX    SMALLINT NOT NULL,
    CODALMOX       INTEGER NOT NULL,
    SLDLOTE        NUMERICDN DEFAULT 0 NOT NULL /* NUMERICDN = NUMERIC(15,5) */,
    SLDRESLOTE     NUMERICDN DEFAULT 0 NOT NULL /* NUMERICDN = NUMERIC(15,5) */,
    SLDCONSIGLOTE  NUMERI

    SLDLIQLOTE     NUMERICDN DEFAULT 0 NOT NULL /* NUMERICDN = NUMERIC(15,5) */,
    DTINS          DATE DEFAULT 'now',
    IDUSUINS       CHAR(8) DEFAULT USER,
    DTALT          DATE DEFAULT 'now',
    IDUSUALT       CHAR(8) DEFAULT USER,
    HINS           TIME DEFAULT 'now',
    HALT           TIME DEFAULT 'now'
);
/******************************************************************************/
/****                             Primary Keys                             ****/
/******************************************************************************/
ALTER TABLE EQSALDOLOTE ADD CONSTRAINT EQSALDOLOTEPK PRIMARY KEY (CODLOTE, CODPROD,  CODFILIAL, CODEMP, CODALMOX, CODFILIALAX, CODEMPAX);
/******************************************************************************/
/****                             Foreign Keys                             ****/
/******************************************************************************/
ALTER TABLE EQSALDOLOTE ADD CONSTRAINT EQSALDOLOTEFKEQ

ALTER TABLE EQSALDOLOTE ADD CONSTRAINT EQSALDOLOTEFKEQLOTE FOREIGN KEY (CODLOTE, CODPROD, CODFILIAL, CODEMP) REFERENCES EQLOTE (CODLOTE, CODPROD, CODFILIAL, CODEMP);
/******************************************************************************/
/****                               Triggers                               ****/
/******************************************************************************/
SET TERM ^ ;
/* Trigger: EQSALDOPRODTGBI */
CREATE TRIGGER EQSALDOLOTETGBI FOR EQSALDOLOTE
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  if (new.SLDLOTE is null) then
     new.SLDLOTE = 0;
  if (new.SLDRESLOTE is null) then
     new.SLDRESLOTE = 0;
  if (new.SLDCONSIGLOTE is null) then
     new.SLDCONSIGLOTE = 0;
  new.SLDLIQLOTE = new.SLDLOTE-new.SLDRESLOTE-new.SLDCONSIGLOTE;
END
/* Trigger: EQSALDOPRODTGBU */
CREATE TRIGGER EQSALDOLOTETGBU FOR EQSALDOLOTE
ACTIVE BEFORE UPDATE POSITION 0
AS
BEGIN
  new.DTALT=cast('now' AS DATE);
  new.IDUSUALT=USER;
  new.HALT = cast('now' AS TIME);
  
CREATE DATABASE  IF NOT EXISTS `BDIC3` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `BDIC3`;
-- MySQL dump 10.13  Distrib 5.6.13, for Linux (x86_64)
--
-- Host: localhost    Database: BDIC3
-- ------------------------------------------------------
-- Server version	5.6.17-log
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `SESSAO`
--
DROP TABLE IF EXISTS `SESSAO`;
/*!40101 SET @saved_cs_client     = @@character_set_c

/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `SESSAO` (
  `ses_id` int(11) NOT NULL AUTO_INCREMENT,
  `ses_data` varchar(45) DEFAULT NULL,
  `ses_hora` varchar(45) DEFAULT NULL,
  `cli_id` int(11) NOT NULL,
  `sis_id` int(11) NOT NULL,
  `nav_id` int(11) NOT NULL,
  PRIMARY KEY (`ses_id`,`cli_id`,`sis_id`,`nav_id`),
  KEY `idx_SESSAO_CLIENTE1` (`cli_id`),
  KEY `idx_SESSAO_SISTEMA_OPERACIONAL1` (`sis_id`),
  KEY `idx_SESSAO_NAVEGADOR1` (`nav_id`),
  CONSTRAINT `fk_SESSAO_CLIENTE1` FOREIGN KEY (`cli_id`) REFERENCES `CLIENTE` (`cli_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_SESSAO_SISTEMA_OPERACIONAL1` FOREIGN KEY (`sis_id`) REFERENCES `SISTEMA_OPERACIONAL` (`sis_id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_SESSAO_NAVEGADOR1` FOREIGN KEY (`nav_id`) REFERENCES `NAVEGADOR` (`nav_id`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data f
# DROP TABLE IF EXISTS cvazquezblog.`users`;
CREATE TABLE cvazquezblog.`users` (
	`id` MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`stateId` SMALLINT UNSIGNED NULL DEFAULT NULL,
	`cityId` MEDIUMINT UNSIGNED NULL DEFAULT NULL COMMENT 'Try to match free form field with id',
	`firstName` VARCHAR(50) NOT NULL DEFAULT '',
	`lastName` VARCHAR(50) NOT NULL DEFAULT '',
	`email` VARCHAR(255) NOT NULL DEFAULT '',
	`handle` VARCHAR(255) NOT NULL DEFAULT '',
	`passwd` VARCHAR(255) NOT NULL DEFAULT '', 
	`websiteURL` VARCHAR(1024) NULL DEFAULT '',
	`city` VARCHAR(50) NULL DEFAULT '' COMMENT 'Free form field',
	cfId char(36) NOT NULL DEFAULT '',
	httpRefererExternal varchar(255) NOT NULL DEFAULT '',
	httpRefererInternal varchar(255) NOT NULL DEFAULT '',
	httpUserAgent varchar(255) NOT NULL DEFAULT '',
	ipAddress VARBINARY(16) NULL DEFAULT NULL COMMENT 'A trigger checks for IPv4and6 and does conversion', 
	pathInfo VARCHAR(512) NOT NULL DEFAULT '',
	`createdAt` datetime NULL DEFAULT NULL

	`createdBy` mediumint unsigned NULL DEFAULT NULL,
	`updatedAt` datetime NULL DEFAULT NULL,
	`updatedBy` mediumint unsigned NULL DEFAULT NULL,
	`deletedAt` DATETIME NULL DEFAULT NULL,
	`deletedBy` mediumint unsigned NULL DEFAULT NULL,
	`timestampAt` timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
	FOREIGN KEY (stateId) REFERENCES states(id),
	FOREIGN KEY (cityId) REFERENCES cities(id)
  
) comment = "Users who commented on entries"
  ENGINE=INNODB DEFAULT CHARSET=UTF8;
  
  
grant insert on cvazquezblog.users to 'railo'@'localhost';
  
DROP TRIGGER IF EXISTS users_bi;
delimiter |
CREATE
    DEFINER = blog_trig_user@localhost
    TRIGGER users_bi BEFORE INSERT
    ON users FOR EACH ROW
	BEGIN
	IF IS_IPV4(NEW.ipAddress) THEN
		SET NEW.ipAddress = INET_ATON(NEW.ipAddress);
	ELSEIF IS_IPV6(NEW.ipAddress) THEN
		SET NEW.ipAddress = INET6_ATON(NEW.ipAddress);
	ELSE 
		SET NEW.ipAddress = NULL;
	END IF;
	IF NEW.stateId = 0 THEN
		SET NEW.stateId = NULL;
	END IF;
	IF
--
-- JBoss, Home of Professional Open Source
-- Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
-- contributors by the @authors tag. See the copyright.txt in the
-- distribution for a full listing of individual contributors.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
-- http://www.apache.org/licenses/LICENSE-2.0
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--
-- You can use this file to load seed data into the database using SQL statements
insert into Book (id, num, title, owned, read) values (0, 1, 'かいけつゾロリのドラゴンたいじ', true, true)
insert into Book (id, num, ti

insert into Book (id, num, title, owned, read) values (2, 3, 'かいけつゾロリのまほうつかいのでし', true, true)
insert into Book (id, num, title, owned, read) values (3, 4, 'かいけつゾロリの大かいぞく', true, true)
insert into Book (id, num, title, owned, read) values (4, 5, 'かいけつゾロリのゆうれいせん', true, true)
insert into Book (id, num, title, owned, read) values (5, 6, 'かいけつゾロリのチョコレートじょう', true, true)
insert into Book (id, num, title, owned, read) values (6, 7, 'かいけつゾロリの大きょうりゅう', true, true)
insert into Book (id, num, title, owned, read) values (7, 8, 'かいけつゾロリのきょうふのゆうえんち', true, true)
insert into Book (id, num, title, owned, read) values (8, 9, 'かいけつゾロリのママだーいすき', true, true)
insert into Book (id, num, title, owned, read) values (9, 10, 'かいけつゾロリの大かいじゅう', true, true)
insert into Book (id, num, title, owned, read) values (10, 11, 'かいけつゾロリのなぞのうちゅうじん', true, true)
insert into Book (id, num, title, owned, read) values (11, 12, 'かいけつゾロリのきょうふのプレゼント', true, true)
insert into Book (id, num, title, owned, read) values (12, 13, 'かい

insert into Book (id, num, title, owned, read) values (13, 14, 'かいけつゾロリのきょうふのサッカー', true, true)
insert into Book (id, num, title, owned, read) values (14, 15, 'かいけつゾロリつかまる！！', true, true)
insert into Book (id, num, title, owned, read) values (15, 16, 'かいけつゾロリとなぞのひこうき', true, true)
insert into Book (id, num, title, owned, read) values (16, 17, 'かいけつゾロリのおばけ大さくせん', true, true)
insert into Book (id, num, title, owned, read) values (17, 18, 'かいけつゾロリのにんじゃ大さくせん', true, true)
insert into Book (id, num, title, owned, read) values (18, 19, 'かいけつゾロリけっこんする！？', true, true)
insert into Book (id, num, title, owned, read) values (19, 20, 'かいけつゾロリ大けっとう！ゾロリじょう', true, true)
insert into Book (id, num, title, owned, read) values (20, 21, 'かいけつゾロリのきょうふのカーレース', true, true)
insert into Book (id, num, title, owned, read) values (21, 22, 'かいけつゾロリのきょうふの大ジャンプ', true, true)
insert into Book (id, num, title, owned, read) values (22, 23, 'かいけつゾロリの大金もち', true, true)
insert into Book (id, num, title, owned, read) va
-- UPGRADES telas parte 2:
alter table previsions add column observations varchar(256);
alter table plotters add column cuttedBy varchar(64);
alter table plotters add column cuttedTimestamp timestamp ON UPDATE CURRENT_TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP;
update plotters set cuttedTimestamp = '2015-01-01';
--
alter table removedplotters add column cuttedOn date;
alter table removedplotters add column cuttedBy varchar(64);
alter table removedplotters add column cuttedTimestamp timestamp;
--
ALTER TABLE orders DROP PRIMARY KEY;
ALTER TABLE orders ADD number INT NOT NULL AUTO_INCREMENT primary KEY FIRST;
--
UPDATE plotters SET cuttedOn = plotterDate, cuttedBy = 'script-cuttedOn=plotterDate' WHERE cuttedOn is null and cutted=true;
--
insert into usuarios values ('5', 'read', 'read', 'Read only', 'read-only');
insert into usuarios values ('6', 'ordenes', 'ordenes', 'Ordenes', 'ordenes');
insert into usuarios values ('7', 'plotter', 'plotter', 'Plotter', 'plotter');
insert into usuar

update roles set role = 'ordenes' where id = 2;
insert into roles values (4, 'velas-od');
insert into roles values (5, 'read-only');
update usuarios set role = 'velas-od' where username = 'ceci';
update usuarios set role = 'read-only' where username = 'claudia';
update usuarios set role = 'read-only' where username = 'fernando';
update usuarios set role = 'read-only' where username = 'juan';
update usuarios set role = 'read-only' where username = 'torkel';
update usuarios set role = 'read-only' where username = 'martin';
update usuarios set role = 'ordenes' where username = 'diego';
update usuarios set role = 'ordenes' where username = 'gonzalo';
update usuarios set role = 'ordenes' where username = 'GUFY';
update usuarios set role = 'ordenes' where username = 'juanpa';
update usuarios set role = 'ordenes' where username = 'lucas';
update usuarios set role = 'ordenes' where username = 'hernan';
update usuarios set role = 'ordenes' where username = 'ismael';
--
create table pctNac (
	v
﻿CREATE VIEW dbo.vJeopardyData
AS
SELECT     itemID, CLO, State, srcXML, ChangeHistory
FROM         dbo._Jeopardy
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration 

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 

         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "_Jeopardy (dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 190
            End
            DisplayFlags = 280
            TopColumn = 10
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'vJeopardyData';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level
prompt só valido no 11g
WITH iostat_file AS
 SELECT filetype_name,SUM(large_read_reqs) large_read_reqs,
		SUM(large_read_servicetime) large_read_servicetime,
		SUM(large_write_reqs) large_write_reqs,
		SUM(large_write_servicetime) large_write_servicetime,
		SUM(small_read_reqs) small_read_reqs,
		SUM(small_read_servicetime) small_read_servicetime,
		SUM(small_sync_read_latency) small_sync_read_latency,
		SUM(small_sync_read_reqs) small_sync_read_reqs,
		SUM(small_write_reqs) small_write_reqs,
		SUM(small_write_servicetime) small_write_servicetime
 FROM sys.v_$iostat_file
 GROUP BY filetype_name
SELECT filetype_name, 
	small_read_reqs + large_read_reqs reads,
	large_write_reqs + small_write_reqs writes,
	ROUND((small_read_servicetime + large_read_servicetime)/1000) read_time_sec,
	ROUND((small_write_servicetime + large_write_servicetime)/1000) write_time_sec,
	CASE WHEN small_sync_read_reqs > 0 
		THEN ROUND(small_sync_read_latency / small_sync_read_reqs, 2) 
	END avg_sync_read_ms,
	ROU
--
-- PostgreSQL database dump
--
SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET search_path = public, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;
--
-- Name: RegisterRead; Type: TABLE; Schema: public; Owner: sepgroup; Tablespace: 
--
CREATE TABLE "RegisterRead" (
    register_data_id bigint NOT NULL,
    register_read_id bigint NOT NULL,
    gateway_collected_time timestamp without time zone NOT NULL,
    read_time timestamp without time zone NOT NULL,
    register_read_source character varying NOT NULL,
    season smallint NOT NULL
);
ALTER TABLE public."RegisterRead" OWNER TO sepgroup;
--
-- Name: registerread_id_seq; Type: SEQUENCE; Schema: public; Owner: sepgroup
--
CREATE SEQUENCE registerread_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE public.registerread_id_seq OWNER TO sepgr

--
-- Name: registerread_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sepgroup
--
ALTER SEQUENCE registerread_id_seq OWNED BY "RegisterRead".register_read_id;
--
-- Name: register_read_id; Type: DEFAULT; Schema: public; Owner: sepgroup
--
ALTER TABLE ONLY "RegisterRead" ALTER COLUMN register_read_id SET DEFAULT nextval('registerread_id_seq'::regclass);
--
-- Name: RegisterRead_pkey; Type: CONSTRAINT; Schema: public; Owner: sepgroup; Tablespace: 
--
ALTER TABLE ONLY "RegisterRead"
    ADD CONSTRAINT "RegisterRead_pkey" PRIMARY KEY (register_read_id);
--
-- Name: RegisterRead_register_data_id_idx; Type: INDEX; Schema: public; Owner: sepgroup; Tablespace: 
--
CREATE INDEX "RegisterRead_register_data_id_idx" ON "RegisterRead" USING btree (register_data_id);
--
-- Name: RegisterRead_register_read_id_key; Type: INDEX; Schema: public; Owner: sepgroup; Tablespace: 
--
CREATE UNIQUE INDEX "RegisterRead_register_read_id_key" ON "RegisterRead" USING btree (register_read_id);
--
-- Nam
﻿CREATE TABLE [Production].[ProductModelIllustration] (
  [added] [int] NULL,
  [IllustrationID] [int] NOT NULL,
  [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelIllustration_ModifiedDate] DEFAULT (getdate()),
  [ProductModelID] [int] NOT NULL,
  CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY CLUSTERED ([ProductModelID], [IllustrationID]),
  CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY ([illustrationid]) REFERENCES [Production].[Illustration] ([illustrationid]),
  CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY ([productmodelid]) REFERENCES [Production].[ProductModel] ([productmodelid])
ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Cross-reference table mapping product models and illustrations.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration'
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Clustered index created by a prim
--------------------------------------------------------
-- Archivo creado  - domingo-marzo-22-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence SEQ_TARJETA
--------------------------------------------------------
   CREATE SEQUENCE  "SEQ_TARJETA"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table TARJETAS
--------------------------------------------------------
  CREATE TABLE "TARJETA" 
   (	"IDTARJETA" NUMBER(18,0),  
      "TARJETA_NUMERO" VARCHAR2(20 BYTE), 
      "TARJETA_EXP_MES" NUMBER(2,0), 
      "TARJETA_EXP_YEAR" NUMBER(4,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAU

 TABLESPACE "TBS_OMS_TARJETA" ;
REM INSERTING into OMSTARJETA.TARJETAS
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index TARJETAS_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "TARJETA_UK" ON "TARJETA" ("TARJETA_NUMERO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
 TABLESPACE "TBS_OMS_TARJETA";
--------------------------------------------------------
--  Constraints for Table TARJETAS
--------------------------------------------------------
  ALTER TABLE "TARJETA" ADD CONSTRAINT "TARJETA_PK" PRIMARY KEY ("IDTARJETA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_C
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
SET ANSI_PADDING OFF
GO
CREATE TABLE [Production].[ProductModelIllustration] (
		[ProductModelID]     [int] NOT NULL,
		[IllustrationID]     [int] NOT NULL,
		[ModifiedDate]       [datetime] NOT NULL
) ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModelIllustration]
	ADD
	CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID]
	PRIMARY KEY
	CLUSTERED
	([ProductModelID], [IllustrationID])
	ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'PK_ProductModelIllustration_ProductModelID_IllustrationID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Clustered index created by a primary key constraint.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'INDEX', N'PK_ProductModelIllustration_ProductModelID_IllustrationID'
GO
ALTER TABLE [Production].[ProductModelIllustration]
	ADD
	CONSTR

	DEFAULT (getdate()) FOR [ModifiedDate]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'DF_ProductModelIllustration_ModifiedDate'
GO
ALTER TABLE [Production].[ProductModelIllustration]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID]
	FOREIGN KEY ([IllustrationID]) REFERENCES [Production].[Illustration] ([IllustrationID])
ALTER TABLE [Production].[ProductModelIllustration]
	CHECK CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing Illustration.IllustrationID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'FK_ProductModelIllustration_Illustration_IllustrationID'
GO
ALTER TABLE [Production].[ProductModelIllustration]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductM

	FOREIGN KEY ([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])
ALTER TABLE [Production].[ProductModelIllustration]
	CHECK CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing ProductModel.ProductModelID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'FK_ProductModelIllustration_ProductModel_ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to Illustration.IllustrationID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'IllustrationID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductModel.ProductModelID.', 'SCHEMA', N'Production', 'TA
INSERT INTO CategoryModel VALUES (1,'Fruit',2);
INSERT INTO CategoryModel VALUES (2,'Books',2);
INSERT INTO CategoryModel VALUES (3,'Films',2);
INSERT INTO CategoryModel VALUES (4,'CD-ROMs',2);
INSERT INTO CategoryModel VALUES (5,'Headsets',2);
INSERT INTO CategoryModel VALUES (6,'Tools',2);
INSERT INTO CategoryModel VALUES (7,'Locomotives',2);
INSERT INTO UserModel (email, address1, address2, dob, firstname, lastname, password, postcode, rights, telephone, town) VALUES ('cmon@letsgo.com','TORSGATAN 44','C/O Nonsense','2012-02-01','Tom','Whitemore','password','14462',0,'0704596049','Stockholm');
INSERT INTO UserModel (email, address1, address2, dob, firstname, lastname, password, postcode, rights, telephone, town)  VALUES ('lefi@1337.se','Bergvägen 4','C/O ','Bergvägen 4','Sam','Bobson','Test','14462',0,'0704596049','Stockholm');
INSERT INTO UserModel (email, address1, address2, dob, firstname, lastname, password, postcode, rights, telephone, town)  VALUES ('Persson@persson.se','Strand

INSERT INTO UserModel (email, address1, address2, dob, firstname, lastname, password, postcode, rights, telephone, town)  VALUES ('viktor.soderstrom@live.se','Säterstigen 13','','1942-02-01','Viktor','Söderström','okok007','14462',0,'0703209874','Rönninge');
INSERT INTO UserModel (email, address1, address2, dob, firstname, lastname, password, postcode, rights, telephone, town)  VALUES ('admin','n/a','n/a','n/a','n/a','n/a','admin','n/a',1,'n/a','n/a');
INSERT INTO ProductModel VALUES (1,40,'Small round fruit, tasty. Both green and red in color.','http://www.sprayitaway.com/wp-content/uploads/2013/08/apple_by_grv422-d5554a4.jpg', true,'Apple' ,2,20,35);
INSERT INTO ProductModel VALUES (2,22,'Small round fruit, tasty. Only comes in orange, as the name suggests','http://www.plitka.eu/published/publicdata/PLITKAT/attachments/SC/products_pictures/plitka-tile-EU-SP2-Navarti-Ceramica-Golf-Orange-450-450-434-425-.jpg', true,'Orange',2,20,0);
INSERT INTO ProductModel VALUES (3,10,'Small pear-s

INSERT INTO ProductModel VALUES (4,35,'A hammer is used to hammer stuff.','http://www.pachd.com/free-images/household-images/hammer-01.jpg', true,'Hammer',2,20,10);
INSERT INTO ProductModel VALUES (5,15,'Not the drink.', 'http://3.bp.blogspot.com/-YJ5K4CJRCK0/UaNezxzHodI/AAAAAAAAIzg/XKQdQkJQGa4/s1600/Harvey+wallbanger.jpg', true, 'Screwdriver',2,20,52);
INSERT INTO ProductModel VALUES (6,1000,'In other words, a train','http://upload.wikimedia.org/wikipedia/commons/9/95/M62_diesel_locomotive_from_Luninets_depot.jpg', true,'Locomotive',2,20,2);
INSERT INTO ProductModel_CategoryModel VALUES (1,1);
INSERT INTO ProductModel_CategoryModel VALUES (2,1);
INSERT INTO ProductModel_CategoryModel VALUES (2,4);
INSERT INTO ProductModel_CategoryModel VALUES (2,5);
INSERT INTO ProductModel_CategoryModel VALUES (3,1);
INSERT INTO ProductModel_CategoryModel VALUES (3,4);
INSERT INTO ProductModel_CategoryModel VALUES (3,2);
INSERT INTO ProductModel_CategoryModel VALUES (4,6);
INSERT INTO ProductModel_C
  --Account View
  DROP VIEW api.account;
  CREATE OR REPLACE VIEW api.account AS
  SELECT 
    c.crmacct_number::varchar AS account_number,
    p.crmacct_number AS parent_account,
    c.crmacct_name AS account_name,
    c.crmacct_active AS active,
    CASE WHEN (c.crmacct_type='O') THEN
      'Organization'
    ELSE 'Individual'
    END AS type,
    pc.cntct_number AS primary_contact_number,
    pc.cntct_honorific AS primary_contact_honorific,
    pc.cntct_first_name AS primary_contact_first,
    pc.cntct_middle AS primary_contact_middle,
    pc.cntct_last_name AS primary_contact_last,
    pc.cntct_suffix AS primary_contact_suffix,
    pc.cntct_title AS primary_contact_job_title,
    pc.cntct_phone AS primary_contact_voice,
    pc.cntct_fax AS primary_contact_fax,
    pc.cntct_email AS primary_contact_email,
    (''::TEXT) AS primary_contact_change,
    m.addr_number AS primary_contact_address_number,
    m.addr_line1 AS primary_contact_address1,
    m.addr_line2 AS primary_contact_ad

    m.addr_line3 AS primary_contact_address3,
    m.addr_city AS primary_contact_city,
    m.addr_state AS primary_contact_state,
    m.addr_postalcode AS primary_contact_postalcode,
    m.addr_country AS primary_contact_country,
    (''::TEXT) AS primary_contact_address_change,
    sc.cntct_number AS secondary_contact_number,
    sc.cntct_honorific AS secondary_contact_honorific,
    sc.cntct_first_name AS secondary_contact_first,
    sc.cntct_middle AS secondary_contact_middle,
    sc.cntct_last_name AS secondary_contact_last,
    sc.cntct_suffix AS secondary_contact_suffix,
    sc.cntct_title AS secondary_contact_job_title,
    sc.cntct_phone AS secondary_contact_voice,
    sc.cntct_fax AS secondary_contact_fax,
    sc.cntct_email AS secondary_contact_email,
    sc.cntct_webaddr AS secondary_contact_web,
    (''::TEXT) AS secondary_contact_change,
    s.addr_number AS secondary_contact_address_number,
    s.addr_line1 AS secondary_contact_address1,
    s.addr_line2 AS secondary_con

    s.addr_line3 AS secondary_contact_address3,
    s.addr_city AS secondary_contact_city,
    s.addr_state AS secondary_contact_state,
    s.addr_postalcode AS secondary_contact_postalcode,
    s.addr_country AS secondary_contact_country,
    (''::TEXT) AS secondary_contact_address_change,
    c.crmacct_notes AS notes
  FROM
    crmacct c
      LEFT OUTER JOIN crmacct p ON (c.crmacct_id=p.crmacct_parent_id)
      LEFT OUTER JOIN cntct pc ON (c.crmacct_cntct_id_1=pc.cntct_id)
      LEFT OUTER JOIN addr m ON (pc.cntct_addr_id=m.addr_id)
      LEFT OUTER JOIN cntct sc ON (c.crmacct_cntct_id_2=sc.cntct_id)
      LEFT OUTER JOIN addr s ON (sc.cntct_addr_id=s.addr_id);
GRANT ALL ON TABLE api.account TO xtrole;
COMMENT ON VIEW api.account IS 'Account';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.account DO INSTEAD
INSERT INTO crmacct
	(crmacct_number,
         crmacct_parent_id,
         crmacct_name,
         crmacct_active,
         crmacct_type,
         crmacct_cntc
-- phpMyAdmin SQL Dump
-- version 4.3.12
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: 2015-04-26 01:52:48
-- 服务器版本： 5.6.12-log
-- PHP Version: 5.4.12
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `blog`
--
-- --------------------------------------------------------
--
-- 表的结构 `snail_about`
--
CREATE TABLE IF NOT EXISTS `snail_about` (
  `id` int(11) NOT NULL,
  `key` varchar(10) COLLATE utf8_bin NOT NULL,
  `value` text COLLATE utf8_bin NOT NULL,
  `display` tinyint(10) NOT NULL
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
--
-- 转存表中的数据 `snail_about`
--
INSERT INTO `snail_about` (`id`, `key`, `value`, `display`) VALUES
(1, 'B　u　g', '<p>页面仍然存在很多bug,和许多待优化的地方.如果您有更好的建议.请联系邮箱:1

(2, '姓　　名', '<p>██自己刮</p><p>一定要刮哦,不然看不到的说:)</p>', 1),
(3, '性　　别', '<p>男</p>', 1),
(4, '语　　言', '<p>国语，英语，日语，德语。（后三种不会）</p>', 1),
(5, '职　　业', '<p>整天游手好闲的人<br/>给我说清楚点.....<br/>一个不听话的学生</p>', 1),
(6, '爱　　好', '<p>爱好不多...<br/>其实自己也不知道是什么:)</p>', 1),
(7, '最　　爱', '<p>瞎搞:)~~~</p>', 1),
(8, '联系方式', '<p>不告诉你:)哼哼哼~~~</p>', 1);
-- --------------------------------------------------------
--
-- 表的结构 `snail_article`
--
CREATE TABLE IF NOT EXISTS `snail_article` (
  `id` int(11) NOT NULL,
  `type` varchar(15) COLLATE utf8_bin NOT NULL,
  `label` varchar(15) COLLATE utf8_bin NOT NULL,
  `title` varchar(30) COLLATE utf8_bin NOT NULL,
  `article` text COLLATE utf8_bin NOT NULL,
  `posttime` int(10) NOT NULL,
  `display` tinyint(10) NOT NULL
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
--
-- 转存表中的数据 `snail_article`
--
INSERT INTO `snail_article` (`id`, `type`, `label`, `title`, `article`, `posttime`, `display`) VALUES
(1, 'blog', 'blog test', 'Hello world', '<p>This is my first 

(2, 'left', 'left', '唯美生活', '<p>这是我的第一篇生活文章:)</p>', 1427087584, 0),
(3, 'blog', 'blog', '随记', '<p>网站后台功能整体完工~~　:)</p>', 1428768359, 1);
-- --------------------------------------------------------
--
-- 表的结构 `snail_flink`
--
CREATE TABLE IF NOT EXISTS `snail_flink` (
  `id` int(11) NOT NULL,
  `webname` varchar(30) COLLATE utf8_bin NOT NULL,
  `url` varchar(60) COLLATE utf8_bin NOT NULL,
  `display` tinyint(10) NOT NULL
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
--
-- 转存表中的数据 `snail_flink`
--
INSERT INTO `snail_flink` (`id`, `webname`, `url`, `display`) VALUES
(1, 'StarPHP', 'http://www.starphp.net', 1),
(2, '蔚蓝的web', 'http://www.wl3w.com', 1),
(3, 'W3school学院', 'http://www.w3school.com.cn', 1);
-- --------------------------------------------------------
--
-- 表的结构 `snail_label`
--
CREATE TABLE IF NOT EXISTS `snail_label` (
  `id` int(11) NOT NULL,
  `labels` varchar(10) COLLATE utf8_bin NOT NULL,
  `label` varchar(30) COLLATE utf8_bin NOT NULL,
  `display`
--------------------------------------------------------
--  DDL for Table ODI_HIVE
--------------------------------------------------------
  CREATE TABLE "BDA"."ODI_HIVE" 
   (	"CUSTOMER_ID" VARCHAR2(4000 BYTE), 
	"CREDIT_CARD_LIMITS" NUMBER, 
	"CREDIT_BALANCE" NUMBER, 
	"N_MORTGAGES" NUMBER, 
	"MORTGAGE_AMOUNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS NOLOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BDA" ;
--------------------------------------------------------
--  DDL for Index ODI_HIVE_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "BDA"."ODI_HIVE_PK" ON "BDA"."ODI_HIVE" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 167 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PC
-- MySQL dump 10.13  Distrib 5.1.54, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: domotiga
-- ------------------------------------------------------
-- Server version	5.1.54-1ubuntu4
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `interfaces`
--
DROP TABLE IF EXISTS `interfaces`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE

  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(32) DEFAULT NULL,
  `type` varchar(128) DEFAULT NULL,
  `mode` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `interfaces`
--
LOCK TABLES `interfaces` WRITE;
/*!40000 ALTER TABLE `interfaces` DISABLE KEYS */;
INSERT INTO `interfaces` VALUES (1,'RFXCom Receiver','X10 X10Security Oregon KAKU RFXCom HE Visonic ATI Digimax','Read'),(2,'Xanura CTX35','X10','Read Write'),(3,'Midon TEMP08','1-Wire','Read Write'),(4,'HDDTemp Socket','HDDTemp','Read'),(5,'Ping Socket','Ping','Read'),(6,'UPS Socket','UPS','Read'),(7,'Heyu X10','X10','Write'),(8,'Bluetooth Dongle','Bluetooth','Read'),(9,'Weeder I/O Bus','Weeder','Read Write'),(10,'Plugwise Stick','Plugwise','Read Write'),(11,'DSC5401 Interface','DSC','Read Write'),(12,'RFXCom Transmitter','X10 ARC AC RFXCom Visonic HEEU Digimax Harrison

/*!40000 ALTER TABLE `interfaces` ENABLE KEYS */;
--
-- Table structure for table `version`
--
DROP TABLE IF EXISTS `version`;
CREATE TABLE `version` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `db` varchar(16) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=35 DEFAULT CHARSET=latin1;
--
-- Dumping data for table `version`
--
LOCK TABLES `version` WRITE;
/*!40000 ALTER TABLE `version` DISABLE KEYS */;
INSERT INTO `version` VALUES (1,'0.1.166'),(2,'0.1.167'),(3,'0.1.168'),(4,'0.1.169'),(5,'0.1.170'),(6,'0.1.171'),(7,'0.1.172'),(8,'0.1.173'),(9,'0.1.174'),(10,'0.1.175'),(11,'0.1.176'),(12,'0.1.177'),(13,'0.1.178'),(14,'0.1.179'),(15,'0.1.180'),(16,'0.1.181'),(17,'0.1.182'),(18,'0.1.183'),(19,'0.1.184'),(20,'0.1.185'),(21,'0.1.186'),(22,'0.1.187'),(23,'0.1.188'),(24,'0.1.189'),(25,'0.1.190'),(26,'0.1.191'),(27,'0.1.192'),(28,'0.1.193'),(29,'0.1.194'),(30,'0.1.195'),(31,'0.1.196'),(32,'0.1.197'),(33,'0.1.198'),(34,'0.1.199');
/*!40000 ALTER TABLE `version` EN
insert into SYS_Menu values('Url_MesScanControlPoint_View','过点信息','Url_FMS_Info',300,'设施管理-信息-过点信息','~/MesScanControlPoint/Index','~/Content/Images/Nav/Default.png',1)
insert into ACC_Permission (Code,Desc1,category,Sequence) values('Url_MesScanControlPoint_View','过点信息查看','FMS',19000)
insert into SYS_Menu values('Url_FacilityParamater_View','设备参数','Url_FMS_Info',400,'设施管理-信息-设备参数','~/FacilityParamater/Index','~/Content/Images/Nav/Default.png',1)
insert into ACC_Permission (Code,Desc1,category,Sequence) values('Url_FacilityParamater_View','过点信息查看','FMS',20000)
insert into sys_codemstr values('FacilityParamaterType','设备参数类型',0);
insert into SYS_CodeDet(Code,Value,Desc1,IsDefault,Seq) values('FacilityParamaterType',0,'过点信息',1,1);
insert into SYS_CodeDet(Code,Value,Desc1,IsDefault,Seq)  values('FacilityParamaterType',1,'设备参数',0,2);
insert into sys_codemstr values('FacilityOrderType','设备保养单类型',0);
insert into SYS_CodeDet(Code,Value,Desc1,IsDefault,Seq) values('FacilityOrderType',0,'保养',1,1)
DROP TABLE IF EXISTS FF$TX_CHANGE_LOGS;
CREATE TABLE FF$TX_CHANGE_LOGS(
	OBJ_OID BIGINT NOT NULL,
	OBJ_ATTR varchar(255) NOT NULL,
	TX_NUMBER int(11),
        INDEX (TX_NUMBER)
) ENGINE=InnoDB;
DROP TABLE IF EXISTS FF$LAST_TX_PROCESSED;
CREATE TABLE FF$LAST_TX_PROCESSED(
        SERVER varchar(255) NOT NULL,
	LAST_TX int(11) NOT NULL,
	LAST_UPDATE timestamp
) ENGINE=InnoDB;
DROP TABLE IF EXISTS `FF$TRANSACTION_STATISTICS`;
CREATE TABLE `FF$TRANSACTION_STATISTICS` (
  `SERVER` varchar(255) NOT NULL default '',
  `NUM_REPORT` int(11) NOT NULL,
  `NUM_READS` int(11) NOT NULL,
  `NUM_WRITES` int(11) NOT NULL,
  `NUM_ABORTS` int(11) NOT NULL,
  `NUM_CONFLICTS` int(11) NOT NULL,
  `SECONDS` int(11) NOT NULL,
  `STATS_WHEN` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `READ_ONLY_READS_MIN` int(11),
  `READ_ONLY_READS_MAX` int(11),
  `READ_ONLY_READS_SUM` BIGINT,
  `READ_WRITE_READS_MIN` int(11),
  `READ_WRITE_READS_MAX` int(11),
  `READ_WRITE_READS_SUM` BIGINT,
  `READ_WRITE_WRITES_MIN` in
INSERT INTO `#__extensions` (`extension_id`, `name`, `type`, `element`, `folder`, `client_id`, `enabled`, `access`, `protected`, `manifest_cache`, `params`, `custom_data`, `system_data`, `checked_out`, `checked_out_time`, `ordering`, `state`) VALUES
(28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2012 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '0000-00-00 00:00:00', 0, 0);
INSERT INTO `#__menu` (`menutype`, `title`, `alias`, `note`, `path`, `link`, `type`, `published`, `parent_id`, `level`, `component_id`, `ordering`, `checked_out`, `checked_out_time`, `browserNav`, `access`, `img`, `template_style_id`, `params`, `lft`, `rgt`, `home`, `language`, `client_id`) VA
CREATE TABLE dmFlash(
lockedBy nvarchar(250) NULL DEFAULT NULL ,
lastupdatedby nvarchar(250) NOT NULL DEFAULT '' ,
flashPlay bit NOT NULL DEFAULT 1 ,
flashQuality nvarchar(250) NULL DEFAULT 'high' ,
flashWidth decimal(10,2) NULL DEFAULT 0 ,
flashBgcolor nvarchar(250) NULL DEFAULT '#FFFFFF' ,
status nvarchar(250) NULL DEFAULT NULL ,
metaKeywords nvarchar(250) NULL DEFAULT NULL ,
teaser ntext NULL ,
flashAlign nvarchar(250) NULL DEFAULT 'center' ,
displayMethod nvarchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
ObjectID nvarchar(50) NOT NULL DEFAULT '' ,
flashMenu bit NOT NULL DEFAULT 0 ,
label nvarchar(250) NULL DEFAULT NULL ,
flashMovie nvarchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL ,
flashLoop bit NOT NULL DEFAULT 0 ,
createdby nvarchar(250) NOT NULL DEFAULT '' ,
flashVersion nvarchar(250) NULL DEFAULT '8,0,0,0' ,
flashURL nvarchar(250) NULL DEFAULT NULL ,
datetimecreated datetime NOT NULL ,
locked bit NOT NULL DEFAULT 0 ,
flashParams nvarchar(250) NULL DE
select * from(select row_number() over(
ORDER BY b.xn,b.xq, b.kh
)as row,b.* from(SELECT DISTINCT L_VIEW_CLASS_FX.YEAR AS xn,L_VIEW_CLASS_FX.TERM AS xq,
      L_view_class_fx.courseno + L_view_class_fx.[group] kh, ls_km.km AS km,
       isnull(ls_xkrs.xkrs,0) AS xkrs, isnull(ls.yxrs,0) yxrs,isnull(ls_lhrs.lhrs,0) AS lhrs,
      isnull(ls_zdrs.zdrs,0) AS zdrs, isnull(ls_jgrs.jgrs,0) AS jgrs,isnull(ls_bjgrs.bjgrs,0) AS bjg,
      isnull(ls_qkrs.qkrs,0) AS qkrs
FROM L_view_class_fx
LEFT OUTER JOIN
          (SELECT courses.courseno AS kh, courses.coursename km
         FROM courses) AS ls_km ON L_view_class_fx.courseno = ls_km.kh
LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_class_fx.courseno)
               AS xkrs
         FROM L_view_class_fx
	WHERE L_view_class_fx.classno=:CONE and L_view_class_fx.year=:YONE AND
L_view_class_fx.TERM=:TONE
         GROUP BY L_view_class_fx.classno, L_view

ON L_view_class_fx.YEAR=ls_xkrs.year and L_view_class_fx.term=ls_xkrs.term and L_view_class_fx.courseno + L_view_class_fx.[group] = ls_xkrs.xx
LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_class_fx.courseno)
               AS yxrs
         FROM L_view_class_fx
         WHERE L_view_class_fx.classno=:CTWO   and L_view_class_fx.year=:YTWO AND
L_view_class_fx.TERM=:TTWO  and
               (L_view_class_fx.testscore = '优秀' OR
               L_view_class_fx.examscore >= 90)
         GROUP BY L_view_class_fx.classno,L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group]) AS ls
ON  L_view_class_fx.YEAR=ls.year and L_view_class_fx.term=ls.term and
      L_view_class_fx.courseno + L_view_class_fx.[group] = ls.xx
 LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_c

               AS lhrs
         FROM L_view_class_fx
         WHERE L_view_class_fx.classno=:CTHREE  and L_view_class_fx.year=:YTHREE AND
L_view_class_fx.TERM=:TTHREE  and (L_view_class_fx.testscore = '良好' OR
               (L_view_class_fx.examscore >= 80 AND L_view_class_fx.examscore < 90))
         GROUP BY L_view_class_fx.classno,L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group]) AS ls_lhrs ON
      L_view_class_fx.courseno + L_view_class_fx.[group] = ls_lhrs.xx
LEFT OUTER JOIN
          (SELECT L_view_class_fx.YEAR,L_view_class_fx.TERM, L_view_class_fx.courseno + L_view_class_fx.[group] xx, COUNT(L_view_class_fx.courseno)
               AS zdrs
         FROM L_view_class_fx
         WHERE L_view_class_fx.classno=:CFOUR  and L_view_class_fx.year=:YFOUR AND
L_view_class_fx.TERM=:TFOUR  and  (L_view_class_fx.testscore = '中等' OR
               (L_view_class_fx.examscore >= 70 AND L_view_class_fx.examscore < 80))
         GROUP BY L_view_cla
CREATE TABLE cm_flashaltcontent(
flashaltcontentid serial NOT NULL CONSTRAINT PK_flashaltcontent PRIMARY KEY,
sectionid int4 NOT NULL,
createdby int4 NOT NULL,
modifiedby int4,
title varchar(255),
content text NOT NULL,
inserttimestamp timestamp DEFAULT current_timestamp NOT NULL,
updatetimestamp timestamp NOT NULL,
CONSTRAINT FK_flashaltcontent_section_sectionid FOREIGN KEY (sectionid) REFERENCES cuyahoga_section (sectionid));
/*
 *  Table data
 */
-- first set sequence values, otherwise the inserts will fail due to violation of the pk_constraint
SELECT setval('cuyahoga_moduletype_moduletypeid_seq', (SELECT max(moduletypeid) FROM cuyahoga_moduletype));
SELECT setval('cuyahoga_modulesetting_modulesettingid_seq', (SELECT max(modulesettingid) FROM cuyahoga_modulesetting));
INSERT INTO cuyahoga_moduletype ( name, assemblyname, classname, path, editpath, inserttimestamp, updatetimestamp) VALUES ( 'Flash', 'Cuyahoga.Modules.Flash', 'Cuyahoga.Modules.Flash.FlashModule', 'Modules/Flash/Flash.

INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( currval('cuyahoga_moduletype_moduletypeid_seq'), 'MOVIEALIGN', 'Movie Align', 'Cuyahoga.Modules.Flash.MovieAlign', true, false);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( currval('cuyahoga_moduletype_moduletypeid_seq'), 'MOVIEBGCOLOR', 'Movie Background Color', 'System.String', false, false);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( currval('cuyahoga_moduletype_moduletypeid_seq'), 'MOVIEHEIGHT', 'Movie Height', 'System.String', false, true);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( currval('cuyahoga_moduletype_moduletypeid_seq'), 'MOVIEWIDTH', 'Movie Width', 'System.String', false, true);
INSERT INTO cuyahoga_modulesetting 

INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( currval('cuyahoga_moduletype_moduletypeid_seq'), 'MOVIEQUALITY', 'Movie Quality', 'Cuyahoga.Modules.Flash.MovieQuality', true, true);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( currval('cuyahoga_moduletype_moduletypeid_seq'), 'MOVIESCRIPTACCESS', 'Movie Script Access', 'Cuyahoga.Modules.Flash.MovieScriptAccess', true, true);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( currval('cuyahoga_moduletype_moduletypeid_seq'), 'MAJORPLUGINVERSION', 'Major Plugin Version', 'System.Int32', false, true);
INSERT INTO cuyahoga_modulesetting ( moduletypeid, name, friendlyname, settingdatatype, iscustomtype, isrequired) VALUES ( currval('cuyahoga_moduletype_moduletypeid_seq'), 'MAJORPLUGINVERSIONREVISION', 'Major Plugin Versi
---
-- these triggers are used for user synchronization from one wikiarguments instance to another
---
DROP TRIGGER IF EXISTS `sync_users_insert`;
DELIMITER $$
-- copy new users from one wikiarguments db to another
CREATE TRIGGER `sync_users_insert` AFTER INSERT ON `users` 
FOR EACH ROW 
BEGIN
    INSERT INTO $DEST.users (
        userId, 
        userName, 
        email, 
        `group`, 
        password, 
        salt, 
        dateAdded, 
        user_last_action, 
        scoreQuestions, 
        scoreArguments) 
    VALUES(
        NEW.userId, 
        NEW.userName, 
        NEW.email, 
        NEW.`group`, 
        NEW.password, 
        NEW.salt,
        NEW.dateAdded,
        0, 
        0, 
        0);
END$$
DELIMITER ;
DROP TRIGGER IF EXISTS `sync_users_update`;
DELIMITER $$
-- propagate user updates to another db
CREATE TRIGGER `sync_users_update` AFTER UPDATE ON `users` 
FOR EACH ROW 
BEGIN
    IF OLD.userName != NEW.userName 
    OR OLD.email != NEW.email 
    OR OLD.gr
﻿--USE [StorageSpace]
--GO
IF  EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'BasicInfo', N'VIEW',N'SharedGoodView', NULL,NULL))
EXEC sys.sp_dropextendedproperty @name=N'MS_DiagramPaneCount' , @level0type=N'SCHEMA',@level0name=N'BasicInfo', @level1type=N'VIEW',@level1name=N'SharedGoodView'
GO
IF  EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'BasicInfo', N'VIEW',N'SharedGoodView', NULL,NULL))
EXEC sys.sp_dropextendedproperty @name=N'MS_DiagramPane1' , @level0type=N'SCHEMA',@level0name=N'BasicInfo', @level1type=N'VIEW',@level1name=N'SharedGoodView'
GO
/****** Object:  View [BasicInfo].[VesselView]    Script Date: 7/4/2014 11:39:25 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[VesselView]'))
DROP VIEW [BasicInfo].[VesselView]
GO
--/****** Object:  View [BasicInfo].[UserView]    Script Date: 7/4/2014 11:39:25 AM ******/
--IF  EXISTS (SELECT * FROM sys.views WHERE object_id =

--DROP VIEW [BasicInfo].[UserView]
--GO
/****** Object:  View [BasicInfo].[UnitView]    Script Date: 7/4/2014 11:39:25 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[UnitView]'))
DROP VIEW [BasicInfo].[UnitView]
GO
/****** Object:  View [BasicInfo].[TankView]    Script Date: 7/4/2014 11:39:25 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[TankView]'))
DROP VIEW [BasicInfo].[TankView]
GO
/****** Object:  View [BasicInfo].[SharedGoodView]    Script Date: 7/4/2014 11:39:25 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[SharedGoodView]'))
DROP VIEW [BasicInfo].[SharedGoodView]
GO
/****** Object:  View [BasicInfo].[CurrencyView]    Script Date: 7/4/2014 11:39:25 AM ******/
IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[BasicInfo].[CurrencyView]'))
DROP VIEW [BasicInfo].[CurrencyView]
GO
/****** Object:  View [BasicInfo].[CompanyView]    Script
drop table if exists LexemModel;
create table LexemModel (
  id int not null auto_increment,
  lexemId int not null,
  displayOrder int not null,
  modelType varchar(10) not null,
  modelNumber char(8) not null,
  restriction char(4) not null,
  tags varchar(255) not null,
  isLoc int not null,
  createDate int not null,
  modDate int not null,
  primary key(id),
  key(lexemId),
  key(lexemId, displayOrder),
  key(modelType)
);
insert into LexemModel
  (lexemId, displayOrder, modelType, modelNumber, restriction, tags, isLoc, createDate, modDate)
  select id, 1, modelType, modelNumber, restriction, tags, isLoc, unix_timestamp(), unix_timestamp() from Lexem;
alter table Lexem drop modelType, drop modelNumber, drop restriction, drop tags, drop isLoc;
alter table LexemSource change lexemId lexemModelId int;
update LexemSource set lexemModelId = (select LexemModel.id from LexemModel where LexemModel.lexemId = LexemSource.lexemModelId);
alter table FullTextIndex change lexemId lexemModelId i
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [internal].[append_operation_message]
        @operation_id       bigint,                             
        @message_type       int,                                
        @message_time          datetimeoffset,                     
        @message_source     smallint,                           
        @message            nvarchar(max),                      
        @extended_info_id   bigint = NULL
AS
SET NOCOUNT ON
                   
    IF [internal].[check_permission] 
    (
        4,
        @operation_id,
        2
    ) = 0
    BEGIN
        RAISERROR(27143, 16, 5, @operation_id) WITH NOWAIT;
        RETURN 1;      
    END
   INSERT INTO [internal].[operation_messages] 
           ([operation_id], 
            [message_type], 
            [message_time],
            [message_source_type], 
            [message], 
            [extended_info_id])
        VALUES(
            @operation_id,  
            @mess
﻿CREATE TABLE [Production].[ProductModelProductDescriptionCulture] (
    [ProductModelID]       INT       NOT NULL,
    [ProductDescriptionID] INT       NOT NULL,
    [CultureID]            NCHAR (6) NOT NULL,
    [ModifiedDate]         DATETIME  CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate] DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID] PRIMARY KEY CLUSTERED ([ProductModelID] ASC, [ProductDescriptionID] ASC, [CultureID] ASC),
    CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID] FOREIGN KEY ([CultureID]) REFERENCES [Production].[Culture] ([CultureID]),
    CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID] FOREIGN KEY ([ProductDescriptionID]) REFERENCES [Production].[ProductDescription] ([ProductDescriptionID]),
    CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID] FOREIGN KEY ([Prod

);
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default constraint value of GETDATE()', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelProductDescriptionCulture', @level2type = N'CONSTRAINT', @level2name = N'DF_ProductModelProductDescriptionCulture_ModifiedDate';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key constraint referencing Culture.CultureID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelProductDescriptionCulture', @level2type = N'CONSTRAINT', @level2name = N'FK_ProductModelProductDescriptionCulture_Culture_CultureID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key constraint referencing ProductDescription.ProductDescriptionID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelProductDescriptionCulture

GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key constraint referencing ProductModel.ProductModelID.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelProductDescriptionCulture', @level2type = N'CONSTRAINT', @level2name = N'FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key (clustered) constraint', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModelProductDescriptionCulture', @level2type = N'CONSTRAINT', @level2name = N'PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Cross-reference table mapping product descriptions and the language the description is written in.', @level0type = N'SCHEMA', @level0name = N'Production', @level1
-- Add option conditions for Priest trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (3642,3643,3644,3645,4466,4467,4468,4521,4522,4523,4531,4532,4533,4543,4544,4545,4558,4559,4572,4573,4574,4665,4666,4679,4680,4691,4692,4801,6649,7265,7349,7438);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,3642,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3642,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3642,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3643,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3643,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3643,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3644,0,0,15,16,0,0,0,'','Show gossip option if

(15,3644,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3644,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3645,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3645,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,3645,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4466,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4466,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4466,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4467,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4467,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4467,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4468,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4468,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4468,2,0,15,16,0,0,0,'','Show gossip option if

(15,4521,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4521,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4521,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4522,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4522,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4522,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4523,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4523,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4523,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4531,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4531,1,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4531,2,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4532,0,0,15,16,0,0,0,'','Show gossip option if player is a Priest'),
(15,4532,1,0,15,16,0,0,0,'','Show gossip option if
create trigger `trigger_sys_user_off_online`
after delete on `sys_user_online` for each row
begin
   if OLD.`user_id` is not null then
      if not exists(select `user_id` from `sys_user_last_online` where `user_id` = OLD.`user_id`) then
        insert into `sys_user_last_online`
                  (`user_id`, `username`, `uid`, `host`, `user_agent`, `system_host`,
                   `last_login_timestamp`, `last_stop_timestamp`, `login_count`, `total_online_time`)
                values
                   (OLD.`user_id`,OLD.`username`, OLD.`id`, OLD.`host`, OLD.`user_agent`, OLD.`system_host`,
                    OLD.`start_timestsamp`, OLD.`last_access_time`,
                    1, (OLD.`last_access_time` - OLD.`start_timestsamp`));
      else
        update `sys_user_last_online`
          set `username` = OLD.`username`, `uid` = OLD.`id`, `host` = OLD.`host`, `user_agent` = OLD.`user_agent`,
            `system_host` = OLD.`system_host`, `last_login_timestamp` = OLD.`start_timestsam
  CREATE TABLE "BI"."SHASUCURSAL" 
   (	"CODSUC" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"DESSUC" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"USRCRE" VARCHAR2(100 BYTE), 
	"FECCRE" DATE, 
	"USRACT" VARCHAR2(100 BYTE), 
	"FECACT" DATE, 
	 CONSTRAINT "SHASUCURSAL_PK" PRIMARY KEY ("CODSUC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
   COMMENT ON COLUMN "BI"."SHASUCURSAL"."CODSUC" IS 'CODSUC DE LA SUCURSAL';
   COMMENT ON COLUMN "BI"."SHASUCURSAL"."DESSUC" IS '
drop view Employee_view;
drop view Project_Employee_view;
drop view Manager_view;
drop view Interim_Manager_view;
drop view President_view;
drop view Previous_Employee_view;
drop view Previous_Project_view;
drop view Current_Project_view;
create view Employee_view as select Person_ID, First_Name, Last_Name, Home_Address, Zip_Code, Home_Phone, US_Citizen, Employee_ID, Salary, Salary_Exception, Type 
from Person where type = 'Employee';
create or replace trigger Employee_trigger
  instead of insert on Employee_view
  for each row
 begin 
 select CS_EMPLOYEE_ID_SEQ.nextval into :new.Employee_ID from dual;
 end; 
 begin
  insert into CS_Person( Person_ID, First_Name, Last_Name, Home_Address, Zip_Code, Home_Phone, US_Citizen, Employee_ID, Salary, Salary_Exception, Type )
  values(:NEW.Person_ID, :NEW.First_Name, :NEW.Last_Name, :NEW.Home_Address, :NEW.Zip_Code, :NEW.Home_Phone, :NEW.US_Citizen, :NEW.Employee_ID, :NEW.Salary, :NEW.Salary_Exception, 'Employee');
 end;
 /
create view Project_E

from Person where type = 'Project_Employee';
create or replace trigger Project_Employee_trigger
  instead of insert on Project_Employee_view
  for each row
 begin
  insert into 347Person(  Person_ID, First_Name, Last_Name, Home_Address, Zip_Code, Home_Phone, US_Citizen, Employee_ID, Salary, Salary_Exception, Type)
  values(:NEW.Person_ID, :NEW.First_Name, :NEW.Last_Name, :NEW.Home_Address, :NEW.Zip_Code, :NEW.Home_Phone, :NEW.US_Citizen, :NEW.Employee_ID, :NEW.Salary, :NEW.Salary_Exception, 'Project_Employee');
 end;
 /
create view Manager_view as select Person_ID, First_Name, Last_Name, Home_Address, Zip_Code, Home_Phone, US_Citizen, Employee_ID, Salary, Salary_Exception, Bonus, Type
from Person where type = 'Manager';
create or replace trigger Manager_trigger
  instead of insert on Manager_view
  for each row
 begin
  insert into CS_Person( Person_ID, First_Name, Last_Name, Home_Address, Zip_Code, Home_Phone, US_Citizen, Employee_ID, Salary, Salary_Exception, Bonus, Type)
  values(:

 end;
 /
create view Interim_Manager_view as select Person_ID, First_Name, Last_Name, Home_Address, Zip_Code, Home_Phone, US_Citizen, Employee_ID, Salary, Salary_Exception, Bonus, Type
from Person where type = 'Interim_Manager';
create or replace trigger Interim_Manager_trigger
  instead of insert on Interim_Manager_view
  for each row
 begin
  insert into CS_Person(  Person_ID, First_Name, Last_Name, Home_Address, Zip_Code, Home_Phone, US_Citizen, Employee_ID, Salary, Salary_Exception, Bonus, Type)
  values(:NEW.Person_ID, :NEW.First_Name, :NEW.Last_Name, :NEW.Home_Address, :NEW.Zip_Code, :NEW.Home_Phone, :NEW.US_Citizen, :NEW.Employee_ID, :NEW.Salary, :NEW.Salary_Exception, :NEW.Bonus, 'Interim_Manager');
 end;
 /
create view President_view as select Person_ID, First_Name, Last_Name, Home_Address, Zip_Code, Home_Phone, US_Citizen, Employee_ID, Salary, Salary_Exception, Bonus, Type 
from Person where type = 'President';
create or replace trigger President_trigger
  instead of insert 
select count(*) from (
SELECT distinct sesso, stanza, codice_letto
 FROM REGINA_LOGISTICA_V 
 WHERE 1=1
AND gmadal <=  cast('2012-02-16' as date) 
AND (gmaal is null or (gmaal >= cast('2012-02-16' as date))) 
AND codice_letto IN ( 35, 36, 33, 34, 39, 37, 192, 38, 43, 42, 41, 40, 202, 67, 66, 69, 68, 22, 23, 24, 25, 26, 27, 28, 29, 3, 2, 1, 7, 30, 6, 5, 32, 4, 31, 9, 8, 59, 58, 57, 56, 19, 55, 17, 18, 15, 16, 13, 14, 11, 12, 21, 20, 64, 65, 62, 63, 60, 61, 49, 48, 45, 44, 47, 46, 10, 51, 52, 53, 54, 50 )
-- Good Query
select count(*) from (
Select a.codospite,a.nomeospite,a.sesso,d.sede,d.reparto,d.stanza,d.codice_letto,t.descr 
from ospiti_a a join ospiti_d d on (a.codospite=d.codospite)
left join clin_medico_stanza m on (m.codstan=d.stanza and m.gmadal<=cast('2012-02-16' as date) and (m.gmaal is null or (m.gmaal>=cast('2012-02-16' as date))))
left join teanapers t on (t.progr=m.progmedico)
where a.gmaing<=cast('2012-02-16' as date) 
and (a.gmadim is null or (a.gmadim>cast('2012-02-16'

and d.gmainizioutili<=cast('2012-02-16' as date) 
and ((d.gmafineutili>cast('2012-02-16' as date)) or d.gmafineutili is null)
and d.codice_letto IN ( 35, 36, 33, 34, 39, 37, 192, 38, 43, 42, 41, 40, 202, 67, 66, 69, 68, 22, 23, 24, 25, 26, 27, 28, 29, 3, 2, 1, 7, 30, 6, 5, 32, 4, 31, 9, 8, 59, 58, 57, 56, 19, 55, 17, 18, 15, 16, 13, 14, 11, 12, 21, 20, 64, 65, 62, 63, 60, 61, 49, 48, 45, 44, 47, 46, 10, 51, 52, 53, 54, 50 )
sbQuery.append("select a.codospite,a.nomeospite,a.sesso,d.sede,d.reparto,d.stanza,d.codice_letto,t.descr  ");
sbQuery.append("from ospiti_a a join ospiti_d d on (a.codospite=d.codospite)  ");
sbQuery.append("left join clin_medico_stanza m on (m.codstan=d.stanza and m.gmadal<=? and (m.gmaal is null or (m.gmaal>=?)))  ");
sbQuery.append("left join teanapers t on (t.progr=m.progmedico)  ");
sbQuery.append("where a.gmaing<=?  ");
sbQuery.append("and (a.gmadim is null or (a.gmadim>?))  ");
sbQuery.append("and d.gmainizioutili<=?  ");
sbQuery.append("and ((d.gmafineutili
SELECT *
FROM product;
SELECT *
FROM pc;
SELECT *
FROM laptop;
SELECT *
FROM printer;
-- Найдите номер модели, скорость и размер жесткого диска для всех ПК
-- стоимостью менее 500 долларов. Вывести: model, speed и hd
SELECT
  model,
  speed,
  hd
FROM computer.pc
WHERE price < 500;
-- Найдите производителей принтеров. Вывести: maker.
SELECT DISTINCT maker
FROM computer.product
WHERE type = 'Printer';
-- Найдите номер модели, объем памяти и размеры экранов портативных
-- компьютеров, цена которых превышает 1000 долларов.
SELECT
  model,
  ram,
  screen
FROM laptop
WHERE price > 1000;
-- Найдите номер модели, скорость и размер жесткого диска ПК, имеющих 12х или 24х CD и цену менее 600 долларов.
SELECT
  model,
  speed,
  hd
FROM pc
WHERE (cd = '12x' OR cd = '24x') AND pc.price < 600;
SELECT
  model,
  speed,
  hd
FROM pc
WHERE cd IN ('12x', '24x') AND pc.price < 600;
--Укажите производителя и скорость портативных компьютеров с жестким диском объемом не менее 10 Гбайт
SELECT DISTINCT
  p.
INSERT INTO `translations` VALUES (365, 'ACTIVATION_CODE_NOT_FOUND_FLASH', 'Code d\'activation n\'a pas été trouvée. S’il vous plaît essayez de créer un nouveau compte.', '', 'Activation code not found. Please try creating a new account.');
INSERT INTO `translations` VALUES (366, 'ACCOUNT_ACTIVATED_FLASH', 'Votre compte a été activé. Mai maintenant vous connecter et commencer à utiliser le site', '', 'Your account has been activated.  You may now login and begin using the site');
INSERT INTO `translations` VALUES (367, 'PASSWORD_RESET_FLASH', '	Mot de passe mis à jour.', '', 'Password successfully updated.');
INSERT INTO `translations` VALUES (368, 'PASSWORD_NOT_RESET_FLASH', 'Une erreur s\'est produite, votre mot de passe n\'a pas été modifiée.', '', 'An error occurred, your password was not changed.');
INSERT INTO `translations` VALUES (369, 'PASSWORD_MISMATCH_FLASH', 'Nouveau mot de passe ne correspond pas au mot de passe de confirmation.', '', 'New password does not match the passw

INSERT INTO `translations` VALUES (370, 'OLD_PASSWORD_INCORRECT_FLASH', 'Votre ancien mot de passe est incorrect.', '', 'Your old password is incorrect.');
INSERT INTO `translations` VALUES (371, 'USER_EDIT_LABEL', 'modifier', '', 'edit');
INSERT INTO `translations` VALUES (372, 'USER_ACTIONS_LABEL', 'Actions', '', 'Actions');
INSERT INTO `translations` VALUES (373, 'EDIT_USER_ACCOUNT_TITLE', 'Modifier le Compte de %s', '', 'Edit Account for %s');
INSERT INTO `translations` VALUES (374, 'NEW_ACCOUNT_ADMIN_NOTIFY', 'L\'utilisateur %s a activé le nouveau compte.', '', 'The user %s has activated their new account.');
INSERT INTO `translations` VALUES (375, 'NEW_ACCOUNT_ADMIN_REMINDER', 'Utilisez l\'URL suivante pour modifier les détails pour %s. Cet utilisateur a une réduction de %s', '', 'Use the following url to edit the details for %s. This user has a discount of %s');
INSERT INTO `translations` VALUES (376, 'ACCOUNT_ACTIVATED_ADMIN_SUBJECT', 'Nouveau compte activé', '', 'New account 
// -- FOR CHARACTERS DB !
CREATE TABLE IF NOT `ticket_history` (
  `guid` int(10) NOT NULL AUTO_INCREMENT,
  `playerGuid` int(11) unsigned NOT NULL DEFAULT '0',
  `name` varchar(15) NOT NULL,
  `message` text NOT NULL,
  `createtime` int(10) NOT NULL,
  `timestamp` int(10) NOT NULL DEFAULT '0',
  `closed` int(10) NOT NULL DEFAULT '0',
  `comment` text NOT NULL,
  PRIMARY KEY (`guid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TRIGGER IF EXISTS ticket_insert_check;
delimiter |
CREATE TRIGGER ticket_insert_check BEFORE INSERT ON gm_tickets
  FOR EACH ROW BEGIN
    INSERT INTO ticket_history VALUES ('XXX', NEW.playerGuid, NEW.name, NEW.message, NEW.createtime, NEW.timestamp, NEW.closed, NEW.comment);
  END;
delimiter ;
DROP TRIGGER IF EXISTS ticket_upd_check;
delimiter |
CREATE TRIGGER ticket_upd_check BEFORE UPDATE ON gm_tickets
  FOR EACH ROW BEGIN
    UPDATE ticket_history
    SET message = NEW.message, name = NEW.name, timestamp = NEW.timestamp, closed = NEW.closed, comment = NEW.comm
    ALTER TABLE JIQuery
        ADD new_sql_query NCLOB;
    UPDATE JIQuery
        SET new_sql_query = sql_query;
    COMMIT;
    ALTER TABLE JIQuery
        MODIFY new_sql_query NOT NULL;
    ALTER TABLE JIQuery
        DROP COLUMN sql_query;
    ALTER TABLE JIQuery
        RENAME COLUMN new_sql_query TO sql_query;
--
    ALTER TABLE JIReportJobParameter
        ADD new_parameter_value BLOB;
    UPDATE JIReportJobParameter
        SET new_parameter_value = parameter_value;
    COMMIT;
    ALTER TABLE JIReportJobParameter
        DROP COLUMN parameter_value;
    ALTER TABLE JIReportJobParameter
        RENAME COLUMN new_parameter_value TO parameter_value;
--
    ALTER TABLE JIOlapUnit
        ADD new_mdx_query NCLOB;
    UPDATE JIOlapUnit
        SET new_mdx_query = mdx_query;
    COMMIT;
    ALTER TABLE JIOlapUnit
        MODIFY new_mdx_query NOT NULL;
    ALTER TABLE JIOlapUnit
        DROP COLUMN mdx_query;
    ALTER TABLE JIOlapUnit
        RENAME COLUMN new_mdx_query TO mdx_query
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_ModelPortfolioHeaderGet]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_ModelPortfolioHeaderGet] 
@param_ClientID		NVARCHAR(50),
@param_PortfolioID	NVARCHAR(50)
AS
BEGIN
	SET NOCOUNT ON;
	SELECT  
	AccountNumber, CompanyID, Company, Currency, PortfolioTypeID, PortfolioType, PortfolioID, ClientID, PortfolioStartDate, ExcludeFromReports,
	OLDeleted, IFA_ID , ClientNumber,
	ISNULL((SELECT SUM(ValuePortfolio) FROM NavGlobalDBwwwGUID.dbo.ModelPortfolioDetails MPD WHERE MPD.PortfolioID = GMP.PortfolioID and OLDeleted = 0 ),0) AS SumOfValuePortfolio ,
	ISNULL((SELECT SUM(ModelWeightingPercentage) FROM NavGlobalDBwwwGUID.dbo.ModelPortfolioDetails MPD WHERE MPD.PortfolioID = GMP.PortfolioID and OLDeleted = 0 ),0) AS SumOfModelWeightingPercentage,
	ISNULL((SELECT ME_Valuation FROM NavGlobalDBwwwGUID.dbo.PortfolioPremiums PP WHERE PP.PortfolioID = 
--------------------------------------------------------
--  File created - Friday-May-10-2013   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table FINES
--------------------------------------------------------
  CREATE TABLE "TABLE_1"."FINES" 
   (	"MEMBER_ID" NUMBER, 
	"FINE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into TABLE_1.FINES
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index FINES_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "TABLE_1"."FINES_PK" ON "TABLE_1"."FINES" ("MEMBER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 

  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table FINES
--------------------------------------------------------
  ALTER TABLE "TABLE_1"."FINES" MODIFY ("FINE" NOT NULL ENABLE);
  ALTER TABLE "TABLE_1"."FINES" MODIFY ("MEMBER_ID" NOT NULL ENABLE);
  ALTER TABLE "TABLE_1"."FINES" ADD CONSTRAINT "FINES_PK" PRIMARY KEY ("MEMBER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FINES
---------------------------------------------------
USE [RSSFeedDatabase]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_READ_ITEM]') AND parent_object_id = OBJECT_ID(N'[dbo].[READ]'))
ALTER TABLE [dbo].[READ] DROP CONSTRAINT [FK_READ_ITEM]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_READ_USER]') AND parent_object_id = OBJECT_ID(N'[dbo].[READ]'))
ALTER TABLE [dbo].[READ] DROP CONSTRAINT [FK_READ_USER]
GO
USE [RSSFeedDatabase]
GO
/****** Object:  Table [dbo].[READ]    Script Date: 11/03/2011 18:29:47 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[READ]') AND type in (N'U'))
DROP TABLE [dbo].[READ]
GO
USE [RSSFeedDatabase]
GO
/****** Object:  Table [dbo].[READ]    Script Date: 11/03/2011 18:29:47 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[READ](
	[user_id] [bigint] NOT NULL,
	[item_id] [bigint] NOT NULL,
 CONSTRAINT [PK_READ] PRIMARY KEY CLUSTERED 
	[user_id] ASC,
	[item_id] ASC
)WITH (PAD_
IF OBJECT_ID('dbo.wsp_saveCityChangeNew') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_saveCityChangeNew
    IF OBJECT_ID('dbo.wsp_saveCityChangeNew') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_saveCityChangeNew >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_saveCityChangeNew >>>'
END
go
CREATE PROCEDURE dbo.wsp_saveCityChangeNew
@cityId            INT,
@secondJurisId     SMALLINT,
@jurisId           SMALLINT,
@countryId         SMALLINT,
@cityName          VARCHAR(120),
@population        INT,
@latitudeRad       INT,
@longitudeRad       INT,
@timezoneId         SMALLINT
AS
DECLARE @dateNow   DATETIME,
        @newCityId INT,
        @return    INT
EXEC @return = dbo.wsp_GetDateGMT @dateNow OUTPUT
IF @return != 0
BEGIN
	RETURN @return
END
BEGIN TRAN TRAN_saveCityChangeNew
IF EXISTS (SELECT 1 FROM City_new WHERE cityId = @cityId)
  BEGIN
    UPDATE City_new 
    SET  jurisdictionId=@jurisId,
         secondJurisdictionId=@secondJurisId,
         cityNam

         cityNameLocal=@cityName,
         latitudeRad=@latitudeRad,
         longitudeRad=@longitudeRad,
         population=@population,
         timezoneId=@timezoneId,
         dateModified=@dateNow
    WHERE cityId = @cityId 
    IF @@error != 0
    BEGIN
	ROLLBACK TRAN TRAN_saveCityChangeNew
	RETURN 97
    END 
    ELSE
    BEGIN
	COMMIT TRAN TRAN_saveCityChangeNew
	RETURN 0
    END
  END
ELSE
  BEGIN
  SELECT @newCityId = MAX(cityId)+1 FROM City_new
  INSERT City_new (
      cityId,
      countryId,
      jurisdictionId,
      secondJurisdictionId,
      cityName,
      cityNameLocal,
      latitudeRad,
      longitudeRad,
      timezoneId,
      population,    
      includeInDropdowns,
      ranking,
      dateModified
    )
    VALUES (
      @newCityId,
      @countryId,
      @jurisId,
      @secondJurisId,
      @cityName,
      @cityName,
      @latitudeRad,
      @longitudeRad,
      @timezoneId,
      @population,
      0,
      0,
      @dateNow
    )
    IF @@error !
CREATE TABLE entity_deltas (
    id INT NOT NULL PRIMARY KEY DEFAULT (nextval('deltas')),
    change_id INTEGER NOT NULL,
    entity_id INTEGER NOT NULL,
    contact_id INTEGER,
    default_contact_method_id INTEGER,
    name VARCHAR(128),
    new INTEGER,
    FOREIGN KEY(change_id) REFERENCES changes(id) ON DELETE CASCADE,
    FOREIGN KEY(entity_id) REFERENCES entities(id) ON DELETE CASCADE,
    FOREIGN KEY(contact_id) REFERENCES entities(id) ON DELETE CASCADE,
    FOREIGN KEY(default_contact_method_id)
        REFERENCES entity_contact_methods(id) ON DELETE CASCADE
);
CREATE TRIGGER
    entity_deltas_ai_1
AFTER INSERT ON
    entity_deltas
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_id,
        NEW.entity_id,
        NEW.contact_id,
        NEW.default_contact_method_id,
        NEW.name
    );
    UPDATE
        changes
    SET
        ucount = ucount + 1
    WHERE
        id = NEW.change_id
    ;
    UPDATE
        topics
    SET
        last_change_id = NEW.change_id
  

        id = NEW.entity_id
    ;
    UPDATE
        changes_pending
    SET
        terms = terms || (
            SELECT
                '-' || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    '  _: entity' || x'0A'
                ELSE
                    '  _: entity_delta' || x'0A'
                END
                || '  contact_uuid: '
                || COALESCE(c.uuid, '~') || x'0A'
                || '  default_contact_method_uuid: '
                || COALESCE(dcm.uuid, '~') || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    ''
                ELSE
                    '  entity_uuid: ' || topics.uuid || x'0A'
                END
                || CASE WHEN
                    instr(NEW.name, ' ')
                THEN
                    '  name: ''' || NEW.name || '''' || x'0A'
                ELSE
                    '  name: ' || COALESCE(NEW.name,'~') || x'0A'


                || CASE WHEN
                    NEW.new
                THEN
                    '  topic_uuid: ' || topics.uuid || x'0A'
                ELSE
                    ''
                END
            FROM
                topics
            LEFT JOIN
                topics c
            ON
                c.id = NEW.contact_id
            LEFT JOIN
                topics dcm
            ON
                dcm.id = NEW.default_contact_method_id
            WHERE
                topics.id = NEW.entity_id
        )
    WHERE
        change_id = NEW.change_id
    ;
    INSERT INTO
        entity_related_changes(
            change_id,
            entity_id
        )
    SELECT
        NEW.change_id,
        NEW.entity_id
    FROM
        identities id
    WHERE
        id.id = NEW.entity_id
    ;
    INSERT OR IGNORE INTO
        entities_tomerge(entity_id) VALUES (NEW.entity_id);
    UPDATE
        entities_tomerge
    SET
        contact_id = contact_id + (NEW.contact_id I
/*
 * $Id: html-report.sql 4564 2011-10-19 04:27:37Z unsaved $
 *
 * Sample/Template for writing an HTML Report
 */
-- Populate sample data
create table t (i integer, vc varchar(20));
insert into t values(1, 'one');
insert into t values(2, 'two');
insert into t values(3, 'three');
insert into t values(4, 'four');
insert into t values(5, 'five');
commit;
-- IMPORTANT:  \o will append by default.  If you want to write a new file,
-- it's your responsibility to check that a file of the same name does not
-- already exist (or remove it).
-- Follow the following examples to use your own HTML fragment files.
-- * *TOP_HTMLFRAG_FILE = /tmp/top.html
-- * *BOTTOM_HTMLFRAG_FILE = /tmp/bottom.html
-- The default TOP_HTMLFRAG_FILE has a reference to this PL variable.
* REPORT_TITLE = Blaine's Sample Report
-- The default will also override its CSS style settings with your own if you
-- put them in a file named "overrides.css" in same directory alongside your
-- reports ("report.html" in this examp
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_cart' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_cart' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_cart`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_address' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_address' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_address`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_slideshow' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_slideshow' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_slideshow`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_

DELETE FROM `wp_model` WHERE `name`='shop_order_log' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_order_log`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_order' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_order' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_order`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_goods_score' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_goods_score' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_goods_score`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_goods_category' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_goods_category' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_goods_category`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_goods' ORDER BY id DESC LIMIT 1);
DELETE
-- ***********************************************
-- NAME 	: UpdateESRI.sql
-- DESCRIPTION 	: Updates mastermap database, adds sprocs
--		: and ASPUSER
-- ************************************************
-- $Log:   P:/TDPortal/archives/DotNet2.0Codebase/TransportDirect/Resource/DEL8_2/InitialDBStructure/UpdateMastermap.sql-arc  $
--
--   Rev 1.0   Nov 08 2007 12:42:24   mturner
--Initial revision.
USE [mastermap]
GO
-- CREATE access for domain user ASPUSER
DECLARE @ASPUser nvarchar(100)
SELECT @ASPUser=DMZDomainName + '\ASPUSER' from master.dbo.Environment
if not exists (select * from dbo.sysusers where name = N'ASPUSER' and uid < 16382)
	EXEC sp_grantdbaccess @ASPUser, N'ASPUSER'
GO
exec sp_addrolemember N'db_owner', N'ASPUSER'
GO
/****** Object:  Stored Procedure dbo.usp_Save_To_PT_TABLE    Script Date: 01/09/2003 16:33:30 ******/
CREATE PROCEDURE dbo.usp_Save_To_PT_TABLE ( 	@SESSIONID varchar(32),
				             	@ROUTENUM int,
				             	@LEGNO bigint,
				             	@

						@POINTORDER bigint,
						@EASTING float,
						@NORTHING float )
AS
	-- Test for an existing entry
	IF EXISTS (SELECT SESSIONID FROM mapadmin.PT_ROUTES
        	    WHERE SESSIONID = @SESSIONID
		      AND ROUTENUM = @ROUTENUM
		      AND LEGNO = @LEGNO
		      AND POINTORDER = @POINTORDER)
	BEGIN -- UPDATE an existing entry
		UPDATE mapadmin.PT_ROUTES
		   SET LEGMODE = @LEGMODE,
		       POINTORDER = @POINTORDER,
		       EASTING = @EASTING,
		       NORTHING = @NORTHING
        	 WHERE SESSIONID = @SESSIONID
		   AND ROUTENUM = @ROUTENUM
		   AND LEGNO = @LEGNO
	           AND POINTORDER = @POINTORDER
	END
	ELSE
	BEGIN -- APPEND a new record
		INSERT INTO mapadmin.PT_ROUTES(SESSIONID, ROUTENUM, LEGNO, LEGMODE, POINTORDER, EASTING, NORTHING)
		     VALUES(@SESSIONID, @ROUTENUM, @LEGNO, @LEGMODE, @POINTORDER, @EASTING, @NORTHING)
	END
GO
/****** Object:  Stored Procedure dbo.usp_Save_To_RD_TABLE    Script Date: 01/09/2003 16:33:30 ******/
CREATE PROCEDURE dbo.usp_Save_To_RD_TA
lf	hf	mean	lf_n	hf_n	lf_p	hf_p	state
c	c	c	c	c	c	c	d
							class
428853.865311	82481.0850034	523147.057595	4.6241661843	0.889361796565	0.838694607218	0.161305392782	game
303949.198343	177245.076467	518082.602582	6.6011782559	3.8494141492	0.631655890883	0.368344109117	game
585684.421025	261577.489562	513733.176404	7.5010972609	3.35012870418	0.691267261878	0.308732738122	game
249973.896441	167728.253972	507954.852922	5.62229815714	3.77246691208	0.598450106599	0.401549893401	game
368351.29933	81467.2431044	490978.752004	8.08938103519	1.78910614013	0.818888650825	0.181111349175	read
871321.814489	185764.170823	476273.016575	5.17265092431	1.10279944096	0.824267681717	0.175732318283	read
660133.377704	57997.3800177	465305.800694	3.03674449142	0.266799453314	0.919238412512	0.0807615874882	read
23035262.3609	2854475.3914	541829.060792	4.96625615371	0.615406751442	0.889744909017	0.110255090983	read
613590.658474	91290.3193268	602447.945063	3.71473985498	0.552680818871	0.870488320437	0.12951167
DROP TABLE IF EXISTS `x2_campaigns`,`x2_campaigns_attachments`,`x2_web_forms`;
/*&*/
CREATE TABLE x2_campaigns (
    id           INT UNSIGNED NOT NULL AUTO_INCREMENT,
    masterId     INT UNSIGNED NULL,
    name         VARCHAR(250) NOT NULL,
    nameId       VARCHAR(250) DEFAULT NULL,
    assignedTo   VARCHAR(50),
    listId       VARCHAR(100),
    active       TINYINT DEFAULT 1,
    description  TEXT,
    type         VARCHAR(100) DEFAULT NULL,
    cost         VARCHAR(100) DEFAULT NULL,
    template     VARCHAR(250) DEFAULT '0',
    subject      VARCHAR(250),
    content      TEXT,
    createdBy    VARCHAR(50) NOT NULL,
    complete     TINYINT DEFAULT 0,
    visibility   INT NOT NULL,
    createDate   BIGINT NOT NULL,
    launchDate   BIGINT,
    lastUpdated  BIGINT NOT NULL,
    lastActivity BIGINT,
    updatedBy    VARCHAR(50),
    sendAs       INT DEFAULT NULL,
    enableRedirectLinks TINYINT DEFAULT 0,
    openRate     FLOAT DEFAULT NULL,
    clickRate    FLOAT DEFAULT NULL,
 

    PRIMARY KEY (id),
    UNIQUE (nameId),
    INDEX(listId),
    INDEX(template),
    FOREIGN KEY (masterId) REFERENCES x2_campaigns(id) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE InnoDB COLLATE = utf8_general_ci;
/*&*/
CREATE TABLE x2_campaigns_attachments (
    id       INT UNSIGNED NOT NULL AUTO_INCREMENT,
    campaign INT UNSIGNED,
    media    INT UNSIGNED,
    PRIMARY KEY (id)
) COLLATE = utf8_general_ci;
/*&*/
CREATE TABLE x2_web_forms(
    id                   INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `name`               VARCHAR(100) NOT NULL,
    `type`               VARCHAR(100) NOT NULL,
    description          VARCHAR(255) DEFAULT NULL,
    modelName            VARCHAR(100) DEFAULT NULL,
    fields               TEXT,
    params               TEXT,
    css                  TEXT,
    header               TEXT,
    visibility           INT NOT NULL,
    assignedTo           VARCHAR(50) NOT NULL,
    createdBy            VARCHAR(50) NOT NULL,
    updatedBy            VAR

    createDate           BIGINT NOT NULL,
    lastUpdated          BIGINT NOT NULL,
    userEmailTemplate    INT,
    webleadEmailTemplate INT,
    leadSource           VARCHAR(100),
    redirectUrl          VARCHAR(255),
    generateLead         TINYINT DEFAULT 0,
    generateAccount      TINYINT DEFAULT 0,
    requireCaptcha       TINYINT DEFAULT 0,
    fingerprintDetection TINYINT DEFAULT 1,
    thankYouText         TEXT DEFAULT NULL,
    PRIMARY KEY (id)
) COLLATE = utf8_general_ci;
/*&*/
INSERT INTO `x2_modules`
(`name`, title, visible, menuPosition, searchable, editable, adminOnly, custom, toggleable)
VALUES
('marketing', 'Marketing', 1, 3, 0, 1, 0, 0, 0);
/*&*/
INSERT INTO x2_fields
(modelName, fieldName, attributeLabel, modified, custom, `type`, required, readOnly, linkType, searchable, isVirtual, relevance, uniqueConstraint, safe,keyType, description)
VALUES
('Campaign', 'id',           'ID',                 0, 0, 'int',         0, 0, NULL,              0, 0, '',       1, 1, 
DROP VIEW IF EXISTS "QUADRANT_ACTUALS_VIEW";
DROP VIEW IF EXISTS "DEPARTMENT_MANAGERS_VIEW";
DROP VIEW IF EXISTS "CUSTOMERS_VIEW";
DROP VIEW IF EXISTS "EMPLOYEES_VIEW";
DROP VIEW IF EXISTS "OFFICES_VIEW";
DROP VIEW IF EXISTS "ORDERDETAILS_VIEW";
DROP VIEW IF EXISTS "ORDERS_VIEW";
DROP VIEW IF EXISTS "PAYMENTS_VIEW";
DROP VIEW IF EXISTS "ORDERFACT_VIEW"; -- MUST COME BEFORE PRODUCTS
DROP VIEW IF EXISTS "PRODUCTS_VIEW";
DROP VIEW IF EXISTS "TRIAL_BALANCE_VIEW";
DROP VIEW IF EXISTS "DIM_TIME_VIEW";
DROP VIEW IF EXISTS "CUSTOMER_W_TER_VIEW";
-- CREATE VIEWS
CREATE VIEW "QUADRANT_ACTUALS_VIEW" ("REGION", "DEPARTMENT", "POSITIONTITLE", "ACTUAL", "BUDGET", "VARIANCE") 
AS SELECT "REGION", "DEPARTMENT", "POSITIONTITLE", "ACTUAL", "BUDGET", "VARIANCE" from "QUADRANT_ACTUALS";
CREATE VIEW "DEPARTMENT_MANAGERS_VIEW" ("REGION", "MANAGER_NAME", "EMAIL") 
AS SELECT "REGION", "MANAGER_NAME", "EMAIL" FROM "DEPARTMENT_MANAGERS";
CREATE VIEW "CUSTOMERS_VIEW" ("CUSTOMERNUMBER", "CUSTOMERNAME", "CONTACTLA

AS SELECT "CUSTOMERNUMBER", "CUSTOMERNAME", "CONTACTLASTNAME", "CONTACTFIRSTNAME", "PHONE", "ADDRESSLINE1", "ADDRESSLINE2", "CITY", "STATE", "POSTALCODE", "COUNTRY", "SALESREPEMPLOYEENUMBER", "CREDITLIMIT" FROM "CUSTOMERS";
CREATE VIEW "EMPLOYEES_VIEW" ("EMPLOYEENUMBER", "LASTNAME", "FIRSTNAME", "EXTENSION", "EMAIL", "OFFICECODE", "REPORTSTO", "JOBTITLE") 
AS SELECT "EMPLOYEENUMBER", "LASTNAME", "FIRSTNAME", "EXTENSION", "EMAIL", "OFFICECODE", "REPORTSTO", "JOBTITLE" FROM "EMPLOYEES";
CREATE VIEW "OFFICES_VIEW" ("OFFICECODE", "CITY", "PHONE", "ADDRESSLINE1", "ADDRESSLINE2", "STATE", "COUNTRY", "POSTALCODE", "TERRITORY") 
AS SELECT "OFFICECODE", "CITY", "PHONE", "ADDRESSLINE1", "ADDRESSLINE2", "STATE", "COUNTRY", "POSTALCODE", "TERRITORY" FROM "OFFICES";
CREATE VIEW "ORDERDETAILS_VIEW" ("ORDERNUMBER", "PRODUCTCODE", "QUANTITYORDERED", "PRICEEACH", "ORDERLINENUMBER") 
AS SELECT "ORDERNUMBER", "PRODUCTCODE", "QUANTITYORDERED", "PRICEEACH", "ORDERLINENUMBER" FROM "ORDERDETAILS";
CREATE VI

AS SELECT "ORDERNUMBER", "ORDERDATE", "REQUIREDDATE", "SHIPPEDDATE", "STATUS", "COMMENTS", "CUSTOMERNUMBER" FROM "ORDERS";
CREATE VIEW "PAYMENTS_VIEW" ("CUSTOMERNUMBER", "CHECKNUMBER", "PAYMENTDATE", "AMOUNT") 
AS SELECT "CUSTOMERNUMBER", "CHECKNUMBER", "PAYMENTDATE", "AMOUNT" FROM "PAYMENTS";
CREATE VIEW "PRODUCTS_VIEW" ("PRODUCTCODE", "PRODUCTNAME", "PRODUCTLINE", "PRODUCTSCALE", "PRODUCTVENDOR", "PRODUCTDESCRIPTION", "QUANTITYINSTOCK", "BUYPRICE", "MSRP") 
AS SELECT "PRODUCTCODE", "PRODUCTNAME", "PRODUCTLINE", "PRODUCTSCALE", "PRODUCTVENDOR", "PRODUCTDESCRIPTION", "QUANTITYINSTOCK", "BUYPRICE", "MSRP" FROM "PRODUCTS";
CREATE VIEW "TRIAL_BALANCE_VIEW" ("TYPE", "ACCOUNT_NUM", "CATEGORY", "CATEGORY2", "DETAIL", "AMOUNT") 
AS SELECT "TYPE", "ACCOUNT_NUM", "CATEGORY", "CATEGORY2", "DETAIL", "AMOUNT" FROM "TRIAL_BALANCE";
CREATE VIEW "ORDERFACT_VIEW" ("ORDERNUMBER", "PRODUCTCODE", "QUANTITYORDERED", "PRICEEACH", "ORDERLINENUMBER", "TOTALPRICE", "ORDERDATE", "REQUIREDDATE", "SHIPPEDDATE",
DROP TABLE IF EXISTS x2_bug_reports;
/*&*/
CREATE TABLE x2_bug_reports(
		id INT NOT NULL AUTO_INCREMENT primary key,
		assignedTo VARCHAR(250),
		name VARCHAR(250),
		description TEXT,
		createDate INT,
		lastUpdated INT,
		lastActivity BIGINT,
		updatedBy VARCHAR(250),
        blocks VARCHAR(250),
        duplicate VARCHAR(250),
        file VARCHAR(250),
        line VARCHAR(250),
        phpVersion VARCHAR(250),
        severity VARCHAR(250),
        status VARCHAR(250),
        subject VARCHAR(250),
        type VARCHAR(250),
        visibility TINYINT,
        x2Version VARCHAR(250),
        errorCode VARCHAR(250)
) COLLATE = utf8_general_ci;
/*&*/
INSERT INTO `x2_modules` 
			(`name`,			title,			visible, 	menuPosition,	searchable,	editable,	adminOnly,	custom,	toggleable) 
	VALUES	("bugReports",		"Bug Reports",	1,			16,				1,			1,			0,			0,		0);
/*&*/
INSERT INTO x2_fields 
(modelName,		fieldName,			attributeLabel,		custom,		type,		required,	readOnly, 		linkType,   searchable,	is

VALUES
("BugReports",	"id",				"ID",					0,		"int",			0,			0,			NULL,		0,			0,			""			),
("BugReports",	"name",				"Name",					0,		"varchar",		0,			0,			NULL,		0,			0,			"High"		),
("BugReports",	"assignedTo",		"Assigned To",			0,		"assignment",	0,			0,			NULL,		0,			0,			""			),
("BugReports",	"description",		"Description",			0,		"text",			0,			0,			NULL,		0,			0,			"Medium"	),
("BugReports",	"createDate",		"Create Date",			0,		"dateTime",		0,			0,			NULL,		0,			0,			""			),
("BugReports",	"lastUpdated",		"Last Updated",			0,		"dateTime",		0,			0,			NULL,		0,			0,			""			),
("BugReports",	"lastActivity",		"Last Activity",		0,		"dateTime",		0,			0,			NULL,		0,			0,			""			),
("BugReports",	"updatedBy",		"Updated By",			0,		"assignment",	0,			0,			NULL,		0,			0,			""			),
("BugReports",  "blocks",           "Blocks",               0,      "link",         0,          0,         "BugReports",0,          0,          ""          ),
("BugReports",  "duplicate",        "Duplicate Of",       

("BugReports",	"file",				"File",					0,		"varchar",		0,			0,			NULL,		0,			0,			""          ),
("BugReports",	"line",				"Line",					0,		"varchar",		0,			0,			NULL,		0,			0,			""          ),
("BugReports",	"phpVersion",		"PHP Version",			0,		"varchar",		0,			0,			NULL,		0,			0,			""          ),
("BugReports",	"severity",         "Severity",             0,		"dropdown",		0,			0,			116,		0,			0,			""          ),
("BugReports",	"status",           "Status",               0,		"dropdown",		0,			0,			115,		0,			0,			""          ),
("BugReports",	"subject",			"Subject",				0,		"varchar",		0,			0,			NULL,		0,			0,			""          ),
("BugReports",	"type",				"Type",					0,		"varchar",		0,			0,			NULL,		0,			0,			""          ),
("BugReports",	"visibility",		"Visibility",			0,		"visibility",	0,			0,			NULL,		0,			0,			""          ),
("BugReports",	"x2Version",		"X2 Version",			0,		"varchar",		0,			0,			NULL,		0,			0,			""          ),
("BugReports",	"errorCode",		"Error Code",			0,		"varchar",		0,
# NEW=10721
# OLD=17081
update Server set customer_id=NEW where customer_id=OLD;
update ServerGroup set customer_id=NEW where customer_id=OLD;
update CompoundService set customer_id=NEW where customer_id=OLD;
update Contact set customer_id=NEW where customer_id=OLD;
update ContactGroup set customer_id=NEW where customer_id=OLD;
update CustomerAttribute set customer_id=NEW where customer_id=OLD;
update CustomerLog set customer_id=NEW where customer_id=OLD;
update Invoice set customer_id=NEW where customer_id=OLD;
update Transaction set customer_id=NEW where customer_id=OLD;
update MaintenanceSchedule set customer_id=NEW where customer_id=OLD;
update MaintenancePeriod set customer_id=NEW where customer_id=OLD;
update NotificationSchedule set customer_id=NEW where customer_id=OLD;
update PaypalProfile set customer_id=NEW where customer_id=OLD;
update PublicReport set customer_id=NEW where customer_id=OLD;
update RemoteAgent set customer_id=NEW where customer_id=OLD;
update APIUser set cus
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `worldstates`;
CREATE TABLE `worldstates` (
  `entry` int(10) unsigned NOT NULL DEFAULT '0',
  `value` int(10) unsigned NOT NULL DEFAULT '0',
  `comment` tinytext,
  PRIMARY KEY (`entry`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Variable Saves';
LOCK TABLES `worldstates` WRITE;
/*!40000 ALTER TABLE `worldstates` DISABLE KEYS */;
INSERT INTO `worldstates` VALUES (20002,132296296
--------------------------------------------------------
--  File created - Tuesday-May-13-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table TBL_CATEGORY
--------------------------------------------------------
  CREATE TABLE "ORACLE"."TBL_CATEGORY" 
   (	"CAT_ID" NUMBER, 
	"CAT_NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into ORACLE.TBL_CATEGORY
SET DEFINE OFF;
Insert into ORACLE.TBL_CATEGORY (CAT_ID,CAT_NAME) values (3,'Entertainment');
Insert into ORACLE.TBL_CATEGORY (CAT_ID,CAT_NAME) values (4,'Sports');
Insert into ORACLE.TBL_CATEGORY (CAT_ID,CAT_NAME) values (5,'Health');
Insert into ORACLE.TBL_C

Insert into ORACLE.TBL_CATEGORY (CAT_ID,CAT_NAME) values (7,'Luggage');
Insert into ORACLE.TBL_CATEGORY (CAT_ID,CAT_NAME) values (8,'Clearance');
Insert into ORACLE.TBL_CATEGORY (CAT_ID,CAT_NAME) values (1,'Furniture');
Insert into ORACLE.TBL_CATEGORY (CAT_ID,CAT_NAME) values (2,'Electronics');
--------------------------------------------------------
--  DDL for Index TBL_CATEGORY_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "ORACLE"."TBL_CATEGORY_PK" ON "ORACLE"."TBL_CATEGORY" ("CAT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table TBL_CATEGORY
--------------------------------------------------------
  ALTER TABLE "ORACLE"."TBL_CATEGORY" ADD CONSTRAINT "TBL_CATEGORY_PK
﻿-- Summarizes all levels of a group of variables (creates a cube)
-- Uses PLPython as a string manipulator but executes pure SQL
-- Takes in the following arguments...
--     input_table: schema.tablename for table to summarize
--     cube_table: schema.tablename for output table
--     by_columns: comma-separated list of columns to summarize by
--                 note that these columns will be converted to text so they can be unioned together with nulls
--     cube_function: SQL aggregation function which can be used as a group by (in SQL syntax) e.g.
--                    "avg(sales) as avg_sales"
--                    "count(distinct user) as users, sum(sales) as total_sales"
create or replace function cube_summary(input_table text, cube_table text, by_columns text, cube_function text) 
returns text as
$$
import itertools
# Separate out list of by columns
by_list = [b.strip() for b in by_columns.split(',')]
# Use itertools to get all combinations of by columns
comb_list = []
for i

    comb_list.append(itertools.combinations(by_list, i + 1))
# Loop through combinations calculate summary and union results together
execute_str = 'create table ' + cube_table + ' as select '
for comb in comb_list:
    for c in comb:
        group_by_list = []
        for b in by_list:
            if b in c:
                group_by_list.append(b)
                execute_str = execute_str + 'cast(' + b + ' as text) as ' + b + ', '
            else:
                execute_str = execute_str + 'null as ' + b + ', '
        execute_str = execute_str + cube_function + ' from ' + input_table + ' group by '
        for b in group_by_list[:-1]:
            execute_str = execute_str + b + ', '
        execute_str = execute_str + group_by_list[-1] + ' union all select '
# Summary without any by variables
for b in by_list:
    execute_str = execute_str + 'null as ' + b + ', '
execute_str = execute_str + cube_function + ' from ' + input_table + ';'
# Execute SQL and return the SQL string
plpy.e
﻿CREATE View [dbo].[vFAB_PAAList]
AS
SELECT     PAA, CUID, Email
FROM         CLLI_DB.dbo.vPAA
WHERE     (grpID = 18)
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfigurat

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 

         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "vPAA (CLLI_DB.dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 121
               Right = 190
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1680
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         O
--------------------------------------------------------
--  File created - ×åòâúðòúê-Àïðèë-17-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ARTICLE
--------------------------------------------------------
  CREATE TABLE "ELSYS"."ARTICLE" 
   (	"ID" NUMBER, 
	"CREATED_ON" DATE, 
	"NAME" VARCHAR2(20 BYTE), 
	"USER_ID" VARCHAR2(20 BYTE), 
	"PUBLISHED_ON" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."CATEGORY" 
   (	"ID" VARCHAR2(20 BYTE), 
	"DATE_CREATED_ON" DATE, 
	"CREA

	"ARTICLE_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG" 
   (	"ID" NUMBER, 
	"PRIORITY" NUMBER, 
	"DESCRIPTION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USERS_PART1
------------------------------------

  CREATE TABLE "ELSYS"."USERS_PART1" 
   (	"PASSWORD" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USERS_PART2
--------------------------------------------------------
  CREATE TABLE "ELSYS"."USERS_PART2" 
   (	"ID" NUMBER, 
	"INCOME" NUMBER, 
	"NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL 
-- Executing SQLLDR with the EXTERNAL_TABLE Parameter
set echo on
drop table dept purge;
create table dept
  ( deptno  number(2) constraint dept_pk primary key,
    dname   varchar2(14),
    loc     varchar2(13)
drop table "SYS_SQLLDR_X_EXT_DEPT";
CREATE TABLE "SYS_SQLLDR_X_EXT_DEPT"
  "DEPTNO" NUMBER(2),
  "DNAME" VARCHAR2(14),
  "LOC" VARCHAR2(13)
ORGANIZATION external
  TYPE oracle_loader
  DEFAULT DIRECTORY SYS_SQLLDR_XT_TMPDIR_00000
  ACCESS PARAMETERS
  (
    RECORDS DELIMITED BY NEWLINE CHARACTERSET US7ASCII
    BADFILE 'SYS_SQLLDR_XT_TMPDIR_00000':'demo1.bad'
    LOGFILE 'demo1.log_xt'
    READSIZE 1048576
    SKIP 6
    FIELDS TERMINATED BY "," LDRTRIM
    REJECT ROWS WITH ALL NULL FIELDS
    (
      "DEPTNO" CHAR(255)
        TERMINATED BY ",",
      "DNAME" CHAR(255)
        TERMINATED BY ",",
      "LOC" CHAR(255)
        TERMINATED BY ","
    )
  )
  location
  (
    'demo1.ctl'
  )
)REJECT LIMIT UNLIMITED
INSERT /*+ append */ INTO DEPT
  (
    DEPTNO,
    DNAME,
    LOC
 
-- This document is the master SQL file for creating and 
-- initializing tables. 
DROP DATABASE IF EXISTS testGM;
CREATE DATABASE testGM;
USE testGM;
-- -----------------------------------------------------
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user` ;
CREATE TABLE IF NOT EXISTS `user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(512) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `fname` VARCHAR(128) NULL,
  `lname` VARCHAR(128) NULL,
  `create_date` DATETIME NOT NULL,
  `is_admin` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table 

-- -----------------------------------------------------
DROP TABLE IF EXISTS `pending_user` ;
CREATE TABLE IF NOT EXISTS `pending_user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(512) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `fname` VARCHAR(128) NULL,
  `lname` VARCHAR(128) NULL,
  `create_date` DATETIME NOT NULL,
  `position` TEXT NOT NULL,
  `reason` TEXT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `explicit_content`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `explicit_content` ;
CREATE TABLE IF NOT EXISTS `explicit_content` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `explicit_words` VARCHAR(128) NOT NULL UNIQUE,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `common_content`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `common_content` ;
CREATE TABLE IF NOT EXISTS `common

  `id` INT NOT NULL AUTO_INCREMENT,
  `common_words` VARCHAR(128) NOT NULL UNIQUE,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `makes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS makes;
CREATE TABLE makes(
  make_id INT NOT NULL AUTO_INCREMENT,
  make_name varchar(128) NOT NULL UNIQUE,
  PRIMARY KEY(make_id))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `models`
-- -----------------------------------------------------
DROP TABLE IF EXISTS models;
CREATE TABLE models(
  model_id INT NOT NULL AUTO_INCREMENT,
  make_id INT NOT NULL,
  model_name varchar(128) NOT NULL UNIQUE,
  PRIMARY KEY(model_id))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `model_years`
-- -----------------------------------------------------
DROP TABLE IF EXISTS model_years;
CREATE TABLE model_years(
  year_id INT NOT NULL AUTO_INCREMENT,
  model_i
select
  sdd_timestamp as "timestamp",
  extract(epoch from sdd_timestamp::timestamp with time zone at time zone 'utc')::int as "time",
  conns,
  ((commits_delta / timestamp_delta_s) * 3600) ::int8 as commits_1h_rate,
  ((rollbacks_delta / timestamp_delta_s) * 3600) ::int8 as rollbacks_1h_rate,
  ((blks_read_delta / timestamp_delta_s) * 3600) ::int8 as blks_read_1h_rate,
  ((blks_hit_delta / timestamp_delta_s) * 3600) ::int8 as blks_hit_hour_rate,
  case when blks_hit_delta + blks_read_delta <= 0
    then null
    else round((blks_hit_delta / (blks_hit_delta + blks_read_delta)::numeric * 100), 1)::double precision
  end as blks_sh_buf_hit_pct,    -- ratio
  ((temp_files_delta / timestamp_delta_s) * 3600) ::int8 as temp_files_hour_rate,
  ((temp_bytes_delta / timestamp_delta_s) * 3600) ::int8 as temp_bytes_1h_rate,
  ((deadlocks_delta / timestamp_delta_s) * 3600) ::int8 as deadlocks_1h_rate,
  ((blk_read_time_ms_delta / timestamp_delta_s) * 3600) ::int8 as blk_read_time_ms_1h_rate,
  (

  case when blk_write_time_ms_delta + blk_read_time_ms_delta <= 0
    then null
    else round((blk_write_time_ms_delta / (blk_write_time_ms_delta + blk_read_time_ms_delta)::numeric * 100), 1)::double precision
  end as blk_write_pct   -- ratio
from (
select
  sdd_timestamp,
  extract (epoch from (sdd_timestamp - timestamp_lag))::numeric as timestamp_delta_s,
  conns,
  commits - commits_lag as commits_delta,
  rollbacks - rollbacks_lag as rollbacks_delta,
  blks_read - blks_read_lag as blks_read_delta,
  blks_hit - blks_hit_lag as blks_hit_delta,
  temp_files - temp_files_lag as temp_files_delta,
  temp_bytes - temp_bytes_lag as temp_bytes_delta,
  deadlocks - deadlocks_lag as deadlocks_delta,
  blk_read_time_ms - blk_read_time_ms_lag as blk_read_time_ms_delta,
  blk_write_time_ms - blk_write_time_ms_lag as blk_write_time_ms_delta
from (
    select
      *,
      lag(sdd_timestamp) over(order by sdd_timestamp) as timestamp_lag,
      lag(commits) over(order by sdd_timestamp) as commi

      lag(rollbacks) over(order by sdd_timestamp) as rollbacks_lag,
      lag(blks_read) over(order by sdd_timestamp) as blks_read_lag,
      lag(blks_hit) over(order by sdd_timestamp) as blks_hit_lag,
      lag(temp_files) over(order by sdd_timestamp) as temp_files_lag,
      lag(temp_bytes) over(order by sdd_timestamp) as temp_bytes_lag,
      lag(deadlocks) over(order by sdd_timestamp) as deadlocks_lag,
      lag(blk_read_time_ms) over(order by sdd_timestamp) as blk_read_time_ms_lag,
      lag(blk_write_time_ms) over(order by sdd_timestamp) as blk_write_time_ms_lag
    from (
        select
          sdd_timestamp,
          sdd_numbackends as conns,
          sdd_xact_commit as commits,
          sdd_xact_rollback as rollbacks,
          sdd_blks_read as blks_read,
          sdd_blks_hit as blks_hit,
          sdd_temp_files as temp_files,
          sdd_temp_bytes as temp_bytes,
          sdd_deadlocks as deadlocks,
          sdd_blk_read_time as blk_read_time_ms,
          sdd_bl
﻿-- DROP FUNCTION [dbo].[fnc_LOG_Log_Record_open_generic]
ALTER FUNCTION [dbo].[fnc_LOG_Log_Record_open_generic](
	@IDType_search_ int, 
	@IDUser_search_ bigint, 
	@IDError_search_ int, 
	@Stamp_begin_search_ datetime, 
	@Stamp_end_search_ datetime, 
	@Read_search_ bit, 
	@IFApplication_search_ int
RETURNS TABLE
AS
RETURN
	SELECT
		"IDLog"
	FROM "LOG_Log"
			WHERE
				(
					(@IFApplication_search_ is null)
					or
					(@IFApplication_search_ <= 0)
					or
					(@IFApplication_search_ = "IFApplication")
				)
				and
				(
					(@IDType_search_ is null)
					or
					(@IDType_search_ <= 0)
					or
					(@IDType_search_ = "IFType") 
				)
				and
				(
					(@IDUser_search_ is null)
					or
					(@IDUser_search_ <= 0)
					or
					(@IDUser_search_ = "IFUser")
				)
				and
				(
					(@IDError_search_ is null)
					or
					(@IDError_search_ <= 0)
					or
					(@IDError_search_ = "IFError")
				)
				and
				(
					(@Stamp_begin_search_ is null)
					or
					(@Stamp_end_search_ is null)

dml 0.9;
template read {
    // obsolete - read has default in hardwire.ddl
template write {
    // obsolete - write has default in hardwire.ddl
template read-write {
    // obsolete - read/write have defaults in hardwire.ddl
    is read;
    is write;
template read-only {
    is read;  // obsolete - read has default in hardwire.ddl
    method write(value) {
        log spec-violation 2 (Register_Write)
            "Write to read-only register %s", $qname;
    }
template write-only {
    method read() -> (value) {
        log spec-violation 2 (Register_Read)
            "Read from write-only register %s", $qname;
        fail;
    }
    is write;  // obsolete - write has default in hardwire.ddl
template ignore-write {
    method write(value) {
        // ignored
    }
template write-1-clears {
    method write(value) {
        $this = $this & ~value;
    }
template clear-on-read {
    method read() -> (value) {
        value = $this;
        $this = 0;
    }
template read-constant {
  

        value = $value;
    }
template read-zero {
    method read -> (value) {
        value = 0;
    }
template constant {
    parameter allocate = false;
    parameter value;
    method get -> (value) {
        value = $value;
    }
    method set(value) {
        if (value != $value) {
            log error (0) "Can't set %s; was %#x, expected %#x",
                $qname, value, $value;
            fail;
        }
    }
    is read-constant;
    method write(value) {
        if (value != $value) {
            log error (Register_Write) "Write to constant register %s with wrong value", $qname;
            fail;
        }
    }
template silent-constant {
    parameter allocate = false;
    parameter value;
    method get -> (value) {
        value = $value;
    }
    method set(value) {
        if (value != $value) {
            local int val;
            val = value;
            log error (0) "Can't set %s; was %#x, expected %#x",
                $qname, val, $value;
            f

        }
    }
    is read-constant;
    is ignore-write;
template zeros {
    parameter allocate = false;
    method get -> (value) {
        value = 0;
    }
    method set(value) {
        if (value != 0) {
            log error (0) "Can't set %s; was %#x, expected 0",
                $qname, value;
            fail;
        }
    }
    is read-zero;
    method write(value) {
        if (value != 0) {
            log spec-violation 1 (Register_Write)
                "Non-zero write to register %s", $qname;
            fail;
        }
    }
template ones {
    parameter allocate = false;
    parameter signed = true;
    method read() -> (value) {
        value = -1;
    }
    method write(value) {
        if (value != -1) {
            log spec-violation 1 (Register_Write)
                "Illegal write to register %s", $qname;
            fail;
        }
    }
template ignore {
    parameter allocate = false;
    method get() -> (value) {
        value = 0;
    }
    method set(va
/*=================================================== 拷贝模板 ===============================================================
--拷贝模板数据
select *
INTO DI_MODEL_0717
FROM DI_MODEL
where MODEL_ID in ('3','4','5','6','8','9');
--更新拷贝的模板数据
update DI_MODEL_0717 set MODEL_ID = 'dihonr_'+MODEL_ID, MODEL_NAME=MODEL_NAME + '_滇红',DYNAMIC_DATA_TABLE = 'dihonr_' + DYNAMIC_DATA_TABLE;
select * from DI_MODEL_0717;
--拷贝回模板数据
insert into DI_MODEL 
select * from DI_MODEL_0717;
select * from DI_MODEL;
--删除临时表
drop Table DI_MODEL_0717;
*/
/*=================================================== 拷贝模板字段 ===============================================================
--拷贝模板字段数据
select *
INTO DI_MODEL_FIELD_0717
FROM DI_MODEL_FIELD
where MODEL_ID in ('3','4','5','6','8','9');
--设置必填和强制校验
update DI_MODEL_FIELD_0717 set REQUIRE = '1', FORCED_CHECK='1' where FIELD_NAME in ('产品规格','产品批号')
--更新id
update DI_MODEL_FIELD_0717 set FIELD_ID = 'dihonr_' + FIELD_ID;
select * from DI_MODEL_FIELD_0717;
--拷贝回模板字段表
insert into DI_M

select * from DI_MODEL_FIELD_0717;
select * from DI_MODEL_FIELD;
UPDATE DI_MODEL_FIELD
SET MODEL_ID ='dihonr_' +  MODEL_ID
WHERE FIELD_ID LIKE 'dihonr_%'
SELECT *
FROM DI_MODEL_FIELD
WHERE FIELD_ID LIKE 'dihonr_%'
--删除临时表
drop Table DI_MODEL_FIELD_0717;
*/
/*=================================================== 建立新模板关系 ===============================================================
select * from DI_SCHEME_MODEL_REF where SCHEME_ID='dihonr';
--停止DI服务后，再更新关联关系。
update DI_SCHEME_MODEL_REF set MODEL_ID = 'dihonr_' + MODEL_ID where SCHEME_ID='dihonr' and  MODEL_ID in ('3','4','5','6','8','9');
*/
/*=================================================== 建立动态表关系 ===============================================================
select top 0 * into dihonr_DI_DYNAMIC_T_3
from DI_DYNAMIC_T_3
select top 0 * into dihonr_DI_DYNAMIC_T_4
from DI_DYNAMIC_T_4
select top 0 * into dihonr_DI_DYNAMIC_T_5
from DI_DYNAMIC_T_5
select top 0 * into dihonr_DI_DYNAMIC_T_6
from DI_DYNAMIC_T_6
select top 0 * into dihonr_D
BEGIN;
ALTER TABLE numkinds ADD callabale BOOLEAN NOT NULL DEFAULT TRUE;
ALTER TABLE numkinds ADD announce TEXT NULL;
CREATE OR REPLACE FUNCTION regs_route(called_arg TEXT)
	RETURNS TABLE(key TEXT, value TEXT) AS $$
DECLARE
	res HSTORE;
	cntr INTEGER;
	t RECORD;
	uoffline BOOLEAN;
BEGIN
	res := '';
	SELECT * INTO res, cntr FROM regs_route_part(called_arg, res, 0);
	uoffline := res::TEXT = '';
	-- Add 'offline' and 'No answer' divertions
	FOR t IN SELECT normalize_num(n.val) AS val, n.timeout, k.*
			FROM morenums n INNER JOIN numkinds k ON k.id = n.numkind
			WHERE uid = userid(called_arg) AND k.callabale AND CASE WHEN uoffline THEN div_offline ELSE div_noans END ORDER BY n.sortkey, n.id LOOP
		IF res::TEXT <> '' THEN
			res := res || hstore('callto.' || cntr || '.maxcall', (t.timeout * 1000)::TEXT); -- append to previous group
			cntr := cntr + 1;
			res := res || hstore('callto.' || cntr, '|');
		END IF;
		IF t.announce IS NOT NULL THEN
			cntr := cntr + 1;
			res := res || hstore('c

			res := res || hstore('callto.' || cntr || '.single', 'yes');
			res := res || hstore('callto.' || cntr || '.fork.ringer', 'yes');
			res := res || hstore('callto.' || cntr || '.fork.autoring', 'yes');
			res := res || hstore('callto.' || cntr || '.fork.automessage', 'call.progress');
			cntr := cntr + 1;
			res := res || hstore('callto.' || cntr, '|');
		END IF;
		cntr := cntr + 1;
		res := res || hstore('callto.' || cntr, 'lateroute/' || t.ins_prefix || t.val);
		IF t.set_local_caller THEN
			res := res || hstore('callto.' || cntr || '.caller', called_arg);
		END IF;
		IF t.set_context IS NOT NULL THEN
			res := res || hstore('callto.' || cntr || '.context', t.set_context);
		END IF;
	END LOOP;
	IF res::TEXT = '' THEN
		RETURN;
	ELSE
		res := res || 'location => fork';
		res := res || hstore(ARRAY['copyparams', 'pbxassist,dtmfpass', 'tonedetect_out', 'true', 'pbxassist', 'true', 'dtmfpass', 'false']);
		RETURN QUERY SELECT * FROM each(res);
	END IF;
END;
$$ LANGUAGE PlPgSQL;
COMMI
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `instance`;
CREATE TABLE `instance` (
  `id` int(10) unsigned NOT NULL DEFAULT '0',
  `map` smallint(5) unsigned NOT NULL DEFAULT '0',
  `resettime` int(10) unsigned NOT NULL DEFAULT '0',
  `difficulty` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `completedEncounters` int(10) unsigned NOT NULL DEFAULT '0',
  `data` tinytext NOT NULL,
  PRIMARY KEY (`id`),
  KEY `map` (`map`),
  KEY 
CREATE TABLE dmFlash(
flashWidth decimal(10,2) NULL DEFAULT 0 ,
catFlash varchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL ,
flashURL varchar(250) NULL DEFAULT NULL ,
status varchar(250) NULL DEFAULT NULL ,
flashMovie varchar(250) NULL DEFAULT NULL ,
displayMethod varchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
createdby varchar(250) NOT NULL DEFAULT '' ,
flashQuality varchar(250) NULL DEFAULT 'high' ,
flashLoop tinyint(1) NOT NULL DEFAULT 0 ,
flashHeight decimal(10,2) NULL DEFAULT 0 ,
flashMenu tinyint(1) NOT NULL DEFAULT 0 ,
bLibrary tinyint(1) NULL DEFAULT 1 ,
ObjectID varchar(50) NOT NULL DEFAULT '' ,
ownedby varchar(250) NULL DEFAULT NULL ,
lastupdatedby varchar(250) NOT NULL DEFAULT '' ,
teaser longtext NULL ,
label varchar(250) NULL DEFAULT NULL ,
flashPlay tinyint(1) NOT NULL DEFAULT 1 ,
flashAlign varchar(250) NULL DEFAULT 'center' ,
flashVersion varchar(250) NULL DEFAULT '8,0,0,0' ,
flashParams varchar(250) NULL DEFAULT NULL ,
datetimecreated dateti
﻿CREATE VIEW dbo.v_CurrentYearSeme_ican5std
AS
SELECT          para_phsiname AS CurrentYearSeme, LEFT(para_phsiname, LEN(para_phsiname) - 1) AS CurrentYear, 
                            RIGHT(para_phsiname, 1) AS CurrentSeme, para_dispname AS Name
FROM              iCAN5_STD.dbo.ican_para
WHERE          (para_code = 'p_semenow')
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration

         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
        

      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ican_para (iCAN5_STD.dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 140
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
  --Bill of Material Item View
  SELECT dropIfExists('VIEW', 'bomitem', 'api');
  CREATE OR REPLACE VIEW api.bomitem AS
  SELECT
    bomitem_id AS id,
    p.item_number::varchar AS bom_item_number,
    bomhead_revision::varchar AS bom_revision,
    bomitem_seqnumber AS sequence_number,
    i.item_number AS item_number,
    CASE WHEN
      bomitem_effective = startoftime() THEN
        'Always'
      ELSE
        formatdate(bomitem_effective)
    END AS effective,
    CASE WHEN
      bomitem_expires = endoftime() THEN
        'Never'
      ELSE
        formatdate(bomitem_expires)
    END AS expires,
    bomitem_qtyper AS qty_per,
    uom_name AS issue_uom,
    bomitem_scrap AS scrap,
    bomitem_createwo AS create_child_wo,
    CASE
      WHEN bomitem_issuemethod = 'M' THEN
        'Mixed'
      WHEN bomitem_issuemethod = 'L' THEN
        'Pull'
      WHEN bomitem_issuemethod = 'S' THEN
        'Push'
    END AS issue_method,
    formatBooSeq(p.item_id,bomitem_booitem_seq_id) AS used_at

    bomitem_schedatwooper AS schedule_at_wo_operation,
    bomitem_ecn AS ecn_number,
    bomitem_notes AS notes,
    bomitem_ref AS reference,
    CASE
      WHEN bomitem_subtype = 'N' THEN
        'No'
      WHEN bomitem_subtype = 'I' THEN
        'Item-Defined'
      WHEN bomitem_subtype = 'B' THEN
        'BOM-Defined'
    END AS substitutions,
    char_name AS characteristic,
    bomitem_value AS value
  FROM
    bomitem
      LEFT OUTER JOIN bomhead ON ((bomitem_parent_item_id=bomhead_item_id)
                              AND (bomitem_rev_id=bomhead_rev_id))
      LEFT OUTER JOIN char ON (bomitem_char_id=char_id), 
    item p, item i, uom
  WHERE ((bomitem_parent_item_id=p.item_id)
  AND (bomitem_item_id=i.item_id)
  AND (bomitem_uom_id=uom_id))
  ORDER BY p.item_number,bomitem_seqnumber;
GRANT ALL ON TABLE api.bomitem TO xtrole;
COMMENT ON VIEW api.bomitem IS 'Bill of Material Item';
  --Rules
  CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.bomitem DO INSTEAD
    SE

                          getItemId(NEW.bom_item_number), 
                          getItemId(NEW.item_number),
                          COALESCE(NEW.sequence_number,(
                            SELECT MAX(bomitem_seqnumber) + 10
                            FROM bomitem(getItemId(NEW.bom_item_number),COALESCE(
                                         getRevId('BOM',NEW.bom_item_number,NEW.bom_revision)))),10),
                          CASE
                            WHEN NEW.issue_method = 'Mixed' THEN
                              'M'
                            WHEN NEW.issue_method = 'Push' THEN
                              'S'
                            WHEN NEW.issue_method = 'Pull' THEN
                              'L'
                            ELSE
                              fetchMetricText('DefaultWomatlIssueMethod')
                          END,
                          COALESCE(getUomId(NEW.issue_uom),(
                          SELECT item_inv_uom_id
        
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) 
VALUES('portfolio', 'CREATE_LOANNOTE', 'LOANNOTE', 'CREATE', '0'),
('portfolio', 'READ_GROUPNOTE', 'GROUPNOTE', 'READ', '0'),
('portfolio', 'CREATE_GROUPNOTE', 'GROUPNOTE', 'CREATE', '1'),
('portfolio', 'UPDATE_GROUPNOTE', 'GROUPNOTE', 'UPDATE', '1'),
('portfolio', 'DELETE_GROUPNOTE', 'GROUPNOTE', 'DELETE', '1'),
('portfolio', 'CREATE_GROUPNOTE_CHECKER', 'GROUPNOTE', 'CREATE', '0'),
('portfolio', 'UPDATE_GROUPNOTE_CHECKER', 'GROUPNOTE', 'UPDATE', '0'),
('portfolio', 'DELETE_GROUPNOTE_CHECKER', 'GROUPNOTE', 'DELETE', '0'),
('portfolio', 'READ_LOANNOTE', 'LOANNOTE', 'READ', '0'),
('portfolio', 'CREATE_LOANNOTE', 'LOANNOTE', 'CREATE', '1'),
('portfolio', 'UPDATE_LOANNOTE', 'LOANNOTE', 'UPDATE', '1'),
('portfolio', 'DELETE_LOANNOTE', 'LOANNOTE', 'DELETE', '1'),
('portfolio', 'CREATE_LOANNOTE_CHECKER', 'LOANNOTE', 'CREATE', '0'),
('portfolio', 'UPDATE_LOANNOTE_CHECKER', 'LOANNOTE', 'UPDATE', 

('portfolio', 'DELETE_LOANNOTE_CHECKER', 'LOANNOTE', 'DELETE', '0'),
('portfolio', 'READ_LOANTRANSACTIONNOTE', 'LOANTRANSACTIONNOTE', 'READ', '0'),
('portfolio', 'CREATE_LOANTRANSACTIONNOTE', 'LOANTRANSACTIONNOTE', 'CREATE', '1'),
('portfolio', 'UPDATE_LOANTRANSACTIONNOTE', 'LOANTRANSACTIONNOTE', 'UPDATE', '1'),
('portfolio', 'DELETE_LOANTRANSACTIONNOTE', 'LOANTRANSACTIONNOTE', 'DELETE', '1'),
('portfolio', 'CREATE_LOANTRANSACTIONNOTE_CHECKER', 'LOANTRANSACTIONNOTE', 'CREATE', '0'),
('portfolio', 'UPDATE_LOANTRANSACTIONNOTE_CHECKER', 'LOANTRANSACTIONNOTE', 'UPDATE', '0'),
('portfolio', 'DELETE_LOANTRANSACTIONNOTE_CHECKER', 'LOANTRANSACTIONNOTE', 'DELETE', '0'),
('portfolio', 'READ_DEPOSITNOTE', 'DEPOSITNOTE', 'READ', '0'),
('portfolio', 'CREATE_DEPOSITNOTE', 'DEPOSITNOTE', 'CREATE', '1'),
('portfolio', 'UPDATE_DEPOSITNOTE', 'DEPOSITNOTE', 'UPDATE', '1'),
('portfolio', 'DELETE_DEPOSITNOTE', 'DEPOSITNOTE', 'DELETE', '1'),
('portfolio', 'CREATE_DEPOSITNOTE_CHECKER', 'DEPOSITNOTE', 'CREAT
IF OBJECT_ID('dbo.wsp_newBillToMobileRequest') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newBillToMobileRequest
    IF OBJECT_ID('dbo.wsp_newBillToMobileRequest') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newBillToMobileRequest >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newBillToMobileRequest >>>'
END
go
/*******************************************************************
**
** CREATION:
**   Author:      Andy Tran
**   Date:        April 2011 
**   Description: Inserts row into BillToMobileRequest.
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
*******************************************************************/
CREATE PROCEDURE wsp_newBillToMobileRequest
    @xactionId  NUMERIC(12,0)
   ,@userId     NUMERIC(12,0)
   ,@request    VARCHAR(1000)
AS
DECLARE
 @dateNow DATETIME
,@return  INT
EXEC @return = dbo.wsp_GetDateGMT @dateNow OUTPUT
IF @return != 0
    BEGIN
        RETURN @return
    END
BEGIN TRAN TRAN_newBillToMobileRequ
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_spell_cooldown`;
CREATE TABLE `character_spell_cooldown` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier, Low part',
  `spell` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT 'Spell Identifier',
  `item` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Item Identifier',
  `time` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`gui
read c:\\sites\\ASA.chest\\sql\\_tables.sql;
read c:\\sites\\ASA.chest\\sql\\chest.sql;
read c:\\sites\\ASA.chest\\sql\\chest_service.sql;
read c:\\sites\\ASA.chest\\sql\\createSP.sql;
read c:\\sites\\ASA.chest\\sql\\createTable.sql;
read c:\\sites\\ASA.chest\\sql\\createView.sql;
read c:\\sites\\ASA.chest\\sql\\defineEntity.sql;
read c:\\sites\\ASA.chest\\sql\\defineProperties.sql;
read c:\\sites\\ASA.chest\\sql\\entityData.sql;
read c:\\sites\\ASA.chest\\sql\\entityMaxTS.sql;
read c:\\sites\\ASA.chest\\sql\\entitySql.sql;
read c:\\sites\\ASA.chest\\sql\\entityStats.sql;
read c:\\sites\\ASA.chest\\sql\\entityStorage.sql;
read c:\\sites\\ASA.chest\\sql\\entityWriteable.sql;
read c:\\sites\\ASA.chest\\sql\\fillEntityProperty.sql;
read c:\\sites\\ASA.chest\\sql\\fillEntityRole.sql;
read c:\\sites\\ASA.chest\\sql\\get.sql;
read c:\\sites\\ASA.chest\\sql\\makeAnswer.sql;
read c:\\sites\\ASA.chest\\sql\\mergeXml.sql;
read c:\\sites\\ASA.chest\\sql\\parseVariables.sql;
read c:\\sites\\ASA.ch
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (5474, "WP To Top", "4.1.1", "2.0", "2", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (714889, 5474, "WP_To_Top_Admin", "add_css", "/classes/class-wp-to-top-admin.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (714890, 5474, "WP_To_Top", "__construct", "/classes/class-wp-to-top.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (714891, 5474, "WP_To_Top", "append_html", "/classes/class-wp-to-top.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (714892, 5474, "WP_To_Top_Admin", "__construct", "/classes/class-wp-to-top-admin.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc

insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (714894, 5474, "WP_To_Top", "add_css", "/classes/class-wp-to-top.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (714895, 5474, "WP_To_Top_Admin", "register_settings", "/classes/class-wp-to-top-admin.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (714896, 5474, "WP_To_Top_Admin", "settings_page", "/classes/class-wp-to-top-admin.php", now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (59328, 5474, "admin_init", "array($this,'register_settings')", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (59329, 5474, "wp_enqueue_scripts", "array($this,'add_css')", 10, now(), now());
insert into hooks (id, plugin_id, hook
--田博士 我总结了些 错误的旧档案编号类型：
--非 Z,L,2，G,F,HK,XB,XY的    ；  ---上次已经查了,那40几个
select old,* from files where 
	id not in (select id from files where old like 'z%')
and id not in (select id from files where old like 'l%')	
and id not in (select id from files where old like '2%')	
and id not in (select id from files where old like 'g%')	
and id not in (select id from files where old like 'hk%')	
and id not in (select id from files where old like 'xy%')	
and id not in (select id from files where old like 'xb%')	
and old<>''
--Z里面无-的，
select old,* from files where 
	old like 'z%' and old not like '%-%' 
--Z-后面无数字或者多其他字母或符号的，-- 做不到;
--Z后面两个以上（含两个）-的   ；  
select old,* from files where 
	old like 'z%' and old like '%-%-%' 
--2开头的旧档案编号一定都是8位数的数字不能多于也不能少于  ； 
select old,* from files where 
	old like '2%' and LEN(old)<>8
--HK 里面只能有一个-，HK后面两个以上（含两个）-的或还含其他符号或字母的就不行    ； 
select old,* from files where 
	old like 'hk%' and old like '%-%-%' 
--XB和XY里面只能有一个-，XB或XY后面两个以上（含两个）-的或还含其他符号或字母的就不行   ；  
select old,
create procedure dbo.crm_account_append
	@LAST_NAME VARCHAR(32),
	@FIRST_NAME VARCHAR(32),
	@MDM_ID VARCHAR(32),
	@HOSP_TYPE VARCHAR(32),
	@L1_DEPT VARCHAR(32),
	@L2_DEPT VARCHAR(32),
	@DEPT_NAME VARCHAR(32),
	@GENDER VARCHAR(32),
	@BIRTH_YEAR VARCHAR(32),
	@BIRTH_MON VARCHAR(32),
	@HCP_TYPE VARCHAR(32),
	@WORK_PHONE VARCHAR(32),
	@WORK_FAX VARCHAR(32),
	@CELL_PHONE VARCHAR(32),
	@EMAIL VARCHAR(32),
	@EFFECT_ADDR VARCHAR(255),
	@HOME_PHONE VARCHAR(32),
	@HCP_GRADE VARCHAR(32),
	@HIGHPOTENTIAL BIT,
	@AUTHORIZE BIT,
	@ADMIN_POST VARCHAR(32),
	@PRO_TITLE VARCHAR(32),
	@INSTITUTE VARCHAR(255),
	@HIGHEST_EDU VARCHAR(32),
	@INSTRUCTOR VARCHAR(32),
	@PROCEDURE_YEAR INTEGER,
	@CHARGE_BED INTEGER,
	@ENG_LEVEL VARCHAR(32),
	@JNJ_SPEAKER BIT,
	@RESEARCH_DIR VARCHAR(32),
	@SPEAKER_LEVEL VARCHAR(32),
	@SURGERYSPECIALTY VARCHAR(32),
	@OWNERID VARCHAR(32),
	@HCP_ID VARCHAR(32),
	@EXPERT_OUTPATIENT BIT,
	@LEADER_GROUP BIT,
	@NATIONAL_INSTITUTE VARCHAR(32),
	@LOCAL_INSTITUTE VARCHAR(32),
	@PROCEDURE_LE

	@MEMBER BIT   
as
	insert into crm_contact
	(
		ContactLastName,
		ContactFirstName,
		AccountExternalSystemId,
		CustomPickList5,
		CustomPickList6,
		CustomPickList7,
		IndexedShortText1,
		Gender,
		IndexedPick5,
		CustomPickList0,
		ContactType,
		WorkPhone,
		WorkFax,
		CellularPhone,
		ContactEmail,
		CustomText0,
		HomePhone,
		CustomPickList1,
		CustomBoolean1,
		CustomBoolean2,
		IndexedPick1,
		IndexedPick0,
		CustomText1,
		IndexedPick3,
		IndexedPick2,
		CustomInteger1,
		CustomInteger0,
		IndexedPick4,
		CustomBoolean0,
		IndexedShortText0,
		CustomPickList12,
		CustomMultiSelectPickList0,
		OwnerID,
		ExternalSystemID,
		CustomBoolean3,
		CustomBoolean4,
		CustomText32,
		CustomText33,
		CustomText34,
		CustomBoolean5,
		dbstatus
	)
	values
	(
		@LAST_NAME,
		@FIRST_NAME,
		@MDM_ID,
		@HOSP_TYPE,
		@L1_DEPT,
		@L2_DEPT,
		@DEPT_NAME,
		@GENDER,
		@BIRTH_YEAR,
		@BIRTH_MON,
		@HCP_TYPE,
		@WORK_PHONE,
		@WORK_FAX,
		@CELL_PHONE,
		@EMAIL,
		@EFFECT_ADDR,
		@HOME_PHONE,
	
SET DEFINE OFF;
CREATE TABLE D_PRODUCT
  PRODUCT_CODE          VARCHAR2(50 BYTE),
  PRODUCT_NAME          VARCHAR2(250 BYTE),
  DESCRIPTION           VARCHAR2(1024 BYTE),
  BEGIN_DATE            DATE,
  END_DATE              DATE,
  BEGIN_BOOK_DATE       DATE,
  END_BOOK_DATE         DATE,
  DEFAULT_MARKET        VARCHAR2(20 BYTE),
  PRODUCT_TYPE          VARCHAR2(3 BYTE),
  NUM_DAYS              NUMBER(4),
  DATE_SPECIFIC         VARCHAR2(1 BYTE),
  ROLLUP_AIR_ALLOW      VARCHAR2(1 BYTE),
  SHARE_OK              VARCHAR2(20 BYTE),
  LAND_ONLY_OK          VARCHAR2(1 BYTE),
  AIR_INCLUDED          VARCHAR2(1 BYTE),
  TOUID                 VARCHAR2(50 BYTE),
  TOUR_OFFSET           VARCHAR2(10 BYTE),
  DISTRIBUTE_FREE_COST  VARCHAR2(1 BYTE),
  ACTIVE_PAX_RANGE      VARCHAR2(10 BYTE),
  SEARCH_BY             VARCHAR2(800 BYTE),
  PRODUCT_STATUS        VARCHAR2(30 BYTE),
  TRACK_CHANGES         VARCHAR2(1 BYTE),
  ACTIVE_AS_OF          DATE,
  CREATED_BY            VARCHAR2(50 BYTE),
  CRE

  WHOSTAMP              VARCHAR2(50 BYTE),
  DATESTAMP             DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_PRODUCT_PK ON D_PRODUCT
(PRODUCT_CODE)
LOGGING
TABLESPACE DTW_ADV_TABLES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;
ALTER TABLE
﻿CREATE VIEW [dbo].[V_EXPENSE]
AS
SELECT     INVOICE_NUM, CUSTOMER_CDE, EXPENSE_AMT
FROM         dbo.TCCG_EXPENSE_MSTR
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfigura

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 

         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "TCCG_EXPENSE_MSTR"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 163
               Right = 198
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or
-- View: Object_Contract_InvNumber_Key_View
CREATE OR REPLACE VIEW Object_Contract_InvNumber_Key_View
AS
  SELECT Object_Contract_ContractKey_View.ContractKeyId
       , Object_Contract_ContractKey_View.ContractId
       , Object_Contract_ContractKey_View.ContractId_Key
       , Object_Contract_InvNumber_View.ContractCode
       , Object_Contract_InvNumber_View.InvNumber
       , Object_Contract_InvNumber_View.InfoMoneyId
       , Object_Contract_InvNumber_View.ContractTagId
       , Object_Contract_InvNumber_View.ContractTagCode
       , Object_Contract_InvNumber_View.ContractTagName
       , Object_Contract_InvNumber_View.ContractStateKindId
       , Object_Contract_InvNumber_View.ContractStateKindCode
       , Object_Contract_InvNumber_View.ContractStateKindName
       , Object_Contract_InvNumber_View.isErased
  FROM Object_Contract_ContractKey_View
       LEFT JOIN Object_Contract_InvNumber_View ON Object_Contract_InvNumber_View.ContractId = Object_Contract_ContractKey_View.Contrac
--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements. See the NOTICE file
-- distributed with this work for additional information
-- regarding copyright ownership. The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"); you may not use this file except in compliance
-- with the License. You may obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied. See the License for the
-- specific language governing permissions and limitations
-- under the License.
--
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans - Summary(Pentaho)', 'Active Loans - Summary(Pentaho)', 'READ',

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans by Disbursal Period(Pentaho)', 'Active Loans by Disbursal Period(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans in last installment Summary(Pentaho)', 'Active Loans in last installment Summary(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans in last installment(Pentaho)', 'Active Loans in last installment(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Active Loans Passed Final Maturity Summary(Pentaho)', 'Active Loans Passed Final Maturity Summary(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `act

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Aging Detail(Pentaho)', 'Aging Detail(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Aging Summary (Arrears in Months)(Pentaho)', 'Aging Summary (Arrears in Months)(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Aging Summary (Arrears in Weeks)(Pentaho)', 'Aging Summary (Arrears in Weeks)(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Client Listing(Pentaho)', 'Client Listing(Pentaho)', 'READ', 0);
INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('report', 'READ_Client Loan Account Schedule', 'Client Loan Account Sc
-- WEB-4601 - store validation in reporting
drop table if exists stg_email_validation;
CREATE TABLE stg_email_validation (
  email_address VARCHAR(255) NOT NULL PRIMARY KEY,
  status VARCHAR(255) NOT NULL
);
GRANT SELECT ON stg_EMAIL_VALIDATION TO GROUP READ_ONLY;
GRANT ALL ON stg_EMAIL_VALIDATION TO GROUP READ_WRITE;
GRANT ALL ON stg_EMAIL_VALIDATION TO GROUP SCHEMA_MANAGER;
--
drop table if exists email_validation;
CREATE TABLE email_validation (
  email_address VARCHAR(255) NOT NULL PRIMARY KEY,
  status VARCHAR(255) NOT NULL
);
GRANT SELECT ON EMAIL_VALIDATION TO GROUP READ_ONLY;
GRANT ALL ON EMAIL_VALIDATION TO GROUP READ_WRITE;
GRANT ALL ON EMAIL_VALIDATION TO GROUP SCHEMA_MANAGER;
---
drop table if exists ios_player_device;
CREATE TABLE ios_player_device (
  GAME_TYPE varchar(255) NOT NULL,
  PLAYER_ID decimal(16,2) NOT NULL,
  DEVICE_TOKEN varchar(255) NOT NULL,
  BUNDLE varchar(30) DEFAULT NULL
);
alter table ios_player_device add primary key(bundle,player_id,device_token);
GR

GRANT ALL ON ios_player_device TO GROUP READ_WRITE;
GRANT ALL ON ios_player_device TO GROUP SCHEMA_MANAGER;
---
drop table if exists SEGMENT_SELECTION;
CREATE TABLE SEGMENT_SELECTION (
  CAMPAIGN_RUN_ID bigint NOT NULL,
  PLAYER_ID decimal(16,2)  NOT NULL,
  PROGRESSIVE_BONUS bigint DEFAULT NULL,
  DISPLAY_NAME varchar(255) DEFAULT NULL,
  CONTENT varchar(10000) DEFAULT NULL
);
alter table segment_selection add PRIMARY KEY (CAMPAIGN_RUN_ID,PLAYER_ID);
GRANT SELECT ON SEGMENT_SELECTION TO GROUP READ_ONLY;
GRANT ALL ON SEGMENT_SELECTION TO GROUP READ_WRITE;
GRANT ALL ON SEGMENT_SELECTION TO GROUP SCHEMA_MANAGER;
---
drop table if exists GCM_PLAYER_DEVICE;
CREATE TABLE GCM_PLAYER_DEVICE (
    PLAYER_ID decimal(16,2) NOT NULL,
    GAME_TYPE varchar(255) NOT NULL,
    REGISTRATION_ID varchar(255) NOT NULL
);
alter table gcm_player_device add PRIMARY KEY (PLAYER_ID, GAME_TYPE, REGISTRATION_ID);
alter table gcm_player_device add unique (PLAYER_ID, REGISTRATION_ID);
GRANT SELECT ON GCM_PLAYER
﻿USE [UA_NAV]
GO
/****** Object:  StoredProcedure [dbo].[Scenic_Places]    Script Date: 4/24/2015 2:19:08 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[Scenic_Places] @no_of_tables INT
AS
BEGIN
SET nocount ON
	DECLARE @i INT
	SET @i=0
	DECLARE @cnt INT
	DECLARE @var varchar(10)
	DECLARE @insert_query  VARCHAR(1000)
	DECLARE @create_query  VARCHAR(1000)
	DECLARE @drop_query  VARCHAR(1000)
	SET @insert_query=''
WHILE(@i<@no_of_tables-1)
BEGIN
	SET @var = @i
	SET @insert_query = @insert_query + ' SELECT TOP 2 ADDRESS FROM [UA_NAV].[dbo].[Places_'+ @var+'] WHERE weather IN (''Light Rain'') OR temperature>''50'' OR Traffic >''1'' OR Safety >''2'' UNION'
	--SET @create_query = 'CREATE TABLE Places_' + @var + '(Scenic_Place_Name varchar(100) , Latitude varchar(100) , Longitude varchar(100) , Address varchar(100) , Zipcode varchar(100) , Weather varchar(100) , Temperature varchar(100) , Traffic varchar(100), Safety varchar(100))'
	SET @i=@i+1
END
	SET @var = @i

﻿insert into SYS_Menu values('Url_JITTransferFlow_View','厂内电子看板','Menu.Procurement.Setup',160,'厂内电子看板','~/JITTransferFlow/Index','~/Content/Images/Nav/Default.png',1)
go
insert into ACC_Permission values('Url_JITTransferFlow_View','厂内电子看板-查询','Procurement')
go
insert into ACC_Permission values('Url_JITTransferFlow_New','厂内电子看板-新建','Procurement')
go
insert into ACC_Permission values('Url_JITTransferFlow_Edit','厂内电子看板-编辑','Procurement')
go
update SYS_Menu set Code='Url_JITProcurementFlow_View',PageUrl='~/JITProcurementFlow/Index' where Code='Url_KBProcurementFlow_View'
update ACC_Permission set Code='Url_JITProcurementFlow_View'  where Code='Url_KBProcurementFlow_View'
update ACC_Permission set Code='Url_JITProcurementFlow_New'  where Code='Url_KBProcurementFlow_New'
update ACC_Permission set Code='Url_JITProcurementFlow_Edit'  where Code='Url_KBProcurementFlow_Edit'
insert into SYS_Menu values('Url_PreviewJIT_View','电子看板计算预览','Menu.Procurement.Info',10,'电子看板计算预览','~/PreviewJIT/Index','~
attach database :memory as dump;
DROP TABLE IF EXISTS dump.invGroups;
CREATE TABLE dump.invGroups (
  "groupID" smallint(6) NOT NULL,
  "categoryID" tinyint(3) default NULL,
  "groupName" varchar(100) DEFAULT NULL,
  PRIMARY KEY  ("groupID")
);
DROP TABLE IF EXISTS dump.invTypes;
CREATE TABLE dump.invTypes (
  "typeID" int(11) NOT NULL,
  "groupID" smallint(6) default NULL,
  "typeName" varchar(100) default NULL,
  "radius" double default NULL,
  "mass" double default NULL,
  "volume" double default NULL,
  "capacity" double default NULL,
  "portionSize" int(11) default NULL,
  "raceID" tinyint(3) default NULL,
  "published" tinyint(1) default NULL,
  PRIMARY KEY  ("typeID")
);
DROP TABLE IF EXISTS dump.invCategories;
CREATE TABLE dump.invCategories (
"categoryID"  tinyint(3) NOT NULL,
"categoryName"  TEXT(100),
"iconID" smallint(6) default NULL,
"published"  tinyint(1),
PRIMARY KEY ("categoryID")
);
INSERT INTO dump.invGroups SELECT groupID, categoryID, groupName  FROM invGroups;
--IN
--------------------------------------------------------
--  File created - Ïîíåäåëíèê-Àïðèë-14-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ARTICLE
--------------------------------------------------------
  CREATE TABLE "ELSYS"."ARTICLE" 
   (	"ID" NUMBER, 
	"PRICE" BLOB, 
	"URL" VARCHAR2(20 BYTE), 
	"CONTENT" VARCHAR2(204 BYTE), 
	"CATEGORY_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 LOB ("PRICE") STORE AS BASICFILE (
  TABLESPACE "SYSTEM" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUF

--------------------------------------------------------
--  DDL for Table CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."CATEGORY" 
   (	"ID" NUMBER, 
	"CREATED_BY" VARCHAR2(20 BYTE), 
	"PRIORITY" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS

  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USER_CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."USER_CATEGORY" 
   (	"U_ID" NUMBER, 
	"C_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USERS
--------------------------------------------------------
  CREATE TABLE "ELSYS"."USERS" 
   (	"ID" NUMBER, 
	"NAME" VARCHAR2(20 BYTE), 
	"AGE" NUMBER, 
	"TAG_ID" NUMBER, 
	"DESCRIPTION" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENT
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `item_soulbound_trade_data`;
CREATE TABLE `item_soulbound_trade_data` (
  `itemGuid` int(10) unsigned NOT NULL COMMENT 'Item GUID',
  `allowedPlayers` text NOT NULL COMMENT 'Space separated GUID list of players who can receive this item in trade',
  PRIMARY KEY (`itemGuid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Item Refund System';
LOCK TABLES `item_soulbound_trade_data` WRI
--------------------------------------------------------
--  DDL for Table POINT_PASSAGE
--------------------------------------------------------
  CREATE TABLE "G11_FLIGHT"."POINT_PASSAGE" 
   (	"TOUR_ANNEE" NUMBER(4,0), 
	"ETAPE_NUM" NUMBER(2,0), 
	"PT_PASS_NUM" NUMBER(3,0), 
	"PT_PASS_NOM" VARCHAR2(255 BYTE), 
	"PT_PASS_VILLE_NOM" VARCHAR2(50 BYTE), 
	"PT_PASS_KM_DEP" NUMBER(4,1), 
	"PT_PASS_KM_ARR" NUMBER(4,1), 
	"PT_PASS_ALT" NUMBER(4,0), 
	"PT_PASS_HORAIRE" VARCHAR2(5 BYTE), 
	"VILLE_NUM" NUMBER(5,0), 
	"CAT_NUM" NUMBER(2,0), 
	"UTIL_NUM" NUMBER(4,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" 
  PARTITION BY RANGE ("TOUR_ANNEE") 
 (PARTITION "POINT_PASSAGE_2012"  VALUES LESS THAN (2012) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAU

  TABLESPACE "BD50_DATA" NOCOMPRESS , 
 PARTITION "POINT_PASSAGE_2013"  VALUES LESS THAN (2013) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" NOCOMPRESS , 
 PARTITION "POINT_PASSAGE_2014"  VALUES LESS THAN (2014) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" NOCOMPRESS , 
 PARTITION "POINT_PASSAGE_2015"  VALUES LESS THAN (2015) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESP

 PARTITION "POINT_PASSAGE_2016"  VALUES LESS THAN (2016) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" NOCOMPRESS , 
 PARTITION "POINT_PASSAGE_2017"  VALUES LESS THAN (2017) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" NOCOMPRESS , 
 PARTITION "POINT_PASSAGE_2018"  VALUES LESS THAN (2018) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "BD50_DATA" NOCOMPRESS , 
 PARTITIO
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE format A19
column CLOSE_DATE format A19
column TERM_COMMENT format A120
column ARTIST_NAME format A160
column ARTIST_KANA format A60
column DATA_FLAG format 99
set linesize 878
set feedback off
whenever sqlerror exit failure rollback
alter session set nls_date_format = 'YYYY/MM/DD HH24:MI:SS';
set tab off
set null <NULL>
set heading on
column SHOW_ID format A12
column SHOW_TYPE format A2
column SHOW_NAME format A160
column SHOW_NAME2 format A40
column SHOW_KANA format A120
column SHOW_AREA_ID format 99
column PREFECTURE_ID format 999
column SHOW_COMMENT format A200
column OPEN_DATE
--------------------------------------------------------
--  File created - ×åòâúðòúê-Àïðèë-17-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ARTICLE
--------------------------------------------------------
  CREATE TABLE "ELSYS"."ARTICLE" 
   (	"ID" NUMBER, 
	"CREATED_ON" DATE, 
	"CONTENT" VARCHAR2(255 BYTE), 
	"NAME" VARCHAR2(255 BYTE), 
	"TAG_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."CATEGORY" 
   (	"ID" NUMBER, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"PRIORITY

   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG_PART1
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG_PART1" 
   (	"DESCRIPTION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG_PART2
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TA

   (	"ID" NUMBER, 
	"NAME" VARCHAR2(255 BYTE), 
	"USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USER_CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."USER_CATEGORY" 
   (	"U_ID" NUMBER, 
	"C_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USERS
--------------
-- phpMyAdmin SQL Dump
-- version 3.3.9
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Sep 11, 2012 at 03:59 AM
-- Server version: 5.5.8
-- PHP Version: 5.3.5
SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
--
-- Database: `mycms`
--
-- --------------------------------------------------------
--
-- Table structure for table `article`
--
CREATE TABLE IF NOT EXISTS `article` (
  `page` varchar(30) NOT NULL,
  `article_title` varchar(30) NOT NULL,
  `article_content` varchar(30) NOT NULL,
  `weight` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
--
-- Dumping data for table `article`
--
INSERT INTO `article` (`page`, `article_title`, `article_content`, `weight`) VALUES
('home', 'College Details', '<p>blah blah</p><p>testcontent', 0);
-- ----

--
-- Table structure for table `cells`
--
CREATE TABLE IF NOT EXISTS `cells` (
  `page` varchar(30) NOT NULL,
  `name` varchar(30) NOT NULL,
  `weight` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
--
-- Dumping data for table `cells`
--
INSERT INTO `cells` (`page`, `name`, `weight`) VALUES
('home', 'article', 0);
-- --------------------------------------------------------
--
-- Table structure for table `main_nav`
--
CREATE TABLE IF NOT EXISTS `main_nav` (
  `page` varchar(30) NOT NULL,
  `name` varchar(30) NOT NULL,
  `link` varchar(30) NOT NULL,
  `weight` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
--
-- Dumping data for table `main_nav`
--
INSERT INTO `main_nav` (`page`, `name`, `link`, `weight`) VALUES
('home', 'Home', 'home', 0),
('home', 'Academics', 'academics', 1),
('home', 'Library', 'library', 2),
('home', 'Students', 'students', 3),
('home', 'About us', 'about', 4),
('academics', 'Home', 'home', 0),
('academics', 'Academics', 'academics', 1),
('ac
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table image_model (
  id                        bigint not null,
  image_url                 varchar(255),
  constraint pk_image_model primary key (id))
create table tag (
  id                        bigint not null,
  name                      varchar(255),
  value                     varchar(255),
  constraint pk_tag primary key (id))
create table tag_image_model (
  tag_id                         bigint not null,
  image_model_id                 bigint not null,
  constraint pk_tag_image_model primary key (tag_id, image_model_id))
create sequence image_model_seq;
create sequence tag_seq;
alter table tag_image_model add constraint fk_tag_image_model_tag_01 foreign key (tag_id) references tag (id) on delete restrict on update restrict;
alter table tag_image_model add constraint fk_tag_image_model_image_mode_02 foreign key (image_model_id) references image_model (
  CREATE TABLE "DEVELOPER"."KNEE_AGGREGATE_CONTENTION" 
   (	"VET_ID" NUMBER(*,0), 
	"CLAIM_ID" NUMBER(*,0), 
	"DOB" NUMBER(4,0), 
	"END_PRODUCT_CODE" VARCHAR2(12 BYTE), 
	"RO_NUMBER" NUMBER(*,0), 
	"CLAIM_DATE" DATE, 
	"MAX_PROFILE_DATE" DATE, 
	"CONTENTION_COUNT" NUMBER(3,0), 
	"KNEE_CONTENTION_COUNT" NUMBER(3,0), 
	"C230" NUMBER(3,0), 
	"C270" NUMBER(3,0), 
	"C3690" NUMBER(3,0), 
	"C3700" NUMBER(3,0), 
	"C3710" NUMBER(3,0), 
	"C8919" NUMBER(3,0), 
	"C3720" NUMBER(3,0), 
	"C3730" NUMBER(3,0), 
	"C3780" NUMBER(3,0), 
	"C3790" NUMBER(3,0), 
	"C3800" NUMBER(3,0), 	
	"TXT_BILATERAL" NUMBER(3,0), 
	"TXT_LEFT" NUMBER(3,0), 
	"TXT_RIGHT" NUMBER(3,0), 
	"TXT_KNEE" NUMBER(3,0), 
	"TXT_LEG" NUMBER(3,0), 
	"TXT_AMPUTATION" NUMBER(3,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 COMPRESS FOR OLTP NOLOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEF
\echo Use "ALTER EXTENSION pgmemcache UPDATE TO '2.1'" to load this file. \quit
ALTER FUNCTION memcache_server_add(text) STRICT;
ALTER FUNCTION memcache_stats() STRICT;
ALTER FUNCTION memcache_flush_all() STRICT;
ALTER FUNCTION memcache_delete(text, interval) STRICT;
ALTER FUNCTION memcache_delete(text) STRICT;
ALTER FUNCTION memcache_get(text) STRICT;
ALTER FUNCTION memcache_get(bytea) STRICT;
ALTER FUNCTION memcache_get_multi(text[]) STRICT;
ALTER FUNCTION memcache_get_multi(bytea[]) STRICT;
ALTER FUNCTION memcache_set(text, text, timestamptz) STRICT;
ALTER FUNCTION memcache_set(text, text, interval) STRICT;
ALTER FUNCTION memcache_set(text, text) STRICT;
ALTER FUNCTION memcache_set(bytea, text) STRICT;
ALTER FUNCTION memcache_set(text, bytea) STRICT;
ALTER FUNCTION memcache_add(text, text, timestamptz) STRICT;
ALTER FUNCTION memcache_add(text, text, interval) STRICT;
ALTER FUNCTION memcache_add(text, text) STRICT;
ALTER FUNCTION memcache_replace(text, text, timestamptz) STRICT;
ALTE
SET NAMES UTF8;
USE db_itl;
delimiter :
--t_host_info的mysql信息同步到t_mysql_error_log_info,t_mysql_locked_processlist,t_mysql_innodb_deadlock_event
DROP TRIGGER IF EXISTS tr_host_to_mysql_add:
CREATE TRIGGER tr_host_to_mysql_add AFTER INSERT ON t_host_info 
FOR EACH ROW
BEGIN
IF(NEW.metric_name='last_log_error') THEN
INSERT IGNORE INTO t_mysql_error_log_info(mysql_host, mysql_port, line_num, error_time, error_content)\
VALUES(NEW.host_name, NEW.metric_arg, SUBSTRING_INDEX(NEW.metric_val,':',1), \
SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val,':',2),':',-1),\
RIGHT(NEW.metric_val, length(NEW.metric_val) - length(SUBSTRING_INDEX(NEW.metric_val,':',2)) - 1));
END IF;
IF(NEW.metric_name='last_locked_processlist') THEN
INSERT IGNORE INTO t_mysql_locked_processlist(add_time,mysql_host,mysql_port,process_id,process_user,process_host,process_time,process_info) \
VALUES(UNIX_TIMESTAMP(NOW()),NEW.host_name, NEW.metric_arg,\
SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val ,';',-5),';',1),\
SUBSTRING_

SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val ,';',-3),';',1),\
SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val ,';',-2),';',1),\
SUBSTRING_INDEX(NEW.metric_val ,';',-1)) ON DUPLICATE KEY UPDATE process_time=SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val ,';',-2),';',1);
END IF;
IF(NEW.metric_name='innodb_deadlock_event') THEN
INSERT IGNORE INTO t_mysql_innodb_deadlock_event(mysql_host, mysql_port, event_time, event_content) \
VALUES(NEW.host_name, NEW.metric_arg, SUBSTRING_INDEX(NEW.metric_val,':',1),\
RIGHT(NEW.metric_val, length(NEW.metric_val)-length(SUBSTRING_INDEX(NEW.metric_val,':',1))-1));
END IF;
END:
--t_host_info的mysql信息同步到t_mysql_error_log_info,t_mysql_locked_processlist,t_mysql_innodb_deadlock_event
DROP TRIGGER IF EXISTS tr_host_to_mysql_mod:
CREATE TRIGGER tr_host_to_mysql_mod AFTER UPDATE ON t_host_info 
FOR EACH ROW
BEGIN
IF(NEW.metric_name='last_log_error') THEN
INSERT IGNORE INTO t_mysql_error_log_info(mysql_host, mysql_port, line_num, error_time, error_content)\
VA

SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val,':',2),':',-1),\
RIGHT(NEW.metric_val, length(NEW.metric_val)-length(SUBSTRING_INDEX(NEW.metric_val,':',2)) - 1))\
ON DUPLICATE KEY UPDATE error_content=RIGHT(NEW.metric_val, length(NEW.metric_val)-length(SUBSTRING_INDEX(NEW.metric_val,':',2)) - 1);
END IF;
IF(NEW.metric_name='last_locked_processlist') THEN
INSERT IGNORE INTO t_mysql_locked_processlist(add_time,mysql_host,mysql_port,process_id,process_user,process_host,process_time,process_info) \
VALUES(UNIX_TIMESTAMP(NOW()),NEW.host_name, NEW.metric_arg,\
SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val ,';',-5),';',1),\
SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val ,';',-4),';',1),\
SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val ,';',-3),';',1),\
SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val ,';',-2),';',1),\
SUBSTRING_INDEX(NEW.metric_val ,';',-1)) ON DUPLICATE KEY UPDATE process_time=SUBSTRING_INDEX(SUBSTRING_INDEX(NEW.metric_val,';',-2),';',1);
END IF;
IF(NEW.metric_name='innodb_dea
-- Task
SELECT dropIfExists('VIEW', 'task', 'api');
CREATE VIEW api.task
AS
   SELECT 
     prj_number AS project_number,
     prjtask_number AS number,
     CASE 
       WHEN (prjtask_status = 'P') THEN
         'Concept'
       WHEN (prjtask_status = 'O') THEN
         'In-Process'
       WHEN (prjtask_status = 'C') THEN
         'Closed'
       ELSE
         'Error'
     END AS status,
     prjtask_name AS name,
     prjtask_descrip AS description,
     prjtask_owner_username AS owner,
     prjtask_username AS assigned_to,
     prjtask_hours_budget AS hours_budgeted,
     prjtask_hours_actual AS hours_actual,
     prjtask_exp_budget AS expenses_budgeted,
     prjtask_exp_actual AS expenses_actual,
     prjtask_due_date AS due,
     prjtask_assigned_date AS assigned,
     prjtask_start_date AS started,
     prjtask_completed_date AS completed
   FROM prjtask
    JOIN prj ON (prj_id=prjtask_prj_id);
GRANT ALL ON TABLE api.task TO xtrole;
COMMENT ON VIEW api.task IS 'Task';
--Rules
CRE

    ON INSERT TO api.task DO INSTEAD
  INSERT INTO prjtask (
    prjtask_prj_id,
    prjtask_number,
    prjtask_name,
    prjtask_descrip,
    prjtask_owner_username,
    prjtask_username,
    prjtask_hours_budget,
    prjtask_hours_actual,
    prjtask_exp_budget,
    prjtask_exp_actual,
    prjtask_status,
    prjtask_due_date,
    prjtask_assigned_date,
    prjtask_start_date,
    prjtask_completed_date
    )
  VALUES (
    getPrjId(NEW.project_number),
    NEW.number,
    COALESCE(NEW.name,''),
    COALESCE(NEW.description,''),
    COALESCE(NEW.owner,getEffectiveXtUser()),
    COALESCE(NEW.assigned_to,getEffectiveXtUser()),
    COALESCE(NEW.hours_budgeted,0),
    COALESCE(NEW.hours_actual,0),
    COALESCE(NEW.expenses_budgeted,0),
    COALESCE(NEW.expenses_actual,0),
    CASE 
      WHEN (NEW.status='In-Process') THEN
        'O'
      WHEN (NEW.status='Completed') THEN
        'C'
      ELSE
        'P'
    END,
    NEW.due,
    NEW.assigned,
    NEW.started,
    NEW.completed
  

CREATE OR REPLACE RULE "_UPDATE" AS 
    ON UPDATE TO api.task DO INSTEAD
  UPDATE prjtask SET
    prjtask_name=NEW.name,
    prjtask_descrip=NEW.description,
    prjtask_owner_username=NEW.owner,
    prjtask_username=NEW.assigned_to,
    prjtask_hours_budget=NEW.hours_budgeted,
    prjtask_hours_actual=NEW.hours_actual,
    prjtask_exp_budget=NEW.expenses_budgeted,
    prjtask_exp_actual=NEW.expenses_actual,
    prjtask_status=
    CASE 
      WHEN (NEW.status='In-Process') THEN
        'O'
      WHEN (NEW.status='Completed') THEN
        'C'
      ELSE
        'P'
    END,
    prjtask_due_date=NEW.due,
    prjtask_assigned_date=NEW.assigned,
    prjtask_start_date=NEW.started,
    prjtask_completed_date=NEW.completed
  WHERE ((prjtask_prj_id=getPrjId(OLD.project_number))
   AND (prjtask_number=OLD.number));
           
CREATE OR REPLACE RULE "_DELETE" AS 
    ON DELETE TO api.task DO INSTEAD
  DELETE FROM prjtask
  WHERE ((prjtask_prj_id=getPrjId(OLD.project_number))
   AND (prjtask
﻿/*
Step 2
In Greenplum, execute the following as gpadmin
*/
        TRUNCATE os.job;
        TRUNCATE os.queue;
        DROP SCHEMA IF EXISTS os_demo cascade;
--Refresh
        INSERT INTO os.job(
                refresh_type, target, source)
        VALUES ('refresh',
                ('os_demo', 'hr_countries'),
                ('oracle', 'jonnywin', null, 1521, 'xe', 'HR', 'COUNTRIES', 'os_test', 'os_password'));
        INSERT INTO os.job(
                refresh_type, target, source)
        VALUES ('refresh',
                ('os_demo', 'hr_departments'),
                ('oracle', 'jonnywin', null, 1521, 'xe', 'HR', 'DEPARTMENTS', 'os_test', 'os_password'));
        INSERT INTO os.job(
                refresh_type, target, source)
        VALUES ('refresh',
                ('os_demo', 'hr_employees'),
                ('oracle', 'jonnywin', null, 1521, 'xe', 'HR', 'EMPLOYEES', 'os_test', 'os_password'));
        INSERT INTO os.job(
                refresh_type, target, source)
  

                ('os_demo', 'hr_job_history'),
                ('oracle', 'jonnywin', null, 1521, 'xe', 'HR', 'JOB_HISTORY', 'os_test', 'os_password'));
        INSERT INTO os.job(
                refresh_type, target, source)
        VALUES ('refresh',
                ('os_demo', 'hr_jobs'),
                ('oracle', 'jonnywin', null, 1521, 'xe', 'HR', 'JOBS', 'os_test', 'os_password'));
        INSERT INTO os.job(
                refresh_type, target, source)
        VALUES ('refresh',
                ('os_demo', 'hr_locations'),
                ('oracle', 'jonnywin', null, 1521, 'xe', 'HR', 'LOCATIONS', 'os_test', 'os_password'));
        INSERT INTO os.job(
                refresh_type, target, source)
        VALUES ('refresh',
                ('os_demo', 'hr_regions'),
                ('oracle', 'jonnywin', null, 1521, 'xe', 'HR', 'REGIONS', 'os_test', 'os_password'));
--Append
        INSERT INTO os.job(
                refresh_type, target, source, column_name)
        VALUES
INSERT INTO cube_directory.card 
SELECT * FROM card_directory.card;
INSERT INTO cube_directory.cube 
SELECT * FROM card_directory.cube;
INSERT INTO cube_directory.wizards_set 
SELECT * FROM card_directory.wizards_set;
INSERT INTO cube_directory.users 
SELECT * FROM card_directory.users;
insert into cube_directory.cube_card_use (cardUse, version, cardId)
select old.cardUse, old.version, old.card_id as cardId from card_directory.cube_card_use old;
insert into cube_directory.card_in_cube (cubeId, concreteCard_id, cardId)
select old.cube_id as cubeId, old.concreteCard_id, old.card_id as cardId from card_directory.card_in_cube old;
insert into cube_directory.card_in_set (setId, rarity, cardId)
select old.set_id as setId, old.rarity, old.card_id as cardId from card_directory.card_in_set old;
insert into cube_directory.card_model (mcLink, printing, cardInSet_id)
select old.mcLink, old.printing, cis.id as cardInSet_id from card_directory.card_model old, cube_directory.card_in_set cis
where old
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table person_model (
  id                        bigint not null,
  name                      varchar(255),
  constraint pk_person_model primary key (id))
create table person_subject_mapping_model (
  person_subject_mapping_id integer not null,
  person_id                 integer,
  subject_id                integer,
  strength_score            float,
  constraint pk_person_subject_mapping_model primary key (person_subject_mapping_id))
create table related_keywords_model (
  related_keywords_id       integer not null,
  subject_source_id         integer,
  subject_dest_id           integer,
  strength_score            float,
  constraint pk_related_keywords_model primary key (related_keywords_id))
create table subject_model (
  subject_id                integer not null,
  subject_name              varchar(255),
  constraint pk_subject_model primary key (subject_i
-- MySQL dump 10.13  Distrib 5.5.16, for Win32 (x86)
--
-- Host: localhost    Database: wskoicen_csm
-- ------------------------------------------------------
-- Server version	5.5.16
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `gallery`
--
DROP TABLE IF EXISTS `gallery`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gallery` (
  `idgallery

  `title` text NOT NULL,
  `filename` text NOT NULL,
  `idgallery_cat` int(10) unsigned NOT NULL,
  `description` text NOT NULL,
  PRIMARY KEY (`idgallery`),
  KEY `FK_gallery_1` (`idgallery_cat`),
  CONSTRAINT `FK_gallery_1` FOREIGN KEY (`idgallery_cat`) REFERENCES `gallery_cat` (`idgallery_cat`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `gallery`
--
LOCK TABLES `gallery` WRITE;
/*!40000 ALTER TABLE `gallery` DISABLE KEYS */;
INSERT INTO `gallery` VALUES (10,'Cereal','cereal-guy2.jpg',1,'Cereal'),(11,'Obama Not Bad','notbad.jpg',1,'Obama');
/*!40000 ALTER TABLE `gallery` ENABLE KEYS */;
UNLOCK TABLES;
--
-- Table structure for table `gallery_cat`
--
DROP TABLE IF EXISTS `gallery_cat`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gallery_cat` (
  `idgallery_cat` int(10) uns

  `category` varchar(45) NOT NULL,
  `description` text NOT NULL,
  PRIMARY KEY (`idgallery_cat`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
--
-- Dumping data for table `gallery_cat`
--
LOCK TABLES `gallery_cat` WRITE;
/*!40000 ALTER TABLE `gallery_cat` DISABLE KEYS */;
INSERT INTO `gallery_cat` VALUES (1,'Ikan Koi','Koleksi Ikan Koi');
/*!40000 ALTER TABLE `gallery_cat` ENABLE KEYS */;
UNLOCK TABLES;
--
-- Table structure for table `layout`
--
DROP TABLE IF EXISTS `layout`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `layout` (
  `idlayout` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `theme` varchar(30) NOT NULL,
  `header` varchar(200) NOT NULL,
  `title` varchar(200) NOT NULL,
  `firstpage` varchar(45) NOT NULL,
  PRIMARY KEY (`idlayout`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;
/*!40101 S
--------------------------------------------------------
--  ÆÄÀÏÀÌ »ý¼ºµÊ - ¸ñ¿äÀÏ-2¿ù-02-2017   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table BANKTRANSFER
--------------------------------------------------------
  CREATE TABLE "SCOTT"."BANKTRANSFER" 
   (	"BTID" NUMBER, 
	"BTNAME" VARCHAR2(20 BYTE), 
	"BTBANK" VARCHAR2(20 BYTE), 
	"BTACCOUNTNUM" VARCHAR2(30 BYTE), 
	"TOTALMONEY" NUMBER, 
	"ORDERNUMBER" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BANKTRANSFER_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "SCOTT"."BANKTRANSFE
--------------------------------------------------------
-- Archivo creado  - viernes-abril-04-2014   
--------------------------------------------------------
DROP TABLE "REFERENCIA"."TPRY_TIPO_CONCURSO" cascade constraints;
--------------------------------------------------------
--  DDL for Table TPRY_TIPO_CONCURSO
--------------------------------------------------------
  CREATE TABLE "REFERENCIA"."TPRY_TIPO_CONCURSO" 
   (	"TCON_ID" NUMBER, 
	"TCON_NOMBRE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA" ;
REM INSERTING into REFERENCIA.TPRY_TIPO_CONCURSO
SET DEFINE OFF;
Insert into REFERENCIA.TPRY_TIPO_CONCURSO (TCON_ID,TCON_NOMBRE) values (1,'Concurso inicial');
Insert into REFERENCIA.TPRY_TIPO_CONCURSO (TCO

Insert into REFERENCIA.TPRY_TIPO_CONCURSO (TCON_ID,TCON_NOMBRE) values (3,'Recotización');
Insert into REFERENCIA.TPRY_TIPO_CONCURSO (TCON_ID,TCON_NOMBRE) values (4,'Solo cotización');
Insert into REFERENCIA.TPRY_TIPO_CONCURSO (TCON_ID,TCON_NOMBRE) values (5,'Modificación Catálogo');
Insert into REFERENCIA.TPRY_TIPO_CONCURSO (TCON_ID,TCON_NOMBRE) values (6,'Concurso detenido');
Insert into REFERENCIA.TPRY_TIPO_CONCURSO (TCON_ID,TCON_NOMBRE) values (7,'Concurso cancelado');
--------------------------------------------------------
--  DDL for Index TGENTIPOCONCURSO_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "REFERENCIA"."TGENTIPOCONCURSO_PK" ON "REFERENCIA"."TPRY_TIPO_CONCURSO" ("TCON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA"
-- =============================================
-- Author:		Eduardo Getassi da Rosa
-- Project:		Clinica
-- Create date: 10/10/2013
-- Description:	Stored Procedure que atualiza um registro da tabela Logradouro
-- =============================================
IF EXISTS 
	SELECT * 
		FROM INFORMATION_SCHEMA.ROUTINES 
	WHERE 
		SPECIFIC_SCHEMA = 'dbo' AND
		SPECIFIC_NAME = 'LogradouroUpdate' 
   DROP PROCEDURE dbo.LogradouroUpdate
GO
CREATE PROCEDURE LogradouroUpdate
	StringBuilder temp = new StringBuilder();
	foreach (Campo campo in projeto.Tabelas.Find(p => p.Nome.Equals(projeto.Tabela)).Campos)
	{
		temp.Append("   @"); 
		temp.Append(campo.Nome);
		temp.Append(" ");
		if(campo.Tipo.Equals("varchar"))
		{
			temp.Append(campo.Tipo);
			temp.Append("(");
			temp.Append(campo.TamanhoMax);
			temp.Append(")");
		}
		else
		{ 
			temp.Append(campo.Tipo); 
		}
		if(Convert.ToBoolean(campo.PermiteNulo))
		{
			temp.Append(" = null");
		}
		temp.AppendLine(",");
	} 
	return temp.ToString().
metadata    :name        => "File utilities for RPC Agents",
            :description => "",
            :author      => "David Ceresuela <david.ceresuela@gmail.com>",
            :license     => "",
            :version     => "0.3",
            :url         => "",
            :timeout     => 10
action "create", :description => "Creates a file" do
   display :always
   input :path,
         :prompt      => "The file path",
         :description => "The file path",
         :type        => :string,
         :validation  => '^.+$',
         :optional    => false,
         :maxlength   => 300
   input :content,
         :prompt      => "The content of the file",
         :description => "The content of the file",
         :type        => :string,
         :validation  => '^.+$',
         :optional    => false,
         :maxlength   => 3000
   output :success,
          :description => "Success on creating the file",
          :display_as  => "File created"
end
action "append", :descripti

   display :always
   input :path,
         :prompt      => "The file path",
         :description => "The file path",
         :type        => :string,
         :validation  => '^.+$',
         :optional    => false,
         :maxlength   => 300
   input :content,
         :prompt      => "The content to be appended to the file",
         :description => "The content to be appended to the file",
         :type        => :string,
         :validation  => '^.+$',
         :optional    => false,
         :maxlength   => 3000
   output :success,
          :description => "Success on appending the content to the file",
          :display_as  => "Content appended"
end
action "append_check", :description => "Appends content to a file if it is not already there" do
   display :always
   input :path,
         :prompt      => "The file path",
         :description => "The file path",
         :type        => :string,
         :validation  => '^.+$',
         :optional    => false,
         :ma
--**************************************************************************************************
--**************************************************************************************************
--******************************************   grafico   ******************************************
--**************************************************************************************************
--**************************************************************************************************
CREATE TABLE apex_grafico
---------------------------------------------------------------------------------------------------
--: proyecto: toba
--: dump: nucleo
--: dump_order_by: grafico
--: zona: general
--: desc: Tipo	de	grafico
--: version: 1.0
---------------------------------------------------------------------------------------------------
(	
	grafico						varchar(20)			NOT NULL,
	descripcion_corta			varchar(40)			NULL,	--NOT
	descripcion					TEXT		NOT NULL,
	parametros					TEXT				N

	CONSTRAINT	"apex_tipo_grafico_pk" PRIMARY KEY ("grafico") 
);
--#################################################################################################--
CREATE TABLE apex_objeto_grafico
-----------------------------------------------------------------------------------------------------
--: proyecto: toba
--: dump: componente
--: dump_clave_proyecto: objeto_grafico_proyecto
--: dump_clave_componente: objeto_grafico
--: dump_order_by: objeto_grafico
--: dump_where: ( objeto_grafico_proyecto = '%%' )
--: zona: objeto
--: desc:
--: historica: 0
--: version: 1.0
-----------------------------------------------------------------------------------------------------
   objeto_grafico_proyecto   	varchar(15)		NOT NULL,
   objeto_grafico            	int8			NOT NULL,
   descripcion            	   	varchar(80)  	NULL,
   grafico						varchar(20)		NOT NULL,
   ancho						varchar(10)		NULL,
   alto							varchar(10)		NULL,
   CONSTRAINT  "apex_objeto_grafico_pk" PRIMARY KEY ("objeto_gra
CREATE TABLE dmFlash(
lockedBy varchar(250) NULL DEFAULT NULL ,
lastupdatedby varchar(250) NOT NULL DEFAULT '' ,
flashPlay tinyint(1) NOT NULL DEFAULT 1 ,
flashQuality varchar(250) NULL DEFAULT 'high' ,
flashWidth decimal(10,2) NULL DEFAULT 0 ,
flashBgcolor varchar(250) NULL DEFAULT '#FFFFFF' ,
metaKeywords varchar(250) NULL DEFAULT NULL ,
status varchar(250) NULL DEFAULT NULL ,
flashAlign varchar(250) NULL DEFAULT 'center' ,
teaser longtext NULL ,
displayMethod varchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
ObjectID varchar(50) NOT NULL DEFAULT '' ,
flashMenu tinyint(1) NOT NULL DEFAULT 0 ,
flashMovie varchar(250) NULL DEFAULT NULL ,
label varchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL DEFAULT '2214-05-29 04:10:36' ,
flashLoop tinyint(1) NOT NULL DEFAULT 0 ,
flashURL varchar(250) NULL DEFAULT NULL ,
flashVersion varchar(250) NULL DEFAULT '8,0,0,0' ,
createdby varchar(250) NOT NULL DEFAULT '' ,
datetimecreated datetime NOT NULL DEFAULT '2214-05-29 04:10:3
CREATE TABLE dmFlash(
lockedBy varchar(250) NULL DEFAULT NULL ,
lastupdatedby varchar(250) NOT NULL DEFAULT '' ,
flashPlay tinyint(1) NOT NULL DEFAULT 1 ,
flashQuality varchar(250) NULL DEFAULT 'high' ,
flashWidth decimal(10,2) NULL DEFAULT 0 ,
flashBgcolor varchar(250) NULL DEFAULT '#FFFFFF' ,
status varchar(250) NULL DEFAULT NULL ,
metaKeywords varchar(250) NULL DEFAULT NULL ,
teaser longtext NULL ,
flashAlign varchar(250) NULL DEFAULT 'center' ,
displayMethod varchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
ObjectID varchar(50) NOT NULL DEFAULT '' ,
flashMenu tinyint(1) NOT NULL DEFAULT 0 ,
label varchar(250) NULL DEFAULT NULL ,
flashMovie varchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL ,
flashLoop tinyint(1) NOT NULL DEFAULT 0 ,
createdby varchar(250) NOT NULL DEFAULT '' ,
flashVersion varchar(250) NULL DEFAULT '8,0,0,0' ,
flashURL varchar(250) NULL DEFAULT NULL ,
datetimecreated datetime NOT NULL ,
locked tinyint(1) NOT NULL DEFAULT 0 ,
flashParams varc
SELECT
count(*) as total_inquiries,
sum(replied) inquiry_replied,
sum(no_reply) inquiry_no_reply,
sum(no_reply_not_read) inquiry_no_reply_not_read,
sum(no_reply_read) inquiry_no_reply_read,
sum(messages) as total_messages,
round(sum(messages)/count(*),2) avg_mess_per_inquiry,
jobs
FROM
		SELECT 
		i.id as inquiry_id,
		count(*) messages,
		count(distinct to_user_id) users,
		(CASE WHEN count(distinct to_user_id) = 1 then 1 else 0 end) no_reply,
		(CASE WHEN count(distinct to_user_id) = 2 then 1 else 0 end) replied,
		(CASE WHEN count(distinct to_user_id) = 1 and max(readAt) is null then 1 else 0 end) no_reply_not_read,
		(CASE WHEN count(distinct to_user_id) = 1 and max(readAt) is not null then 1 else 0 end) no_reply_read
		FROM realign_vjs.inquiries i
		left join realign_vjs.user vu on i.userProfile_id=vu.profile_id
		INNER JOIN Reporting_chamber.chamber_users cu on cu.uuid=vu.uuid
		left join realign_vjs.private_messages pm on i.id=pm.inquiry_id
		where date(pm.createdAt) >= '2014-08
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
SET ANSI_PADDING ON
GO
CREATE TABLE [Production].[ProductModelProductDescriptionCulture] (
		[ProductModelID]           [int] NOT NULL,
		[ProductDescriptionID]     [int] NOT NULL,
		[CultureID]                [nchar](6) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
		[ModifiedDate]             [datetime] NOT NULL
) ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	ADD
	CONSTRAINT [PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID]
	PRIMARY KEY
	CLUSTERED
	([ProductModelID], [ProductDescriptionID], [CultureID])
	ON [PRIMARY]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'PK_ProductModelProductDescriptionCulture_ProductModelID_ProductDescriptionID_CultureID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Clustered index created by a primar

GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	ADD
	CONSTRAINT [DF_ProductModelProductDescriptionCulture_ModifiedDate]
	DEFAULT (getdate()) FOR [ModifiedDate]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'DF_ProductModelProductDescriptionCulture_ModifiedDate'
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID]
	FOREIGN KEY ([CultureID]) REFERENCES [Production].[Culture] ([CultureID])
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_Culture_CultureID]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing Culture.CultureID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'FK_

GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]
	FOREIGN KEY ([ProductDescriptionID]) REFERENCES [Production].[ProductDescription] ([ProductDescriptionID])
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	CHECK CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID]
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing ProductDescription.ProductDescriptionID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelProductDescriptionCulture', 'CONSTRAINT', N'FK_ProductModelProductDescriptionCulture_ProductDescription_ProductDescriptionID'
GO
ALTER TABLE [Production].[ProductModelProductDescriptionCulture]
	WITH CHECK
	ADD CONSTRAINT [FK_ProductModelProductDescriptionCulture_ProductModel_ProductModelID]
	FOREIGN KEY ([ProductModelID]) REFERENCES [Production].[ProductModel] ([Pr
CREATE TABLE WorkHours(
id int IDENTITY,
EmployeeId int NOT NULL,
ReportDate date NOT NULL,
Task nvarchar(255) NOT NULL,
ExecutionHours float NOT NULL,
Comments nvarchar(255) NOT NULL,
CONSTRAINT PK_WorkHours PRIMARY KEY(id),
CONSTRAINT FK_WorkHours_Employees FOREIGN KEY (EmployeeId) REFERENCES Employees(EmployeeId),
CONSTRAINT ExecutionHoursLength CHECK(DATALENGTH(ExecutionHours) >= 0)
insert into WorkHours
values(1,GETDATE(),'Check All Data', 3, 'urgent')
insert into WorkHours
values(1,GETDATE(),'Check All', 1, 'very urgent')
insert into WorkHours
values(2, GETDATE() - 3,'Check Market', 48, 'BG Market check')
insert into WorkHours
values(3, GETDATE() - 2,'Check All Stuff Reports', 8, 'confidential')
update WorkHours set ExecutionHours = 4
where EmployeeId = 3
delete from WorkHours
where EmployeeId = 1 and ExecutionHours = 1
CREATE TABLE WorkHoursLogs(
id int IDENTITY,
OldEmployeeId int NULL,
OldReportDate date NULL,
OldTask nvarchar(255) NULL,
OldExecutionHours float NULL,
OldComment

NewEmployeeId int NULL,
NewReportDate date NULL,
NewTask nvarchar(255) NULL,
NewExecutionHours float NULL,
NewComments nvarchar(255) NULL,
Command nvarchar(10) NULL,
CONSTRAINT PK_WorkHoursLogs PRIMARY KEY(id),
CONSTRAINT FK_WorkHoursLogs_OldEmployees FOREIGN KEY (OldEmployeeId) REFERENCES Employees(EmployeeId),
CONSTRAINT FK_WorkHoursLogs_NewEmployees FOREIGN KEY (NewEmployeeId) REFERENCES Employees(EmployeeId),
CONSTRAINT OldExecutionHoursLength CHECK(DATALENGTH(OldExecutionHours) >= 0),
CONSTRAINT NEwExecutionHoursLength CHECK(DATALENGTH(NewExecutionHours) >= 0)
IF OBJECT_ID ('WorkHoursAfterInsert','TR') IS NOT NULL
   DROP TRIGGER WorkHoursAfterInsert;
GO
CREATE TRIGGER WorkHoursAfterInsert ON dbo.WorkHours AFTER INSERT AS
	BEGIN
		DECLARE
			@NewEmployeeId int,
			@NewReportDate date,
			@NewTask nvarchar(255),
			@NewExecutionHours float,
			@NewComments nvarchar(255);
		SELECT
			@NewEmployeeId = inserted.EmployeeId,
			@NewReportDate = inserted.ReportDate,
			@NewTask = insert

			@NewExecutionHours = inserted.ExecutionHours,
			@NewComments = inserted.Comments
		FROM inserted;
		INSERT INTO WorkHoursLogs(NewEmployeeId, NewReportDate, NewTask, NewExecutionHours, NewComments, Command)
		VALUES (@NewEmployeeId, @NewReportDate, @NewTask, @NewExecutionHours, @NewComments, 'INSERT');
	END
GO
IF OBJECT_ID ('WorkHoursAfterUpdate','TR') IS NOT NULL
   DROP TRIGGER WorkHoursAfterUpdate;
GO
CREATE TRIGGER WorkHoursAfterUpdate ON dbo.WorkHours AFTER UPDATE AS
	BEGIN
		DECLARE
			@NewEmployeeId int,
			@NewReportDate date,
			@NewTask nvarchar(255),
			@NewExecutionHours float,
			@NewComments nvarchar(255),
			@OldEmployeeId int,
			@OldReportDate date,
			@OldTask nvarchar(255),
			@OldExecutionHours float,
			@OldComments nvarchar(255);
		SELECT
			@NewEmployeeId = inserted.EmployeeId,
			@NewReportDate = inserted.ReportDate,
			@NewTask = inserted.Task,
			@NewExecutionHours = inserted.ExecutionHours,
			@NewComments = inserted.Comments
		FROM inserted;
		SELECT
			
\o all_positions.txt
select read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_overlap_c*2+read_f_g+read_r_g+read_overlap_g*2+read_f_t+read_r_t+read_overlap_t*2,count(1) from ghm_snp where run_sample_id='A0550101_1' group by 1 order by 1;
-- average all positions
select count(1), 
sum(read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_overlap_c*2+read_f_g+read_r_g+read_overlap_g*2+read_f_t+read_r_t+read_overlap_t*2),
avg(read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_overlap_c*2+read_f_g+read_r_g+read_overlap_g*2+read_f_t+read_r_t+read_overlap_t*2),
min(read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_overlap_c*2+read_f_g+read_r_g+read_overlap_g*2+read_f_t+read_r_t+read_overlap_t*2),
max(read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_overlap_c*2+read_f_g+read_r_g+read_overlap_g*2+read_f_t+read_r_t+read_overlap_t*2)
from ghm_snp 
where run_sample_id='A0550101_1';
select count(1), 
sum(read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_

avg(read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_overlap_c*2+read_f_g+read_r_g+read_overlap_g*2+read_f_t+read_r_t+read_overlap_t*2),
min(read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_overlap_c*2+read_f_g+read_r_g+read_overlap_g*2+read_f_t+read_r_t+read_overlap_t*2),
max(read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_overlap_c*2+read_f_g+read_r_g+read_overlap_g*2+read_f_t+read_r_t+read_overlap_t*2)
from ghm_snp s, (select chrom,pos from gh_annotation_ss4 where aa_change!='' group by chrom,pos) a
where run_sample_id='A0550101_1' and s.chrom=a.chrom and a.pos=s.pos;
\o reads_counts.txt
select count(1) from ghm_snp where read_f_a+read_r_a+read_overlap_a*2+read_f_c+read_r_c+read_overlap_c*2+read_f_g+read_r_g+read_overlap_g*2+read_f_t+read_r_t+read_overlap_t*2<10 and run_sample_id='A0550101_1';
\o reads_counts_exons.txt
select count(1) from ghm_snp s, (select chrom,pos from gh_annotation_ss4 where aa_change!='' group by chrom,pos) a where run_sample_id='A
--**************************************************************************************************
--**************************************************************************************************
--******************************************   codigo   ******************************************
--**************************************************************************************************
--**************************************************************************************************
CREATE TABLE apex_objeto_codigo
-----------------------------------------------------------------------------------------------------
--: proyecto: toba
--: dump: componente
--: dump_clave_proyecto: objeto_codigo_proyecto
--: dump_clave_componente: objeto_codigo
--: dump_order_by: objeto_codigo
--: dump_where: ( objeto_codigo_proyecto = '%%' )
--: zona: objeto
--: desc:
--: historica: 0
--: version: 1.0
------------------------------------------------------------------------------------------
// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: jbus.tab
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================
$sjm

$sjm_assert_pwr call=front_assert_pwr size=32 acc=read:%TASK
$sjm_assert_por call=front_assert_por size=32 acc=read:%TASK
$sjm_deassert_por call=front_deassert_por size=32 acc=read:%TASK
$sjm_start_exec call=front_start_exec size=32 acc=read:%TASK
$sjm_get_status call=front_get_status size=32 acc=read_write:%TASK
$sjm_set_inputs call=front_set_inputs size=32 acc=read:%TASK
$sjm_get_outputs call=front_get_outputs size=32 acc=read_write:%TASK
$sjm_get_infsm call=sjm_get_infsm size=32 acc=read_write:%TASK
$sjm_get_arbiter call=sjm_get_arbiter size=32 acc=read_write:%TASK
$sjm_get_snp_ctrl call=sjm_get_snp_ctrl size=32 acc=read_write:%TASK
$sjm_get_snoopq call=sjm_get_snoopq size=32 acc=read_write:%TASK
$sjm_get_resultsq call=sjm_get_resultsq size=32 acc=read_write:%TASK
$sjm_get_jpackq call=sjm_get_jpackq size=32 acc=read_write:%TASK
$sjm_get_jpackoutq call=sjm_get_jpackoutq size=32 acc=read_write:%TASK
$sjm_get_memq call=sjm_get_memq size=32 acc=read_write:%TASK
$sjm_get_iomemq call=sjm
select 
			snsdb_new.data_download_queue.priority,
			snsdb_new.data_download_queue.state,
			COUNT(snsdb_new.data_download_queue.id) as count_profiles 
from 
			snsdb_new.data_download_queue
INNER JOIN 
			(
			SELECT snsdb_new.data_download_queue.sns_item_id as _SNS_ID,
							-- snsdb_new.data_download_queue.id as _ID,
							-- snsdb_new.data_download_queue.priority as _PRIORITY,
							-- snsdb_new.data_download_queue.state as _STATE,
							min(snsdb_new.data_download_queue.created) as _MIN_DATE
			FROM snsdb_new.data_download_queue
			GROUP BY snsdb_new.data_download_queue.sns_item_id 
								-- ,snsdb_new.data_download_queue.id
			) as TempTable_1 ON snsdb_new.data_download_queue.sns_item_id = TempTable_1._SNS_ID 
											AND snsdb_new.data_download_queue.created = TempTable_1._MIN_DATE 
INNER JOIN 
			paydb.sns_profiles ON (snsdb_new.data_download_queue.sns_item_id = paydb.sns_profiles.sns_profile_id)
GROUP BY 
			snsdb_new.data_download_queue.priority,
			snsdb_new.data_d
-- =============================================================
-- =============================================================
-- =============================================================
-- TO REUSE IN ANOTHER BOUNDED CONTEXT, APPEND THIS FILE TO
-- THE END OF YOUR DDL
-- =============================================================
-- =============================================================
-- =============================================================
CREATE TABLE `tbl_es_event_store` (
    `event_id` bigint(20) NOT NULL auto_increment,
    `event_body` varchar(65000) NOT NULL,
    `event_type` varchar(250) NOT NULL,
    `stream_name` varchar(250) NOT NULL,
    `stream_version` int(11) NOT NULL,
    KEY (`stream_name`),
    UNIQUE KEY (`stream_name`, `stream_version`),
    PRIMARY KEY (`event_id`)
) ENGINE=InnoDB;
CREATE TABLE `tbl_published_notification_tracker` (
    `published_notification_tracker_id` bigint(20) NOT NULL auto_increment,
    `most_recent_published_no

    `type_name` varchar(100) NOT NULL,
    `concurrency_version` int(11) NOT NULL,
    PRIMARY KEY (`published_notification_tracker_id`)
) ENGINE=InnoDB;
CREATE TABLE `tbl_stored_event` (
    `event_id` bigint(20) NOT NULL auto_increment,
    `event_body` varchar(65000) NOT NULL,
    `occurred_on` datetime NOT NULL,
    `type_name` varchar(200) NOT NULL,
    PRIMARY KEY (`event_id`)
) ENGINE=InnoDB;
CREATE TABLE `tbl_time_constrained_process_tracker` (
    `time_constrained_process_tracker_id` bigint(20) NOT NULL auto_increment,
    `allowable_duration` bigint(20) NOT NULL,
    `completed` tinyint(1) NOT NULL,
    `description` varchar(100) NOT NULL,
    `process_id_id` varchar(36) NOT NULL,
    `process_informed_of_timeout` tinyint(1) NOT NULL,
    `process_timed_out_event_type` varchar(200) NOT NULL,
    `retry_count` int(11) NOT NULL,
    `tenant_id` varchar(36) NOT NULL,
    `timeout_occurs_on` bigint(20) NOT NULL,
    `total_retries_permitted` bigint(20) NOT NULL,
    `concurrenc
select xt.create_view('xt.invcheadinfo', $$
select invchead.*,
  xt.invc_allocated_credit(invchead_id, invchead_curr_id, invchead_orderdate) as allocated_credit,
  xt.cust_outstanding_credit(invchead_cust_id, invchead_curr_id, invchead_invcdate) as outstanding_credit,
  xt.invc_subtotal(invchead) as subtotal,
  xt.invc_tax_total(invchead_id) as tax_total,
  xt.invc_total(invchead) as total,
  xt.invc_authorized_credit(invchead_invcnumber) as authorized_credit,
  greatest(0.0, (
    xt.invc_total(invchead)
    - COALESCE(xt.invc_allocated_credit(invchead_id, invchead_curr_id, invchead_orderdate), 0)
    - COALESCE(xt.invc_authorized_credit(invchead_invcnumber), 0)
    - COALESCE(xt.cust_outstanding_credit(invchead_cust_id, invchead_curr_id, invchead_invcdate), 0))
  ) as balance,
  determineDueDate(invchead_terms_id, invchead_invcdate) AS due_date,
  determineDiscountDate(invchead_terms_id, invchead_invcdate) AS dis_date
  from invchead;
$$, false);
create or replace rule "_INSERT" as o

insert into invchead (
  invchead_id,
  invchead_cust_id,
  invchead_shipto_id,
  invchead_ordernumber,
  invchead_orderdate,
  invchead_posted,
  invchead_printed,
  invchead_invcnumber,
  invchead_invcdate,
  invchead_shipdate,
  invchead_ponumber,
  invchead_shipvia,
  invchead_fob,
  invchead_billto_name,
  invchead_billto_address1,
  invchead_billto_address2,
  invchead_billto_address3,
  invchead_billto_city,
  invchead_billto_state,
  invchead_billto_zipcode,
  invchead_billto_phone,
  invchead_shipto_name,
  invchead_shipto_address1,
  invchead_shipto_address2,
  invchead_shipto_address3,
  invchead_shipto_city,
  invchead_shipto_state,
  invchead_shipto_zipcode,
  invchead_shipto_phone,
  invchead_salesrep_id,
  invchead_commission,
  invchead_terms_id,
  invchead_freight,
  invchead_misc_amount,
  invchead_misc_descrip,
  invchead_misc_accnt_id,
  invchead_payment,
  invchead_paymentref,
  invchead_notes,
  invchead_billto_country,
  invchead_shipto_country,
  invchead_prj_i

  invchead_curr_id,
  invchead_gldistdate,
  invchead_recurring,
  invchead_recurring_interval,
  invchead_recurring_type,
  invchead_recurring_until,
  invchead_recurring_invchead_id,
  invchead_shipchrg_id,
  invchead_taxzone_id,
  invchead_void,
  invchead_saletype_id,
  invchead_shipzone_id
) values (
  new.invchead_id,
  new.invchead_cust_id,
  new.invchead_shipto_id,
  new.invchead_ordernumber,
  new.invchead_orderdate,
  new.invchead_posted,
  new.invchead_printed,
  new.invchead_invcnumber,
  new.invchead_invcdate,
  new.invchead_shipdate,
  new.invchead_ponumber,
  new.invchead_shipvia,
  new.invchead_fob,
  new.invchead_billto_name,
  new.invchead_billto_address1,
  new.invchead_billto_address2,
  new.invchead_billto_address3,
  new.invchead_billto_city,
  new.invchead_billto_state,
  new.invchead_billto_zipcode,
  new.invchead_billto_phone,
  new.invchead_shipto_name,
  new.invchead_shipto_address1,
  new.invchead_shipto_address2,
  new.invchead_shipto_address3,
  new.invch
create or replace 
Procedure Insert_Customer(ssn IN Customers.ssn%TYPE, gender IN customers.gender%TYPE, DOB IN customers.DOB%TYPE, cust_name IN customers.name%TYPE, phone_number IN customers.phone_number%TYPE, email IN customers.email%TYPE, address IN customers.address%TYPE, credit_card IN customers.credit_card%TYPE)
AS
BEGIN
   INSERT INTO customers (SSN, gender,DOB,name,phone_number,email,address,credit_card) VALUES(ssn, gender, DOB, cust_name, phone_number, email, address, credit_card);
   
END Insert_Customer;
create or replace 
Procedure Update_Customer(cust_id IN customers.customerid%type, ssn_new IN Customers.ssn%TYPE, gender_new IN customers.gender%TYPE, DOB_new IN customers.DOB%TYPE, cust_name IN customers.name%TYPE, phone_number_new IN customers.phone_number%TYPE, email_new IN customers.email%TYPE, address_new IN customers.address%TYPE, credit_card_new IN customers.credit_card%TYPE)
AS
BEGIN
   Update customers set SSN=ssn_new, gender=gender_new, DOB=DOB_new, name=cust_name,
DELIMITER $$
DROP TRIGGER IF EXISTS `obs_after_update`$$
CREATE TRIGGER `obs_after_update` AFTER UPDATE 
ON `obs`
FOR EACH ROW
BEGIN
  	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "BABY OUTCOME" LIMIT 1) AND new.voided = 1 THEN
		SET @outcome = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND baby_outcome = @outcome AND baby_outcome_date = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "DELIVERY MODE" LIMIT 1) AND new.voided = 1 THEN
		SET @mode = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND delivery_mode = @mode AND delivery_date = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "NUMBER OF BABIES" LIMIT 1) AND 

		SET @mode = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND babies = @mode AND birthdate = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "OUTCOME" LIMIT 1) AND new.voided = 1 THEN
		SET @mode = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND outcome = @mode AND outcome_date = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "ADMISSION TIME" LIMIT 1) AND new.voided = 1 THEN
		SET @ward = (SELECT name FROM location WHERE location_id = new.location_id);	
  		DELETE FROM patient_report WHERE patient_id = new.person_id AND admission_ward = @ward AND admission_date = new.value_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (S

		SET @diagnosis = (SELECT name FROM concept_name WHERE concept_name_id = new.value_coded_name_id);	
		DELETE FROM patient_report WHERE patient_id = new.person_id AND diagnosis = @diagnosis AND diagnosis_date = new.obs_datetime AND obs_id = new.obs_id;
	END IF;
	IF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "ADMISSION SECTION" LIMIT 1) AND new.voided = 1 THEN
		SET @ward = (SELECT name FROM location WHERE location_id = new.location_id);	
		DELETE FROM patient_report WHERE patient_id = new.person_id AND source_ward = @ward AND destination_ward = new.value_text AND internal_transfer_date = new.obs_datetime AND obs_id = new.obs_id;
	ELSEIF new.concept_id = (SELECT concept_id FROM concept_name WHERE name = "ADMISSION SECTION" LIMIT 1) AND COALESCE(new.value_modifier, '') != '' THEN
		SET @ward = (SELECT name FROM location WHERE location_id = new.location_id);	
  		INSERT INTO patient_report (patient_id, source_ward, destination_ward, internal_transfer_date, obs_dat
CREATE TABLE [wsrd].[AirplaneModel]
[airplaneModelID] [bigint] NOT NULL IDENTITY(1, 1),
[createdBy] [bigint] NULL,
[modifiedBy] [bigint] NULL,
[createdTime] [datetime] NULL,
[updatedTime] [datetime] NULL,
[statusID] [bigint] NULL,
[groupID] [bigint] NULL,
[AirplaneModelTypeID] [bigint] NULL,
[airplaneModelType] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL
) ON [PRIMARY]
GO
ALTER TABLE [wsrd].[AirplaneModel] ADD CONSTRAINT [airplaneModelID_PK] PRIMARY KEY CLUSTERED  ([airplaneModelID]) WITH (FILLFACTOR=90) ON [PRIMARY]
GO
ALTER TABLE [wsrd].[AirplaneModel] ADD CONSTRAINT [AirplaneModelTypeID_PK] FOREIGN KEY ([AirplaneModelTypeID]) REFERENCES [wsrd].[AirplaneModelType] ([airplaneModelTypeID])
GO
ALTER TABLE [wsrd].[AirplaneModel] ADD CONSTRAINT [AirplaneModel_createdBy_PK] FOREIGN KEY ([createdBy]) REFERENCES [wsrd].[BEMS] ([bemsID])
GO
ALTER TABLE [wsrd].[AirplaneModel] ADD CONSTRAINT [AirplaneModel_GroupID_PK] FOREIGN KEY ([groupID]) REFERENCES [wsrd].[GroupDetail] ([groupI
rem kevin shibata
rem kkshibat@calpoly.edu
INSERT INTO modelList VALUES (1,1,'amc');
INSERT INTO modelList VALUES (2,2,'audi');
INSERT INTO modelList VALUES (3,3,'bmw');
INSERT INTO modelList VALUES (4,4,'buick');
INSERT INTO modelList VALUES (5,4,'cadillac');
INSERT INTO modelList VALUES (6,5,'capri');
INSERT INTO modelList VALUES (7,4,'chevrolet');
INSERT INTO modelList VALUES (8,6,'chrysler');
INSERT INTO modelList VALUES (9,7,'citroen');
INSERT INTO modelList VALUES (10,8,'datsun');
INSERT INTO modelList VALUES (11,6,'dodge');
INSERT INTO modelList VALUES (12,9,'fiat');
INSERT INTO modelList VALUES (13,5,'ford');
INSERT INTO modelList VALUES (14,10,'hi');
INSERT INTO modelList VALUES (15,11,'honda');
INSERT INTO modelList VALUES (16,12,'mazda');
INSERT INTO modelList VALUES (17,13,'mercedes');
INSERT INTO modelList VALUES (18,13,'mercedes-benz');
INSERT INTO modelList VALUES (19,5,'mercury');
INSERT INTO modelList VALUES (20,8,'nissan');
INSERT INTO modelList VALUES (21,4,'oldsmobi
-- Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
-- 
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
-- 
--      http://www.apache.org/licenses/LICENSE-2.0
-- 
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
##  drop read_coverage table
DROP TABLE read_coverage;
## remove meta entries
DELETE FROM meta WHERE meta_key like 'read_coverage%';
## remove meta_coord entry
DELETE FROM meta_coord WHERE table_name = 'read_coverage';
#patch identifier
INSERT INTO meta (species_id, meta_key, meta_value) VALUES (NULL, 'patch', 'patch_74_75_b.sql|Dro
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCHScheme_HeaderGetAllByIFA]    Script Date: 02/13/2012 17:17:21 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCHScheme_HeaderGetAllByIFA]
@param_IFA_ID		NVARCHAR(50),
@param_ClientName	NVARCHAR(50),
@param_Company		NVARCHAR(50),
@param_Status		INT,
@param_StartDate	NVARCHAR(10),
@param_EndDate		NVARCHAR(10)
AS
BEGIN
	SELECT 
		 SH.SwitchID
		,SH.SchemeID
		,SH.ClientID 
		,SH.Status 
		,SH.Date_Created
		,SH.Created_By
		,SH.SecurityCodeAttempt
		,SH.Description
	FROM NavIntegrationDB.dbo.SwitchSchemeHeader SH 
	INNER JOIN NavGlobalDBwwwGUID.dbo.Scheme Sch on Sch.ClientID = SH.ClientID AND Sch.SchemeID = SH.SchemeID
	INNER JOIN NavGlobalDBwwwGUID.dbo.Client C ON C.ClientID = SH.ClientID
	INNER JOIN NavGlobalDBwwwGUID.dbo.ClientWebDetails CWD ON CWD.ClientID = SH.ClientID
	INNER JOIN NavGlobalDBwwwGUID.dbo.Company CO ON CO.CompanyID = Sch.Company
	WHERE C.IFA_ID = @param_IFA_ID

  --Contact View
SELECT dropIfExists('VIEW', 'contact', 'api');
  CREATE OR REPLACE VIEW api.contact AS
  SELECT 
    cntct_number::varchar AS contact_number,
    cntct_honorific AS honorific,
    cntct_first_name AS first,
    cntct_middle AS middle,
    cntct_last_name AS last,
    cntct_suffix AS suffix,
    cntct_initials AS initials,
    crmacct_number AS crm_account,
    cntct_active AS active,
    cntct_title AS job_title,
    cntct_phone AS voice,
    cntct_phone2 AS alternate,
    cntct_fax AS fax,
    cntct_email AS email,
    cntct_webaddr AS web,
    ''::TEXT AS contact_change, 
    addr_number AS address_number,
    addr_line1 AS address1,
    addr_line2 AS address2,
    addr_line3 AS address3,
    addr_city AS city,
    addr_state AS state,
    addr_postalcode AS postal_code,
    addr_country AS country,
    cntct_notes AS notes, 
    ''::TEXT AS address_change
  FROM
    cntct
      LEFT OUTER JOIN addr ON (cntct_addr_id=addr_id)
      LEFT OUTER JOIN crmacct ON (cntct_c

GRANT ALL ON TABLE api.contact TO xtrole;
COMMENT ON VIEW api.contact IS 'Contact';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.contact DO INSTEAD
SELECT saveCntct(
	  NULL,
          NEW.contact_number,
          getCrmAcctid(NEW.crm_account),
          saveAddr(
            CASE WHEN NOT EXISTS (SELECT addr_id FROM addr WHERE addr_number = NEW.address_number) THEN NULL ELSE getaddrid(new.address_number) END,
            NEW.address_number,
            NEW.address1,
            NEW.address2,
            NEW.address3,
            NEW.city,
            NEW.state,
            NEW.postal_code,
            NEW.country,
            NEW.address_change),
          NEW.honorific,
          NEW.first,
          NEW.middle,
          NEW.last,
          NEW.suffix,
          NEW.initials,
          COALESCE(NEW.active,TRUE),
          NEW.voice,
          NEW.alternate,
          NEW.fax,
          NEW.email,
          NEW.web,
          NEW.notes,
          NEW.job_title,


          );
CREATE OR REPLACE RULE "_UPDATE" AS
    ON UPDATE TO api.contact DO INSTEAD
SELECT saveCntct(
          getCntctId(NEW.contact_number),
          NEW.contact_number,
          getCrmAcctid(NEW.crm_account),
          saveAddr(
            getAddrId(NEW.address_number),
            NEW.address_number,
            NEW.address1,
            NEW.address2,
            NEW.address3,
            NEW.city,
            NEW.state,
            NEW.postal_code,
            NEW.country,
            NEW.address_change),
          NEW.honorific,
          NEW.first,
          NEW.middle,
          NEW.last,
          NEW.suffix,
          NEW.initials,
          NEW.active,
          NEW.voice,
          NEW.alternate,
          NEW.fax,
          NEW.email,
          NEW.web,
          NEW.notes,
          NEW.job_title,
          NEW.contact_change
          );
CREATE OR REPLACE RULE "_DELETE" AS
    ON DELETE TO api.contact DO INSTEAD
DELETE FROM cntct WHERE (cntct_number=OLD.contact
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_PortfolioDetailsGet]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_PortfolioDetailsGet] 
@param_strClientID nvarchar(50),
@param_strPortfolioID nvarchar(50)
AS
BEGIN
	SET NOCOUNT ON;
	select         
			ClientID, 
			PortfolioID, 
			PortfolioStartDate, 
			Company, 
			FundManagerWeb,                       
			CompanyID, 
			NameOfFund, 
			FundNameID, 
			Sector, 
			SectorID, 
			DataDate,                 
			ClientCurrency, 
			PortfolioCurrency, 
			NumberOfUnits, 
			Price, 
			SEDOL,         
			PurchaseCostFund, 
			FundCurrency, 
			PurchaseCostPortfolio,                 
			CurrentValuePortfolio,                 
			CurrentValueClient,         
			AllocationPercent,
			GainOrLossPercent,                       
            GainOrLossPortfolio, 
            PortfolioType, 
            PortfolioTypeID, 
            AccountNumber,
CREATE TABLE [Production].[ProductModel]
[ProductModelID] [int] NOT NULL IDENTITY(1, 1),
[Name] [dbo].[Name] NOT NULL,
[CatalogDescription] [xml] (CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,
[Instructions] [xml] (CONTENT [Production].[ManuInstructionsSchemaCollection]) NULL,
[rowguid] [uniqueidentifier] NOT NULL ROWGUIDCOL CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (newid()),
[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (getdate())
GO
ALTER TABLE [Production].[ProductModel] ADD CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED  ([ProductModelID])
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name] ON [Production].[ProductModel] ([Name])
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_rowguid] ON [Production].[ProductModel] ([rowguid])
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription]
ON [Production].[ProductModel] ([CatalogDescription])
GO
CREATE PRIMARY XML INDEX [PXML_ProductMo

ON [Production].[ProductModel] ([Instructions])
GO
EXEC sp_addextendedproperty N'MS_Description', N'Product model classification.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', NULL, NULL
GO
EXEC sp_addextendedproperty N'MS_Description', N'Detailed product catalog information in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'CatalogDescription'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Manufacturing instructions in xml format.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Instructions'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Product model description.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'Name'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key for ProductModel records.', 'SCHEMA', N'Production', 'T

GO
EXEC sp_addextendedproperty N'MS_Description', N'ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'COLUMN', N'rowguid'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of NEWID()', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'DF_ProductModel_rowguid'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'CONSTRAINT', N'PK_ProductModel_ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Unique nonclustered index.', 'SCHEMA', N'Production', 'TABLE', N'ProductModel', 'INDEX', N'AK_ProductModel_Name'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Un
-- Incident View
SELECT dropIfExists('VIEW', 'incident', 'api');
CREATE OR REPLACE VIEW api.incident AS
  SELECT
    incdt_number AS incident_number,
    incdtcat_name AS category,
    incdt_summary AS description,
    crmacct_number AS crm_account,
    incdt_assigned_username AS assigned_to,
    CASE
      WHEN incdt_status='N' THEN
        'New'
      WHEN incdt_status='F' THEN
        'Feedback'
      WHEN incdt_status='C' THEN
        'Confirmed'
      WHEN incdt_status='A' THEN
        'Assigned'
      WHEN incdt_status='R' THEN
        'Resolved'
      WHEN incdt_status='L' THEN
        'Closed'
      ELSE
        '?'
    END AS status,
    incdtseverity_name AS severity,
    incdtpriority_name AS priority,
    incdtresolution_name AS resolution,
    cntct_number AS contact_number,
    cntct_honorific AS honorific,
    cntct_first_name AS first,
    cntct_middle AS middle,
    cntct_last_name AS last,
    cntct_suffix AS suffix,
    cntct_title AS job_title,
    cntct_phone AS ph

    cntct_fax AS fax,
    cntct_email AS email,
    (''::TEXT) AS contact_change,
    incdt_descrip AS notes,
    item_number AS item_number,
    incdt_lotserial AS lot_serial_number,
    CASE
      WHEN aropen_doctype='C' THEN
        'C/M'
      WHEN aropen_doctype='D' THEN
        'D/M'
      WHEN aropen_doctype='I' THEN
        'Invoice'
      WHEN aropen_doctype='R' THEN
        'C/D'
      ELSE
        ''
    END AS ar_doc_type,
    aropen_docnumber AS ar_doc_number
  FROM incdt
     LEFT OUTER JOIN incdtcat ON (incdtcat_id=incdt_incdtcat_id)
     LEFT OUTER JOIN crmacct ON (crmacct_id=incdt_crmacct_id)
     LEFT OUTER JOIN incdtseverity ON (incdtseverity_id=incdt_incdtseverity_id)
     LEFT OUTER JOIN incdtpriority ON (incdtpriority_id=incdt_incdtpriority_id)
     LEFT OUTER JOIN incdtresolution ON (incdtresolution_id=incdt_incdtresolution_id)
     LEFT OUTER JOIN cntct ON (cntct_id=incdt_cntct_id)
     LEFT OUTER JOIN item ON (item_id=incdt_item_id)
     LEFT OUTER JOIN aropen

GRANT ALL ON TABLE api.incident TO xtrole;
COMMENT ON VIEW api.incident IS 'Incident';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.incident DO INSTEAD
  INSERT INTO incdt (
    incdt_number,
    incdt_crmacct_id,
    incdt_cntct_id,
    incdt_summary,
    incdt_descrip,
    incdt_item_id,
    incdt_status,
    incdt_assigned_username,
    incdt_incdtcat_id,
    incdt_incdtseverity_id,
    incdt_incdtpriority_id,
    incdt_incdtresolution_id,
    incdt_lotserial,
    incdt_ls_id
    )
  VALUES (
    NEW.incident_number,
    getCrmAcctId(NEW.crm_account),
    saveCntct(
      getCntctId(NEW.contact_number),
      NEW.contact_number,
      NULL,
      NEW.honorific,
      NEW.first,
      NEW.middle,
      NEW.last,
      NEW.suffix,
      NEW.phone,
      NULL,
      NEW.fax,
      NEW.email,
      NULL,
      NEW.job_title,
      NEW.contact_change),
    COALESCE(NEW.description, ''),
    COALESCE(NEW.notes, ''),
    getItemId(NEW.item_number),
    CASE
      WHEN 
INSERT INTO `#__extensions` (`extension_id`, `name`, `type`, `element`, `folder`, `client_id`, `enabled`, `access`, `protected`, `manifest_cache`, `params`, `custom_data`, `system_data`, `checked_out`, `checked_out_time`, `ordering`, `state`) VALUES
(28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2017 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '0000-00-00 00:00:00', 0, 0);
INSERT INTO `#__menu` (`menutype`, `title`, `alias`, `note`, `path`, `link`, `type`, `published`, `parent_id`, `level`, `component_id`, `ordering`, `checked_out`, `checked_out_time`, `browserNav`, `access`, `img`, `template_style_id`, `params`, `lft`, `rgt`, `home`, `language`, `client_id`) VA
CREATE TABLE func_import_project_delta(
    change_uuid VARCHAR(40) NOT NULL,
    project_uuid VARCHAR(40) NOT NULL,
    parent_uuid VARCHAR(40),
    project_status_uuid VARCHAR(40),
    hub_uuid VARCHAR(40),
    name VARCHAR(40),
    title VARCHAR(1024)
);
CREATE TRIGGER
    func_import_project_delta_bi_1
BEFORE INSERT ON
    func_import_project_delta
FOR EACH ROW
BEGIN
    SELECT debug(
        NEW.change_uuid,
        NEW.project_uuid,
        NEW.parent_uuid,
        NEW.project_status_uuid,
        NEW.hub_uuid,
        NEW.name,
        NEW.title
    );
    INSERT INTO
        func_update_project(
            change_id,
            id,
            parent_id,
            project_status_id,
            hub_id,
            name,
            title
        )
    SELECT
        c.id,
        projects.id,
        parents.id,
        project_status.id,
        hubs.id,
        NEW.name,
        NEW.title
    FROM
        topics AS projects
    INNER JOIN
        changes c
    ON
        
ALTER TABLE SPQL_STOCK_PAYABLE_QTY_LOG DROP COLUMN IN_PROCESS_STOCK_ID;
ALTER TABLE SPQ_STOCK_PAYABLE_QTY DROP COLUMN IN_PROCESS_STOCK_ID;
CREATE OR REPLACE TRIGGER "TRG_INSERT_SPQL" 
AFTER INSERT OR UPDATE
ON SPQ_STOCK_PAYABLE_QTY FOR EACH ROW
BEGIN
   IF UPDATING
   THEN
      IF    :NEW.IS_ACTIVE = 'Y'
      THEN
         --Qty Unit is Not Updated
         IF :NEW.QTY_UNIT_ID = :OLD.QTY_UNIT_ID
         THEN
            INSERT INTO SPQL_STOCK_PAYABLE_QTY_LOG
                        (SPQ_ID,
                        INTERNAL_GMR_REF_NO, 
                        STOCK_TYPE, 
                        INTERNAL_GRD_REF_NO, 
                        INTERNAL_DGRD_REF_NO,  
                        ACTION_NO, 
                        INTERNAL_ACTION_REF_NO,   
                        ELEMENT_ID, 
                        PAYABLE_QTY_DELTA, 
                        QTY_UNIT_ID,
                        QTY_TYPE,
                        ACTIVITY_ACTION_ID,
                        IS_STOCK_SPLIT,
 

                        SMELTER_ID,
                        FREE_METAL_STOCK_ID,
                        FREE_METAL_QTY, 
                        VERSION, 
                        ENTRY_TYPE, 
                        IS_ACTIVE  
                          
                       )
                VALUES (:NEW.SPQ_ID,
                        :NEW.INTERNAL_GMR_REF_NO,
                        :NEW.STOCK_TYPE, 
                        :NEW.INTERNAL_GRD_REF_NO, 
                        :NEW.INTERNAL_DGRD_REF_NO, 
                        :NEW.ACTION_NO,   
                        :NEW.INTERNAL_ACTION_REF_NO,  
                        :NEW.ELEMENT_ID, 
                        :NEW.PAYABLE_QTY - :OLD.PAYABLE_QTY, 
                        :NEW.QTY_UNIT_ID,
                        :NEW.QTY_TYPE,
                        :NEW.ACTIVITY_ACTION_ID,
                        :NEW.IS_STOCK_SPLIT,
                        :NEW.SUPPLIER_ID,
                        :NEW.SMELTER_ID,
                        :N

                        :NEW.FREE_METAL_QTY - :OLD.FREE_METAL_QTY,  
                        :NEW.VERSION, 
                        'Update', 'Y'
                       );
         ELSE
            --Qty Unit is Updated
            INSERT INTO SPQL_STOCK_PAYABLE_QTY_LOG
                        (SPQ_ID,
                        INTERNAL_GMR_REF_NO, 
                        STOCK_TYPE, 
                        INTERNAL_GRD_REF_NO, 
                        INTERNAL_DGRD_REF_NO,  
                        ACTION_NO, 
                        INTERNAL_ACTION_REF_NO,   
                        ELEMENT_ID, 
                        PAYABLE_QTY_DELTA, 
                        QTY_UNIT_ID,
                        QTY_TYPE,
                        ACTIVITY_ACTION_ID,
                        IS_STOCK_SPLIT,
                        SUPPLIER_ID,
                        SMELTER_ID,
                        FREE_METAL_STOCK_ID,
                        FREE_METAL_QTY, 
                        VERSION, 
  
-- Add option conditions for Warrior trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (523,655,656,4091,4475,4481,4482,4509,4511,4525,4526,4527,4546,4547,4548,4568,4569,4570,4578,4579,4581,4645,4649,4650,4653,4683,4684,4696,4697,7263);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,523,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,523,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,523,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,655,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,655,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,655,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,656,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior

(15,656,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,656,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4091,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4091,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4091,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4475,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4475,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4475,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4481,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4481,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4481,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4482,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4482,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4482,2,0,15,1,0,0,0,'','Show gossip option if pl

(15,4509,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4509,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4509,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4511,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4511,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4511,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4525,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4525,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4525,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4526,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4526,1,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4526,2,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4527,0,0,15,1,0,0,0,'','Show gossip option if player is a Warrior'),
(15,4527,1,0,15,1,0,0,0,'','Show gossip option if 
IF OBJECT_ID('dbo.wsp_updProfileShowPref') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_updProfileShowPref
    IF OBJECT_ID('dbo.wsp_updProfileShowPref') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_updProfileShowPref >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_updProfileShowPref >>>'
END
go
  /*************************************************************************
**
**
** CREATION:
**   Author:  Jack Veiga
**   Date:  June 7 2002
**   Description:  Updates show preferences for a given user id
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
**************************************************************************/
CREATE PROCEDURE wsp_updProfileShowPref
 @productCode   CHAR(1)
,@communityCode CHAR(1)
,@userId numeric(12,0)
AS
BEGIN TRAN TRAN_updProfileShowPref
    UPDATE a_profile_dating SET
    show_prefs = LOWER(show_prefs)
    WHERE user_id = @userId
    AND show_prefs = UPPER(show_prefs)
    IF @@rowcount = 1
        BEGIN
    
col filetype_name 	format a40 heading "File Type"
col reads 			format 999,999,999 heading "Reads"
col writes 			format 999,999,999 heading "Writes"
col read_time_sec 	format 999,999 heading "Read Time|sec"
col write_time_sec 	format 999,999 heading "Write Time|sec"
col avg_sync_read_ms format 999.99 heading "Avg Sync|Read ms"
col total_io_seconds format 999,999,999 heading "Total IO|sec"
WITH iostat_file AS 
  (SELECT filetype_name,SUM(large_read_reqs) large_read_reqs,
          SUM(large_read_servicetime) large_read_servicetime,
          SUM(large_write_reqs) large_write_reqs,
          SUM(large_write_servicetime) large_write_servicetime,
          SUM(small_read_reqs) small_read_reqs,
          SUM(small_read_servicetime) small_read_servicetime,
          SUM(small_sync_read_latency) small_sync_read_latency,
          SUM(small_sync_read_reqs) small_sync_read_reqs,
          SUM(small_write_reqs) small_write_reqs,
          SUM(small_write_servicetime) small_write_servicetime
     
EXEC BRAND_PKG.NEW('Isopure');
EXEC BRAND_PKG.NEW('Regal Spring');
EXEC BRAND_PKG.NEW('Food City');
EXEC BRAND_PKG.NEW('Mahatma');
EXEC BRAND_PKG.NEW('Healthy Harvest');
EXEC BRAND_PKG.NEW('Nature''s Own');
EXEC BRAND_PKG.NEW('Chobani');
EXEC BRAND_PKG.NEW('Quaker Oats');
EXEC BRAND_PKG.NEW('Fage');
EXEC CATEGORY_PKG.NEW('Proteins');
EXEC CATEGORY_PKG.NEW('Dairy');
EXEC CATEGORY_PKG.NEW('Carbs');
EXEC CATEGORY_PKG.NEW('Other');
EXEC GENDER_PKG.NEW('MALE');
EXEC GENDER_PKG.NEW('FEMALE');
EXEC WEEKDAY_PKG.NEW('SUNDAY');
EXEC WEEKDAY_PKG.NEW('MONDAY');
EXEC WEEKDAY_PKG.NEW('TUESDAY');
EXEC WEEKDAY_PKG.NEW('WEDNESDAY');
EXEC WEEKDAY_PKG.NEW('THURSDAY');
EXEC WEEKDAY_PKG.NEW('FRIDAY');
EXEC WEEKDAY_PKG.NEW('SATURDAY');
INSERT INTO UNIT_SYSTEM VALUES('IMPERIAL');
INSERT INTO UNIT_SYSTEM VALUES('METRIC');
COMMIT;
EXEC FORMULA_PKG.NEW('MIFFLIN-ST JOER', 'METRIC');
EXEC FORMULA_PKG.NEW('HARRIS-BENEDICT');
EXEC FORMULA_PKG.NEW('SIMPLE MULTIPLIER');
EXEC MULTIPLIER_PKG.NEW('SEDENTARY', 1.2);
EXEC

EXEC MULTIPLIER_PKG.NEW('MODERATELY ACTIVE', 1.55);
EXEC MULTIPLIER_PKG.NEW('VERY ACTIVE', 1.725);
EXEC MULTIPLIER_PKG.NEW('EXTREMELY ACTIVE', 1.9);
EXEC FOOD_UNIT_PKG.NEW('g', 'gram');
EXEC FOOD_UNIT_PKG.NEW( 'mL', 'millileter');
EXEC FOOD_UNIT_PKG.NEW('oz', 'ounce');
EXEC FOOD_UNIT_PKG.NEW('unit', 'unit');
EXEC FOOD_UNIT_PKG.NEW('c', 'cup');
EXEC FOOD_UNIT_PKG.NEW('tbsp', 'tablespoon');
EXEC FOOD_UNIT_PKG.NEW('tsp', 'teaspoon');
EXEC FOOD_UNIT_PKG.NEW('unknown', 'unknown');
EXEC FOOD_UNIT_PKG.NEW('scoop', 'scoop');
EXEC INGREDIENT_PKG.NEW('Chicken Breast', 'Food City', 'Proteins', 4, 'oz', 112, 'g', 140, 4, 0, 25);
EXEC INGREDIENT_PKG.NEW('Brown Rice', 'Mahatma', 'Carbs', 43, 'g', 0.5, 'c', 150, 1, 32, 3);
EXEC INGREDIENT_PKG.NEW('Zero Carb Isolate', 'Isopure', 'Proteins', 2, 'scoop', 54, 'g', 210, 1, 0, 50);
EXEC INGREDIENT_PKG.NEW('Skim Milk', 'Food City', 'Dairy', 8, 'oz', 1, 'unit', 90, 0, 13, 8);
EXEC INGREDIENT_PKG.NEW('0% Greek Yogurt', 'Fage', 'Dairy', 227, 'g', 1, 'c', 140,

EXEC MEAL_PKG.NEW('300g Chicken Breast', '300g Chicken breast with random veggies');
EXEC MEAL_PKG.NEW('Isopure Protein shake', '1 scoop isopure protein, 227g greek yogurt, 8oz milk mixed together in a blender with 10 ice cubes.');
EXEC MEAL_PART_PKG.NEW(0, 0, 300, 1);
EXEC MEAL_PART_PKG.NEW(1, 2, 1, 0);
EXEC MEAL_PART_PKG.NEW(1, 3, 8, 0);
EXEC MEAL_PART_PKG.NEW(1, 4, 227, 0);
-- account(example, example);
EXEC ACCOUNT_PKG.NEW('example','0ae67f13ff97fe8ab96520407b08b5b9e4dbf06ff5feeaf61ddf4cbb0a61bbba0d94766d0201c790e5e2287a94f3be0f3d11f3dee2b1132f7c9f49d0511312b0');
EXEC ACCOUNT_PKG.UPDATEACCOUNT(0,'MALE','IMPERIAL',TO_DATE('01-JAN-90'));
EXEC ACCOUNT_SETTING_PKG.NEW(0,'TUESDAY','SEDENTARY',71);
EXEC WEIGHT_PKG.NEW(0,TO_DATE('10-FEB-14'),180);
EXEC WEIGHT_PKG.NEW(0,TO_DATE('11-FEB-14'),181);
EXEC WEIGHT_PKG.NEW(0,TO_DATE('12-FEB-14'),182);
EXEC WEIGHT_PKG.NEW(0,TO_DATE('13-FEB-14'),180);
EXEC WEIGHT_PKG.NEW(0,TO_DATE('14-FEB-14'),179);
EXEC DAILY_INTAKE_PKG.NEW(0,TO_DATE('10-FEB-14')
select xt.create_view('xt.todoiteminfo', $$
   select todoitem.*, coalesce(incdtpriority_order, 99999) as priority_order,
     crmacct_number, cntct_number, incdt_number::text, ophead_number,
     case
      when todoitem.todoitem_status = 'P' OR todoitem.todoitem_status = 'D' then todoitem.todoitem_status
      else 'N'
     end as status_proxy
   from todoitem
     left join incdtpriority on todoitem_priority_id=incdtpriority_id
     left join crmacct on crmacct_id = todoitem_crmacct_id
     left join cntct on cntct_id = todoitem_cntct_id
     left join incdt on incdt_id = todoitem_incdt_id
     left join ophead on ophead_id = todoitem_ophead_id;
$$,false);
create or replace rule "_INSERT" as on insert to xt.todoiteminfo do instead
insert into todoitem (
  todoitem_id,
  todoitem_name,
  todoitem_description,
  todoitem_incdt_id,
  todoitem_status,
  todoitem_active,
  todoitem_start_date,
  todoitem_due_date,
  todoitem_assigned_date,
  todoitem_completed_date,
  todoitem_notes,
  t

  todoitem_ophead_id,
  todoitem_owner_username,
  todoitem_priority_id,
  todoitem_username,
  todoitem_recurring_todoitem_id,
  todoitem_cntct_id,
  obj_uuid
) values (
  new.todoitem_id,
  new.todoitem_name,
  new.todoitem_description,
  new.todoitem_incdt_id,
  new.todoitem_status,
  new.todoitem_active,
  new.todoitem_start_date,
  new.todoitem_due_date,
  new.todoitem_assigned_date,
  new.todoitem_completed_date,
  new.todoitem_notes,
  new.todoitem_crmacct_id,
  new.todoitem_ophead_id,
  new.todoitem_owner_username,
  new.todoitem_priority_id,
  coalesce(new.todoitem_username, geteffectivextuser()),
  new.todoitem_recurring_todoitem_id,
  new.todoitem_cntct_id,
  new.obj_uuid
);
create or replace rule "_UPDATE" as on update to xt.todoiteminfo do instead
update todoitem set
  todoitem_id=new.todoitem_id,
  todoitem_name=new.todoitem_name,
  todoitem_description=new.todoitem_description,
  todoitem_incdt_id=new.todoitem_incdt_id,
  todoitem_status=new.todoitem_status,
  todoitem_
/*
1-jan-10,lau@ciysys.com
- This table keeps a copy of the email sent by the server. The application may 
  append the message into this table and then the schedule mail routing program
  will responsible to send the email.
*/
if not exists(
	select *
	from sys.objects
	where name = 'tb_mail'
begin
	CREATE TABLE tb_mail (
		row_id BIGINT NOT NULL,
		row_guid UNIQUEIDENTIFIER NOT NULL,
		send_to_email NVARCHAR(MAX) NULL,
		cc_to_email NVARCHAR(MAX) NULL,
		subject NVARCHAR(255) NULL,
		body_text NVARCHAR(MAX) NULL,
		attach_file NVARCHAR(MAX) NULL,
		created_on DATETIME NULL,
		sent_status_id INT NULL,
		sent_on DATETIME NULL,
		mail_type_id INT NULL,
		reply_to NVARCHAR(MAX) NULL
	);
end
go
if not exists(
	select *
	from sys.objects
	where name = 'PK_tb_mail'
begin
	ALTER TABLE tb_mail ADD CONSTRAINT PK_tb_mail PRIMARY KEY (row_id);
end
go
if not exists(
	select *
	from sys.indexes
	where name = 'IX_tb_mail_2'
begin
	CREATE INDEX IX_tb_mail_2 ON tb_mail (sent_status_id);
end
go
if not
--------------------------------------------------------
-- Archivo creado  - jueves-junio-04-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ACTIVIDADES
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."ACTIVIDADES" 
   (	"NOMBRE" VARCHAR2(20 BYTE), 
	"FECHA" VARCHAR2(20 BYTE), 
	"HORA" VARCHAR2(20 BYTE), 
	"ID_USUARIO" NUMBER, 
	"ID_SESION" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ACTIVIDADES_SESIONES
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."ACTIVIDADES_SESIONES" 
   (	"NOMBRE" VARCHAR2(20 BYTE), 
	"DIA" VARC

	"HORA" VARCHAR2(20 BYTE), 
	"ID_SESION" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table FISIO
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."FISIO" 
   (	"ID" NUMBER, 
	"NOMBRE" VARCHAR2(20 BYTE), 
	"DESCRIPCION" VARCHAR2(500 BYTE), 
	"FECHA" VARCHAR2(20 BYTE), 
	"HORA" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ENTRENAMI

--------------------------------------------------------
  CREATE TABLE "SYSTEM"."ENTRENAMIENTOS" 
   (	"ID" NUMBER, 
	"NOMBRE" VARCHAR2(30 BYTE), 
	"ARCHIVO" BLOB
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 LOB ("ARCHIVO") STORE AS BASICFILE (
  TABLESPACE "SYSTEM" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table PISTAS
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."PISTAS" 
   (	"NOMBRE" VARCHAR2(20 BYTE), 
	"FECHA" VARCHAR2(20 BYTE), 
	"HORA" VARC
-- MySQL Administrator dump 1.4
--
-- ------------------------------------------------------
-- Server version	6.0.0-alpha-community-nt-debug
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
--
-- Create schema forbes
--
CREATE DATABASE IF NOT EXISTS forbes;
USE forbes;
--
-- Definition of table `fb_life_flash`
--
DROP TABLE IF EXISTS `fb_life_flash`;
CREATE TABLE `fb_life_flash` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `src` varchar(255) DEFAULT NULL,
  `category_id` int(10) unsigned DEFAULT NULL,
  `t
USE pdqBLAST;
CALL job_add("blastn", 1, "blastn arguments", "blast db", "input query", 2, "output_table_job1", @new_job_id);
CALL job_update_temporary_directory(@new_job_id, "temporary directory");
SELECT "";
SELECT CONCAT("created new job with job_id = ", @new_job_id);
CALL job_status_waiting(@new_job_id);
CALL job_status(@new_job_id);
SELECT "";
CALL job_work_unit_load_script(@new_job_id, 1, "/gscratch/escience/dacb/pdqBLAST/example.pdqBLASTrc");
CALL job_work_unit_status_submitted(@new_job_id, 1, "fake scheduler id");
CALL job_work_unit_status_staging(@new_job_id, 1, "node name", "local temporary directory");
CALL job_work_unit_load_stage_log(@new_job_id, 1, "/gscratch/escience/dacb/pdqBLAST/example.pdqBLASTrc");
CALL job_work_unit_status_running(@new_job_id, 1);
CALL job_work_unit_load_blast_log(@new_job_id, 1, "/gscratch/escience/dacb/pdqBLAST/example.pdqBLASTrc");
CALL job_work_unit_status_loading(@new_job_id, 1);
CALL job_work_unit_status_cleanup(@new_job_id, 1);
CALL job_work_u

CALL job_work_unit_status_complete(@new_job_id, 1);
CALL job_work_unit_status(@new_job_id);
CALL job_work_unit_status_submitted(@new_job_id, 2, "fake scheduler id");
CALL job_work_unit_status_staging(@new_job_id, 2, "node name", "local temporary directory");
CALL job_work_unit_status_running(@new_job_id, 2);
CALL job_work_unit_status_loading(@new_job_id, 2);
CALL job_work_unit_status_cleanup(@new_job_id, 2);
CALL job_work_unit_status_complete(@new_job_id, 2);
CALL job_work_unit_status(@new_job_id);
SELECT "";
CALL job_status(@new_job_id);
SELECT "";
SELECT "";
CALL job_add("blastn", 1, "blastn arguments", "blast db", "input query", 8, "output_table_job2", @new_job_id);
CALL job_update_temporary_directory(@new_job_id, "temporary directory");
SELECT CONCAT("created new job with job_id = ", @new_job_id);
SELECT "";
CALL job_status(@new_job_id);
SELECT "";
CALL job_work_unit_status(@new_job_id);
SELECT "";
CALL job_status(1);
SELECT "";
CALL job_work_unit_node(2, 1, @node);
SELECT "node f
create table JsonOrderDetails(BrandID Number(1), TriggerType Number(10), OrderNumber Number(20));
set define off;
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','NumberOfThreads',0,0,'7',null);
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','NumberOfThreads',1,0,'10','Quill');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,0,'ReadWriteJson_1_0',null);
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,1,'ReadWriteJson_1_1','Shipped');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,4,'ReadWriteJson

Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,5,'ReadWriteJson_1_5','Delivered');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,13,'ReadWriteJson_1_13','Item in Stock:30 day');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,14,'ReadWriteJson_1_14','In-stock update:30 day');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,15,'ReadWriteJson_1_15','Item Discontinued:30 day');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,16,'ReadWriteJson_1_16','Price decrease alert

Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,17,'ReadWriteJson_1_17','Price target alert');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',1,18,'ReadWriteJson_1_18','Price alert');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',2,0,'ReadWriteJson_2_0',null);
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',2,1,'ReadWriteJson_2_1','Shipped');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGKEY,BRANDID,TRIGGERTYPE,CONFIGVALUE,DESCRIPTION) values ('QueueConfig','ReadWriteJson','QueueName',2,2,'ReadWriteJson_2_2','DDLV');
Insert into configuration (CONTEXT,SUBCONTEXT,CONFIGK
﻿CREATE VIEW dbo.View_PaidCommissionGraph
AS
SELECT     CustomerID, CustomerName, SupplierID, SupplierName, Delivered, SUM(PaidCommissionAmount) AS PriceInEuro, YEAR(CommissionPaymentDate) AS Year, BranchID, CompanyCode
FROM         dbo.new_ViewSubCommissionGraph
GROUP BY CustomerID, CustomerName, SupplierID, SupplierName, YEAR(CommissionPaymentDate), Delivered, BranchID, CompanyCode
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'View_PaidCommissionGraph';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin 

         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         Num

         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "new_ViewSubCommissionGraph"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 126
               Right = 284
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
        
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE VIEW [dbo].[FirstContact]
AS
SELECT
	CONTACT_ID,
	Agent_ID
FROM	
	(
		SELECT
			CONTACT_ID,
			Agent_ID,
			ROW_NUMBER() OVER (PARTITION BY CONTACT_ID ORDER BY INSERT_DATE) rn
		FROM
			dbo.CONTACT_NOTES
		WHERE
			(Agent_ID IS NOT NULL)
	) q
WHERE rn = 1
GO
EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Con

      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfigurati

         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "CONTACT_NOTES"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 241
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', 'SCHEMA', N'dbo', 'VIEW', N'FirstContact',
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_queststatus_seasonal`;
CREATE TABLE `character_queststatus_seasonal` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier',
  `quest` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Quest Identifier',
  `event` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Event Identifier',
  PRIMARY KEY (`guid`,`quest`),
  KEY `idx_guid` (`guid`)
) ENGINE=I
﻿CREATE VIEW dbo.v_TcksPerMinute
AS
SELECT     T.ID, COUNT(*) AS Count
FROM         dbo.t_Tick AS T INNER JOIN
                      dbo.t_Tick AS T1 ON T.Pair = T1.Pair AND T.StartDate BETWEEN DATEADD(n, - 1, T1.StartDate) AND T1.StartDate
GROUP BY T.ID
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      E

      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
  

         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "T"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "T1"
            Begin Extent = 
               Top = 6
               Left = 243
               Bottom = 114
               Right = 410
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         
--invoked in ./initdb.sql
--alter table io_objects rename to tbl_io_objects;
--alter sequence io_objects_id_seq rename to tbl_io_objects_id_seq;
grant all on tbl_io_objects_id_seq to public;
create or replace view io_objects as select * from f_sel_io_objects(NULL);
revoke all on tbl_io_objects from public;
grant all on io_objects to public;
create or replace rule "r_ins_io_objects" as on insert to "io_objects" do instead 
select "f_ins_io_objects" (new."unique_id", 
                           new."last_update", 
                           new."id", 
                           new."id_io_category", 
                           new."id_io_state", 
                           new."id_maclabel", 
                           new."author", 
                           new."id_sync_type", 
                           new."id_owner_org", 
                           new."name", 
                           new."table_name", 
                           new."description", 
                           ne

                           new."is_system", 
                           new."insert_time", 
                           new."is_completed", 
                           new."is_global", 
                           new."record_fill_color", 
                           new."record_text_color", 
                           new."id_search_template", 
                           new."ref_table_name",
                           new."id_io_type",
                           new."r_icon",
                           new."uuid_t");
create or replace rule "r_del_io_objects" as on delete to "io_objects" do instead select "f_del_io_objects"(old.id);
create or replace rule "r_upd_io_objects" as on update to "io_objects" do instead 
select "f_upd_io_objects" (new."unique_id", 
                           new."last_update", 
                           new."id", 
                           new."id_io_category", 
                           new."id_io_state", 
                           new."id_maclabel", 
   
-- ViewName : CompaniesByWorkgroup-CostCodes
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'BQM';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'CompaniesByWorkgroup-CostCodes'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq_count 

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
CREATE DATABASE  IF NOT EXISTS `dbmapizzle` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `dbmapizzle`;
-- MySQL dump 10.13  Distrib 5.1.40, for Win32 (ia32)
--
-- Host: localhost    Database: dbmapizzle
-- ------------------------------------------------------
-- Server version	5.1.51-community
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Dumping routines for database 'dbmapizzle'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQ
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
--
-- StatusView
--
CREATE function [dbo].[StatusView] (@ReadWrite varchar(5), @PermIDs varchar(MAX), @WhichLob int)
returns table
as
return (
                Select distinct someview.CSID as id,someview.descrip , SomeView.Status_type_id, SomeView.[Rank] /*,CSR.Access as Access*/ from
                                (
                                                select
                                                                cs.id as CSID,
                                                                ug.id as UGID,
                                                                cs.Status_type_id,
                                                                cs.descrip,
                                                                ug.permissionName,
                                                                cs.[Rank]
                                                from
                                                 

                                                                [Permissions] ug JOIN
                                                                intList(@PermIDs) i ON ug.ID = i.number
                                                Where
                                                                cs.Available = 1
                                                                AND
                                                                cs.Renewal_Status_ID = 0
                                                                AND
                                                                (
                                                                OnlyForLob is null OR
                                                                OnlyForLob = @WhichLob
                                                                )
                                ) someView left outer join
                                Contact_Status_Roles csr
                            

                                                                csr.group_id = SomeView.UGID
                                                                AND
                                                                csr.Status_id = SomeView.CSID
                WHERE
                                                                                (
                                                                                                (@ReadWrite = 'READ'  AND (Access=1 OR Access=3))
                                                                                                OR
                                                                                                (@ReadWrite = 'WRITE' AND (Access=2 OR Access=3))
                                                                                                OR
                                                                                                (@ReadWrite = 'BOTH'  AND access=3) 
                 
  CREATE TABLE "REFERENCIA"."TPRY_CONTRATOS" 
   (	"IDCONTRATO" NUMBER(*,0) NOT NULL ENABLE, 
	"FOLIOCONTRATO" VARCHAR2(20 BYTE), 
	"FECHACREACIONCONTRATO" DATE, 
	"PROYECTO" NUMBER(*,0), 
	"TIPOCONTRATO" NUMBER(*,0), 
	"DOCUMENTOOFICIAL" NUMBER(*,0), 
	"PROVEEDOR" NUMBER(*,0), 
	"PREFOLIO" NUMBER, 
	"MONTOCONTRATO" NUMBER, 
	"ESTATUSCONTRATO" NUMBER(*,0), 
	 CONSTRAINT "TPRY_CONTRATOS_PK" PRIMARY KEY ("IDCONTRATO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DATA"  ENABLE, 
	 CONSTRAINT "FK01_TPRY_CONTRATOS" FOREIGN KEY ("TIPOCONTRATO")
	  REFERENCES "REFERENCIA"."TGEN_TIPO_CONTRATO" ("IDTIPOCONTRATO") ENABLE, 
	 CONSTRAINT "FK02_TPRY_CONTRATOS" FOREIGN KEY ("DOCUMENTOOFICIAL")
	  REFERENCES "REFERENCIA"."TPRY_DOCS_OFICIALES" ("IDDOCUMENTO") ENABLE, 
	 CONSTRAINT 
-- MySQL dump 10.10
--
-- Host: localhost    Database: gnash
-- ------------------------------------------------------
-- Server version	5.0.22
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Table structure for table `test`
--
DROP TABLE IF EXISTS `test`;
CREATE TABLE `test` (
  `test-name` char(60) character set latin1 collate latin1_bin NOT NULL default '',
  `test-type` char(20) character set latin1 collate latin1_bin NOT NULL default ''
) 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fr_LastReadPost_LastReadPost]'))
	DROP PROCEDURE [dbo].[fr_LastReadPost_LastReadPost]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fr_LastReadPost_Update]'))
	DROP PROCEDURE [dbo].[fr_LastReadPost_Update]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE fr_LastReadPost_Update
	@ApplicationId uniqueidentifier,
	@ContentId uniqueidentifier,
	@UserId int,
	@LastReadContentId uniqueidentifier,
	@LastReadReplyCount int,
	@LastReadDate datetime
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @lastReadDateTbl datetime
	SELECT @lastReadDateTbl= LastReadDate FROM dbo.[fr_Forum_LastRead] WHERE ApplicationId = @ApplicationId AND ContentId = @ContentId AND UserId = @UserId
	IF @lastReadDateTbl IS NOT NULL AND @LastReadDate > @lastReadDateTbl
	BEGIN
		UPDATE dbo.[fr_Forum_LastRead] SET La
IF OBJECT_ID('dbo.wsp_newPaymentechTransaction') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newPaymentechTransaction
    IF OBJECT_ID('dbo.wsp_newPaymentechTransaction') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newPaymentechTransaction >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newPaymentechTransaction >>>'
END
go
/*******************************************************************
**
** CREATION:
**   Author:      Andy Tran
**   Date:        March 18 2005 
**   Description: Inserts row into PaymentechTransaction
**
** REVISION(S):
**   Author:
**   Date:
**   Description:
**
*******************************************************************/
CREATE PROCEDURE wsp_newPaymentechTransaction
 @transactionId   NUMERIC(12,0)
,@recordType      CHAR(1)
,@transactionText VARCHAR(255)
AS
DECLARE
 @return          INT
,@dateCreated     DATETIME
EXEC @return = dbo.wsp_GetDateGMT @dateCreated OUTPUT
IF @return != 0
    BEGIN
        RETURN @return
    END

﻿USE [LCCHPDev]
GO
DECLARE	@return_value int
select * from property where PropertyID = 11366
EXEC	@return_value = [dbo].[usp_upProperty]
		@PropertyID = 11366,
		@New_ConstructionTypeID = 3,
		@New_AreaID = 28,
		@New_isinHistoricDistrict = 0,
		@New_isRemodeled = 1,
		@New_RemodelDate = '20120524',
		@New_isinCityLimits = 1,
		@New_AddressLine1 = N'26 E. 8th St',
		@New_AddressLine2 = N'Apt 2',
		@New_City = N'Leadville',
		@New_State = N'CO',
		@New_Zipcode = N'80461',
		@New_YearBuilt = '1915',
		@New_Ownerid = NULL,
		@New_isOwnerOccuppied = 0,
		@New_ReplacedPipesFaucets = 1,
		@New_TotalRemediationCosts = 15871,
		@New_PropertyNotes = N'removed popcorn ceilings',
		@New_isResidential = 0,
		@New_isCurrentlyBeingRemodeled = 0,
		@New_hasPeelingChippingPaint = 0,
		@New_County = N'Lake',
		@New_isRental = 1,
		@DEBUG = 1
SELECT	'Return Value' = @return_value
GO
select * from property where PropertyID = 11366
/*
DECLARE @isinHIstoricDistrict bit, @ConstructionTypeID tinyint, @AreaID

	, @AddressLine1 varchar(100), @AddressLine2 varchar(100), @City varchar(50), @State char(2), @ZipCode varchar(12), @YearBuilt date
	, @OwnerID int, @isOwnerOccuppied bit, @ReplacedPipesFaucets tinyint, @TotalRemediationCosts money, @PropertyNotes varchar(3000)
	, @isResidential bit, @isCurrentlyBeingRemodeled bit, @hasPeelingChippingPaint bit, @County varchar(50), @isRental bit, @PropertyID int
update Property set isinHistoricDistrict = @isinHistoricDistrict, ConstructionTypeID = @ConstructionTypeID, AreaID = @AreaID, isRemodeled = @isRemodeled
, isinCityLimits = @isinCityLimits, AddressLine1 = @AddressLine1, AddressLine2 = @AddressLine2, City = @City, State = @State, ZipCode = @ZipCode
, isOwnerOccuppied = @isOwnerOccuppied, ReplacedPipesFaucets = @ReplacedPipesFaucets, TotalRemediationCosts = @TotalRemediationCosts
, isResidential = @isResidential, isCurrentlyBeingRemodeled = @isCurrentlyBeingRemodeled, hasPeelingChippingPaint = @hasPeelingChippingPaint
, County = @County, isRental
INSERT ALL
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(1,'DAVID','GIOIA','DAVIDEGIOIA@DAYREP.COM','4608 SMALL STREET','NEW YORK',10004,'NY','UNITED STATES'                       )
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(2,'MINNIE','WISNIEWSKI','MINNIEJWISNIEWSKI@ARMYSPY.COM','2018 FARNUM ROAD','NEW YORK',10048,'NY','UNITED STATES'           )
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(3,'ERLINE','CARLISLE','ERLINEGCARLISLE@DAYREP.COM','417 TAYLOR STREET','NEW YORK',10001,'NY','UNITED STATES'               )
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
V

INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(5,'MATTHEW ','NELSON','MATTHEWANELSON@TELEWORM.US','953 CHERRY RIDGE DRIVE','LE ROY',14482,'NY','UNITED STATES'            )
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(6,'SARAH ','BAKER','SARAHLBAKER@TELEWORM.US','3837 NUZUM COURT','BUFFALO',14214,'NY','UNITED STATES'                       )
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(7,'KRISTINA','JENSEN','KRISTINADJENSEN@DAYREP.COM','400 BELL STREET','NEW YORK',10019,'NY','UNITED STATES'                 )
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(8,'D

INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(9,'SUSAN ','GRAHAM','SUSANDGRAHAM@DAYREP.COM','3216 STANLEY AVENUE','GARDEN CITY',11530,'NY','UNITED STATES'               )
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(10,'JEREMY ','COURTNEY','JEREMYMCOURTNEY@DAYREP.COM','3592 HINKLE DEEGAN LAKE ROAD','BINGHAMTON',13901,'NY','UNITED STATES')
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(11,'TERRY ','DOLAN','TERRYJDOLAN@JOURRAPIDE.COM','1736 GENEVA STREET','NEW YORK',10016,'NY','UNITED STATES'                )
INTO CUSTOMERS(CUSTOMER_ID,CUSTOMER_FIRST,CUSTOMER_LAST,CUSTOMER_EMAIL,CUSTOMER_ADDRESS,CUSTOMER_CITY,CUSTOMER_ZIP,CUSTOMER_STATE,CUSTOMER_COUNTRY)
VALUES(12,'
/* This file defines the new udfs for Firebird. */
set sql dialect 3;
/*
drop external function bbudf_file_get_contents;
drop external function bbudf_file_put_contents;
drop external function bbudf_tempnam;
drop external function bbudf_mkpath;
drop external function bbudf_dirname;
drop external function bbudf_unlink;
*/
--FBUDF_API void fn_file_get_contents(const char* filename, blobcallback* outblob)
declare external function bbudf_file_get_contents cstring(512) character set utf8, blob returns parameter 2 entry_point 'fn_file_get_contents' module_name 'libbbudf';
--FBUDF_API int fn_file_put_contents(const char* filename, blobcallback* inblob, int* mode, int* append)
declare external function bbudf_file_put_contents cstring(512) character set utf8,blob,integer null,integer null returns integer by value entry_point 'fn_file_put_contents' module_name 'libbbudf';
--FBUDF_API char* fn_tempnam(const char *dir, const char *pfx, paramdsc* rc)
declare external function bbudf_tempnam cstring(6
SET DEFINE OFF;
CREATE TABLE L_ACCAPBATCHDETAIL
  BATCHID           VARCHAR2(40 BYTE)           NOT NULL,
  RESNUMBER         NUMBER(18)                  NOT NULL,
  SERVICESEQ        INTEGER                     NOT NULL,
  SUPPLIERID        VARCHAR2(15 BYTE),
  SUPPLIERNAME      VARCHAR2(50 BYTE),
  PAYTO             VARCHAR2(50 BYTE),
  BILLAMT           NUMBER(18,2),
  PAYAMT            NUMBER(18,2),
  ESTIMATE          NUMBER(18,2),
  VARIANCE          NUMBER(18,2),
  DUEDATE           DATE,
  FULLPAYMENT       CHAR(1 BYTE),
  GAINLOSSEXCHRATE  FLOAT(126),
  REMARKS           VARCHAR2(500 BYTE),
  DESCRIPTION       VARCHAR2(250 BYTE)
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      
DROP VIEW vista_propiedad_objeto_4;
DROP VIEW vista_script_claves_foraneas;
DROP VIEW vista_script_indices;
DROP VIEW vista_script_indices_unicos;
DROP VIEW vista_script_tablas;
DROP VIEW vista_propiedad_objeto_3;
DROP VIEW vista_script_claves_foraneas_clases_121;
DROP VIEW vista_script_claves_foraneas_clases_122;
DROP VIEW vista_script_claves_foraneas_clases_123;
DROP VIEW vista_script_claves_foraneas_clases_21;
DROP VIEW vista_script_claves_foraneas_clases_221;
DROP VIEW vista_script_claves_foraneas_clases_222;
DROP VIEW vista_script_claves_foraneas_clases_223;
DROP VIEW vista_script_claves_foraneas_clases_321;
DROP VIEW vista_script_claves_foraneas_clases_322;
DROP VIEW vista_script_claves_foraneas_clases_323;
DROP VIEW vista_script_indices_clases_12;
DROP VIEW vista_script_indices_clases_21;
DROP VIEW vista_script_indices_clases_22;
DROP VIEW vista_script_indices_clases_32;
DROP VIEW vista_script_indices_unicos_clases_12;
DROP VIEW vista_script_indices_unicos_clases_22;
DROP VIEW v

DROP VIEW vista_script_indices_unicos_clases_42;
DROP VIEW vista_script_indices_unicos_clases_51;
DROP VIEW vista_script_indices_unicos_clases_52;
DROP VIEW vista_script_indices_unicos_clases_62;
DROP VIEW vista_script_tablas_clases_12;
DROP VIEW vista_script_tablas_clases_21;
DROP VIEW vista_script_tablas_clases_22;
DROP VIEW vista_script_tablas_clases_32;
DROP VIEW vista_propiedad_clase_3;
DROP VIEW vista_propiedad_objeto_2;
DROP VIEW vista_script_propiedad_clase_3;
DROP VIEW relacion_rastro_funcion_parametro;
DROP VIEW vista_propiedad_clase_2;
DROP VIEW vista_propiedad_objeto_1;
DROP VIEW vista_script_claves_primarias;
DROP VIEW vista_script_propiedad_clase_2;
DROP VIEW favoritos;
DROP VIEW lista_objeto;
DROP VIEW lista_recurso;
DROP VIEW movimiento_retiro_defuncion;
DROP VIEW movimiento_retiro_jubilacion;
DROP VIEW movimiento_retiro_puesto;
DROP VIEW nota_extraordinaria;
DROP VIEW nota_regular;
DROP VIEW nota_resolucion;
DROP VIEW relacion_rastro_funcion;
DROP VIEW relacion_rastro
/*
Przemysław Pastuszka
Perspektywy i reguły
Perspektywy i reguły służą do okrojenia możliwości update'u - w sposób, jaki został opisany w modelu konceptualnym
Ponadto perspektywa 'uzytkownik_bez_hasla' pozwala na ukrycie haseł użytkowników
*/
drop view if exists uzytkownik_bez_hasla cascade;
drop view if exists komentarz_modyfikacja cascade;
drop view if exists wycieczka_modyfikacja cascade;
drop view if exists trasa_modyfikacja cascade;
drop view if exists kategoria_modyfikacja cascade;
--tworzenie widoków
create view uzytkownik_bez_hasla as select nick, nazwisko, imie, opis, rodzaj_roweru from uzytkownik;
create view komentarz_modyfikacja as select * from komentarz;
create view wycieczka_modyfikacja as select * from wycieczka;
create view trasa_modyfikacja as select * from trasa;
create view kategoria_modyfikacja as select * from kategoria;
--tworzenie reguł edycji
create rule edytuj_uzytkownik as
	on update to uzytkownik_bez_hasla
	do instead
		update uzytkownik set imie = new.imie
IF OBJECT_ID('dbo.wsp_getNewMembersList') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_getNewMembersList
    IF OBJECT_ID('dbo.wsp_getNewMembersList') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_getNewMembersList >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_getNewMembersList >>>'
END
go
 /******************************************************************************
**
** CREATION:
**   Author: Mike Stairs
**   Date:  Jan 14, 2005  
**   Description:  gets list of new users within time range 
**          
** REVISION(S):
**   Author: Yan Liu 
**   Date:  July 20, 2006
**   Description: append a few new columns in the result set.
**
******************************************************************************/
CREATE PROCEDURE wsp_getNewMembersList
    @startSeconds INT,
    @endSeconds   INT
AS
BEGIN
    SELECT user_id,
           signuptime,
           firstidentitytime,
           signup_adcode,
           user_type,
           email,
           zi
/*!40101 SET CHARACTER_SET_CLIENT='utf8' */;
/*!40101 SET NAMES utf8 */;
ALTER TABLE `message_types`
	CHANGE COLUMN `variables` `variables` VARCHAR(400) NULL DEFAULT NULL;
UPDATE `message_types` 
	SET `variables`='%%client_name%%, %%registration_date%%' 
	WHERE  `name`='new_client' LIMIT 1;
UPDATE `message_types` 
	SET `variables`='%%new_level_name%%, %%old_level_name%%, %%new_percent%%,  %%old_percent%%, %%sum_earned%%' 
	WHERE  `name`='new_level' LIMIT 1;
UPDATE `message_types` 
	SET `variables`='%%client_name%%, %%payment_sum%%, %%balance%%' 
	WHERE  `name`='new_payment' LIMIT 1;
UPDATE `message_types` 
	SET `variables`='%%ticket_id%%, %%message_text%%, %%message_date%%, %%topic%%' 
	WHERE  `name`='new_ticket' LIMIT 1;
INSERT INTO `message_types` (`name`, `title`, `template`, `variables`) 
	VALUES ('new_payout_individual', 'Состоялась выплата физ. лицу', 'new_payout_individual.html', '%%payout_sum%%, %%new_balance%%, %%contact%%, %%purse_number%%');
INSERT INTO `message_types` (`nam
﻿CREATE VIEW dbo.v_Tick_
AS
SELECT     row_number() OVER (ORDER BY StartDate DESC) AS Row, Pair, StartDate, Ask, Bid
FROM         dbo.t_Tick
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
   

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 

         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'v_Tick_';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name
﻿USE [206S215-20141065]
GO
/****** Object:  StoredProcedure [dbo].[CanoeSelectRentedReport]    Script Date: 6/08/2015 9:06:48 a.m. ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[CanoeSelectRentedReport]
     @CID		int
	 
AS
	Begin
		IF (@CID != 0)
		BEGIN
			SELECT cal.Type, model.ModelID, main.IndCanoeID, main.ReturnDate,
				sub.Colour, sub.BatteryLife, sub.ManufactoredYear, sub.Accessories, sub.Status, sub.RentPerDay, sub.Deposit
			FROM Canoe_RentDetails main
			INNER JOIN Canoe_IndividualCanoe sub ON main.IndCanoeID=sub.IndCanoeID	
			INNER JOIN Canoe_Model model ON sub.ModelNo = model.ModelID
			LEFT OUTER JOIN Canoe_Category cal ON cal.CID = model.CategoryID
			WHERE cal.CID = @CID
			ORDER BY cal.CID, model.ModelID, main.IndCanoeID, main.ReturnDate
		End
		ELSE
		BEGIN
			SELECT cal.Type, model.ModelID, main.IndCanoeID, main.ReturnDate,
				sub.Colour, sub.BatteryLife, sub.ManufactoredYear, sub.Accessories, sub.Status, sub.RentPerDay, sub.Deposit
		
-- :name get-studio-classes :? :*
select * from studio_classes;
-- :name get-studio-class :? :1
select * from studio_classes
where id = :id
-- :name create-studio-class! :! :n
insert into studio_classes
(title, creator, location, start_time, end_time, description, teacher)
values (:title, :creator, :location, :start_time, :end_time, :description, :teacher)
-- :name delete-studio-class! :! :n
delete from studio_classes
where id = :id
-- :name update-performers! :! :n
update studio_classes
set performers = :performers
where id = :id
-- :name add-performer! :! :n
update studio_classes
set performers = array_append(performers, :user_id)
where id = :studio_id
-- :name remove-performer! :! :n
update studio_classes
set performers = array_remove(performers, :user_id)
where id = :studio_id
-- :name add-attendee! :! :n
update studio_classes
set attendees = array_append(attendees, :user_id)
where id = :studio_id
-- :name remove-attendee! :! :n
update studio_classes
set attendees = array_remove (p
_union_IC
----------
SELECT mdl_ic_discoveg_ac.ParcelID, mdl_ic_discoveg_ac.DivideID, mdl_ic_discoveg_ac.RoofRPark, Sum(mdl_ic_discoveg_ac.SqFt) AS TotArea, "VEG" as ictype, Count(mdl_ic_discoveg_ac.ICID) AS CountOfICID
FROM mdl_ic_discoveg_ac
GROUP BY mdl_ic_discoveg_ac.ParcelID, mdl_ic_discoveg_ac.DivideID, mdl_ic_discoveg_ac.RoofRPark;
union
SELECT mdl_ic_drywell_ac.ParcelID, mdl_ic_drywell_ac.DivideID, mdl_ic_drywell_ac.RoofRPark, Sum(mdl_ic_drywell_ac.SqFt) AS TotArea, "DW" as ictype, Count(mdl_ic_drywell_ac.ICID) AS CountOfICID
FROM mdl_ic_drywell_ac
GROUP BY mdl_ic_drywell_ac.ParcelID, mdl_ic_drywell_ac.DivideID, mdl_ic_drywell_ac.RoofRPark;
union
SELECT mdl_ic_store_ac.ParcelID, mdl_ic_store_ac.DivideID, mdl_ic_store_ac.RoofRPark, Sum(mdl_ic_store_ac.SqFt) AS TotArea, "STORE" as ictype, Count(mdl_ic_store_ac.ICID) AS CountOfICID
FROM mdl_ic_store_ac
GROUP BY mdl_ic_store_ac.ParcelID, mdl_ic_store_ac.DivideID, mdl_ic_store_ac.RoofRPark;
union
SELECT mdl_ic_SWPlnt_ac.ParcelID, md

FROM mdl_ic_SWPlnt_ac
GROUP BY mdl_ic_SWPlnt_ac.ParcelID, mdl_ic_SWPlnt_ac.DivideID, mdl_ic_SWPlnt_ac.RoofRPark;
UNION SELECT mdl_ic_Infilt_ac.ParcelID, mdl_ic_Infilt_ac.DivideID, mdl_ic_Infilt_ac.RoofRPark, Sum(mdl_ic_Infilt_ac.SqFt) AS TotArea, "IN" AS ictype, Count(mdl_ic_Infilt_ac.ICID) AS CountOfICID
FROM mdl_ic_Infilt_ac
GROUP BY mdl_ic_Infilt_ac.ParcelID, mdl_ic_Infilt_ac.DivideID, mdl_ic_Infilt_ac.RoofRPark;
app_DiscoVeg_EX
----------
INSERT INTO mdl_ic_DiscoVeg_ac ( ParcelID, DivideID, RoofRPark, assumeKey, ApplyAreaTF, SqFt, Effectiveness, Comment, TimeFrame, AppendDate )
SELECT mst_ic_DiscoVeg_ac.ParcelID, mst_ic_DiscoVeg_ac.DivideID, mst_ic_DiscoVeg_ac.RoofRPark, mst_ic_DiscoVeg_ac.assumekey, mst_ic_DiscoVeg_ac.ApplyAreaTF, mst_ic_DiscoVeg_ac.SqFt, mst_ic_DiscoVeg_ac.Effectiveness, mst_ic_DiscoVeg_ac.Comment, mst_ic_DiscoVeg_ac.TimeFrame, mst_ic_DiscoVeg_ac.AppendDate
FROM mdl_DirSC_ac INNER JOIN mst_ic_DiscoVeg_ac ON (mdl_DirSC_ac.DivideID = mst_ic_DiscoVeg_ac.DivideID) A

WHERE (((mst_ic_DiscoVeg_ac.TimeFrame)="EX"));
app_DiscoVeg_FU
----------
INSERT INTO mdl_ic_DiscoVeg_ac ( ParcelID, DivideID, RoofRPark, assumeKey, SqFt, Effectiveness, ApplyAreaTF, Comment, TimeFrame, AppendDate )
SELECT mst_ic_DiscoVeg_ac.ParcelID, mst_ic_DiscoVeg_ac.DivideID, mst_ic_DiscoVeg_ac.RoofRPark, mst_ic_DiscoVeg_ac.assumekey, mst_ic_DiscoVeg_ac.SqFt, mst_ic_DiscoVeg_ac.Effectiveness, mst_ic_DiscoVeg_ac.ApplyAreaTF, mst_ic_DiscoVeg_ac.Comment, mst_ic_DiscoVeg_ac.TimeFrame, mst_ic_DiscoVeg_ac.AppendDate
FROM mdl_DirSC_ac INNER JOIN mst_ic_DiscoVeg_ac ON (mdl_DirSC_ac.DivideID = mst_ic_DiscoVeg_ac.DivideID) AND (mdl_DirSC_ac.ParcelID = mst_ic_DiscoVeg_ac.ParcelID)
WHERE (((mst_ic_DiscoVeg_ac.TimeFrame)="FU"));
app_Drywell_EX
----------
INSERT INTO mdl_ic_DryWell_ac ( ParcelID, DivideID, RoofRPark, assumeKey, SqFt, ApplyAreaTF, Comment, TimeFrame, AppendDate )
SELECT mst_ic_Drywell_ac.ParcelID, mst_ic_Drywell_ac.DivideID, mst_ic_Drywell_ac.RoofRPark, mst_ic_Drywell_ac.assumeK
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_FeeReportGet]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_FeeReportGet]
@param_intIFA_ID	INT,
@param_StartDate	NVARCHAR(10),
@param_EndDate		NVARCHAR(10)
AS
BEGIN
	SELECT 
	--Create Open XML to Select all SwitchID belongs to Per Switch Fee
	stuff((SELECT ',' + CONVERT(VARCHAR(3),a.SwitchID) FROM NavIntegrationDB.dbo.SwitchHeader a 
		INNER JOIN NavGlobalDBwwwGUID.dbo.Client AS C ON C.ClientID=a.ClientID
		INNER JOIN NavGlobalDBwwwGUID.dbo.IFA AS I ON I.IFA_ID=C.IFA_ID
		INNER JOIN (
		SELECT 
			a.IFA_ID,
			a.Annual_Fee,
			a.Per_Switch_Fee,
			CONVERT(VARCHAR(19),a.Date_Effectivity,121) AS Start_Date_Effective,
			CONVERT(VARCHAR(19),(DATEADD(SECOND,-1,
													(ISNULL((SELECT TOP 1 b.Date_Effectivity FROM
																							(SELECT IFA_ID, Annual_Fee, Per_Switch_Fee, Date_Updated AS Date_Effectivity FROM NavIntegrationDB.d

																							UNION
																							SELECT IFA_ID, Annual_Fee, Per_Switch_Fee, Date_Effectivity FROM NavIntegrationDB.dbo.SwitchFeeHistory) AS b 
															WHERE b.IFA_ID = a.IFA_ID and b.Date_Effectivity > a.Date_Effectivity ORDER BY b.Date_Effectivity ASC), 
													GETDATE())))),
			121) AS End_Date_Effective
		FROM
			(
			SELECT IFA_ID, Annual_Fee, Per_Switch_Fee, Date_Updated AS Date_Effectivity FROM NavIntegrationDB.dbo.SwitchFee
			UNION
			SELECT IFA_ID, Annual_Fee, Per_Switch_Fee, Date_Effectivity FROM NavIntegrationDB.dbo.SwitchFeeHistory
			) AS a ) y ON	--ISNULL(a.Date_Updated, a.Date_Created) 
							a.Date_Created
							BETWEEN y.Start_Date_Effective AND y.End_Date_Effective AND y.IFA_ID=I.IFA_ID AND y.Per_Switch_Fee=TBLFEE.Per_Switch_Fee 
							WHERE a.Status = 6 AND (CONVERT(VARCHAR(10),a.Date_Created,105) >= @param_StartDate OR @param_StartDate = '') AND (CONVERT(VARCHAR(10),a.Date_Created,105) <= @param_EndDate OR @param_EndDate = '' )
		

									   FOR XML PATH('')
									),1,1,'')  as [Switches],
	-----------------------------------------------------------------------------------------------
		 I.IFA_ID
		,I.IFA_Name
		,TBLFEE.Per_Switch_Fee
		,COUNT(SH.SwitchID) AS Quantity
		,(SELECT MIN(Date_Created) AS StartDate FROM NavIntegrationDB.dbo.SwitchHeader a INNER JOIN NavGlobalDBwwwGUID.dbo.Client b ON a.ClientID=b.ClientID WHERE b.IFA_ID = C.IFA_ID) AS StartDate
		,(SELECT MAX(Date_Created) AS StartDate FROM NavIntegrationDB.dbo.SwitchHeader a INNER JOIN NavGlobalDBwwwGUID.dbo.Client b ON a.ClientID=b.ClientID WHERE b.IFA_ID = C.IFA_ID) AS EndDate
		--,(SELECT MIN(ISNULL(Date_Updated, Date_Created)) AS StartDate FROM NavIntegrationDB.dbo.SwitchHeader a INNER JOIN NavGlobalDBwwwGUID.dbo.Client b ON a.ClientID=b.ClientID WHERE b.IFA_ID = C.IFA_ID) AS StartDate
		--,(SELECT MAX(ISNULL(Date_Updated, Date_Created)) AS StartDate FROM NavIntegrationDB.dbo.SwitchHeader a INNER JOIN NavGlobalDBwwwGUID.dbo.Client b ON a.Cli
 -- Name of database
use vizsagedb_weather; 
-- =========================================================================
--
--	Impose Indices
--
-- =========================================================================
ALTER TABLE StationInfoISH \
	ADD INDEX				(name)	
 ,	ADD INDEX				(region)	
 ,	ADD INDEX				(country)	
 ,	ADD INDEX				(state)	
 ,	ADD INDEX				(callsign)
 ,	ADD INDEX				(lat)		
 ,	ADD INDEX				(lng)		
 ,	ADD INDEX				(elev)
 ;
 SHOW COUNT(*) WARNINGS; SHOW COUNT(*) ERRORS; SHOW WARNINGS; SHOW ERRORS;
ALTER TABLE StationInfoCOOP \
	ADD INDEX				(id_COOP)
 ,	ADD INDEX				(id_cd)
-- ,ADD INDEX				(id_NCDC)
 ,	ADD INDEX				(id_WMO)	
 ,	ADD INDEX				(id_FAA)	
 ,	ADD INDEX				(id_NWS)
 ,	ADD INDEX				(id_ICAO)
 ,	ADD INDEX				(country)
 ,	ADD INDEX				(state)
 ,	ADD INDEX				(uscounty)
 ,	ADD INDEX				(tz)
 ,	ADD INDEX				(name_coop)
 ,	ADD INDEX				(name)
 ,	ADD INDEX				(svc_beg)
 ,	ADD INDEX				(svc_end)
 ,	ADD INDEX				(lat)	
 ,	ADD INDEX				(lng)	
 ,	ADD INDEX				(
proc $sc_$cpu_evs_send_error
;JAN 11 2006 Added CFE_TBL
on ERROR resume
#include "ut_statusdefs.h"
local raw_command
local appid_key
local spec_appid_key
local cpu_index = %substring("$CPU",4,4)
if (cpu_index = "1") then
   appid_key = "0"
   spec_appid_key = "1880"
elseif (cpu_index = "2") then
   appid_key = "2"
   spec_appid_key = "1980"
elseif (cpu_index = "3") then
   appid_key = "4"
   spec_appid_key = "1A80"
endif
write
write "     Sending ERROR message for CFE_EVS."
write "     *** EVS messages are all INFO type ***"
write
write "     Sending ERROR message for CFE_SB."
ut_setupevt $SC, $CPU, CFE_SB, 53, ERROR
wait 5
raw_command = "18" & appid_key & "3c0000001aa"
Ut_sendrawcmd "$SC_$CPU_SB", {raw_command}
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].eventid 
ELSE
   write "     Event Message NOT generated."
ENDIF
write
write "     Sending ERROR message for CFE_ES."
ut_setupevt $SC, $CPU, CFE_ES, 17, ERROR
wait 5
r

Ut_sendrawcmd "$SC_$CPU_ES", {raw_command}
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].eventid 
ELSE
   write "     Event Message NOT generated."
ENDIF
write
write "     Sending ERROR message for CFE_TIME."
ut_setupevt $SC, $CPU, CFE_TIME, 27, ERROR
wait 5
raw_command = "18" & appid_key & "5c0000001aa"
Ut_sendrawcmd "$SC_$CPU_TIME", {raw_command}
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].eventid 
ELSE
   write "     Event Message NOT generated."
ENDIF
write
write "     Sending ERROR message for CFE_TBL."
ut_setupevt $SC, $CPU, CFE_TBL, 51, ERROR
wait 5
raw_command = "18" & appid_key & "4C00000270A00"
Ut_sendrawcmd "$SC_$CPU_TBL", {raw_command}
wait 7
write
IF ($SC_$CPU_num_found_messages = 1) THEN
   write "     Event Message: ", $SC_$CPU_find_event[1].eventid 
ELSE
   write "     Event Message NOT generated."
ENDIF
write
write "     Sending ERROR mes
--
--   Licensed to the Apache Software Foundation (ASF) under one or more
--   contributor license agreements.  See the NOTICE file distributed with
--   this work for additional information regarding copyright ownership.
--   The ASF licenses this file to You under the Apache License, Version 2.0
--   (the "License"); you may not use this file except in compliance with
--   the License.  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--   Unless required by applicable law or agreed to in writing, software
--   distributed under the License is distributed on an "AS IS" BASIS,
--   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--   See the License for the specific language governing permissions and
--   limitations under the License.
--
--
-- Script for creating the test database that will be used for testing
-- that dblook returns triggers in the correct order (which is
-- important because creation order dec

-- Regression test case for DERBY-6387.
--
create table t1(x int);
-- Create enough triggers to fill at least one page in
-- SYS.SYSTRIGGERS.
create trigger tr01 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr02 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr03 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr04 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr05 after update on t1 referencing new table as new for each statement select * f

create trigger tr06 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr07 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr08 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr09 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr10 after update on t1 referencing new table as new for each statement select * from sys.systables natural join sys.sysschemas where exists(select * from new where x > 100);
create trigger tr11 after update on t1 referencin
﻿CREATE VIEW dbo.FormaggiProductsView
AS
SELECT        ProductID, ProductName, SupplierID, CategoryID, QuantityPerUnit, UnitPrice, Discontinued
FROM            dbo.Products
WHERE        (SupplierID = 14)
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPa

         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
 

      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Products"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 230
               Right = 315
            End
            DisplayFlags = 280
            TopColumn = 1
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'FormaggiProductsView';
GO
EX
CREATE VIEW view_users AS
  SELECT * FROM users LEFT JOIN users_uids USING (USER);
CREATE VIEW view_users_summaries AS
  SELECT
   USER,
   given_name,
   family_name,
   email,
   type
  FROM view_users ORDER BY USER;
CREATE VIEW view_payments_customers_uncreated AS
  SELECT USER, customer_id FROM users
  LEFT JOIN payments_customers USING (USER)
  WHERE customer_id IS NULL;
CREATE VIEW view_payments_credit_cards AS
  SELECT provided, final_four, token, processed, payments_customers.*
  FROM payments_credit_cards
  LEFT JOIN payments_customers USING (USER);
CREATE VIEW view_payments_credit_cards_unsynced AS
  SELECT *
  FROM payments_credit_cards
  LEFT JOIN payments_customers USING (USER)
  WHERE processed=0;
CREATE VIEW view_files AS
    SELECT FILE, version, kind, original_filename, filename, filetype, filesize, fileextension, salt, token FROM files;
CREATE VIEW view_files_tokens AS
    SELECT FILE, token FROM files;
CREATE VIEW view_statistics_visits AS
  SELECT COUNT(*) FROM stat
DELETE FROM !PREFIX!_nav_sub WHERE idnavs < 10000;
INSERT INTO `!PREFIX!_nav_sub` VALUES (1, 1, 1, 0, 'navigation/content/article/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (2, 1, 6, 0, 'navigation/content/structure/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (3, 1, 7, 0, 'navigation/content/upload/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (4, 2, 8, 0, 'navigation/style/layouts/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (5, 2, 10, 0, 'navigation/style/modules/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (6, 2, 12, 0, 'navigation/style/templates/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (7, 4, 20, 0, 'navigation/statistic/hits', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (8, 5, 21, 0, 'navigation/administration/users/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (9, 5, 54, 0, 'navigation/administration/groups/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (12, 0, 24, 0, 'navigation/login', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (13, 5, 22, 0, 'n

INSERT INTO `!PREFIX!_nav_sub` VALUES (14, 1, 29, 0, 'plug-ins/langfile/', 0);
INSERT INTO `!PREFIX!_nav_sub` VALUES (15, 0, 1, 1, 'navigation/content/article/overview', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (16, 0, 3, 1, 'navigation/content/article/properties', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (17, 0, 5, 1, 'navigation/content/article/configuration', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (18, 0, 2, 1, 'navigation/content/article/editor', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (19, 2, 31, 0, 'navigation/style/styleeditor/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (20, 2, 32, 0, 'navigation/style/jseditor/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (22, 0, 13, 1, 'navigation/style/templates/edit', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (23, 0, 33, 1, 'navigation/style/templates/conf', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (24, 0, 40, 1, 'navigation/administration/users/userproperties', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (25, 0, 25, 1, 'navig

INSERT INTO `!PREFIX!_nav_sub` VALUES (26, 0, 34, 1, 'navigation/administration/users/layout', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (27, 0, 35, 1, 'navigation/administration/users/content', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (28, 0, 36, 1, 'navigation/administration/users/module', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (29, 0, 37, 1, 'navigation/administration/users/template', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (30, 0, 38, 1, 'navigation/administration/users/structure', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (33, 0, 42, 1, 'navigation/mydrugcms/overview', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (35, 5, 28, 0, 'navigation/administration/plugins', 0);
INSERT INTO `!PREFIX!_nav_sub` VALUES (36, 5, 46, 0, 'navigation/administration/clients/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (37, 0, 4, 1, 'navigation/content/article/preview', 1);
INSERT INTO `!PREFIX!_nav_sub` VALUES (39, 0, 42, 0, 'navigation/mydrugcms/main', 1);
INSERT INTO `!PREFIX!_nav_sub` VALU
-- borrowed from: http://wiki.postgresql.org/wiki/Aggregate_Median
CREATE OR REPLACE FUNCTION _final_median(anyarray)
   RETURNS numeric AS
$$
   SELECT AVG(val)
   FROM (
     SELECT val
     FROM unnest($1) val
     ORDER BY 1
     LIMIT  2 - MOD(array_upper($1, 1), 2)
     OFFSET CEIL(array_upper($1, 1) / 2.0) - 1
   ) sub;
$$
LANGUAGE 'sql'
SET search_path FROM CURRENT
IMMUTABLE;
DROP AGGREGATE IF EXISTS median(anyelement);
CREATE AGGREGATE median(anyelement) (
  SFUNC=array_append,
  STYPE=anyarray,
  FINALFUNC=_final_median,
  INITCOND='{}'
);
CREATE OR REPLACE FUNCTION _final_median(double precision[])
  RETURNS double precision AS
  $$
   SELECT AVG(val)
   FROM (
     SELECT val
     FROM unnest($1) val
     ORDER BY 1
     LIMIT  2 - MOD(array_upper($1, 1), 2)
     OFFSET CEIL(array_upper($1, 1) / 2.0) - 1
   ) sub;
$$
LANGUAGE 'sql'
SET search_path FROM CURRENT
IMMUTABLE;
DO $$
BEGIN
  CREATE AGGREGATE median(double precision) (
    SFUNC=array_append,
    STYPE=double preci
select * from MigrationStats;
select * from ListTypes;
select * from Members;
select * from MemberGroups;
select * from Teams;
select * from Schedules;
select * from Projects;
select * from Programs;
select * from Iterations;
select * from Goals;
select * from FeatureGroups;
select * from Requests;
select * from Issues;
select * from Epics;
select * from Stories;
select * from Defects;
select * from Tasks;
select * from Tests;
select * from Links;
select * from Conversations;
select * from Actuals;
select * from Attachments;
select * from CustomFields;
select COUNT(*) as 'Total Stories' from Stories
select COUNT(*) as 'Total Active' from Stories where AssetState = 'Active'
select COUNT(*) as 'Total Closed' from Stories where AssetState = 'Closed'
select COUNT(*) as 'Total Templates' from Stories where AssetState = 'Template'
select COUNT(*) as 'Total Epic/Stories' from Epics
select COUNT(*) from Actuals
where NewAssetOID is null
select * from Members where Username like '%\%'
select * 

select * from CustomFields where FieldName like 'Custom_ReleaseDate%';
select * from CustomFields where AssetOID like 'Test%';
-- http://localhost/versionone/rest-1.v1/Data/Request?sel=Name&where=Scope.ParentMeAndUp='Scope:1310';AssetState!='Dead'
-- Get the root project.
select * from Projects where Parent not in (select AssetOID from Projects) 
-- Set all NewAssetOIDs to NULL
TRUNCATE TABLE MigrationStats;
update ListTypes set NewAssetOID = null, NewEpicAssetOID = null;
update Members set NewAssetOID = null;
update MemberGroups set NewAssetOID = null;
update Teams set NewAssetOID = null;
update Schedules set NewAssetOID = null;
update Projects set NewAssetOID = null;
update Programs set NewAssetOID = null;
update Iterations set NewAssetOID = null;
update Goals set NewAssetOID = null, NewAssetNumber = null;
update FeatureGroups set NewAssetOID = null, NewAssetNumber = null;
update Requests set NewAssetOID = null, NewAssetNumber = null;
update Issues set NewAssetOID = null, NewAssetNu

update Epics set NewAssetOID = null, NewAssetNumber = null;
update Stories set NewAssetOID = null, NewAssetNumber = null;
update Defects set NewAssetOID = null, NewAssetNumber = null;
update Tasks set NewAssetOID = null, NewAssetNumber = null;
update Tests set NewAssetOID = null, NewAssetNumber = null;
update Links set NewAssetOID = null;
update Conversations set NewAssetOID = null;
update Actuals set NewAssetOID = null;
update Attachments set NewAssetOID = null;
SELECT * FROM Stories WITH (NOLOCK) WHERE AssetState = 'Closed' AND NewAssetOID <> 'FAILED' ORDER BY AssetOID DESC;
select * from Projects where AssetState = 'Closed'
select * from Epics where SCOPE in (select AssetOID from Projects where AssetState = 'Closed')
select NewAssetNumber from Stories
where AssetOID in (select BaseAssets from Conversations)
select * from Conversations
where BaseAssets in (select AssetOID from Stories)
select * from Epics
select * from CustomFields
where AssetOID in (select AssetOID from Epics)
and 
CREATE DATABASE  IF NOT EXISTS `dbrequisitoria` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `dbrequisitoria`;
-- MySQL dump 10.13  Distrib 5.1.40, for Win32 (ia32)
--
-- Host: localhost    Database: dbrequisitoria
-- ------------------------------------------------------
-- Server version	5.5.15
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Dumping routines for database 'dbrequisitoria'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 
-- // add read scope to clients
-- Migration SQL that makes the change goes here.
--UPDATE oauth_client_details SET scope = 'cloudbreak.blueprints,cloudbreak.credentials,cloudbreak.events,cloudbreak.recipes,cloudbreak.stacks,cloudbreak.templates,cloudbreak.usages.account,cloudbreak.usages.global,cloudbreak.usages.user,openid,password.write,periscope.cluster,cloudbreak.blueprints.read,cloudbreak.templates.read,cloudbreak.credentials.read,cloudbreak.recipes.read,cloudbreak.networks.read,cloudbreak.securitygroups.read,cloudbreak.stacks.read' WHERE client_id='uluwatu';
--UPDATE oauth_client_details SET scope = 'cloudbreak.templates,cloudbreak.blueprints,cloudbreak.credentials,cloudbreak.stacks,cloudbreak.events,cloudbreak.usages.global,cloudbreak.usages.account,cloudbreak.usages.user,cloudbreak.recipes,openid,password.write,cloudbreak.blueprints.read,cloudbreak.templates.read,cloudbreak.credentials.read,cloudbreak.recipes.read,cloudbreak.networks.read,cloudbreak.securitygroups.read,cloudbr
﻿USE [NavIntegrationDB]
GO
/****** Object:  Table [dbo].[Switch_SMSTemplate]    Script Date: 02/13/2012 17:15:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Switch_SMSTemplate](
	[SMSTemplateID] [smallint] IDENTITY(1,1) NOT NULL,
	[TemplateName] [nvarchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[TemplateFor] [nchar](50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	[Message] [nvarchar](160) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
 CONSTRAINT [PK_Switch_SMSTemplate] PRIMARY KEY CLUSTERED 
	[SMSTemplateID] ASC,
	[TemplateName] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[Switch_SMSTemplate] ON
INSERT [dbo].[Switch_SMSTemplate] ([SMSTemplateID], [TemplateName], [TemplateFor], [Message]) VALUES (1, N'ProposeSwitch', N'IFA proposing Switch to client                    ', N'Your IFA has proposed a chan

INSERT [dbo].[Switch_SMSTemplate] ([SMSTemplateID], [TemplateName], [TemplateFor], [Message]) VALUES (2, N'SecurityCode', N'Sending security code to client                   ', N'Thank you for approving the change to your portfolio. Your security code is {%SecurityCode%}.')
INSERT [dbo].[Switch_SMSTemplate] ([SMSTemplateID], [TemplateName], [TemplateFor], [Message]) VALUES (3, N'Reset', N'Resetting the switch attempt                      ', N'The security code for your {%PortfolioName%} portfolio has been reset. Please log into the NAV website to confirm the proposed change.')
INSERT [dbo].[Switch_SMSTemplate] ([SMSTemplateID], [TemplateName], [TemplateFor], [Message]) VALUES (8, N'ProposeSchemeSwitch', N'*Official do not Delete!                          ', N'Your IFA has proposed a change to the holdings in your {%param_SchemeName%} Regular Savings. Please log into the NAV website to see the proposed change.')
INSERT [dbo].[Switch_SMSTemplate] ([SMSTemplateID], [TemplateName], [Templ
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_queststatus_weekly`;
CREATE TABLE `character_queststatus_weekly` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier',
  `quest` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Quest Identifier',
  PRIMARY KEY (`guid`,`quest`),
  KEY `idx_guid` (`guid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Player System';
LOCK TABLES `cha
-- ViewName : DocumentNotSelected-PositionProfile-Right
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'EB';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'DocumentNotSelected-PositionProfile-Right'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
﻿CREATE TABLE [Production].[ProductModel] (
    [ProductModelID]     INT                                                            IDENTITY (1, 1) NOT NULL,
    [Name]               [dbo].[Name]                                                   NOT NULL,
    [CatalogDescription] XML(CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,
    [Instructions]       XML(CONTENT [Production].[ManuInstructionsSchemaCollection])   NULL,
    [rowguid]            UNIQUEIDENTIFIER                                               CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (newid()) ROWGUIDCOL NOT NULL,
    [ModifiedDate]       DATETIME                                                       CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED ([ProductModelID] ASC)
);
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_Name]
    ON [Production].[ProductModel]([Name] ASC);
GO
CREATE UNIQUE NONCLUSTERED

    ON [Production].[ProductModel]([rowguid] ASC);
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription]
    ON [Production].[ProductModel]([CatalogDescription])
    WITH (PAD_INDEX = OFF);
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_Instructions]
    ON [Production].[ProductModel]([Instructions])
    WITH (PAD_INDEX = OFF);
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unique nonclustered index.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'INDEX', @level2name = N'AK_ProductModel_Name';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unique nonclustered index. Used to support replication samples.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'INDEX', @level2name = N'AK_ProductModel_rowguid';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 

GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary XML index.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'INDEX', @level2name = N'PXML_ProductModel_Instructions';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default constraint value of GETDATE()', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'CONSTRAINT', @level2name = N'DF_ProductModel_ModifiedDate';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default constraint value of NEWID()', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'CONSTRAINT', @level2name = N'DF_ProductModel_rowguid';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key (clustered) constraint', @level0type = N'SCHEMA', @le
USE [SnackOverflowDB]
GO
IF EXISTS(SELECT * FROM sys.objects WHERE type = 'P' AND  name = 'sp_update_vehicle')
BEGIN
DROP PROCEDURE sp_update_vehicle
Print '' print  ' *** dropping procedure sp_update_vehicle'
End
GO
Print '' print  ' *** creating procedure sp_update_vehicle'
GO
Create PROCEDURE sp_update_vehicle
@old_VEHICLE_ID[INT],
@old_VIN[NVARCHAR](20),
@new_VIN[NVARCHAR](20),
@old_MAKE[NVARCHAR](15),
@new_MAKE[NVARCHAR](15),
@old_MODEL[NVARCHAR](20),
@new_MODEL[NVARCHAR](20),
@old_MILEAGE[INT],
@new_MILEAGE[INT],
@old_YEAR[NVARCHAR](4),
@new_YEAR[NVARCHAR](4),
@old_COLOR[NVARCHAR](20),
@new_COLOR[NVARCHAR](20),
@old_ACTIVE[BIT],
@new_ACTIVE[BIT],
@old_LATEST_REPAIR_DATE[DATE]=null,
@new_LATEST_REPAIR_DATE[DATE],
@old_LAST_DRIVER_ID[INT]=null,
@new_LAST_DRIVER_ID[INT],
@old_VEHICLE_TYPE_ID[NVARCHAR](50),
@new_VEHICLE_TYPE_ID[NVARCHAR](50)
AS
BEGIN
UPDATE vehicle
SET VIN = @new_VIN, MAKE = @new_MAKE, MODEL = @new_MODEL, MILEAGE = @new_MILEAGE, YEAR = @new_YEAR, COLOR = @new_COLOR, 
--1、SQL语句优化
	--如果mysql对服务器影响特别大，先看慢查询日志，获得sql语句，通过该sql语句执行，获得执行时间，看是否需要加索引等其它优化
	show satus;--查看服务器状态
	show status like 'Com_%';
	show status like 'Com_select%';--查看用户登录以来到现在执行select次数
	show status like 'Com_insert%';----------------insert....
	show status like 'Com_update%';--.......
	show status like 'Com_delete%';--...............
	show session status;
	show global status;--显示服务器启动以来，执行sql语句的次数
	show global status like 'Com_select%';--显示服务器启动以来，执行select语句的次数
	show global status like 'Com_insert%';----------------insert....
	show global status like 'Com_update%';--.......
	show global status like 'Com_delete%';--...............
	--查看innodb执行的sql所影响的行数(用户登录以来)
	show status like 'innodb_rows%';
	show status like 'connection';--连接mysq的次数(包括成功与失败次数)
	show status like 'uptime';--服务器从启动以来到现在的工作时间
	show status like 'slow_queries';--查看慢查询次数(慢查询的默认时间：10秒,超过10会记录到慢查询日志中去)
	show variables like '%slow%';--查看慢查询是否开启,一般建议开启
	--sql语句解析(分析查询)
	 desc select * from tname; --等同于
	 explain select * from
with cte as (
Select
ncsh1.[External Document No_] as Auftragsnummer
--'['+
(Select
concat(it2.[Description],' ',it2.[Description],',',cast(ncsl2.[Quantity] as int),',',cast(ncsl2.[Unit Price] as decimal (10,2)),',')
from [Urban_NAV600_SL].[dbo].[Urban-Brand GmbH$eBayNavCSalesHeader] ncsh2 with(nolock)
join [Urban_NAV600_SL].[dbo].[Urban-Brand GmbH$eBayNavCSalesLine] ncsl2  with(nolock)
on ncsh2.[No_]=ncsl2.[Document No_]
join [Urban_NAV600_SL].[dbo].[Urban-Brand GmbH$Item] it2  with(nolock)
on it2.[No_]=ncsl2.[No_]
where ncsh2.[External Document No_]=ncsh1.[External Document No_]
and ncsl2.[Shop Code]='WINDELBAR'
and ncsh2.[Shop Code]='WINDELBAR'
and ncsl2.[Dimension Value 2]='9456'
and ncsl2.[No_] in ('9781625684974','9781625684851','9781625684882','9781614547730','9781614547167','9781614542155','9781614542131')
for XML PATH('') )+']' as Name
,cast(sum(ncsl1.[Unit Price]) as decimal (10,2)) as Betrag
,ncsh1.[Bill-to E-Mail] as Email
,'Liebe'+' '+ncsh1.[Bill-to Name] as Anrede
,'Nach 

Der Hersteller Meri Meri hatte uns bis zuletzt versichert, die Artikel bis spätestens Ende Mai liefern zu können. Umso größer ist auch unsere Enttäuschung, dass dieser Liefertermin nicht eingehalten werden konnte.
Bei einer Bestellung, bei der die Zahlart Lastschriftverfahren gewählt wurde, wird Ihr Konto erst nach Versand der Bestellung um den korrigierten Rechnungsbetrag belastet.
Falls Sie bei Ihrem Einkauf die Zahlungsweise Kreditkarte oder PayPal gewählt haben, wird Ihnen der Betrag in den nächsten Tagen gutgeschrieben.
Als kleine Entschädigung schreiben wir Ihrem Kundenkonto 590 Punkte gut. Für Ihren nächsten Einkauf haben Sie somit die Möglichkeit innerhalb Deutschlands mit Standardversand versandkostenfrei zu bestellen' as Text
from [Urban_NAV600_SL].[dbo].[Urban-Brand GmbH$eBayNavCSalesHeader] ncsh1  with(nolock)
join [Urban_NAV600_SL].[dbo].[Urban-Brand GmbH$eBayNavCSalesLine] ncsl1  with(nolock)
on ncsh1.[No_]=ncsl1.[Document No_]
join [Urban_NAV600_SL].[dbo].[Urban-Brand G
--
-- database_schema_14-15.sql
--
-- Version: $$
--
-- Date:    $Date:$
--
-- Copyright (c) 2002-2007, Hewlett-Packard Company and Massachusetts
-- Institute of Technology.  All rights reserved.
-- 
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions are
-- met:
-- 
-- - Redistributions of source code must retain the above copyright
-- notice, this list of conditions and the following disclaimer.
-- 
-- - Redistributions in binary form must reproduce the above copyright
-- notice, this list of conditions and the following disclaimer in the
-- documentation and/or other materials provided with the distribution.
-- 
-- - Neither the name of the Hewlett-Packard Company nor the name of the
-- Massachusetts Institute of Technology nor the names of their
-- contributors may be used to endorse or promote products derived from
-- this software without specific prior written permission.
-- 
-- THIS SOFTWARE

-- ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-- HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-- INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-- BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
-- OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
-- ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-- TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
-- USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
-- DAMAGE.
--
-- SQL commands to upgrade the database schema of a live DSpace 1.4.2
-- to the DSpace 1.5 database schema
-- 
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. 
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST

-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. 
-- Remove NOT NULL restrictions from the checksum columns of most_recent_checksum
ALTER TABLE most_recent_checksum MODIFY expected_checksum null;
ALTER TABLE most_recent_checksum MODIFY current_checksum null;
------------------------------------------------------
-- New Column language language in EPerson
------------------------------------------------------
alter table eperson add column language VARCHAR2(64);
update eperson set language = 'en';
alter table bundle drop column mets_bitstream_id; -- totally unused column
-------------------------------------------------------------------------------
-- Necessary for Configurable Submission functionality:
-- Modification to workspaceitem table to support keeping track
-- of the last page reached within a step in the Configurable Submission Process
-------------------------------------------------------------------------------
ALT
--------------------------------------------------------
--  DDL for Table STUDENT
--------------------------------------------------------
  CREATE TABLE "STUDENT" 
   (	
    "STUNO" VARCHAR2(20 BYTE), 
	"STUNAME" VARCHAR2(20 BYTE), 
	"STUPASS" VARCHAR2(20 BYTE), 
	"STUSEX" VARCHAR2(2 BYTE), 
	"MOBILE" VARCHAR2(20 BYTE), 
	"EMAIL" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(50 BYTE), 
	"STUAGE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
   COMMENT ON COLUMN "ZHENGCHENG"."STUDENT"."STUNO" IS '学号';
   COMMENT ON COLUMN "ZHENGCHENG"."STUDENT"."STUNAME" IS '姓名';
   COMMENT ON COLUMN "ZHENGCHENG"."STUDENT"."STUPASS" IS '密码 ';
   COMMENT ON COLUMN "ZHENGCHENG"."STUDENT"."STUSEX" IS '性别';
   COMMENT ON COLUMN "ZHENGCHENG"."STUDEN

   COMMENT ON COLUMN "ZHENGCHENG"."STUDENT"."EMAIL" IS '电子邮件';
   COMMENT ON COLUMN "ZHENGCHENG"."STUDENT"."ADDRESS" IS '地址';
   COMMENT ON COLUMN "ZHENGCHENG"."STUDENT"."STUAGE" IS '年龄';
--------------------------------------------------------
--  DDL for Index PK_STUNO
--------------------------------------------------------
  CREATE UNIQUE INDEX "ZHENGCHENG"."PK_STUNO" ON "ZHENGCHENG"."STUDENT" ("STUNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table STUDENT
--------------------------------------------------------
  ALTER TABLE "ZHENGCHENG"."STUDENT" ADD CONSTRAINT "PK_STUNO" PRIMARY KEY ("STUNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 655
-- This will end in an error if the database name is different, but that's ok
alter database DEX_dev charset utf8 collate utf8_romanian_ci;
alter table Word change DefinitionId ConceptId int not null;
alter table Word drop index `DefinitionId`;
alter table Word add index(ConceptId);
alter table Word drop index alfabetic;
alter table Word add index (Name);
drop table if exists Concept;
create table Concept (
  Id int not null auto_increment,
  Name varchar(40) not null,
  Description varchar(100) not null,
  unique key (Id),
  key (Name)
);
drop table if exists ConceptDefinitionMap;
create table ConceptDefinitionMap (
  Id int not null auto_increment,
  ConceptId int not null,
  DefinitionId int not null,
  unique key (Id),
  key (ConceptId),
  key (DefinitionId),
  key (ConceptId, DefinitionId)
);
drop table if exists RecentLink;
create table RecentLink (
  Id int not null auto_increment,
  UserId int not null,
  VisitDate int not null,
  Url varchar(255) not null,
  Text varchar(255) 

  unique key(Id),
  key (UserId)
);
alter table Comment charset utf8 collate utf8_romanian_ci;
alter table Comment change Contents Contents blob;
alter table Comment change Contents Contents text;
alter table Comment change HtmlContents HtmlContents blob;
alter table Comment change HtmlContents HtmlContents text;
alter table Declension charset utf8 collate utf8_romanian_ci;
alter table Declension change Name Name blob;
alter table Declension change Name Name varchar(255);
alter table DeclensionModel charset utf8 collate utf8_romanian_ci;
alter table DeclensionModel change BaseForm BaseForm blob;
alter table DeclensionModel change BaseForm BaseForm varchar(100);
alter table Definition charset utf8 collate utf8_romanian_ci;
alter table Definition drop index Lexicon;
alter table Definition change Lexicon Lexicon blob;
alter table Definition change Lexicon Lexicon varchar(100);
alter table Definition change InternalRep InternalRep blob;
alter table Definition change InternalRep InternalRe

alter table Definition change HtmlRep HtmlRep blob;
alter table Definition change HtmlRep HtmlRep text;
alter table Definition add index (Lexicon);
alter table GuideEntry charset utf8 collate utf8_romanian_ci;
alter table GuideEntry change Correct Correct blob;
alter table GuideEntry change Correct Correct text;
alter table GuideEntry change CorrectHtml CorrectHtml blob;
alter table GuideEntry change CorrectHtml CorrectHtml text;
alter table GuideEntry change Wrong Wrong blob;
alter table GuideEntry change Wrong Wrong text;
alter table GuideEntry change WrongHtml WrongHtml blob;
alter table GuideEntry change WrongHtml WrongHtml text;
alter table GuideEntry change Comments Comments blob;
alter table GuideEntry change Comments Comments text;
alter table GuideEntry change CommentsHtml CommentsHtml blob;
alter table GuideEntry change CommentsHtml CommentsHtml text;
alter table Inflection charset utf8 collate utf8_romanian_ci;
alter table Inflection change Name Name blob;
alter table Infle
SELECT Employee.ssnum
FROM Employee
WHERE Employee.name = 'Smith'
OR Employee.dept = 'acquisitions';
SELECT * FROM (( SELECT Employee.ssnum
 FROM Employee
 WHERE Employee.name = 'Smith' )
UNION (
 SELECT Employee.ssnum
 FROM Employee
 WHERE Employee.dept = 'acquisitions'
)) AS foo;
/*
0.00108218193054199
0.00128984451293945
Both of the queries return the same result.
Marginal difference in time, with the UNION statement slower, because it runs two queries.
The first query does one sequential scan, matching each row against two conditions
"SELECT Employee.ssnum\nFROM Employee\nWHERE Employee.name = 'Smith'\nOR Employee.dept = 'acquisitions'"
QUERY PLANSeq Scan on employee  (cost=0.00..25.00 rows=88 width=8)
QUERY PLAN  Filter: (((name)::text = 'Smith'::text) OR ((dept)::text = 'acquisitions'::text))
{"ssnum"=>"45"}
The second query takes longer, needing to run two sequential scans, and a sort.
"( SELECT Employee.ssnum\n FROM Employee\n WHERE Employee.name = 'Smith' )\nUNION (\n SELECT E
# ************************************************************
# Sequel Pro SQL dump
# Version 4096
# http://www.sequelpro.com/
# http://code.google.com/p/sequel-pro/
# Host: 127.0.0.1 (MySQL 5.6.23-1~dotdeb.3)
# Database: light
# Generation Time: 2015-03-28 14:38:48 +0000
# ************************************************************
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
# Dump of table _301
# ------------------------------------------------------------
CREATE TABLE `_301` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `redirect_from` varchar(250) NOT NULL DEFAULT '',
  `redirect

  `type` int(11) NOT NULL DEFAULT '301',
  `active` int(11) DEFAULT '1',
  `date_added` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `date_enable` timestamp NULL DEFAULT NULL,
  `date_expire` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
# Dump of table _301_stats
# ------------------------------------------------------------
CREATE TABLE `_301_stats` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `301_id` int(11) DEFAULT NULL,
  `url_requested` varchar(500) DEFAULT NULL,
  `date_added` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `referral_source` varchar(250) DEFAULT NULL,
  `query_string` varchar(500) DEFAULT NULL,
  `http_user_agent` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
# Dump of table _404_stats
# ------------------------------------------------------------
CREATE TABLE `_404_stats` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `url_requested` varchar(500) DEFAULT NULL,
  `referr

  `remote_addr` varchar(50) DEFAULT NULL,
  `query_string` varchar(500) DEFAULT NULL,
  `post_data` text,
  `http_user_agent` varchar(500) DEFAULT NULL,
  `date_added` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
# Dump of table _error_sql
# ------------------------------------------------------------
CREATE TABLE `_error_sql` (
  `errorID` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `sql` text,
  `type` varchar(50) DEFAULT NULL,
  `uri` text,
  `userIP` varchar(50) DEFAULT NULL,
  `errorMsg` text,
  `getVars` text,
  `postVars` text,
  `date` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`errorID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
# Dump of table meta
# ------------------------------------------------------------
CREATE TABLE `meta` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `url` varchar(250) DEFAULT NULL,
  `title` varchar(500) DEFAULT NULL,
  `description` text,
  `keywords` varchar(250) DEFAULT NULL,
  `ro
﻿create or replace procedure u1.REFRESH_OBJECTS
is
n_id_max number;
begin
   select max(id)
   into n_id_max
   from T_RFO_Z#KAS_PKB_PC;
insert /*+ append enable_parallel_dml parallel*/into T_RFO_Z#KAS_PKB_PC
select /*+ parallel 30*/ c.id,c.c_payment_title,c.c_payment_overdue,c.collection_id,c.sn,c.su,
case when length(c.c_payment_title) in (4,5) then
          to_date('01-'||lpad(substr(c.c_payment_title,1,instr(c.c_payment_title,'/')-1),2,'0')||'-20'||substr(c.c_payment_title,instr(c.c_payment_title,'/')+1,length(c.c_payment_title)) ,'dd-mm-yyyy')
    when length(c.c_payment_title) > 5 then
          to_date('01-'||lpad(substr(c.c_payment_title,1,instr(c.c_payment_title,'/')-1),2,'0')||substr(c.c_payment_title,instr(c.c_payment_title,'/')+1,length(c.c_payment_title)),'dd-mm-yyyy')
    end as c_payment_date
from IBS.Z#KAS_PKB_PC@RFO_SNAP c
where c.c_payment_overdue is not null and c.c_payment_overdue != '-'
and c.id > n_id_max;
commit;
exception
  when others then
    dbms_output.put_
-- TODO should callers actually use func_update_entity?
CREATE TABLE func_update_identity(
    change_id INTEGER NOT NULL,
    id INTEGER NOT NULL,
    name VARCHAR,
    shortname VARCHAR,
    contact_id INTEGER,
    default_contact_method_id INTEGER
);
CREATE TRIGGER
    func_update_identity_bi_1
BEFORE INSERT ON
    func_update_identity
FOR EACH ROW BEGIN
    SELECT debug(
        NEW.id,
        NEW.change_id,
        NEW.name,
        NEW.shortname,
        NEW.contact_id,
        NEW.default_contact_method_id
    );
    INSERT INTO
        entity_deltas(
            change_id,
            entity_id,
            name,
            contact_id,
            default_contact_method_id
        )
    VALUES(
        NEW.change_id,
        NEW.id,
        NEW.name,
        NEW.contact_id,
        NEW.default_contact_method_id
    );
    INSERT INTO
        identity_deltas(
            change_id,
            identity_id,
            shortname
        )
    VALUES(
        NEW.change_id,
    
-- MySQL dump 10.9
--
-- Host: localhost    Database: rdownie_ottertest
-- ------------------------------------------------------
-- Server version	4.1.22-standard-log
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD
PROC $sc_$cpu_print_evs_log_file
; History
; 06/11/28 nsschweiss Changed CFE_ES_MODE_LOG_ENTRIES to CFE_ES_ER_LOG_ENTRIES.
%liv (log_procedure) = FALSE
#include "cfe_platform_cfg.h"
#define $cpu
write
#ifdef cpu1
write  p@PF00CFE_SPACECRAFTID & " " & p@PF00CFE_PROCESSORID & " " & p@PF00CFE_DESCRIPTION
write
write "File Write Name: ", FILE_LIST[3840].FILE_WRITE_NAME, "                                              TELEMETRY"
write
write "File Write Time (GMT): ", FILE_LIST[3840].file_write_time, "  Create Time (Sec):   ", %rpad(%unsigned(%dec(PF00CFE_CREATETIMESECONDS,12)),7," "), "       Local Evt Log Full Flag: ", p@$sc_$cpu_evs_logfull
write "File Application ID: ", PF00CFE_APPLICATIONID, "                  Create Time (SubSec):  ", %rpad(%unsigned(%dec(PF00CFE_CREATETIMESUBSECS,12)),10," ") , "  Logging Mode: ", p@$sc_$cpu_evs_logmode
write "Content Type: ", p@PF00CFE_CONTENTTYPE, "                                                         Local Evt Log Overflow Ctr: ", $sc_$cpu_evs_lo

write
#endif
#ifdef cpu2
write  p@PF20CFE_SPACECRAFTID & " " & p@PF20CFE_PROCESSORID & " " & p@PF20CFE_DESCRIPTION
write
write "File Write Name: ", FILE_LIST[3872].FILE_WRITE_NAME, "                                              TELEMETRY"
write
write "File Write Time (GMT): ", FILE_LIST[3872].file_write_time, "  Create Time (Sec):   ", %rpad(%unsigned(%dec(PF20CFE_CREATETIMESECONDS,12)),7," "), "       Local Evt Log Full Flag: ", p@$sc_$cpu_evs_logfull
write "File Application ID: ", PF20CFE_APPLICATIONID, "                  Create Time (SubSec):  ", %rpad(%unsigned(%dec(PF20CFE_CREATETIMESUBSECS,12)),10," ") , "  Logging Mode: ", p@$sc_$cpu_evs_logmode
write "Content Type: ", p@PF20CFE_CONTENTTYPE, "                                                         Local Evt Log Overflow Ctr: ", $sc_$cpu_evs_logoverflowc
write 
#endif
#ifdef cpu3
write  p@PF40CFE_SPACECRAFTID & " " & p@PF40CFE_PROCESSORID & " " & p@PF40CFE_DESCRIPTION
write
write "File Write Name: ", FILE_LIST[3904].FILE_WRITE_

write
write "File Write Time (GMT): ", FILE_LIST[3904].file_write_time, "  Create Time (Sec):   ", %rpad(%unsigned(%dec(PF40CFE_CREATETIMESECONDS,12)),7," "), "       Local Evt Log Full Flag: ", p@$sc_$cpu_evs_logfull
write "File Application ID: ", PF40CFE_APPLICATIONID, "                  Create Time (SubSec):  ", %rpad(%unsigned(%dec(PF40CFE_CREATETIMESUBSECS,12)),10," ") , "  Logging Mode: ", p@$sc_$cpu_evs_logmode
write "Content Type: ", p@PF40CFE_CONTENTTYPE, "                                                         Local Evt Log Overflow Ctr: ", $sc_$cpu_evs_logoverflowc
write
#endif
write "List of Event Log"
write
write "     Event Time (UTC)      ScId    PrcId    AppID     EvtId   EvtTp    Event Message Text"
for i=1 to CFE_ES_ER_LOG_ENTRIES do 
write " ", %dec(i,2) , "  ", $SC_$CPU_EVS_LOG[i].ccsds_header.u_time.ttime, "   ", %rpad(p@$SC_$CPU_EVS_LOG[i].EVTLOGENTRY.SCID,3," "), "     ", %rpad(p@$SC_$CPU_EVS_LOG[i].EVTLOGENTRY.PRCID,4," "), "     ", %rpad($SC_$CPU_EVS_LOG[i].E
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `pet_spell_cooldown`;
CREATE TABLE `pet_spell_cooldown` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier, Low part',
  `spell` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT 'Spell Identifier',
  `time` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guid`,`spell`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `pet_spell_cooldown` WRI
SET DEFINE OFF;
CREATE TABLE D_SUBSCRIPTION_LISTS
  LIST_ID             VARCHAR2(20 BYTE),
  LIST_TYPE           VARCHAR2(20 BYTE),
  DESCRIPTION         VARCHAR2(75 BYTE),
  DISPLAY_SEQ         NUMBER(9),
  DISPLAY_TEXT        VARCHAR2(90 BYTE),
  BRAND_ID            VARCHAR2(100 BYTE),
  AFFILIATION_ID      VARCHAR2(20 BYTE),
  SHOW_NON_SIGNUP     VARCHAR2(1 BYTE),
  SELECTED_ON_SIGNUP  VARCHAR2(1 BYTE),
  WHOSTAMP            VARCHAR2(50 BYTE),
  DATESTAMP           DATE
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_SUBSCRIPTION_LISTS_PK ON D_SUBSCRIPT
set linesize 180
set pagesize 80
set feedback off
column file_name      format a37        heading 'File Name'
column tbs            format a13        heading 'TBS'
column read_mb        format 9,999,999  heading 'Read MB'
column write_mb       format 9,999,999  heading 'Write MB'
column reads          format 99,999,999 heading 'Reads'
column writes         format 99,999,999 heading 'Writes'
column read_time_ms   format 99,999,999 heading 'Read Tim'
column write_time_ms  format 99,999,999 heading 'Write Tim'
column rd_time_avg    format 990.999    heading 'Rd Tim Avg'
column wr_time_avg    format 990.999    heading 'Wr Tim Avg'
column lg_rds         format 99,999,999  heading 'LG Reads'
column lg_rd_mb       format 9,999,999   heading 'LG Rd MB'
column lg_rd_tm_avg   format 990.999     heading 'LG Rd Tm'
column sm_rds         format 99,999,999  heading 'SM Reads'
column sm_rd_mb       format 9,999,999   heading 'SM Rd MB'
column sm_rd_tm_avg   format 990.999     heading 'SM Rd Tm'
colum

column lg_wt_mb       format 9,999,999   heading 'LG Wr MB'
column lg_wr_tm_avg   format 990.999     heading 'LG Wr Tm'
column sm_wrts        format 99,999,999  heading 'SM Writes'
column sm_wr_mb       format 9,999,999   heading 'SM Wr MB'
column sm_wr_tm_avg   format 990.999     heading 'SM Wr Tm'
ttitle on
ttitle center '*************************  Read/Write Statistics for Database Data Files  *************************' skip 2
select  replace( df.file_name, '${ORACLE_SID}/oradata', '...' ) file_name,
        df.tablespace_name tbs,
	ios.large_read_reqs lg_rds, ios.large_read_megabytes lg_rd_mb,
	ios.small_read_reqs sm_rds, ios.small_read_megabytes sm_rd_mb,
	ios.large_write_reqs lg_wrts, ios.large_write_megabytes lg_wt_mb,
	ios.small_write_reqs sm_wrts, ios.small_write_megabytes sm_wr_mb,
	greatest( ios.large_read_servicetime, 1 ) / greatest( ios.large_read_reqs, 1 ) lg_rd_tm_avg,
	greatest( ios.small_read_servicetime, 1 ) / greatest( ios.small_read_reqs, 1 ) sm_rd_tm_avg,
	greates

	greatest( ios.small_write_servicetime, 1 ) / greatest( ios.small_write_reqs, 1 ) sm_wr_tm_avg
from    v$iostat_file ios, dba_data_files df
where   ios.filetype_name = 'Data File'
and     df.file_id = ios.file_no
order by 3 desc, tablespace_name;
prompt
prompt
ttitle center '*************************  Read/Write Statistics for Temporary Data Files  *************************' skip 2
select  df.file_name,
        df.tablespace_name tbs,
        ios.large_read_reqs lg_rds, ios.large_read_megabytes lg_rd_mb,
        ios.small_read_reqs sm_rds, ios.small_read_megabytes sm_rd_mb,
        ios.large_write_reqs lg_wrts, ios.large_write_megabytes lg_wt_mb,
        ios.small_write_reqs sm_wrts, ios.small_write_megabytes sm_wr_mb,
        greatest( ios.large_read_servicetime, 1 ) / greatest( ios.large_read_reqs, 1 ) lg_rd_tm_avg,
        greatest( ios.small_read_servicetime, 1 ) / greatest( ios.small_read_reqs, 1 ) sm_rd_tm_avg,
        greatest( ios.large_write_servicetime, 1 ) / greatest( ios.l
--name: read-api-json-schema
-- reads in top level json schema api
select data from current_json_schema
--name: fuzzy-search-by-name-for-usc-id
-- reads in all usc_id and lname, fname of faculty from faculty
-- entity.
select usc_id "value", usc_pvid, directory_name || ' <' || usc_id || '>' as "name" from faculty_identities
where directory_name % :q or usc_id like :q ||'%' or employee_id like :q ||'%';
--name: create-gold-file<!
-- creates a gold-file document in the gold_files entity. Returning records.
insert into gold_files (data)
values (:data)
--name: read-gold-files
-- reads all gold-files from gold_files
select * from gold_files
--name: read-gold-files-pending-save-to-laserfiche
-- reads all gold-files that have is-in-laserfiche as nil or false.
--select * from gold_files where is_in_laserfiche is not true
select * from documents() where (repo_data ->> 'saved') = 'false'
or (repo_data->>'saved') is null;
--name: document_update_callback
-- Update gold-file attribute is-in-laserf

--update gold_files set is_in_laserfiche = true
--where uuid = :uuid
select document_update_callback(:uuid, :data)
--name: create-form-schema
-- creates a form schema that should fit jsonSchema format.
select save_document_schema(:schema, :schema_name)
--name: read-form-schema
-- Read a schema to describe a form or other structured data
select * from form_schemas where table_name = :tablename order by created_at desc
--name: read-form-schema-by-uuid
-- Read a schema to describe a form or other structured data
select * from form_schemas where uuid = :uuid
--name: read-form-schemas
-- read in all form schemas
select * from form_schemas order by created_at desc
--name: save-document
-- saves a json document in tablename
select save_document(:tablename, :data)
--name: read-form-document-by-uuid
-- retrieves json document from :tablename and :uuid if provided.
select * from find_document(:tablename,:uuid::uuid);
--name: read-form-document
-- retrieves json document from :tablename and :uui
drop view textbooks;
drop view sports;
drop view society;
drop view science;
drop view law;
drop view lang;
drop view history;
drop view health;
drop view crime;
drop view crafts;
drop view computing;
drop view business;
drop view biographies;
drop view arts;
drop view lit;
drop view action;
drop view child;
drop view comics;
drop view historical;
drop view humour;
drop view politics;
drop view reference;
drop view romance;
drop view study;
drop view travel;
drop view religion;
create view 
	textbooks as (select * from books where genre='Textbooks ');
create view 
	sports as (select * from books where genre='Sports ');
create view 
	society as (select * from books where genre='Society & Social Sciences ');
create view 
	science as (select * from books where genre='Sciences Technology & Medicine ');
create view 
	law as (select * from books where genre='Law ');
create view 
	lang as (select * from books where genre='Language, Linguistics & Writing');	
create view 
	history as (select * 

create view 
	health as (select * from books where genre='Health Family & Personal Development');
create view 
	fantasy as (select * from books where genre='Fantasy Horror & Science Fiction');
create view 
	crime as (select * from books where genre='Crime Thriller & Mystery ');
create view 
	crafts as (select * from books where genre='Crafts Home & Lifestyle');
create view 
	computing as (select * from books where genre='Computing Internet & Digital Media');
create view 
	business as (select * from books where genre='Business & Economics ');
create view 
	biographies as (select * from books where genre='Biographies Diaries & True Accounts ');	
create view 
	arts as (select * from books where genre='Arts Film & Photography ');
create view 
	lit as ( select * from books where genre = 'Literature & Fiction');
create view 
	action as (select * from books where genre='Action & Adventure');
create view 
	child as (select * from books where genre='Childrens & Young Adult');
create view 
	com
create or replace view HV_EQUITY_PRICE_CHECK AS
SELECT SCHNAVBD.SECURITY,
  SECURITY.STK_SEC_ID,
  -SUM(SCHNAVBD.AMOUNT)/SUM(SCHNAVBD.UNITS) AMT,
  SECURITY.TICKER,
  NSE.NSE_CODE AS NSE_CODE,
  NSE.NSE_CLOSE AS NSE_CLOSE,
  BSE.BSE_CLOSE AS BSE_CLOSE,
  SCHNAVBD.NAV_DATE
FROM HI_SCHNAVBD_CURR SCHNAVBD,
  HM_SECURITY SECURITY,
  HI_BSE BSE,
  HI_NSE NSE
WHERE TRIM(NSE.NSE_CODE)      = SCHNAVBD.SECURITY
AND NSE.NSE_DT          = SCHNAVBD.NAV_DATE
AND TRIM(BSE.BSE_CODE)        = SECURITY.TICKER
AND BSE.VALUE_DATE              = SCHNAVBD.NAV_DATE
AND SCHNAVBD.SECURITY   = SECURITY.SECURITY
AND (
/*(SCHNAVBD.NAV_DATE =
  (SELECT CUR_DATE-1 FROM SYSPARAM WHERE RECTYPE='L'
  ))
AND*/ (SCHNAVBD.INVEST_TYPE ='INVEST')
AND (SCHNAVBD.UNITS      <>'0')
AND (SECURITY.ASSET_TYPE  ='01')
AND (SECURITY.SECURITY   <>SECURITY.STK_SEC_ID)
AND (SCHNAVBD.SCHEME NOT IN ('HDFCSX','HDFCS+','HDFCNY'))
AND (SECURITY.RECTYPE     ='L')
AND SECURITY.SECURITY    <>'ARSSINF'
GROUP BY SCHNAVBD.SECURITY,
  SECURITY.S
USE [TAC_KANBAN]
GO
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT 'T6' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'AAT') as CUSTOMER_ID,
			  'T6' as [PREFIX];
	        
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT 'J97MU' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'AAT') as CUSTOMER_ID,
			  'J97MU' as [PREFIX];
			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT 'U268U' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'AAT') as CUSTOMER_ID,
			  'U268U' as [PREFIX];
			  			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '2PK' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'HATC') as CUSTOMER_ID,
			  '2PK' as [PREFIX];
			  	  			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '2CV' as MODEL_NAME,
			  (

			  '2CV' as [PREFIX];
			    
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '2HC' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'HATC') as CUSTOMER_ID,
			  '2HC' as [PREFIX];
			
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '2TP' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'HATC') as CUSTOMER_ID,
			  '2TP' as [PREFIX];
			
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '2AP' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'HATC') as CUSTOMER_ID,
			  '2AP' as [PREFIX];
			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '2CT' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'HATC') as CUSTOMER_ID,
			  '2CT' as [PREFIX];
			  			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '2WS' as MODEL_NAME,
			  (SELECT

			  '2WS' as [PREFIX];
			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '3E00' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'MMTh') as CUSTOMER_ID,
			  '3E00' as [PREFIX];
			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '3E45' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'MMTh') as CUSTOMER_ID,
			  '3E45' as [PREFIX];
			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT 'D22L' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'NMT') as CUSTOMER_ID,
			  'D22L' as [PREFIX];
			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '301L' as MODEL_NAME,
			  (SELECT ID FROM MA_CUSTOMER WHERE [CUSTOMER_SHOT] = 'TMAP') as CUSTOMER_ID,
			  '301L' as [PREFIX];
			  
INSERT INTO [dbo].[MA_MODEL] ([MODEL_NAME],[CUSTOMER_ID],[PREFIX])
       SELECT '514W' as MODEL_NAME,
			  (S
--
-- PostgreSQL database dump
--
SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET search_path = public, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = false;
--
-- Name: IntervalReadData; Type: TABLE; Schema: public; Owner: sepgroup; Tablespace: 
--
CREATE TABLE "IntervalReadData" (
    interval_read_data_id bigint NOT NULL,
    meter_data_id bigint NOT NULL,
    start_time timestamp without time zone NOT NULL,
    end_time timestamp without time zone NOT NULL,
    interval_length smallint NOT NULL,
    number_intervals integer NOT NULL
);
ALTER TABLE public."IntervalReadData" OWNER TO sepgroup;
--
-- Name: intervalreaddata_id_seq; Type: SEQUENCE; Schema: public; Owner: sepgroup
--
CREATE SEQUENCE intervalreaddata_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;
ALTER TABLE public.intervalreaddata_id_seq OWNER 

--
-- Name: intervalreaddata_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: sepgroup
--
ALTER SEQUENCE intervalreaddata_id_seq OWNED BY "IntervalReadData".interval_read_data_id;
--
-- Name: interval_read_data_id; Type: DEFAULT; Schema: public; Owner: sepgroup
--
ALTER TABLE ONLY "IntervalReadData" ALTER COLUMN interval_read_data_id SET DEFAULT nextval('intervalreaddata_id_seq'::regclass);
--
-- Name: IntervalReadData_pkey; Type: CONSTRAINT; Schema: public; Owner: sepgroup; Tablespace: 
--
ALTER TABLE ONLY "IntervalReadData"
    ADD CONSTRAINT "IntervalReadData_pkey" PRIMARY KEY (interval_read_data_id);
--
-- Name: IntervalReadData_interval_read_data_id_key; Type: INDEX; Schema: public; Owner: sepgroup; Tablespace: 
--
CREATE UNIQUE INDEX "IntervalReadData_interval_read_data_id_key" ON "IntervalReadData" USING btree (interval_read_data_id);
--
-- Name: meter_data_id_idx; Type: INDEX; Schema: public; Owner: sepgroup; Tablespace: 
--
CREATE INDEX meter_data_id_idx ON "IntervalRe
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `character_spell_cooldown`;
CREATE TABLE `character_spell_cooldown` (
  `guid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Global Unique Identifier, Low part',
  `spell` mediumint(8) unsigned NOT NULL DEFAULT '0' COMMENT 'Spell Identifier',
  `item` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Item Identifier',
  `time` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`gui
CREATE DATABASE "honeypotSSH"
CREATE TABLE SERVER (
  ID SERIAL  NOT NULL ,
  NAME VARCHAR(255)    ,
  IP VARCHAR(20)    ,
  PORT VARCHAR(20)     ,
  START_TIME TIMESTAMP    ,
  CONFIGURATION TEXT     ,
PRIMARY KEY(ID));
CREATE TABLE CONNECTIONS (
  ID SERIAL   NOT NULL ,
  HONEYPOT VARCHAR(255), 
  SESSION INTEGER    ,
  IP VARCHAR(20)    ,
  COUNTRY VARCHAR(255),
  PORT VARCHAR(20)    ,
  CLIENT VARCHAR(255)    ,
  LOGIN VARCHAR(255)    ,
  PASSWORD VARCHAR(255)    ,
  AUTHENTICATED VARCHAR(255)    ,
  COMMANDS TEXT    ,
  START_TIME TIMESTAMP    ,
  FINISH_TIME TIMESTAMP      ,
PRIMARY KEY(ID));
CREATE PROCEDURAL LANGUAGE 'plpythonu' HANDLER plpython_call_handler; 
CREATE FUNCTION country_from_ip() RETURNS trigger AS '
import urllib2 
from HTMLParser import HTMLParser  
class MyHTMLParser(HTMLParser):
    def __init__(self):
        HTMLParser.__init__(self)
        self.start = 0 
        self.country = 0 
        self.found = 0 
        self.data = []
    def handle_starttag(self,
ALTER TABLE DEAPP.DE_RC_SNP_INFO
  RENAME DE_RC_SNP_INFO_ALL;
CREATE TABLE "DEAPP"."DE_RC_SNP_INFO" 
   (	"SNP_INFO_ID" NUMBER(22,0), 
	"RS_ID" NVARCHAR2(50), 
	"CHROM" VARCHAR2(4 BYTE), 
	"POS" NUMBER(10,0), 
	"HG_VERSION" VARCHAR2(10 BYTE), 
	"EXON_INTRON" VARCHAR2(10 BYTE), 
	"RECOMBINATION_RATE" NUMBER(18,6), 
	"RECOMBINATION_MAP" NUMBER(18,6), 
	"REGULOME_SCORE" VARCHAR2(10 BYTE), 
	"GENE_NAME" VARCHAR2(50 BYTE), 
	"ENTREZ_ID" VARCHAR2(50 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255  NOLOGGING 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DEAPP" 
  PARTITION BY LIST ("HG_VERSION") 
 (PARTITION "HG18"  VALUES ('18') 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255  NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DEAPP" NOCOMPRESS , 
 PARTITION "HG19"  VALUES ('19')

  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255  NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DEAPP" NOCOMPRESS , 
 PARTITION "HGXX"  VALUES (default) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255  NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DEAPP" NOCOMPRESS ) 
  PARALLEL ;
  CREATE INDEX "DEAPP"."DE_RSNP_CHROMPOS_IDX" ON "DEAPP"."DE_RC_SNP_INFO" ("CHROM", "POS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) LOCAL
 (PARTITION "HG18" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255  NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIS

  TABLESPACE "DEAPP" , 
 PARTITION "HG19" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255  NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DEAPP" , 
 PARTITION "HGXX" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255  NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "DEAPP" ) 
  PARALLEL 4 ;
  CREATE INDEX "DEAPP"."DE_RSNP_CHROM_IDX" ON "DEAPP"."DE_RC_SNP_INFO" ("CHROM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) LOCAL
 (PARTITION "HG18" 
  PCTFREE 10 INITRANS 2 MAXTRANS 255  NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFA
### 说明: 下文中涉及章节的引用均来自MySQL 5.6 Reference Manual
/**************************************************************************
*** 系统变量
*** 变量解释: 		Chapter 5 MySQL Server Administration 	5.1.4 Server System Variables
*** SHOW语法: 	Chapter 13 SQL Statement Syntax 			13.7.5 SHOW Syntax
**************************************************************************/
# 查看变量
SHOW VARIABLES;
SHOW VARIABLES LIKE 'AUTOCOMMIT';
SHOW GLOBAL VARIABLES;
SHOW SESSION VARIABLES;
# 从information_schema中查看
SELECT * FROM information_schema.GLOBAL_VARIABLES;
SELECT * FROM information_schema.SESSION_VARIABLES;
/**************************************************************************
*** 系统状态
*** 变量解释: Chapter 5 MySQL Server Administration 5.1.6 Server Status Variables
**************************************************************************/
SHOW STATUS;
SHOW STATUS LIKE 'Open_files';
SHOW STATUS WHERE `VARIABLE_NAME` IN ('Connections');
SHOW GLOBAL STATUS;
SHOW SESSION STATUS;
# 从information_schema中查看
SELECT *

SELECT * FROM information_schema.SESSION_STATUS;
# 线程和链接
SHOW GLOBAL STATUS LIKE '%onnect%';			# 连接
SHOW FULL PROCESSLIST;								#  连接或线程
SHOW GLOBAL STATUS LIKE '%hread%';			# 线程
SHOW GLOBAL STATUS LIKE 'Bytes_%';			# 字节计数
SHOW GLOBAL STATUS LIKE 'Aborted_%';			# 终止计数
SHOW GLOBAL STATUS LIKE 'Binlog_%';			# 二进制日志状态
SHOW GLOBAL STATUS LIKE 'Com_%';				# 命令计数器
SHOW GLOBAL STATUS LIKE 'Created_tmp%';	# 临时文件和表	
SHOW GLOBAL STATUS LIKE 'Handler_%';			# 句柄(MySQL与存储引擎的接口)
SHOW GLOBAL STATUS LIKE 'Key_%';				# MyISAM键缓冲
SHOW GLOBAL STATUS LIKE 'Open_%'; 			# 文件描述符
SHOW GLOBAL STATUS LIKE 'Qcache_%';			# 查询缓存
SHOW GLOBAL STATUS LIKE 'Select_%'; 			# 查询类型
SHOW GLOBAL STATUS LIKE 'Sort_%';				# 排序
SHOW GLOBAL STATUS LIKE 'Table_locks_%';	# 表锁(服务器级别, 不是存储引擎级别)
# InnoDB相关
SHOW ENGINE INNODB STATUS; 
SHOW GLOBAL STATUS LIKE 'Innodb_%';
SHOW ENGINE INNODB MUTEX;						# 互斥体 
# 查看schema
SELECT * FROM information_schema.SCHEMATA;
/**********************************************************************
CREATE view [dbo].[vPPI_TaskPPI]
AS
SELECT DISTINCT MIN(ppiID) AS PPIID
FROM         dbo.vPPI AS A
GROUP BY TaskID
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 

         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "A"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 114
               Right = 205
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
        
--------------------------------------------------------
--  File created - Tuesday-December-15-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table AA_TYPEBOOK
--------------------------------------------------------
  CREATE TABLE "SYSTEM"."AA_TYPEBOOK" 
   (	"ID_TYPE" NUMBER, 
	"NAME" VARCHAR2(100 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into SYSTEM.AA_TYPEBOOK
SET DEFINE OFF;
Insert into SYSTEM.AA_TYPEBOOK (ID_TYPE,NAME) values (100,'นวนิยาย :โรแมนติก');
Insert into SYSTEM.AA_TYPEBOOK (ID_TYPE,NAME) values (200,'วรรณกรรม');
Insert into SYSTEM.AA_TYPEBOOK (ID_TYPE,NAME) values (300,'หนังสือเด็ก');
Insert into SYSTEM.AA_TYPEBOOK (ID_TYPE,NAME) va

Insert into SYSTEM.AA_TYPEBOOK (ID_TYPE,NAME) values (500,'ความรู้รอบตัว');
--------------------------------------------------------
--  DDL for Index AA_TYPEBOOK_PK
--------------------------------------------------------
  CREATE UNIQUE INDEX "SYSTEM"."AA_TYPEBOOK_PK" ON "SYSTEM"."AA_TYPEBOOK" ("ID_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table AA_TYPEBOOK
--------------------------------------------------------
  ALTER TABLE "SYSTEM"."AA_TYPEBOOK" ADD CONSTRAINT "AA_TYPEBOOK_PK" PRIMARY KEY ("ID_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACH
-- Test function gp_read_error_log on non existing table
SELECT gp_read_error_log('non_existing');
-- Test gp_read_error_log on non external table
DROP TABLE IF EXISTS heap_test;
CREATE TABLE heap_test(i int, j int);
SELECT gp_read_error_log('heap_test');
-- Test gp_read_error_log on external table configured with error table
DROP EXTERNAL TABLE IF EXISTS exttab_funcs_1;
DROP TABLE IF EXISTS exttab_funcs_err;
\! python @script@ 10 2 > @data_dir@/exttab_funcs_1.tbl
CREATE EXTERNAL TABLE exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS INTO exttab_funcs_err SEGMENT REJECT LIMIT 10;
SELECT COUNT(*) FROM exttab_funcs_1;
SELECT gp_read_error_log('exttab_funcs_1');
SELECT COUNT(*) FROM exttab_funcs_err;
-- Test gp_read_error_log from a different schema
DROP SCHEMA IF EXISTS exttab_funcs_schema CASCADE;
CREATE SCHEMA exttab_funcs_schema;
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_1( i int, j text ) 


LOG ERRORS SEGMENT REJECT LIMIT 10;
SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_1;
SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
-- CTAS with gp_read_error_log
DROP TABLE IF EXISTS error_log_ctas;
CREATE TABLE error_log_ctas AS
SELECT relname, linenum, rawdata FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
SELECT * FROM error_log_ctas order by linenum;
-- INSERT INTO from gp_read_error_log
INSERT INTO error_log_ctas SELECT relname, linenum, rawdata FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
SELECT * FROM error_log_ctas order by linenum;
-- Test function gp_truncate_error_log on non existing table
SELECT gp_truncate_error_log('non_existing');
-- Test gp_truncate_error_log on non external table
DROP TABLE IF EXISTS heap_test;
CREATE TABLE heap_test(i int, j int);
SELECT gp_truncate_error_log('heap_test');
-- Test gp_truncate_error_log on external table configured with error table
DROP EXTERNAL TABLE IF EXISTS ex

DROP TABLE IF EXISTS exttab_funcs_err;
\! python @script@ 10 2 > @data_dir@/exttab_funcs_1.tbl
CREATE EXTERNAL TABLE exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS INTO exttab_funcs_err SEGMENT REJECT LIMIT 10;
SELECT COUNT(*) FROM exttab_funcs_1;
SELECT gp_truncate_error_log('exttab_funcs_1');
SELECT COUNT(*) FROM exttab_funcs_err;
-- Test gp_read_error_log from a different schema
DROP SCHEMA IF EXISTS exttab_funcs_schema CASCADE;
CREATE SCHEMA exttab_funcs_schema;
CREATE EXTERNAL TABLE exttab_funcs_schema.exttab_funcs_1( i int, j text ) 
LOCATION ('gpfdist://@host@:@port@/exttab_funcs_1.tbl') FORMAT 'TEXT' (DELIMITER '|') 
LOG ERRORS SEGMENT REJECT LIMIT 10;
SELECT COUNT(*) FROM exttab_funcs_schema.exttab_funcs_1;
SELECT COUNT(*) FROM gp_read_error_log('exttab_funcs_schema.exttab_funcs_1');
SELECT gp_truncate_error_log('exttab_funcs_schema.exttab_funcs_1');
SELECT COUNT(*) FROM gp_read_error_log('ext
  CREATE OR REPLACE  VIEW HV_REPO_TXNS (MODULE_REF, COMPANY, DIVISION, PORTFOLIO, PORTFOLIO_NAME, PORTFOLIO_CATEGORY, PORTFOLIO_CATEGORY_NAME, PORTFOLIO_CCY, ASSET_GROUP, ASSET_GROUP_NAME, ASSET_CLASS, ASSET_NAME, TRANS_ID, TRANS_DATE, CURRENCY, TRANS_CODE, TRANS_NAME, INFLOW_OUTFLOW, MATURITY_DATE, NOOF_DAYS, COUPON_RATE, NET_AMOUNT_TCY, NET_AMOUNT_PCY, TOT_INTEREST_TCY, TOT_INTEREST_PCY, ACCR_INT_TCY, ACCR_INT_PCY, MATURITY_AMT_TCY, MATURITY_AMT_PCY, MATURITY_REFERENCE, NET_ASSET_VALUE, PER_NAV, ENTRY_DATE, TRANS_REF, TRANS_BASE_REF, TRANS_SRL_NO, COUNTERPARTY, COUNTERPARTY_NAME, CPARTY_GROUP, CPARTY_GROUP_NAME, IS_CPARTY_RELATED, IS_MATURED, MATURITY_DAYS, IS_SYSGEN, REMARKS, BUSINESS_DATE, DATA_SOURCE, TIME_STAMP) AS 
  select  'REPODEAL' as module_ref, repodeal.amc_code as company, 'AMC' as division, repodeal.scheme as portfolio, scheme.SCHEME_name as portfolio_name, scheme.port_type as portfolio_category,
        scheme.port_type as portfolio_category_name, scheme.currency as por

        assetype.asset_type as asset_class, assetype.DESC1 as asset_name, repodeal.deal_id as trans_id, repodeal.value_date as trans_date, repodeal.currency,
        repodeal.tran_type as trans_code, trantype.name as trans_name, decode(trantype.pur_sal, 'P', 'I', 'O') as inflow_outflow, repodeal.mat_date as maturity_date,
        repodeal.noofdays as noof_days, repodeal.repo_rate as coupon_rate, repodeal.fcy_nett_val as net_amount_tcy, repodeal.nett_val as net_amount_pcy,
        repodeal.fcy_int_recble as tot_interest_tcy, repodeal.int_recble as tot_interest_pcy, repodeal.fcy_accr_int as accr_int_tcy, repodeal.accr_int as accr_int_pcy,
        decode(repotxns.deal_id, null, (repodeal.fcy_nett_val+repodeal.fcy_int_recble), repodeal.fcy_nett_val) as maturity_amt_tcy,
        decode(repotxns.deal_id, null, (repodeal.nett_val+repodeal.int_recble), repodeal.nett_val) as maturity_amt_pcy, repotxns.deal_id as maturity_reference,
        scheme.nav as net_asset_value, decode(scheme.nav, 0, 0

        null as trans_base_ref, 1 as trans_srl_no, repodeal.cparty_id as counterparty, cparty.name as counterparty_name, cparty.coup_type as cparty_group,
        cparty.coup_type as cparty_group_name, nvl(cparty.related_yn, 'N') as is_cparty_related, case when repodeal.mat_date < scheme.cur_date then 'Y' else 'N' end as is_matured,
       (repodeal.mat_date - scheme.cur_date) as maturity_days, repodeal.sysgen_y_n as is_sysgen, repodeal.remarks,
        scheme.cur_date as business_date, 'HEXGENDBDATA' as data_source, current_timestamp as time_stamp
from    sysparam,HM_SCHEME scheme,HI_REPO_DEAL_CURR repodeal, HM_ASSET_TYPE assetype, HM_TRAN_TYPE trantype,HM_CPARTY cparty,HI_REPO_TXNS_CURR repotxns ,
HM_ASSET_GROUP ASSETGROUP
where   sysparam.amc_code     = scheme.amc_code
AND assetype.DESC2     = ASSETGROUP.ASSET_GROUP
and     sysparam.amc_code     = repodeal.amc_code
and     scheme.scheme         = repodeal.scheme
and     repodeal.value_date   > scheme.prv_yrend
and     trantype.tran
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (1727, "Plugin Name", "4.1.1", "trunk", "4.0", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (34332, 1727, "footer_code_append", "/footer-code.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (208786, 1727, "FooterCode", "__construct", "/options.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (208787, 1727, "FooterCode", "admin_page", "/options.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (208788, 1727, "FooterCode", "field_callback", "/options.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (208789, 1727, "FooterCode", "admin_menu", "/options.p

insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (208790, 1727, "FooterCode", "admin_init", "/options.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (208791, 1727, "FooterCode", "load_textdomain", "/options.php", now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (19006, 1727, "admin_menu", "array($this,'admin_menu')", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (19007, 1727, "init", "array($this,'load_textdomain')", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (19008, 1727, "admin_init", "array($this,'admin_init')", 10, now(), now());
insert into hooks (id, plugin_id, hook_name, hook_callback, hook_priority, created, modified) values (19009, 1727, "wp
--liquibase formatted sql
--This is for the sparrow_dss schema
--logicalFilePath: changeLog3Column.sql
--changeset lmurphy:column3a
ALTER TABLE MODEL_CALIB_SITES
RENAME COLUMN SPARROW_MODEL_ID TO SPARROW_MODEL_ID_PARTITION;
--rollback ALTER TABLE MODEL_CALIB_SITES RENAME COLUMN SPARROW_MODEL_ID_PARTITION TO SPARROW_MODEL_ID;
--changeset lmurphy:column3b
ALTER TABLE MODEL_CALIB_SITES_SWAP
RENAME COLUMN SPARROW_MODEL_ID TO SPARROW_MODEL_ID_PARTITION;
--rollback ALTER TABLE MODEL_CALIB_SITES_SWAP RENAME COLUMN SPARROW_MODEL_ID_PARTITION TO SPARROW_MODEL_ID;
--changeset lmurphy:column3c
ALTER TABLE MODEL_REACH_ATTRIB
RENAME COLUMN SPARROW_MODEL_ID TO SPARROW_MODEL_ID_PARTITION;
--rollback ALTER TABLE MODEL_REACH_ATTRIB RENAME COLUMN SPARROW_MODEL_ID_PARTITION TO SPARROW_MODEL_ID;
--changeset lmurphy:column3d
ALTER TABLE MODEL_REACH_ATTRIB_SWAP
RENAME COLUMN SPARROW_MODEL_ID TO SPARROW_MODEL_ID_PARTITION;
--rollback ALTER TABLE MODEL_REACH_ATTRIB_SWAP RENAME COLUMN SPARROW_MODEL_ID_PARTITIO

--changeset lmurphy:column3e
ALTER TABLE REACH_COEF
RENAME COLUMN SPARROW_MODEL_ID TO SPARROW_MODEL_ID_PARTITION;
--rollback ALTER TABLE REACH_COEF RENAME COLUMN SPARROW_MODEL_ID_PARTITION TO SPARROW_MODEL_ID;
--changeset lmurphy:column3f
ALTER TABLE REACH_COEF_SWAP
RENAME COLUMN SPARROW_MODEL_ID TO SPARROW_MODEL_ID_PARTITION;
--rollback ALTER TABLE REACH_COEF_SWAP RENAME COLUMN SPARROW_MODEL_ID_PARTITION TO SPARROW_MODEL_ID;
--changeset lmurphy:column3g
ALTER TABLE SOURCE_REACH_COEF
RENAME COLUMN SPARROW_MODEL_ID TO SPARROW_MODEL_ID_PARTITION;
--rollback ALTER TABLE SOURCE_REACH_COEF RENAME COLUMN SPARROW_MODEL_ID_PARTITION TO SPARROW_MODEL_ID;
--changeset lmurphy:column3h
ALTER TABLE SOURCE_REACH_COEF_SWAP
RENAME COLUMN SPARROW_MODEL_ID TO SPARROW_MODEL_ID_PARTITION;
--rollback ALTER TABLE SOURCE_REACH_COEF_SWAP RENAME COLUMN SPARROW_MODEL_ID_PARTITION TO SPARROW_MODEL_ID;
--changeset lmurphy:column3i
ALTER TABLE SOURCE_VALUE
RENAME COLUMN SPARROW_MODEL_ID TO SPARROW_MODEL_ID_PARTIT
﻿CREATE TABLE [dbo].[n_customer] (
    [customer_id]         INT            IDENTITY (1, 1) NOT NULL,
    [customer_name]       NVARCHAR (50)  NOT NULL,
    [customer_tel]        VARCHAR (11)   NOT NULL,
    [customer_tel_append] VARCHAR (50)   NULL,
    [customer_category]   INT            NOT NULL,
    [customer_source]     INT            DEFAULT ((0)) NOT NULL,
    [customer_remarks]    NVARCHAR (500) NULL,
    [customer_level]      INT            DEFAULT ((0)) NOT NULL,
    [customer_paytype]    INT            DEFAULT ((0)) NOT NULL,
    [city_ids]            VARCHAR (200)  NULL,
    [city_names]          NVARCHAR (200) NULL,
    [area_ids]            VARCHAR (200)  NULL,
    [area_names]          NVARCHAR (200) NULL,
    [estate_ids]          VARCHAR (200)  NULL,
    [estate_names]        NVARCHAR (200) NULL,
    [price]               INT            NULL,
    [acreage]             INT            NULL,
    [room]                INT            NULL,
    [customer_isself]     INT    

    [customer_dltflag]    INT            DEFAULT ((0)) NOT NULL,
    [follow_newstatus]    INT            NULL,
    [follow_newsdate]     DATETIME       NULL,
    [seehousing_count]    INT            NULL,
    [owner_userid]        INT            NULL,
    [owner_username]      NVARCHAR (20)  NULL,
    [owner_deptid]        INT            NULL,
    [owner_deptname]      NVARCHAR (20)  NULL,
    [owner_date]          DATETIME       NULL,
    [add_userid]          INT            NOT NULL,
    [add_username]        NVARCHAR (20)  NOT NULL,
    [add_deptid]          INT            NOT NULL,
    [add_deptname]        NVARCHAR (20)  NOT NULL,
    [add_date]            DATETIME       NOT NULL,
    [modify_userid]       INT            NULL,
    [modify_username]     NVARCHAR (20)  NULL,
    [modify_deptid]       INT            NULL,
    [modify_deptname]     NVARCHAR (20)  NULL,
    [modify_date]         DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([customer_id] ASC)
);
GO
CREATE UNIQUE NO
update v9_model_field set disabled=0 where field = 'content' and modelid=12;
update v9_model_field set disabled=0 where field = 'content' and modelid=14;
update v9_model_field set disabled=0 where field = 'content' and modelid=23;
update v9_model_field set disabled=0 where field = 'content' and modelid=25;
update v9_model_field set disabled=0 where field = 'content' and modelid=34;
update v9_model_field set disabled=0 where field = 'content' and modelid=36;
update v9_model_field set disabled=0 where field = 'content' and modelid=45;
update v9_model_field set disabled=0 where field = 'content' and modelid=47;
update v9_model_field set disabled=0 where field = 'content' and modelid=56;
update v9_model_field set disabled=0 where field = 'content' and modelid=58;
update v9_model_field set disabled=0 where field = 'content' and modelid=67;
update v9_model_field set disabled=0 where field = 'content' and modelid=69;
update v9_model_field set disabled=0 where field = 'content' and modelid=78;
-- trigger2.test
-- 
-- execsql {
--   CREATE TABLE ab(a, b);
--   CREATE TABLE cd(c, d);
--   INSERT INTO ab VALUES (1, 2);
--   INSERT INTO ab VALUES (0, 0);
--   INSERT INTO cd VALUES (3, 4);
-- 
--   CREATE TABLE tlog(ii INTEGER PRIMARY KEY, 
--       olda, oldb, oldc, oldd, newa, newb, newc, newd);
-- 
--   CREATE VIEW abcd AS SELECT a, b, c, d FROM ab, cd;
-- 
--   CREATE TRIGGER before_update INSTEAD OF UPDATE ON abcd BEGIN
--     INSERT INTO tlog VALUES(NULL, 
-- 	old.a, old.b, old.c, old.d, new.a, new.b, new.c, new.d);
--   END;
--   CREATE TRIGGER after_update INSTEAD OF UPDATE ON abcd BEGIN
--     INSERT INTO tlog VALUES(NULL, 
-- 	old.a, old.b, old.c, old.d, new.a, new.b, new.c, new.d);
--   END;
-- 
--   CREATE TRIGGER before_delete INSTEAD OF DELETE ON abcd BEGIN
--     INSERT INTO tlog VALUES(NULL, 
-- 	old.a, old.b, old.c, old.d, 0, 0, 0, 0);
--   END;
--   CREATE TRIGGER after_delete INSTEAD OF DELETE ON abcd BEGIN
--     INSERT INTO tlog VALUES(NULL, 
-- 	old.a, old.b

--   END;
-- 
--   CREATE TRIGGER before_insert INSTEAD OF INSERT ON abcd BEGIN
--     INSERT INTO tlog VALUES(NULL, 
-- 	0, 0, 0, 0, new.a, new.b, new.c, new.d);
--   END;
--    CREATE TRIGGER after_insert INSTEAD OF INSERT ON abcd BEGIN
--     INSERT INTO tlog VALUES(NULL, 
-- 	0, 0, 0, 0, new.a, new.b, new.c, new.d);
--    END;
-- }
CREATE TABLE ab(a, b);
CREATE TABLE cd(c, d);
INSERT INTO ab VALUES (1, 2);
INSERT INTO ab VALUES (0, 0);
INSERT INTO cd VALUES (3, 4);
CREATE TABLE tlog(ii INTEGER PRIMARY KEY, 
olda, oldb, oldc, oldd, newa, newb, newc, newd);
CREATE VIEW abcd AS SELECT a, b, c, d FROM ab, cd;
CREATE TRIGGER before_update INSTEAD OF UPDATE ON abcd BEGIN
INSERT INTO tlog VALUES(NULL, 
old.a, old.b, old.c, old.d, new.a, new.b, new.c, new.d);
END;
CREATE TRIGGER after_update INSTEAD OF UPDATE ON abcd BEGIN
INSERT INTO tlog VALUES(NULL, 
old.a, old.b, old.c, old.d, new.a, new.b, new.c, new.d);
END;
CREATE TRIGGER before_delete INSTEAD OF DELETE ON abcd BEGIN
INSERT INTO tl
ALTER TABLE `config_accounts` MODIFY COLUMN `Credits` DECIMAL(20, 5) DEFAULT '0.0';
ALTER TABLE `config_accounts` ADD COLUMN `View_Mod_Sheet` INT(11) DEFAULT '0' AFTER `Signature`;
ALTER TABLE `config_accounts` ADD COLUMN `View_Mod_Achieve` INT(11) DEFAULT '0' AFTER `View_Mod_Sheet`;
ALTER TABLE `config_accounts` ADD COLUMN `View_Mod_Friends` INT(11) DEFAULT '0' AFTER `View_Mod_Achieve`;
ALTER TABLE `config_accounts` ADD COLUMN `View_Mod_Inv` INT(11) DEFAULT '0' AFTER `View_Mod_Friends`;
ALTER TABLE `config_accounts` ADD COLUMN `View_Mod_Pets` INT(11) DEFAULT '0' AFTER `View_Mod_Inv`;
ALTER TABLE `config_accounts` ADD COLUMN `View_Mod_PvP` INT(11) DEFAULT '0' AFTER `View_Mod_Pets`;
ALTER TABLE `config_accounts` ADD COLUMN `View_Mod_Quest` INT(11) DEFAULT '0' AFTER `View_Mod_PvP`;
ALTER TABLE `config_accounts` ADD COLUMN `View_Mod_Rep` INT(11) DEFAULT '0' AFTER `View_Mod_Quest`;
ALTER TABLE `config_accounts` ADD COLUMN `View_Mod_Skill` INT(11) DEFAULT '0' AFTER `View_Mod_Rep`;
ALTER TAB
-- Task
SELECT dropIfExists('VIEW', 'task', 'api');
CREATE VIEW api.task
AS
   SELECT 
     prj_number AS project_number,
     prjtask_number AS number,
     CASE 
       WHEN (prjtask_status = 'P') THEN
         'Concept'
       WHEN (prjtask_status = 'O') THEN
         'In-Process'
       WHEN (prjtask_status = 'C') THEN
         'Closed'
       ELSE
         'Error'
     END AS status,
     prjtask_name AS name,
     prjtask_descrip AS description,
     prjtask_owner_username AS owner,
     prjtask_username AS assigned_to,
     prjtask_hours_budget AS hours_budgeted,
     prjtask_hours_actual AS hours_actual,
     prjtask_exp_budget AS expenses_budgeted,
     prjtask_exp_actual AS expenses_actual,
     prjtask_due_date AS due,
     prjtask_assigned_date AS assigned,
     prjtask_start_date AS started,
     prjtask_completed_date AS completed
   FROM prjtask
    JOIN prj() ON (prj_id=prjtask_prj_id);
GRANT ALL ON TABLE api.task TO xtrole;
COMMENT ON VIEW api.task IS 'Task';
--Rules
C

    ON INSERT TO api.task DO INSTEAD
  INSERT INTO prjtask (
    prjtask_prj_id,
    prjtask_number,
    prjtask_name,
    prjtask_descrip,
    prjtask_owner_username,
    prjtask_username,
    prjtask_hours_budget,
    prjtask_hours_actual,
    prjtask_exp_budget,
    prjtask_exp_actual,
    prjtask_status,
    prjtask_due_date,
    prjtask_assigned_date,
    prjtask_start_date,
    prjtask_completed_date
    )
  VALUES (
    getPrjId(NEW.project_number),
    NEW.number,
    COALESCE(NEW.name,''),
    COALESCE(NEW.description,''),
    COALESCE(NEW.owner,getEffectiveXtUser()),
    COALESCE(NEW.assigned_to,getEffectiveXtUser()),
    COALESCE(NEW.hours_budgeted,0),
    COALESCE(NEW.hours_actual,0),
    COALESCE(NEW.expenses_budgeted,0),
    COALESCE(NEW.expenses_actual,0),
    CASE 
      WHEN (NEW.status='In-Process') THEN
        'O'
      WHEN (NEW.status='Completed') THEN
        'C'
      ELSE
        'P'
    END,
    NEW.due,
    NEW.assigned,
    NEW.started,
    NEW.completed
  

CREATE OR REPLACE RULE "_UPDATE" AS 
    ON UPDATE TO api.task DO INSTEAD
  UPDATE prjtask SET
    prjtask_name=NEW.name,
    prjtask_descrip=NEW.description,
    prjtask_owner_username=NEW.owner,
    prjtask_username=NEW.assigned_to,
    prjtask_hours_budget=NEW.hours_budgeted,
    prjtask_hours_actual=NEW.hours_actual,
    prjtask_exp_budget=NEW.expenses_budgeted,
    prjtask_exp_actual=NEW.expenses_actual,
    prjtask_status=
    CASE 
      WHEN (NEW.status='In-Process') THEN
        'O'
      WHEN (NEW.status='Completed') THEN
        'C'
      ELSE
        'P'
    END,
    prjtask_due_date=NEW.due,
    prjtask_assigned_date=NEW.assigned,
    prjtask_start_date=NEW.started,
    prjtask_completed_date=NEW.completed
  WHERE ((prjtask_prj_id=getPrjId(OLD.project_number))
   AND (prjtask_number=OLD.number));
           
CREATE OR REPLACE RULE "_DELETE" AS 
    ON DELETE TO api.task DO INSTEAD
  DELETE FROM prjtask
  WHERE ((prjtask_prj_id=getPrjId(OLD.project_number))
   AND (prjtask
﻿CREATE VIEW dbo.LoginView
AS
SELECT        Username, Password
FROM            dbo.Login
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  
﻿CREATE VIEW dbo.LoginView
AS
SELECT        Username, Password
FROM            dbo.Login
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  

      End
      Begin Tables = 
         Begin Table = "Login"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 190
               Right = 345
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'LoginView';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1ty

      End
      Begin Tables = 
         Begin Table = "Login"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 190
               Right = 345
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'LoginView';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1ty
﻿CREATE VIEW dbo.LoginView
AS
SELECT        Username, Password
FROM            dbo.Login
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  

      End
      Begin Tables = 
         Begin Table = "Login"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 190
               Right = 345
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'LoginView';
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1ty
--------------------------------------------------------
--  Fichier créé - lundi-mai-26-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table INDIVIDUS
--------------------------------------------------------
  CREATE TABLE "JEE"."INDIVIDUS" 
   (	"PRENOM" NVARCHAR2(30), 
	"NOM" NVARCHAR2(30), 
	"AGE" NUMBER, 
	"ID_INDIVIDU" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into JEE.INDIVIDUS
SET DEFINE OFF;
Insert into JEE.INDIVIDUS (PRENOM,NOM,AGE,ID_INDIVIDU) values ('charlotte','henin','20','2');
Insert into JEE.INDIVIDUS (PRENOM,NOM,AGE,ID_INDIVIDU) values ('baptiste','henin','14','3');
-----------------------------------
﻿SET XACT_ABORT ON
BEGIN TRAN
--*************************************************************************************************
--  сопоставление записей спр 500
--*************************************************************************************************
--в 500 спр. СПД 2121 записей (+20 записей-дублей, ктр д.б. удалены)
select 
    A.id    AS AnalitId                                                                             --id счета ДЕПО в СПД
    ,F.ID_F   AS FansyId                                                              --id, номер и наименование счета ДЕПО в ФЭНСИ
    into #Temp
from [SPD-NAV].GL_SPD.dbo.Analit A
left join [SPD-NAV].GL_SPD.dbo.Analit A109 on A109.IDAnalitType=109 and A109.IDAnalit=A.Int01
left join [SPD-NAV].GL_SPD.dbo.Analit A501 on A501.IDAnalitType=501 and A501.IDAnalit=A.Int02
left join   (
                select T.ID ID_F, T.NUMBER, T.NAME NAMEDEPO, F.SELF_ID, F.NAME 
                from [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_CLIENTS T
         

                left join [SDEPO-NAV].[X_DEPO_DATA].dbo.OD_FACES F on F.SELF_ID=T.FACE and F.LAST_FLAG=1
                where PLAN_ID=4
            ) F on F.NUMBER=A.NameAnalit collate Cyrillic_General_CI_AS
where A.IDAnalitType=500 
    and A.IDAnalit  not in (5854, 5825, 3305842, 5840, 5827, 5844, 5830, 5832, 5845, 5563, 5828, 5836, 5823, 5312, 5838, 5837, 5853, 5843, 5849, 5824)
--результаты сопоставления
--select * from #Temp where ID_F is null
--        --  всего записей                   - 2121
--        --  сопоставляются по № счета       - 2121
--        --  не сопоставляются по № счета    - 0
----для сопоставившегося счета ДЕПО выходим на разных ЮЛ-депонентов в НСИ 
--select 
--    T.NameAnalit    
----  ,T.id_Deponent, T.IDAnalit_Deponent, T.NameAnalit_Deponent
----  ,T.SELF_ID, T.NAME
--    ,LE1.Name, LE1.FullName, LE1.INN, LE1.OGRN, LE1.OKPO
--    ,LE2.Name Name_F, LE2.FullName FullName_F, LE2.INN INN_F, LE2.OGRN OGRN_F, LE2.OKPO OKPO_F
--from #Temp T
--left join NaviconM

--left join NaviconMDM.dbo.CodesMappingDetails M2 on M2.ClientName='FANSY' and M2.EntityName='LegalEntity' and M2.ClientId=T.SELF_ID
--left join NaviconMDM.dbo.CodesMappingDetails M3 on M3.ClientName='NSI' and M3.EntityName='LegalEntity' and M3.MasterCode=M1.MasterCode
--left join NaviconMDM.dbo.CodesMappingDetails M4 on M4.ClientName='NSI' and M4.EntityName='LegalEntity' and M4.MasterCode=M2.MasterCode
--left join MDS.mdm.Infinitum_LegalEntity LE1 on LE1.Code=M3.ClientId collate Cyrillic_General_100_CS_AS
--left join MDS.mdm.Infinitum_LegalEntity LE2 on LE2.Code=M4.ClientId collate Cyrillic_General_100_CS_AS
--where 1=1
--    and M1.MasterCode<>M2.MasterCode
--order by 
--    LE1.Name
--*************************************************************************************************
--  сопоставление записей спр 503
--*************************************************************************************************
/*
--дубли в 503 спр (по номеру счета) = 15 записей
select A.id, A.IDA
CREATE TABLE "WRKCRD"."CC_WRKCRD_INTERVIEW_TYPE"
  (
    "CODE" VARCHAR2(20 BYTE) NOT NULL ENABLE,
    CONSTRAINT "CC_WRKCRD_INTERVIEW_TYPE_PK" PRIMARY KEY ("CODE") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) TABLESPACE "CC_DEVELOPMENT" ENABLE
  )
  SEGMENT CREATION IMMEDIATE PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING STORAGE
  (
    INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT
  )
  TABLESPACE "CC_DEVELOPMENT" ;
  
INSERT INTO "WRKCRD"."CC_WRKCRD_INTERVIEW_TYPE" (CODE) VALUES ('AIF');
INSERT INTO "WRKCRD"."CC_WRKCRD_INTERVIEW_TYPE" (CODE) VALUES ('AIS');
INSERT INTO "WRKCRD"."CC_WRKCRD_INTERVIEW_TYPE" (CODE) VALUES ('AFO');
INSERT INTO "WRKC
IF OBJECT_ID('PricingModelScenarios') IS NULL
BEGIN
	CREATE TABLE PricingModelScenarios
	(
		ScenarioId INT
	   ,ScenarioName VARCHAR(50)
	   ,ConfigName VARCHAR(50)
	   ,ConfigValue DECIMAL(18,6)
	)
END  
GO
IF NOT EXISTS (SELECT 1 FROM PricingModelScenarios WHERE ScenarioName = 'Basic')
BEGIN
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'TenurePercents', '0.5')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'SetupFee', '0.015')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'ProfitMarkupPercentsOfRevenue', '0.25')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'OpexAndCapex', '150')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'InterestOnlyPeriod', '0')
	INSERT INTO Pric

		VALUES (1, 'Basic', 'EuCollectionRate', '0.75')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'DefaultRateCompanyShare', '0.7')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'DebtPercentOfCapital', '0.6')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'CostOfDebtPA', '0.16')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'CollectionRate', '0.19')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'Cogs', '1000')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (1, 'Basic', 'BrokerSetupFee', '0')
END
GO
IF NOT EXISTS (SELECT 1 FROM PricingModelScenarios WHERE ScenarioName = 'Broker')
BEGIN
	INSERT INTO PricingModelScenarios (Scen

		VALUES (2, 'Broker', 'TenurePercents', '0.5')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (2, 'Broker', 'SetupFee', '0.015')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (2, 'Broker', 'ProfitMarkupPercentsOfRevenue', '0.25')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (2, 'Broker', 'OpexAndCapex', '150')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (2, 'Broker', 'InterestOnlyPeriod', '0')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (2, 'Broker', 'EuCollectionRate', '0.75')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (2, 'Broker', 'DefaultRateCompanyShare', '0.7')
	INSERT INTO PricingModelScenarios (ScenarioId, ScenarioName, ConfigName, ConfigValue) 
		VALUES (2, 'Broker', 
DROP TABLE IF EXISTS x2_bug_reports;
/*&*/
CREATE TABLE x2_bug_reports(
    id           INT NOT NULL AUTO_INCREMENT primary key,
    assignedTo   VARCHAR(250),
    `name`       VARCHAR(250),
    nameId       VARCHAR(250) DEFAULT NULL,
    description  TEXT,
    createDate   INT,
    lastUpdated  INT,
    lastActivity BIGINT,
    updatedBy    VARCHAR(250),
    blocks       VARCHAR(250),
    duplicate    VARCHAR(250),
    `file`       VARCHAR(250),
    line         VARCHAR(250),
    phpVersion   VARCHAR(250),
    severity     VARCHAR(250),
    status       VARCHAR(250),
    subject      VARCHAR(250),
    `type`       VARCHAR(250),
    visibility   TINYINT,
    x2Version    VARCHAR(250),
    errorCode    VARCHAR(250),
    UNIQUE(nameId),
    INDEX(blocks),
    INDEX(duplicate)
) COLLATE = utf8_general_ci;
/*&*/
INSERT INTO `x2_modules`
(`name`, title, visible, menuPosition, searchable, editable, adminOnly, custom, toggleable)
VALUES
('bugReports', 'Bug Reports', 1, 20, 1, 1, 0, 0, 0);
/*

INSERT INTO x2_fields
(modelName, fieldName, attributeLabel, custom, `type`, required, readOnly, linkType, searchable, isVirtual, relevance, uniqueConstraint, safe, keyType)
VALUES
('BugReports', 'id',           'ID',            0, 'int',        0, 0, NULL,         0, 0, '',       1, 1, 'PRI'),
('BugReports', 'name',         'Name',          0, 'varchar',    0, 0, NULL,         0, 0, 'High',   0, 1, NULL),
('BugReports', 'nameId',       'NameID',        0, 'varchar',    0, 1, NULL,         0, 0, 'High',   0, 1, 'FIX'),
('BugReports', 'assignedTo',   'Assigned To',   0, 'assignment', 0, 0, NULL,         0, 0, '',       0, 1, NULL),
('BugReports', 'description',  'Description',   0, 'text',       0, 0, NULL,         0, 0, 'Medium', 0, 1, NULL),
('BugReports', 'createDate',   'Create Date',   0, 'dateTime',   0, 1, NULL,         0, 0, '',       0, 1, NULL),
('BugReports', 'lastUpdated',  'Last Updated',  0, 'dateTime',   0, 1, NULL,         0, 0, '',       0, 1, NULL),
('BugReports', 'la

('BugReports', 'updatedBy',    'Updated By',    0, 'assignment', 0, 1, NULL,         0, 0, '',       0, 1, NULL),
('BugReports', 'blocks',       'Blocks',        0, 'link',       0, 0, 'BugReports', 0, 0, '',       0, 1, 'MUL'),
('BugReports', 'duplicate',    'Duplicate Of',  0, 'link',       0, 0, 'BugReports', 0, 0, '',       0, 1, 'MUL'),
('BugReports', 'file',         'File',          0, 'varchar',    0, 0, NULL,         0, 0, '',       0, 1, NULL),
('BugReports', 'line',         'Line',          0, 'varchar',    0, 0, NULL,         0, 0, '',       0, 1, NULL),
('BugReports', 'phpVersion',   'PHP Version',   0, 'varchar',    0, 0, NULL,         0, 0, '',       0, 1, NULL),
('BugReports', 'severity',     'Severity',      0, 'dropdown',   0, 0, 116,          0, 0, '',       0, 1, NULL),
('BugReports', 'status',       'Status',        0, 'dropdown',   0, 0, 115,          0, 0, '',       0, 1, NULL),
('BugReports', 'subject',      'Subject',       0, 'varchar',    0, 0, NULL,         
/* Generate Grant statements for frthr_omop_i DB User */
/* Run this as sys */
SELECT 'GRANT SELECT ON FRTHR_MODEL.'||table_name||' TO FRTHR_OMOP_I;' AS Grant_DDL
FROM   ALL_TABLES 
WHERE  OWNER = 'FRTHR_MODEL'; 
/* Then you get this and run it */
GRANT SELECT ON FRTHR_MODEL.FSPECIMEN TO FRTHR_OMOP_I;                      
GRANT SELECT ON FRTHR_MODEL.FPERSON TO FRTHR_OMOP_I;                        
GRANT SELECT ON FRTHR_MODEL.FPERSON_LCTN TO FRTHR_OMOP_I;                   
GRANT SELECT ON FRTHR_MODEL.FPERSON_ASSOC TO FRTHR_OMOP_I;                  
GRANT SELECT ON FRTHR_MODEL.FCONDITION_OCCURRENCE TO FRTHR_OMOP_I;          
GRANT SELECT ON FRTHR_MODEL.FENCOUNTER TO FRTHR_OMOP_I;                     
GRANT SELECT ON FRTHR_MODEL.FPROVIDER TO FRTHR_OMOP_I;                      
GRANT SELECT ON FRTHR_MODEL.FPROVIDER_LCTN TO FRTHR_OMOP_I;                 
GRANT SELECT ON FRTHR_MODEL.FOBSERVATION_FACT TO FRTHR_OMOP_I;              
GRANT SELECT ON FRTHR_MODEL.FORDER_FACT TO FRTHR_OMOP_I;   
﻿CREATE VIEW dbo.v_Role
AS
SELECT          Number, Category, RoleCode, RoleName
FROM              dbo.v_Role_ican5
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[29] 4[33] 2[10] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 

         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "v_Role_ican5"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 140
               Right = 203
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 3120
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 13
CREATE TABLE "USER_DATA" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(255 CHAR), 
	"FIRST_NAME" VARCHAR2(255 CHAR), 
	"LAST_NAME" VARCHAR2(255 CHAR), 
	"PASSWORD" VARCHAR2(255 CHAR), 
	 PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
  
   CREATE TABLE "MENU_MASTER" 
   (	"MENU_ID" NUMBER(19,0) NOT NULL ENABLE, 
	"INSERT_DATE" TIMESTAMP (6), 
	"INSERT_ID" NUMBER(19,0), 
	"ACTIVE" NUMBER(1,0), 
	"IS_PAGE_REDIRECT" NUMBER(1

	"MENU_INDEX" NUMBER(10,0), 
	"MENU_NAME" VARCHAR2(255 CHAR), 
	"MODIFY_BY" NUMBER(19,0), 
	"MODIFY_DATE" TIMESTAMP (6), 
	"MODIFY_ID" NUMBER(19,0), 
	"REDIRECT_PAGE" VARCHAR2(255 CHAR), 
	 PRIMARY KEY ("MENU_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
  CREATE TABLE "SUB_MENU_MASTER" 
   (	"SUB_MENU_ID" NUMBER(19,0) NOT NULL ENABLE, 
	"INSERT_DATE" TIMESTAMP (6), 
	"INSERT_ID" NUMBER(19,0), 
	"ACTIVE" NUMBER(1,0), 
	"IS_PAGE_REDIRECT" NUMBER(1,

	"SUB_MENU_INDEX" NUMBER(10,0), 
	"SUB_MENU_NAME" VARCHAR2(255 CHAR), 
	"MODIFY_BY" NUMBER(19,0), 
	"MODIFY_DATE" TIMESTAMP (6), 
	"MODIFY_ID" NUMBER(19,0), 
	"REDIRECT_PAGE" VARCHAR2(255 CHAR), 
	"PARENT_SUB_MENU_ID" NUMBER(19,0), 
	"MENU_ID" NUMBER(19,0), 
	 PRIMARY KEY ("SUB_MENU_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "FK_73D895D0C0BD481CAB84989C45F" FOREIGN KEY ("MENU_ID")
	  REFERENCES "MENU_MASTER" ("MENU_ID") ENABLE, 
	 CONSTRAINT "FK_879317F2E2824AADAD8E9E4091C" FOREIGN KEY ("PARENT_SUB_MENU_ID")
	  REFERENCES "SUB_MENU_MASTER" ("SUB_MENU_ID") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
            
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE Inventory_ProducerModelGetByPk    
    @ModelNo numeric(18, 0)
AS
BEGIN
    select *
    from Inventory_ProducerModel    
    where @ModelNo = ModelNo;
END
GO
            
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE Inventory_ProducerModelGetByFk 
    @ItemID numeric(18, 0) = null,
    @ProducerID numeric(18, 0) = null,
    @ByCreatedOn bit  = null,
    @CreatedOnFrom datetime = null,
    @CreatedOnTo datetime = null,
    @ByModifiedOn bit  = null,
    @ModifiedOnFrom datetime = null,
    @ModifiedOnTo datetime = null
AS
BEGIN		
		select *
		from Inventory_ProducerModel RPT		
		where ( @ItemID is null or ItemID = @ItemID)
    and ( @ProducerID is null or ProducerID = @ProducerID)
    and ( @ByCreatedOn is null or dbo.DateOnly(CreatedOn) between dbo.DateOnly(@CreatedOnFrom) and dbo.DateOnly(@CreatedOnTo))
    and ( @ByModifiedOn is null or dbo.DateOnly(ModifiedOn) between dbo.DateOnly(@M

    		
END
GO
            
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE Inventory_ProducerModelGetAll 
AS
BEGIN		
		select *
		from Inventory_ProducerModel		
END
GO
            
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE Inventory_ProducerModelInsert
    @ModelNo numeric(18, 0) out,
    @ItemID numeric(18, 0) = null,
    @ProducerID numeric(18, 0) = null,
    @ModelName nvarchar(50) = null,
    @CreatedBy nvarchar(50) = null,
    @CreatedOn datetime = null,
    @ModifiedBy nvarchar(50) = null,
    @ModifiedOn datetime = null
AS
BEGIN
    insert into Inventory_ProducerModel
    (
        ItemID,
        ProducerID,
        ModelName,
        CreatedBy,
        CreatedOn,
        ModifiedBy,
        ModifiedOn
    )	
    values
    (
        @ItemID,
        @ProducerID,
        @ModelName,
        @CreatedBy,
        GETDATE(),
        @ModifiedBy,
        @ModifiedOn
    )
    set @ModelNo = SCOPE_IDENTITY()
end
GO
            
            

-- *** STRUCTURE: `tbl_fields_author` ***
DROP TABLE IF EXISTS `tbl_fields_author`;
CREATE TABLE `tbl_fields_author` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(11) unsigned NOT NULL,
  `allow_author_change` enum('yes','no') NOT NULL,
  `allow_multiple_selection` enum('yes','no') NOT NULL DEFAULT 'no',
  `default_to_current_user` enum('yes','no') NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `field_id` (`field_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- *** DATA: `tbl_fields_author` ***
-- *** STRUCTURE: `tbl_fields_checkbox` ***
DROP TABLE IF EXISTS `tbl_fields_checkbox`;
CREATE TABLE `tbl_fields_checkbox` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(11) unsigned NOT NULL,
  `default_state` enum('on','off') NOT NULL DEFAULT 'on',
  `description` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `field_id` (`field_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- *** DATA: `tbl_fields_checkbox` ***
-- *** STRUCTURE: `tbl_fields_date`

DROP TABLE IF EXISTS `tbl_fields_date`;
CREATE TABLE `tbl_fields_date` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(11) unsigned NOT NULL,
  `pre_populate` enum('yes','no') NOT NULL DEFAULT 'no',
  PRIMARY KEY (`id`),
  KEY `field_id` (`field_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- *** DATA: `tbl_fields_date` ***
-- *** STRUCTURE: `tbl_fields_input` ***
DROP TABLE IF EXISTS `tbl_fields_input`;
CREATE TABLE `tbl_fields_input` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(11) unsigned NOT NULL,
  `validator` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `field_id` (`field_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- *** DATA: `tbl_fields_input` ***
-- *** STRUCTURE: `tbl_fields_select` ***
DROP TABLE IF EXISTS `tbl_fields_select`;
CREATE TABLE `tbl_fields_select` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(11) unsigned NOT NULL,
  `allow_multiple_selection` enum('yes','no') NOT NULL DEFAULT 'no',
  

  `static_options` text,
  `dynamic_options` int(11) unsigned DEFAULT NULL,
  `sort_options` enum('yes','no') NOT NULL DEFAULT 'no',
  PRIMARY KEY (`id`),
  KEY `field_id` (`field_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- *** DATA: `tbl_fields_select` ***
-- *** STRUCTURE: `tbl_fields_selectbox_link` ***
DROP TABLE IF EXISTS `tbl_fields_selectbox_link`;
CREATE TABLE `tbl_fields_selectbox_link` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `field_id` int(11) unsigned NOT NULL,
  `allow_multiple_selection` enum('yes','no') NOT NULL DEFAULT 'no',
  `show_association` enum('yes','no') NOT NULL DEFAULT 'yes',
  `related_field_id` varchar(255) NOT NULL,
  `limit` int(4) unsigned NOT NULL DEFAULT '20',
  PRIMARY KEY (`id`),
  KEY `field_id` (`field_id`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-- *** DATA: `tbl_fields_selectbox_link` ***
-- *** STRUCTURE: `tbl_fields_taglist` ***
DROP TABLE IF EXISTS `tbl_fields_taglist`;
CREATE TABLE `tbl_fields_taglist` (
  `id` int(11) unsigne
﻿CREATE TABLE [Production].[ProductModel] (
    [ProductModelID]     INT                                                            IDENTITY (1, 1) NOT NULL,
    [Name]               [dbo].[Name]                                                   NOT NULL,
    [CatalogDescription] XML(CONTENT [Production].[ProductDescriptionSchemaCollection]) NULL,
    [Instructions]       XML(CONTENT [Production].[ManuInstructionsSchemaCollection])   NULL,
    [rowguid]            UNIQUEIDENTIFIER                                               CONSTRAINT [DF_ProductModel_rowguid] DEFAULT (newid()) ROWGUIDCOL NOT NULL,
    [ModifiedDate]       DATETIME                                                       CONSTRAINT [DF_ProductModel_ModifiedDate] DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [PK_ProductModel_ProductModelID] PRIMARY KEY CLUSTERED ([ProductModelID] ASC)
);
GO
CREATE UNIQUE NONCLUSTERED INDEX [AK_ProductModel_rowguid]
    ON [Production].[ProductModel]([rowguid] ASC);
GO
CREATE UNIQUE NONCLU

    ON [Production].[ProductModel]([Name] ASC);
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_Instructions]
    ON [Production].[ProductModel]([Instructions])
    WITH (PAD_INDEX = OFF);
GO
CREATE PRIMARY XML INDEX [PXML_ProductModel_CatalogDescription]
    ON [Production].[ProductModel]([CatalogDescription])
    WITH (PAD_INDEX = OFF);
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary XML index.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'INDEX', @level2name = N'PXML_ProductModel_Instructions';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary XML index.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'INDEX', @level2name = N'PXML_ProductModel_CatalogDescription';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unique nonclustered index. Used

GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unique nonclustered index.', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'INDEX', @level2name = N'AK_ProductModel_Name';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default constraint value of GETDATE()', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'CONSTRAINT', @level2name = N'DF_ProductModel_ModifiedDate';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default constraint value of NEWID()', @level0type = N'SCHEMA', @level0name = N'Production', @level1type = N'TABLE', @level1name = N'ProductModel', @level2type = N'CONSTRAINT', @level2name = N'DF_ProductModel_rowguid';
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Primary key (clustered) constraint', @level0type = N'SCHEMA', @leve
--50ETF
create table jisilu_etf_detail_510050 (
hist_dt text primary key,
trade_price text,
fund_nav text,
discount_rt text,
idx_incr_rt text,
idx_pb text,
idx_pe text,
amount text,
amount_incr text,
increase_rt text
);
--180ETF
create table jisilu_etf_detail_510180 (
hist_dt text primary key,
trade_price text,
fund_nav text,
discount_rt text,
idx_incr_rt text,
idx_pb text,
idx_pe text,
amount text,
amount_incr text,
increase_rt text
);
--300ETF
create table jisilu_etf_detail_510300 (
hist_dt text primary key,
trade_price text,
fund_nav text,
discount_rt text,
idx_incr_rt text,
idx_pb text,
idx_pe text,
amount text,
amount_incr text,
increase_rt text
);
--500ETF
create table jisilu_etf_detail_510500 (
hist_dt text primary key,
trade_price text,
fund_nav text,
discount_rt text,
idx_incr_rt text,
idx_pb text,
idx_pe text,
amount text,
amount_incr text,
increase_rt text
);
--深100ETF
create table jisilu_etf_detail_159901 (
hist_dt text primary key,
trade_price text,
fund_nav text,
discount

idx_incr_rt text,
idx_pb text,
idx_pe text,
amount text,
amount_incr text,
increase_rt text
);
--中小板
create table jisilu_etf_detail_159902 (
hist_dt text primary key,
trade_price text,
fund_nav text,
discount_rt text,
idx_incr_rt text,
idx_pb text,
idx_pe text,
amount text,
amount_incr text,
increase_rt text
);
--创业板
create table jisilu_etf_detail_159915 (
hist_dt text primary key,
trade_price text,
fund_nav text,
discount_rt text,
idx_incr_rt text,
idx_pb text,
idx_pe text,
amount text,
amount_incr text,
increase_rt text
);
--H股ETF
create table jisilu_etf_detail_510900 (
hist_dt text primary key,
trade_price text,
fund_nav text,
discount_rt text,
idx_incr_rt text,
idx_pb text,
idx_pe text,
amount text,
amount_incr text,
increase_rt text
);
--恒生ETF
create table jisilu_etf_detail_159920 (
hist_dt text primary key,
trade_price text,
fund_nav text,
discount_rt text,
idx_incr_rt text,
idx_pb text,
idx_pe text,
amount text,
amount_incr text,
increase_rt text
);
--红利ETF
create table jisilu_
create sequence system.tuna_mod minvalue 1 maxvalue 99 cycle;
create table system.tables (
  name name not null,
  mod integer default nextval('system.tuna_mod'::regclass) not null unique
);
create table system.config (
	tuna_max_tables integer not null default 128,
	id_sufix varchar not null default '_id',
	last_redesign timestamp not null default now()
);
insert into system.config (last_redesign) values(now());
/*
  OVO JE IZMJENJENI TABLE_FIELDS, TREBALO BI GA DODATI U TUNU.
  DODANO MU JE SCHEMA NAME. 
*/
create view system.table_fields as
	select 
			c.relname as "tb_name",
			s.mod as "tb_mod",
			a.attname as "field_name",
			a.attnum as "field_order",
			t.typname as "type_name",
			a.atttypid as "type_oid",
			n.nspname as "nsp_name"
		from pg_catalog.pg_attribute a
			join pg_catalog.pg_class c on a.attrelid = c.oid
			left join system.tables s on s.name = c.relname
			join pg_catalog.pg_type t on a.atttypid = t.oid
			join pg_catalog.pg_namespace n on n.oid = c.relnamespace

/****** Object:  StoredProcedure [dbo].[ExportGANETPeptideFile] ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Procedure ExportGANETPeptideFile
/****************************************************
**
**	Desc: 
**		Creates a flat file containing peptide records
**		for GA NET external program
**
**	Return values: 0: success, otherwise, error code
**
**	Parameters:
**
**	Auth:	grk
**	Date:	04/03/2002
**			09/22/2004 mem - Updated to use the T_Score tables and changed output filename from pep_temp to temp_peptides
**			01/23/2005 mem - Moved the output file deletion command to occur after the bulk copy command finishes
**			12/02/2005 mem - Added brackets around @DBName as needed to allow for DBs with dashes in the name
**						   - Increased size of @DBName from 64 to 128 characters
**			07/18/2006 mem - Updated to use dbo.udfCombinePaths
**			01/24/2008 mem - Now specifying the sort order when querying V_GANET_Peptides
**			01/06/2012 mem - Updated to use T_Peptides.Jo

**    
*****************************************************/
	@outFileDir varchar(256) = 'F:\GA_Net_Xfer\Out\',
	@outFileName varchar(256) = 'peptideGANET.txt',
	@message varchar(256)='' OUTPUT
As
	Set nocount on
	Declare @myRowCount int
	Declare @myError int
	Set @myRowCount = 0
	Set @myError = 0
	Set @message = ''
	declare @DBName varchar(128)
	set @DBName = DB_NAME()
	declare @pepFilePath varchar(512)
	Set @pepFilePath = '"' + dbo.udfCombinePaths(dbo.udfCombinePaths(@outFileDir, @DBName), 'temp_peptides') + '"'
	declare @outFilePath varchar(512)
	declare @cmd varchar(1024)
	declare @result int
	declare @lockerCount varchar(12)
	--------------------------------------------------------------
	-- build output file path
	--------------------------------------------------------------
	Set @outFilePath = '"' + dbo.udfCombinePaths(dbo.udfCombinePaths(@outFileDir, @DBName), @outFileName) + '"'
	--------------------------------------------------------------
	-- get the count of peptide loc

	--------------------------------------------------------------
	-- (future:)
	Set @lockerCount = '0'
	--------------------------------------------------------------
	-- dump the peptide lockers into a temporary file
	--------------------------------------------------------------
	--
	-- (future:)
	--------------------------------------------------------------
	-- dump the peptides into a temporary file
	--------------------------------------------------------------
	-- 
	Set @cmd = 'bcp "SELECT * FROM [' + @DBName + '].dbo.V_GANET_Peptides ORDER BY Job, Scan_Number, Charge_State, Normalized_Score DESC" queryout ' + @pepFilePath + ' -c -T'
	--
	EXEC @result = master..xp_cmdshell @cmd, NO_OUTPUT 
	Set @myError = @result
	--
	if @myError <> 0
	begin
		-- Error writing file
		Set @message = 'Error exporting data from V_GANET_Peptides to ' + @outFilePath
		goto done
	end
	--------------------------------------------------------------
	-- Make sure @outFilePath does not exist, deleting it 
﻿-------------------------------------------------------
-- Title            : [dbo].[SearchView]
-- Description      : View for Searching the Communities and Contents
-- Input            : N/A.
-- Output           : N/A.
-- Author           : v-sagna
-- Date             : 29 Dec 2011
-- 
-------------------------------------------------------
CREATE VIEW [dbo].[SearchView]
AS
    SELECT    [dbo].[CommunitiesView].[CommunityID] AS [ID]
            , [dbo].[CommunitiesView].[CommunityName] AS [Name]
            , [dbo].[CommunitiesView].[Description]
            , [dbo].[CommunitiesView].[DistributedBy]
            , [dbo].[CommunitiesView].[CreatedByID] AS [ProducerId]
            , [dbo].[CommunitiesView].[ProducedBy] AS [Producer]
            , NULL AS [ParentID]
            , NULL AS [ParentName]
            , NULL AS [ParentType]
            , [dbo].[CommunitiesView].[AverageRating] AS [Rating]
            , [dbo].[CommunitiesView].[RatedPeople]
            , [dbo].[CommunitiesView

            , [dbo].[CommunitiesView].[ThumbnailID]
            , NULL AS [Filename]
            , NULL AS [ContentAzureID]
            , NULL AS [ContentUrl]
            , 0 AS [ContentType]
            , NULL AS [Citation]
            , [dbo].[CommunitiesView].[CategoryID] AS [Category]
            , 'Community' AS [Entity]
            , [dbo].[CommunitiesView].[AccessType]
            , [dbo].GetCommunityUsers([dbo].[CommunitiesView].[CommunityID]) AS [Users]
    FROM    [dbo].[CommunitiesView] 
    WHERE [dbo].[CommunitiesView].[CommunityTypeID] = 1
        UNION
    SELECT    [dbo].[ContentsView].[ContentID] AS [ID]
            , [dbo].[ContentsView].[Title] AS [Name]
            , [dbo].[ContentsView].[Description]
            , [dbo].[ContentsView].[DistributedBy]
            , [dbo].[ContentsView].[CreatedByID]  AS [ProducerId]
            , [dbo].[ContentsView].[ProducedBy] AS [Producer]
            , [dbo].[ContentsView].[CommunityID] AS [ParentID]
            , [dbo].[Conte
-- OK for CH, UK, PT
-- Get all "current" positions and their associated reference position
SELECT s.securityseedid AS security_id, -- Security ID
s.extid AS intranet_id, -- Intranet ID
s.name AS security_name, -- Security name
s.currency_ AS security_currency, -- Security currency
pos.local_amount AS local_amount, -- Local amount
pos.nav_value, -- NAV
pos.equalization_factor_amount AS equalization_factor_amount, -- Equalization factor
ref_pos.position_exists AS ref_position_exists, -- Position exists
ref_pos.local_amount AS ref_local_amount, -- Reference evaluation local amount
ref_pos.spot_rate AS ref_spot_rate, -- Reference evaluation spot rate
ref_pos.nav_value AS ref_nav_value, -- Reference NAV
ref_pos.equalization_factor_amount AS ref_equalization_factor_amount -- Equalization factor
FROM (
    -- Get positions with their equalization factor
    SELECT posa.security AS security_id, -- Security ID
    SUM(posa.localvalue) AS local_amount, -- Local amount
    MAX(posa.lastnav) AS n

    ef.equalization_factor_amount -- Equalization factor amount
    FROM accountarrest acca,
    positionarrest posa,
    (
        SELECT oa.security AS security_id, -- Security ID
        SUM(oa.basepaid) AS equalization_factor_amount -- Equalization factor amount
        FROM operationarrest oa
        WHERE oa.portfolioarrest = ?
        AND oa.type_ = 'PENDINGEC'
        GROUP BY oa.security
    ) ef
    -- Joins
    WHERE acca.portfolioarrest = ?
    AND posa.accountarrest = acca.aaseedid
    AND ef.security_id(+) = posa.security
    -- Account type = securities
    AND acca.accounttype = 2
    GROUP BY posa.security, ef.equalization_factor_amount
) pos,
    -- Get positions with their equalization factor
    SELECT 1 AS position_exists, -- Position exists
    posa.security AS security_id, -- Security ID
    SUM(posa.localvalue) AS local_amount, -- Local amount
    MAX(posa.lastspot) AS spot_rate, -- Spot rate
    MAX(posa.lastnav) AS nav_value, -- NAV
    ef.equalization_factor
--Sometimes we DTS data and end up with problems and have to re-dts.  This will allow us to clean the data easily.
CREATE PROCEDURE OT_GIDS_RemoveUnprocessedDTSedData
AS
	declare @oldMaxEvent int
	select @oldMaxEvent = LAST_TvlOrdrIdent
	from MASTER_LAST_GIDS_EVENT
		
	print 'purging processing data'
	print 'Purging PNR level info'
	delete ids_processing_frequentflyer
	where tvlordrident > @oldMaxEvent
	delete ids_processing_passenger
	where tvlordrident > @oldMaxEvent
	delete ids_processing_corporateid
	where tvlordrident > @oldMaxEvent
	delete ids_processing_phoneseg
	where tvlordrident > @oldMaxEvent
	delete ids_processing_emailseg
	where tvlordrident > @oldMaxEvent
	delete ids_processing_remarks
	where tvlordrident > @oldMaxEvent
	print 'Purging Fare quote info'
	delete ids_processing_farecmpntrte
	where tvlordrident > @oldMaxEvent
	delete ids_processing_farecmpnt
	where tvlordrident > @oldMaxEvent
	delete ids_processing_plusuploc
	where tvlordrident > @oldMaxEvent
	delete ids_proc

	where tvlordrident > @oldMaxEvent
	delete ids_processing_airtaxbrk
	where tvlordrident > @oldMaxEvent
	delete ids_processing_airtax
	where tvlordrident > @oldMaxEvent
	delete ids_processing_airschg
	where tvlordrident > @oldMaxEvent
	delete ids_processing_airquoman
	where tvlordrident > @oldMaxEvent
	delete ids_processing_airquopax
	where tvlordrident > @oldMaxEvent
	delete ids_processing_airfarequo
	where tvlordrident > @oldMaxEvent
	print 'Purging Segment info'
	delete ids_processing_seatassignment
	where tvlordrident > @oldMaxEvent
	delete ids_processing_seatseg
	where tvlordrident > @oldMaxEvent
	delete ids_processing_htlsegopt
	where tvlordrident > @oldMaxEvent
	delete ids_processing_htlseg
	where tvlordrident > @oldMaxEvent
	delete ids_processing_carsegopt
	where tvlordrident > @oldMaxEvent
	delete ids_processing_carseg
	where tvlordrident > @oldMaxEvent
	delete ids_processing_trainseg
	where tvlordrident > @oldMaxEvent
	delete ids_processing_flyingtaxiseg
	where tvlordrident >
-- Data store table
CREATE TABLE cache
  Key          varchar(250)               NOT NULL
, Expires      int              DEFAULT 0 NOT NULL
, Flags        int              DEFAULT 0 NOT NULL
, Value        varbinary(1048576)
, CASVersion   bigint           DEFAULT 0 NOT NULL
, CONSTRAINT PK_cache PRIMARY KEY
  (
    Key
  )
);
-- Support index for cleanup operations
CREATE INDEX IX_cache_expires ON cache ( Expires );
PARTITION TABLE cache ON COLUMN Key;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Add;
PARTITION PROCEDURE Add ON TABLE cache COLUMN Key;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Append;
PARTITION PROCEDURE Append ON TABLE cache COLUMN Key;
CREATE PROCEDURE FROM CLASS voltcache.procedures.CheckAndSet;
PARTITION PROCEDURE CheckAndSet ON TABLE cache COLUMN Key;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Cleanup;
CREATE PROCEDURE FROM CLASS voltcache.procedures.Delete;
PARTITION PROCEDURE Delete ON TABLE cache COLUMN Key;
CREATE PROCEDURE FROM CLASS voltcac
﻿CREATE VIEW dbo.[vUnKnown_PlnrGroup]
AS
SELECT DISTINCT 
                      State, RTRIM(SUBSTRING(CKTID, CHARINDEX('/', CKTID, 1) + 1, CHARINDEX('/', CKTID, CHARINDEX('/', CKTID, 1) + 1) - CHARINDEX('/', CKTID, 1) - 1)) 
                      AS CKTID_Code
FROM         dbo.vFAB
WHERE     (LEN(CKTID) > 10) AND (PlnrGrp = 'Other')
UNION ALL
SELECT DISTINCT 
                      State, RTRIM(SUBSTRING(CKTID, CHARINDEX('/', CKTID, 1) + 1, CHARINDEX('/', CKTID, CHARINDEX('/', CKTID, 1) + 1) - CHARINDEX('/', CKTID, 1) - 1)) 
                      AS CKTID_Code
FROM         dbo.vPPI
WHERE     (LEN(CKTID) > 10) AND (PlnrGrp = 'Other')
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
        

      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4[30] 2[40] 3) )"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
    

         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 3
   End
   Begin DiagramPane = 
      PaneHidden = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 5
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
        
CREATE TABLE `module_flash_news` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `news` varchar(255) collate utf8_unicode_ci NOT NULL,
  `cat_id` int(10) unsigned NOT NULL,
  `sticky` enum('yes','no') collate utf8_unicode_ci NOT NULL default 'no',
  `active` enum('yes','no') collate utf8_unicode_ci NOT NULL default 'yes',
  `date_added` datetime default NULL,
  `last_modified` timestamp NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
   PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
CREATE TABLE `module_flash_news_categories` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `name` varchar(30) collate utf8_unicode_ci NOT NULL,
  `active` enum('yes','no') collate utf8_unicode_ci NOT NULL default 'yes',
   PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
INSERT INTO `fuel_permissions` (`id`,`name`,`description`,`active`) VALUES
	('','flash_news/news','Manage flash news','yes'),
	('','flash_news/view
﻿CREATE VIEW [dbo].[ViewProjectInquiryLostYearlyHistory]
AS
SELECT     *
FROM         (SELECT     ViewProjectInquiryYearlyHistory.ProjectSerialNumber, ViewProjectInquiryYearlyHistory.ShotecNo, ViewProjectInquiryYearlyHistory.ResponsibleEngineer, 
                                              ViewProjectInquiryYearlyHistory.ProjectID, ViewProjectInquiryYearlyHistory.ClientName, ViewProjectInquiryYearlyHistory.CompanyCode, 
                                              ViewProjectInquiryYearlyHistory.ClientWebsite, ViewProjectInquiryYearlyHistory.ClientInquiryNumber, ViewProjectInquiryYearlyHistory.InquiryDate, 
                                              ViewProjectInquiryYearlyHistory.ProjectStatus, ViewProjectInquiryYearlyHistory.InquiryTypeID, ViewProjectInquiryYearlyHistory.SupplierName, 
                                              ViewProjectInquiryYearlyHistory.SupplierQuotationNumber, ViewProjectInquiryYearlyHistory.QuotationPrice, 
                                           

                                              ViewProjectInquiryYearlyHistory.QuotationRateDate, ViewProjectInquiryYearlyHistory.QuotationPriceInEuro, ViewProjectInquiryYearlyHistory.BidDueDate, 
                                              ViewProjectInquiryYearlyHistory.OnHold, ViewProjectInquiryYearlyHistory.ModifiedDate, ViewProjectInquiryYearlyHistory.UserName, 
                                              ViewProjectInquiryYearlyHistory.ProjectName, ViewProjectInquiryYearlyHistory.ProjectLocation, ViewProjectInquiryYearlyHistory.ProjectOwnerName, 
                                              ViewProjectInquiryYearlyHistory.ProjectDescription, ViewProjectInquiryYearlyHistory.ProductName, ViewProjectInquiryYearlyHistory.CategoryName, 
                                              ViewProjectInquiryYearlyHistory.ProductDescription, ViewProjectInquiryYearlyHistory.ProjectComment, LostReasons.ReasonName, 
                                              LostReasons.ReasonCode, LostsY

                                              LostsYearlyHistory.WinnerPrice AS LostWinnerPrice, ViewProjectInquiryYearlyHistory.ResponsibleEngineerDisplayName, 
                                              ViewProjectInquiryYearlyHistory.LanguageId, LostsYearlyHistory.WinnerPriceInEuro AS LostWinnerPriceInEuro, 
                                              LostsYearlyHistory.RateToEuro AS LostWinnerRateToEuro, LostsYearlyHistory.RateDate AS LostWinnerRateDate, 
                                              LostsYearlyHistory.WinnerPriceCurrencyID AS LostWinnerPriceCurrencyID, ViewProjectInquiryYearlyHistory.InquiryStatus, 
                                              ViewProjectInquiryYearlyHistory.OrderPercentage, ViewProjectInquiryYearlyHistory.SupplierID, LostsYearlyHistory.ModifiedDate AS LostDate, 
                                              ViewProjectInquiryYearlyHistory.ProjectTypeID, ViewProjectInquiryYearlyHistory.OfferDate, ViewProjectInquiryYearlyHistory.ParentInquir
SELECT 
    port
    , (SELECT prto_codigo FROM tbl_puerto_prto WHERE prto_pk = port) AS port_prmt
    , TIPO_NAV
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = TIPO_NAV) AS TIPO_NAV_prmt
    , TIPO_NAV_2
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = TIPO_NAV_2) AS TIPO_NAV_2_prmt
    , SERV_TRAF
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = SERV_TRAF) AS SERV_TRAF_prmt
    , ACUERDO
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = ACUERDO) AS ACUERDO_prmt
    , ORGA_3 AS ORGA
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = ORGA_3) AS ORGA_prmt
    , TIPO_ESTAN_ESC
    , TIPO_ACT
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = TIPO_ACT) AS TIPO_ACT_prmt
    , BUQUE
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = BUQUE) AS BUQUE_prmt
    , TIPO_BUQUE
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = TIPO_BUQUE) AS TIPO_

    , PAIS
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = PAIS) AS PAIS_prmt
    , TIPO_BUQUE_GT
    , (SELECT prmt_parametro FROM tbl_parametro_prmt WHERE prmt_pk = TIPO_BUQUE_GT) AS TIPO_BUQUE_GT_prmt
    
    , COUNT(1) AS ENTERO_01
    , SUM(gt) AS ENTERO_02
FROM (
    SELECT 
        port 
        , (
            SELECT srdt_prmt_pk
            FROM tbl_servicio_dato_srdt
            WHERE
                srdt_tpdt_pk = portico.getTipoDato('TIPO_NAV')
                AND srdt_srvc_pk = srvc_pk
        ) AS TIPO_NAV
        , (
            SELECT srdt_prmt_pk
            FROM tbl_servicio_dato_srdt
            WHERE
                srdt_tpdt_pk = portico.getTipoDato('TIPO_NAV_2')
                AND srdt_srvc_pk = srvc_pk
        ) AS TIPO_NAV_2
        , (
            SELECT srdt_prmt_pk
            FROM tbl_servicio_dato_srdt
            WHERE
                srdt_tpdt_pk = portico.getTipoDato('SERV_TRAF')
                AND srdt_srvc_pk = srvc_pk
        

        , (
            SELECT srdt_prmt_pk
            FROM tbl_servicio_dato_srdt
            WHERE
                srdt_tpdt_pk = portico.getTipoDato('ACUERDO')
                AND srdt_srvc_pk = srvc_pk
        ) AS ACUERDO
        , (
            SELECT srdt_prmt_pk
            FROM tbl_servicio_dato_srdt
            WHERE
                srdt_tpdt_pk = portico.getTipoDato('ORGA_3')
                AND srdt_srvc_pk = srvc_pk
        ) AS ORGA_3
        , (
            SELECT srdt_cadena
            FROM tbl_servicio_dato_srdt
            WHERE
                srdt_tpdt_pk = portico.getTipoDato('TIPO_ESTAN_ESC')
                AND srdt_srvc_pk = srvc_pk
        ) AS TIPO_ESTAN_ESC
        , (
            SELECT ssdt_prmt_pk
            FROM tbl_subservicio_dato_ssdt
            WHERE
                ssdt_tpdt_pk = portico.getTipoDato('TIPO_ACT')
                AND ssdt_ssrv_pk = atraque_primero_pk
        ) AS TIPO_ACT
        , buque_pk AS BUQUE
        , (
            SELECT p
truncate wordpress.wp_gigpress_shows;
-- SELECT w.`show_id`, w.`show_artist_id`, w.`show_venue_id`,
-- w.`show_tour_id`, w.`show_date`,
-- w.`show_multi`, w.`show_time`, w.`show_expire`, w.`show_price`, w.`show_tix_url`, w.`show_tix_phone`,
-- w.`show_ages`, w.`show_notes`, w.`show_related`, w.`show_status`, w.`show_tour_restore`,
-- w.`show_address`, w.`show_locale`, w.`show_country`, w.`show_venue`, w.`show_venue_url`, w.`show_venue_phone`
INSERT into wordpress.wp_gigpress_shows
SELECT distinct d.`date_id` show_id, d.`manufacturers_id` show_artist_id, v.venue_id show_venue_id,
      null show_tour_id, d.`date_date` show_date,
      null, '20:00' show_time, d.`date_date` show_expire, null show_price, null, null,
      null show_ages, d.`date_comment` show_notes, null, 'active' show_status, null,
      d.`date_location` show_address, d.`date_manfacturer_way` show_locale, c.countries_iso_code_2 show_country, d.`date_location` show_venue, d.date_link show_venue_url, d.date_comment show_v
-- auto insert timeclock
DROP TRIGGER IF EXISTS `after_insert_timein`;
DELIMITER $$
CREATE TRIGGER `after_insert_timein` AFTER INSERT ON employee_time_log
FOR EACH ROW BEGIN
    INSERT INTO timeclock (keylog, log_type, clockin) 
        SELECT * FROM 
            (SELECT 
                (SELECT keylog from employee_time_log WHERE employee_id = NEW.employee_id and log_date = NEW.log_date) as keylogid, 'timeclock', CURTIME()
            ) AS tmp 
        WHERE 
            NOT EXISTS (SELECT keylog FROM timeclock WHERE keylog = keylogid and log_type = 'timeclock' and update_date = '0000-00-00 00:00:00') 
        LIMIT 1;
    -- replicate the following time log in other servers
    INSERT INTO tmp_emp_time_log (employee_id, log_date, keylog) VALUES (NEW.employee_id, NEW.log_date, NEW.keylog);
END $$
DELIMITER ;
DROP TRIGGER IF EXISTS `after_tmp_insert_log`;
DELIMITER $$
CREATE TRIGGER `after_tmp_insert_log` AFTER INSERT ON timeclock
FOR EACH ROW BEGIN    
    IF (NEW.log_type = 'ob') THE
﻿CREATE VIEW dbo.v_GroupSeme_ican5
AS
SELECT          CONVERT(int, para_phsiname) AS Value, para_dispname AS Name
FROM              iCAN5.dbo.ican_para
WHERE          (para_code = 'p_seme')
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
      

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ican_para (iCAN5.dbo)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 140
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
   
DROP TRIGGER IF EXISTS cs_eligibility_file_data_update;
DELIMITER $$
CREATE DEFINER=`wwhsadmin`@`%` trigger cs_eligibility_file_data_update AFTER UPDATE on cs_eligibility_data
 for each row 
 BEGIN
/*********************************************
Name: cs_eligibility_file_data_update
Author: Padmini Suggala
Date: 03/03/2016
Description: Insert a row into the cs_eligibility_data_column_history table when an update is made on cs_eligibility_data table.
Input parameters: 
Error Code logged if validation fails : 
Outputs: None
Update History: - <8/31/2016>Modified for HSOP-7158 To add new column "non_validating_employee_type"
                  
**********************************************/
 IF(IFNULL(old.file_id,'') <> IFNULL(new.file_id,'') AND fn_get_column_id('file_id',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_el

 END IF;
 IF(IFNULL(old.client_id,'') <> IFNULL(new.client_id,'') AND fn_get_column_id('client_id',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('client_id',null),old.client_id,new.client_id,new.modified_by,new.modified_date);
 END IF;
 IF(IFNULL(old.member_first_name,'') <> IFNULL(new.member_first_name,'') AND fn_get_column_id('member_first_name',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('member_first_name',null),old.member_first_name,new.member_first_name,new.modified_by,new.modified_date);
 END IF;
 IF(IFNULL(old.member_last_name,'') <> IFNULL(new.member_last_name,'

 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('member_last_name',null),old.member_last_name,new.member_last_name,new.modified_by,new.modified_date);
 END IF;
 IF(IFNULL(old.employee_type,'') <> IFNULL(new.employee_type,'') AND fn_get_column_id('employee_type',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,data_source,cs_eligibility_data_id,column_id,oldvalue,newvalue,created_by,created_date)
 VALUES('U',new.file_id,new.data_source,old.cs_eligibility_data_id,fn_get_column_id('employee_type',null),old.employee_type,new.employee_type,new.modified_by,new.modified_date);
 END IF;
 IF(IFNULL(old.date_of_birth,'') <> IFNULL(new.date_of_birth,'') AND fn_get_column_id('date_of_birth',null) != 0) THEN
 INSERT INTO cs_eligibility_data_column_history(audit_type,file_id,d
/*==============================================================*/
/* Modify Table: nW_DM_MODEL                                    */
/*==============================================================*/
alter table nW_DM_MODEL 
      add OPERATING_SYSTEM     VARCHAR2(255);
      
alter table nW_DM_MODEL 
      add ANNOUNCED_DATE       DATE;
      
alter table nW_DM_MODEL 
      add ICON                 BLOB;
/*==============================================================*/
/* Modify Table: nW_DM_MODEL_CHARACTER                          */
/*==============================================================*/
alter table nW_DM_MODEL_CHARACTER 
      add MODEL_ID             NUMBER(20);
/*==============================================================*/
/* Convert Data                                                 */
/*==============================================================*/
update   nW_DM_MODEL_CHARACTER    
  set   MODEL_ID=(select nW_DM_MODEL_SPEC.MODEL_ID  
  from   nW_DM_MODEL_S

  where   nW_DM_MODEL_SPEC.MODEL_SPEC_ID=nW_DM_MODEL_CHARACTER.MODEL_SPEC_ID);
  
update   nW_DM_MODEL    
  set   OPERATING_SYSTEM=(select nW_DM_MODEL_SPEC.OPERATING_SYSTEM  
  from   nW_DM_MODEL_SPEC
  where  nW_DM_MODEL_SPEC.MODEL_ID=nW_DM_MODEL.MODEL_ID);
update   nW_DM_MODEL    
  set    ANNOUNCED_DATE=(select nW_DM_MODEL_SPEC.ANNOUNCED_DATE  
  from   nW_DM_MODEL_SPEC
  where  nW_DM_MODEL_SPEC.MODEL_ID=nW_DM_MODEL.MODEL_ID);
update   nW_DM_MODEL    
  set    ICON=(select nW_DM_MODEL_SPEC.ICON  
  from   nW_DM_MODEL_SPEC
  where  nW_DM_MODEL_SPEC.MODEL_ID=nW_DM_MODEL.MODEL_ID);
/*==============================================================*/
/* Index: IDX_FK_MOD_CHARACTER                                  */
/*==============================================================*/
create index IDX_FK_MOD_CHARACTER on nW_DM_MODEL_CHARACTER (
   MODEL_ID ASC
);
/*==============================================================*/
/* Index: IDX_MODEL_CHARA_CATEG                              

/*==============================================================*/
create index IDX_MODEL_CHARA_CATEG on nW_DM_MODEL_CHARACTER (
   CATEGORY ASC
);
/*==============================================================*/
/* Index: IDX_MODEL_CHARA_NAME                                  */
/*==============================================================*/
create index IDX_MODEL_CHARA_NAME on nW_DM_MODEL_CHARACTER (
   NAME ASC
);
/*==============================================================*/
/* Index: IDX_MODEL_CHARA_VAL                                   */
/*==============================================================*/
create index IDX_MODEL_CHARA_VAL on nW_DM_MODEL_CHARACTER (
   VALUE ASC
);
/*==============================================================*/
/* Modify Table: nW_DM_MODEL_CHARACTER                          */
/*==============================================================*/
alter table nW_DM_MODEL_CHARACTER
   add constraint FK_MODEL_CHARACTER foreign key (MODEL_ID)
  
--------------------------------------------------------
--  File created - Friday-May-10-2013   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table LIBRARIAN
--------------------------------------------------------
  CREATE TABLE "TABLE_1"."LIBRARIAN" 
   (	"ID" NUMBER, 
	"USERNAME" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"PASSWORD" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into TABLE_1.LIBRARIAN
SET DEFINE OFF;
Insert into TABLE_1.LIBRARIAN (ID,USERNAME,EMAIL,PASSWORD) values (1,'sujon335','sujon335@yahoo.com','1234');
--------------------------------------------------------
--  DDL for Index LIBRARIAN_

--------------------------------------------------------
  CREATE UNIQUE INDEX "TABLE_1"."LIBRARIAN_PK" ON "TABLE_1"."LIBRARIAN" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table LIBRARIAN
--------------------------------------------------------
  ALTER TABLE "TABLE_1"."LIBRARIAN" ADD CONSTRAINT "LIBRARIAN_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TABLE_1"."LIBRARIAN" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "TABLE_1"."LIBRARIAN" MODIFY ("
DROP TRIGGER IF EXISTS `sam_test_ua`//
CREATE definer=`dbadmin`@`localhost` trigger `sam_test_ua` AFTER UPDATE ON `sam_test`
  FOR EACH ROW
/*
$Rev: 6928 $ 
$Author: randall.stanley $ 
$Date: 2009-04-10 10:08:29 -0400 (Fri, 10 Apr 2009) $
$HeadURL: http://atlanta-web.performancematters.com:8099/svn/pminternal/Data/Redwood/Core/triggers/sam_test_ua.sql $
$Id: sam_test_ua.sql 6928 2009-04-10 14:08:29Z randall.stanley $ 
*/
BEGIN
    DELETE FROM sam_test_mt_color_sequence_list WHERE test_id = new.test_id;
    
    IF new.threshold_level > 0 and new.mastery_level > new.threshold_level THEN
    
        INSERT sam_test_mt_color_sequence_list (test_id, color_sequence, min_score, max_score, last_user_id, create_timestamp)
        VALUES ( new.test_id, 1, 0, new.threshold_level - .001, new.last_user_id, now()),
          ( new.test_id, 2, new.threshold_level, new.mastery_level - .001, new.last_user_id, now()),
          ( new.test_id, 3, new.mastery_level, 100, new.last_user_id, now());
    EN
/*L
   Copyright SAIC
   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/cabio/LICENSE.txt for details.
L*/
 insert into zstg_pid_complex_component(pid_complex_id, order_of_complex, pid_component_id, complex_id, component_id) select field1, field2, field3, null, null from zstg_pid_dump where identifier = 'pid_complex_component';
commit;
insert into zstg_pid_comp_partcipant_actst select field1, field2, field3 from zstg_pid_dump where identifier = 'pid_complex_participant_activity_state';
commit;
insert into zstg_pid_compl_participant_loc select field1, field2, field3, field4 from zstg_pid_dump where identifier = 'pid_complex_participant_location';
commit;
insert into zstg_pid_comp_partcipant_ptm select field1, field2, field3 from zstg_pid_dump where identifier = 'pid_complex_participant_ptm';
commit;
update zstg_pid_compl_participant_loc set location = location ||' '|| xref;
update zstg_pid_compl_participant_loc set xref = null;
commit;
insert into

commit;
insert into zstg_pid_entityname select field1, field2, field3 from zstg_pid_dump where identifier = 'pid_entityname';
commit;
insert into zstg_pid_evidencecode select field1, field2 from zstg_pid_dump where identifier = 'pid_evidencekind';
commit;
insert into zstg_pid_family_member select field1, field2 from zstg_pid_dump where identifier = 'pid_family_member';
commit;
update zstg_pid_dump set field4 =field3 where identifier = 'pid_interactants' and field3 = 'condition';
commit;
update zstg_pid_dump set field3 = null where field3 = 'condition';
commit;
insert into zstg_pid_interactants select field1, field2, field3, field4 from zstg_pid_dump where identifier = 'pid_interactants';
commit;
insert into zstg_pid_interaction select field1, field2, field3 from zstg_pid_dump where identifier = 'pid_interaction';
commit;
insert into zstg_pid_interactionevidence select field1, field2 from zstg_pid_dump where identifier = 'pid_interaction_evidence';
commit;
insert into zstg_pid_intr_par

--insert into zstg_pid_intr_partcpant_actst select field1, field2, field3, field4, null from zstg_pid_dump where identifier = 'pid_interaction_participant_activity_state';
commit;
insert into zstg_pid_intr_partpant_loc select  field1, field3 , field4, field2 from zstg_pid_dump where identifier = 'pid_interaction_participant_location';
--insert into zstg_pid_intr_partpant_loc select  field1, field2 , field3, null from zstg_pid_dump where identifier = 'pid_interaction_participant_location';
commit;
insert into zstg_pid_intr_partcpant_ptm select  field1, field3, field4, field2 from zstg_pid_dump where identifier = 'pid_interaction_participant_ptm';
--insert into zstg_pid_intr_partcpant_ptm select  field1, field2, field3, null from zstg_pid_dump where identifier = 'pid_interaction_participant_ptm';
commit;
update zstg_pid_dump set field4 =field3 where identifier = 'pid_interactioncondition' and field4 is null;
commit;
update zstg_pid_dump set field3 = null where identifier = 'pid_interact
/*Triggers*/
/*Norms and Incrementation of counters*/
DELIMITER $$
CREATE TRIGGER create_upload_event_trigger
	AFTER INSERT ON content
	FOR EACH ROW
	BEGIN
		/*Creation fo the event upload */
		INSERT INTO event(user, content, action, checked) VALUES (NEW.owner, NEW.id, 1, 0);
	END$$
DELIMITER ;
DELIMITER $$
CREATE TRIGGER create_view_event_trigger
	AFTER INSERT ON view
	FOR EACH ROW
	BEGIN
		/*Creation fo the event view */
		INSERT INTO event(user, content, action, checked) VALUES (NEW.user, NEW.content, 2, 0);
		/* Increment of the counter of the content views*/
		UPDATE content SET num_of_views = num_of_views+1 WHERE content.id = NEW.content;
	END$$
DELIMITER ;
DELIMITER $$
CREATE TRIGGER create_complaint_event_trigger
	AFTER INSERT ON complaint
	FOR EACH ROW
	BEGIN
		/*Creation fo the event complaint */
		INSERT INTO event(user, content, action, complaint_category, checked) VALUES (NEW.user, NEW.content, 3, NEW.complain_category, 0);
		/*Increment of the counter of the contennt com
--
-- database_schema_14-15.sql
--
-- Version: $$
--
-- Date:    $Date:$
--
-- Copyright (c) 2002-2007, Hewlett-Packard Company and Massachusetts
-- Institute of Technology.  All rights reserved.
-- 
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions are
-- met:
-- 
-- - Redistributions of source code must retain the above copyright
-- notice, this list of conditions and the following disclaimer.
-- 
-- - Redistributions in binary form must reproduce the above copyright
-- notice, this list of conditions and the following disclaimer in the
-- documentation and/or other materials provided with the distribution.
-- 
-- - Neither the name of the Hewlett-Packard Company nor the name of the
-- Massachusetts Institute of Technology nor the names of their
-- contributors may be used to endorse or promote products derived from
-- this software without specific prior written permission.
-- 
-- THIS SOFTWARE

-- ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-- HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-- INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-- BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
-- OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
-- ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-- TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
-- USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
-- DAMAGE.
--
-- SQL commands to upgrade the database schema of a live DSpace 1.4.2
-- to the DSpace 1.5 database schema
-- 
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST. 
-- DUMP YOUR DATABASE FIRST. DUMP YOUR DATABASE FIRST
-- Sep 3, 2008 5:01:15 PM EEST
-- 
UPDATE AD_Tab SET IsInsertRecord='N', IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:15','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Tab_ID=53034
-- Sep 3, 2008 5:01:27 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:27','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53635
-- Sep 3, 2008 5:01:29 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:29','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53634
-- Sep 3, 2008 5:01:48 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:48','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53623
-- Sep 3, 2008 5:01:49 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:49','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53624
-- Sep 3, 2008 5:01:50 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:50','YYYY-MM-DD HH24:MI:SS'),Update

-- Sep 3, 2008 5:01:51 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:51','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53626
-- Sep 3, 2008 5:01:52 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:52','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53627
-- Sep 3, 2008 5:01:53 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:53','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53628
-- Sep 3, 2008 5:01:54 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:54','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53629
-- Sep 3, 2008 5:01:55 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:55','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_Field_ID=53630
-- Sep 3, 2008 5:01:55 PM EEST
-- 
UPDATE AD_Field SET IsReadOnly='Y',Updated=TO_DATE('2008-09-03 17:01:55','YYYY-MM-DD HH24:MI:SS'),UpdatedBy=0 WHERE AD_
-- ViewName : ContractRequisitionView-Bottom
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'Contracts';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'ContractRequisitionView-Bottom'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table set seq_

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
-- ogr2ogr -f postgresql -skipfailures -update -append -nlt MULTIPOLYGON PG:"dbname='gis' host='168.202.25.219' port='5432' user='postgres' password='postgres'" ../GAUL/g2013_2012_2/g2013_2012_2/G2013_2012_2.shp
--DELETE FROM g2013_2012_2
DROP TABLE g2013_2012_2;
-- NOW change geometry to generic Geometry (http://trac.osgeo.org/gdal/ticket/4939)
CREATE TABLE g2013_2012_2
  ogc_fid serial NOT NULL,
  wkb_geometry geometry(MultiPolygon,4326),
  status character varying(37),
  str_year numeric(9,0),
  exp_year numeric(9,0),
  disp_area character varying(3),
  adm0_code numeric(9,0),
  adm0_name character varying(100),
  shape_leng numeric(19,11),
  shape_area numeric(19,11),
  CONSTRAINT g2013_2012_2_pk PRIMARY KEY (ogc_fid)
WITH (
  OIDS=FALSE
);
ALTER TABLE g2013_2012_2
  OWNER TO postgres;
-- Index: g2013_2012_2_geom_idx
-- DROP INDEX g2013_2012_2_geom_idx;
CREATE INDEX g2013_2012_2_geom_idx
  ON g2013_2012_2
  USING gist
  (wkb_geometry);
-- now start again ingestion
-- ogr2ogr -f pos
DROP TABLE IF EXISTS FF$TX_CHANGE_LOGS;
CREATE TABLE FF$TX_CHANGE_LOGS(
	OBJ_OID BIGINT NOT NULL,
	OBJ_ATTR varchar(255) NOT NULL,
	TX_NUMBER int(11),
        INDEX (TX_NUMBER)
) ENGINE=InnoDB;
DROP TABLE IF EXISTS FF$LAST_TX_PROCESSED;
CREATE TABLE FF$LAST_TX_PROCESSED(
        SERVER varchar(255) NOT NULL,
	LAST_TX int(11) NOT NULL,
	LAST_UPDATE timestamp
) ENGINE=InnoDB;
DROP TABLE IF EXISTS `FF$TRANSACTION_STATISTICS`;
CREATE TABLE `FF$TRANSACTION_STATISTICS` (
  `SERVER` varchar(255) NOT NULL default '',
  `NUM_REPORT` int(11) NOT NULL,
  `NUM_READS` int(11) NOT NULL,
  `NUM_WRITES` int(11) NOT NULL,
  `NUM_ABORTS` int(11) NOT NULL,
  `NUM_CONFLICTS` int(11) NOT NULL,
  `SECONDS` int(11) NOT NULL,
  `STATS_WHEN` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `READ_ONLY_READS_MIN` int(11),
  `READ_ONLY_READS_MAX` int(11),
  `READ_ONLY_READS_SUM` BIGINT,
  `READ_WRITE_READS_MIN` int(11),
  `READ_WRITE_READS_MAX` int(11),
  `READ_WRITE_READS_SUM` BIGINT,
  `READ_WRITE_WRITES_MIN` in

  `READ_WRITE_WRITES_MAX` int(11),
  `READ_WRITE_WRITES_SUM` BIGINT
) ENGINE=InnoDB;
DROP TABLE IF EXISTS FF$SERVICE_LOG;
CREATE TABLE FF$SERVICE_LOG (
	INVOCATION_DATE timestamp NOT NULL,
	INVOKER_USERNAME varchar(10) default NULL,
	SERVICE_NAME varchar(255) NOT NULL,
	SERVICE_ARGUMENTS text default NULL
) ENGINE=InnoDB;
DROP TABLE IF EXISTS FF$DOMAIN_CLASS_INFO;
CREATE TABLE FF$DOMAIN_CLASS_INFO (
    DOMAIN_CLASS_NAME varchar(255) not null,
    DOMAIN_CLASS_ID int(11) not null,
    UNIQUE KEY U1 (DOMAIN_CLASS_NAME),
    UNIQUE KEY U2 (DOMAIN_CLASS_ID)
) ENGINE=InnoDB;
DROP TABLE IF EXISTS FF$PERSISTENT_ROOT;
CREATE TABLE `FF$PERSISTENT_ROOT` (
  `ID_INTERNAL` int(11) NOT NULL AUTO_INCREMENT,
  `OID` bigint(20) DEFAULT NULL,
  `OID_NEXT` bigint(20) DEFAULT NULL,
  `OID_PREVIOUS` bigint(20) DEFAULT NULL,
  `OID_ROOT_OBJECT` bigint(20) DEFAULT NULL,
  `ROOT_KEY` longtext,
  PRIMARY KEY (`ID_INTERNAL`),
  KEY `OID` (`OID`)
) ENGINE=InnoDB;
INSERT INTO FF$PERSISTENT_ROOT VALUES (1, 1, n
SET VERIFY OFF
connect "SYS"/"&&sysPassword" as SYSDBA
set echo on
spool /home/courses/w/c/wchen/admin/WCHEN/scripts/CreateDB.log append
startup nomount pfile="/home/courses/w/c/wchen/admin/WCHEN/scripts/init.ora";
CREATE DATABASE "WCHEN"
MAXINSTANCES 8
MAXLOGHISTORY 1
MAXLOGFILES 16
MAXLOGMEMBERS 3
MAXDATAFILES 50
DATAFILE '/u01/oradata/WCHEN/system01.dbf' SIZE 700M REUSE AUTOEXTEND ON NEXT  10240K MAXSIZE UNLIMITED
EXTENT MANAGEMENT LOCAL
SYSAUX DATAFILE '/u01/oradata/WCHEN/sysaux01.dbf' SIZE 600M REUSE AUTOEXTEND ON NEXT  10240K MAXSIZE UNLIMITED
SMALLFILE DEFAULT TEMPORARY TABLESPACE TEMP TEMPFILE '/u01/oradata/WCHEN/temp01.dbf' SIZE 20M REUSE AUTOEXTEND ON NEXT  640K MAXSIZE UNLIMITED
SMALLFILE UNDO TABLESPACE "UNDOTBS1" DATAFILE '/u01/oradata/WCHEN/undotbs01.dbf' SIZE 200M REUSE AUTOEXTEND ON NEXT  5120K MAXSIZE UNLIMITED
CHARACTER SET WE8MSWIN1252
NATIONAL CHARACTER SET AL16UTF16
LOGFILE GROUP 1 ('/u01/oradata/WCHEN/redo01.log') SIZE 51200K,
GROUP 2 ('/u01/oradata/WCHEN/redo02.l
select
	*
from
	Customer
/*BEGIN*/
where
	/*IF dto.customerID != null*/ customerID = /*dto.customerID*/0/*END*/
	/*IF dto.customerID_not != null*/AND customerID != /*dto.customerID_not*/0/*END*/
	/*IF dto.customerID_large != null*/AND  /*dto.customerID_large*/0 < customerID/*END*/
	/*IF dto.customerID_moreLarge != null*/AND  /*dto.customerID_moreLarge*/0 <= customerID/*END*/
	/*IF dto.customerID_from != null*/AND  /*dto.customerID_from*/0 <= customerID/*END*/
	/*IF dto.customerID_to != null*/AND customerID <= /*dto.customerID_to*/0/*END*/
	/*IF dto.customerID_moreSmall != null*/AND customerID <= /*dto.customerID_moreSmall*/0/*END*/
	/*IF dto.customerID_small != null*/AND customerID < /*dto.customerID_small*/0/*END*/
	/*IF dto.customerID_isNull != null*/AND customerID is null /*END*/
	/*IF dto.customerID_isNotNull != null*/AND customerID is not null/*END*/
	/*IF dto.customerID_in != null*/AND customerID in /*dto.customerID_in*/(0)/*END*/
	/*IF dto.customerName_matchFull != null*/AND cus

	/*IF dto.customerName_matchFront != null*/AND customerName Like /*dto.customerName_matchFront*/'TestData%'/*END*/
	/*IF dto.customerName_matchBack != null*/AND customerName Like /*dto.customerName_matchBack*/'%TestData'/*END*/
	/*IF dto.customerName != null*/AND customerName = /*dto.customerName*/'TestData'/*END*/
	/*IF dto.customerName_not != null*/AND customerName != /*dto.customerName_not*/'TestData'/*END*/
	/*IF dto.customerName_large != null*/AND  /*dto.customerName_large*/'TestData' < customerName/*END*/
	/*IF dto.customerName_moreLarge != null*/AND  /*dto.customerName_moreLarge*/'TestData' <= customerName/*END*/
	/*IF dto.customerName_from != null*/AND  /*dto.customerName_from*/'TestData' <= customerName/*END*/
	/*IF dto.customerName_to != null*/AND customerName <= /*dto.customerName_to*/'TestData'/*END*/
	/*IF dto.customerName_moreSmall != null*/AND customerName <= /*dto.customerName_moreSmall*/'TestData'/*END*/
	/*IF dto.customerName_small != null*/AND customerName < /*dto.c
DROP TRIGGER IF EXISTS `pp_user_ua`//
CREATE definer=`dbadmin`@`localhost` trigger `pp_user_ua` AFTER UPDATE ON `pp_user`
  FOR EACH ROW
/*
$Rev: 6928 $ 
$Author: randall.stanley $ 
$Date: 2009-04-10 10:08:29 -0400 (Fri, 10 Apr 2009) $
$HeadURL: http://atlanta-web.performancematters.com:8099/svn/pminternal/Data/Redwood/Core/triggers/pp_user_ua.sql $
$Id: pp_user_ua.sql 6928 2009-04-10 14:08:29Z randall.stanley $ 
*/
BEGIN
    IF old.login != new.login THEN
        DELETE FROM pmi_user.pp_user_login
        WHERE  pp_user_id = old.pp_user_id;
    END IF;
    
    INSERT INTO pmi_user.pp_user_login 
        
    SET pp_user_id = new.pp_user_id,
        login = new.login,
        password = new.password,
        email_address = new.email_address,
        client_id = new.client_id,
        active_flag = new.active_flag,
        create_timestamp = new.create_timestamp
        
    ON DUPLICATE KEY UPDATE login = new.login,
                            password = new.password,
               
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_cart' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_cart' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_cart`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_address' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_address' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_address`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_slideshow' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_slideshow' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_slideshow`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_

DELETE FROM `wp_model` WHERE `name`='shop_order_log' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_order_log`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_order' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_order' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_order`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_goods_score' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_goods_score' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_goods_score`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_goods_category' ORDER BY id DESC LIMIT 1);
DELETE FROM `wp_model` WHERE `name`='shop_goods_category' ORDER BY id DESC LIMIT 1;
DROP TABLE IF EXISTS `wp_shop_goods_category`;
DELETE FROM `wp_attribute` WHERE model_id = (SELECT id FROM wp_model WHERE `name`='shop_goods' ORDER BY id DESC LIMIT 1);
DELETE
DELETE ACCOUNT_QUALIFICATION_GROUPS;
INSERT INTO account_qualification_groups
 (account_qualification_group, row_num, 
 include, include_filter, source_field, target_field, output_field, append_to_list,
 filter)
 VALUES('owner',1,
 'T_AV_AREAKEY',NULL,NULL,NULL,NULL,NULL,
 'OBJECT.c_area == "OWNER"');
INSERT INTO account_qualification_groups
 (account_qualification_group, row_num, 
 include, include_filter, source_field, target_field, output_field, append_to_list,
 filter)
 VALUES('account',1,
 'T_AV_AREAKEY',NULL,NULL,NULL,NULL,NULL,
 'OBJECT.c_area == "ACCOUNT"');
INSERT INTO account_qualification_groups
 (account_qualification_group, row_num, 
 include, include_filter, source_field, target_field, output_field, append_to_list,
 filter)
 VALUES('account_owners',1,
 'T_AV_AREAKEY',NULL,NULL,NULL,NULL,NULL,
 'OBJECT.c_area == "ACCOUNT"');
INSERT INTO account_qualification_groups
 (account_qualification_group, row_num, 
 include, include_filter, source_field, target_field, output_field, 
--
--	SourceForge: Breaking Down the Barriers to Open Source Development
--	Copyright 1999-2001 (c) VA Linux Systems
--	http://sourceforge.net
--
COPY stats_site WITH OIDS TO '/home/tperdue/dumpfiles/stats_site.dump';
COPY stats_project WITH OIDS TO '/home/tperdue/dumpfiles/stats_project.dump';
COPY stats_project_developers WITH OIDS TO '/home/tperdue/dumpfiles/stats_project_developers.dump';
COPY stats_project_metric WITH OIDS TO '/home/tperdue/dumpfiles/stats_project_metric.dump';
COPY frs_dlstats_file_agg WITH OIDS TO '/home/tperdue/dumpfiles/frs_dlstats_file_agg.dump';
COPY stats_subd_pages WITH OIDS TO '/home/tperdue/dumpfiles/stats_subd_pages.dump';
COPY stats_agg_logo_by_group WITH OIDS TO '/home/tperdue/dumpfiles/stats_agg_logo_by_group.dump';
COPY stats_cvs_group WITH OIDS TO '/home/tperdue/dumpfiles/stats_cvs_group.dump';
COPY stats_agg_site_by_group WITH OIDS TO '/home/tperdue/dumpfiles/stats_agg_site_by_group.dump';
COPY stats_site_pages_by_day WITH OIDS TO '/home/tperdue/d

COPY frs_package WITH OIDS TO '/home/tperdue/dumpfiles/frs_package.dump';
COPY frs_release WITH OIDS TO '/home/tperdue/dumpfiles/frs_release.dump';
COPY frs_processor WITH OIDS TO '/home/tperdue/dumpfiles/frs_processor.dump';
COPY frs_filetype WITH OIDS TO '/home/tperdue/dumpfiles/frs_filetype.dump';
COPY frs_file WITH OIDS TO '/home/tperdue/dumpfiles/frs_file.dump';
COPY project_weekly_metric WITH OIDS TO '/home/tperdue/dumpfiles/project_weekly_metric.dump';
COPY trove_cat WITH OIDS TO '/home/tperdue/dumpfiles/trove_cat.dump';
COPY trove_group_link WITH OIDS TO '/home/tperdue/dumpfiles/trove_group_link.dump';
COPY users WITH OIDS TO '/home/tperdue/dumpfiles/users.dump';
COPY groups WITH OIDS TO '/home/tperdue/dumpfiles/groups.dump';
COPY foundry_projects WITH oids to '/home/tperdue/dumpfiles/foundry_projects.dump';
DROP INDEX frs_release_date;
DROP INDEX frs_file_name;
DROP INDEX frs_file_processor;
DROP INDEX frs_file_type;
DROP INDEX frs_release_by;
CREATE UNIQUE INDEX statssite_oi

CREATE UNIQUE INDEX statsproject_oid ON stats_project(oid);
CREATE UNIQUE INDEX statsprojectdevelop_oid ON stats_project_developers(oid);
CREATE UNIQUE INDEX statsprojectmetric_oid ON stats_project_metric(oid);
CREATE UNIQUE INDEX frsdlfileagg_oid ON frs_dlstats_file_agg(oid);
CREATE UNIQUE INDEX statssubdpages_oid ON stats_subd_pages(oid);
CREATE UNIQUE INDEX statsagglogobygrp_oid ON stats_agg_site_by_group(oid);
CREATE UNIQUE INDEX statscvsgrp_oid ON stats_cvs_group(oid);
CREATE UNIQUE INDEX statsaggsitebygrp_oid ON stats_agg_site_by_group(oid);
CREATE UNIQUE INDEX statssitepgsbyday_oid ON stats_site_pages_by_day(oid);
DROP TABLE frs_dlstats_filetotal_agg;
DROP TABLE frs_dlstats_grouptotal_agg;
DROP TABLE frs_dlstats_group_agg;
DROP TABLE stats_project_months;
DROP TABLE stats_project_all;
DROP TABLE stats_project_last_30;
DROP TABLE stats_project_developers_last30;
DROP TABLE stats_site_pages_by_month;
DROP TABLE stats_site_last_30;
DROP TABLE stats_site_months;
DROP TABLE stats_si
BEGIN;
CREATE OR REPLACE FUNCTION regs_route(caller_arg TEXT, called_arg TEXT, ip_host_arg INET, formats_arg TEXT, rtp_forward_arg TEXT)
	RETURNS TABLE(key TEXT, value TEXT) AS $$
DECLARE
	res HSTORE;
	cntr INTEGER;
	t RECORD;
	uoffline BOOLEAN;
BEGIN
	res := '';
	SELECT * INTO res, cntr FROM regs_route_part(caller_arg, called_arg, ip_host_arg, formats_arg, rtp_forward_arg, res, 0);
	uoffline := res::TEXT = '';
	-- Add 'offline' and 'No answer' divertions
	FOR t IN SELECT normalize_num(n.val) AS val, n.timeout, k.*
			FROM morenums n INNER JOIN numkinds k ON k.id = n.numkind
			WHERE uid = userid(called_arg) AND CASE WHEN uoffline THEN div_offline ELSE div_noans END ORDER BY n.sortkey, n.id LOOP
		IF res::TEXT <> '' THEN
			res := res || hstore('callto.' || cntr || '.maxcall', (t.timeout * 1000)::TEXT); -- append to previous group
			cntr := cntr + 1;
			res := res || hstore('callto.' || cntr, '|');
		END IF;
		cntr := cntr + 1;
		res := res || hstore('callto.' || cntr, 'lateroute/' ||
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [internal].[append_execution_data_statistics]
        @execution_id                 bigint,                             
        @package_name                 nvarchar(260),  
        @package_location_type        nvarchar(128),
        @package_path_full            nvarchar(4000),                           
        @task_name                    nvarchar(4000), 
        @dataflow_path_id_string      nvarchar(4000),                               
        @dataflow_path_name           nvarchar(4000),
        @source_component_name        nvarchar(4000),
        @destination_component_name   nvarchar(4000),
        @rows_sent                    bigint,
        @created_time                 datetimeoffset,
        @execution_path               nvarchar(MAX)
AS
SET NOCOUNT ON
    IF [internal].[check_permission] 
    (
        4,
        @execution_id,
        2
    ) = 0
    BEGIN
        RAISERROR(27143, 16, 5, @execution_i

        RETURN 1;      
    END
    INSERT INTO [internal].[execution_data_statistics]
           ([execution_id],
            [package_name],
            [package_location_type],
            [package_path_full],
            [task_name],
            [dataflow_path_id_string],
            [dataflow_path_name],
            [source_component_name],
            [destination_component_name],
            [rows_sent],
            [created_time],
            [execution_path])
     VALUES(
            @execution_id,                             
            @package_name,                              
            @package_location_type,
            @package_path_full,
            @task_name,
            @dataflow_path_id_string,                             
            @dataflow_path_name,
            @source_component_name,
            @destination_component_name,
            @rows_sent,
            @created_time,
            @execution_path
           )
    RETURN 0
GO
GRANT EXECUTE ON  [inte
CREATE OR REPLACE TRIGGER cms_voyage_crew_trg
BEFORE DELETE OR INSERT OR UPDATE
ON TPJ.CMS_VOYAGE_CREW
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN
   IF INSERTING THEN
      update pms_employees 
      set    vess_code = :NEW.VOYA_VESS_CODE,
             latest_embarked = :NEW.DT_EMBARKED 
      where  empl_id   = :NEW.EMPL_EMPL_ID
      and    (latest_embarked is null
      or      latest_embarked < :NEW.DT_EMBARKED);
      INSERT INTO cms_voyage_crew_audit
            ( ACTION, USER_ID, NEW_VOYA_VESS_CODE, NEW_VOYA_VOYAGE_DATE, NEW_EMPL_EMPL_ID,
              NEW_CREATED_BY, NEW_DT_CREATED, NEW_MODIFIED_BY, NEW_DT_MODIFIED,
              NEW_RANK_CODE, NEW_TITLE, NEW_SEQ_NO, NEW_DT_EMBARKED, NEW_DT_DISEMBARKED,
              NEW_PASSENGER, NEW_BASIC_RATE, NEW_APPROVED, NEW_BASIC_RATE_G, NEW_TRAN_NO_EMBARKED,
              NEW_TRAN_NO_DISEMBARKED )
      VALUES ('I', USER, :NEW.VOYA_VESS_CODE, :NEW.VOYA_VOYAGE_DATE, :NEW.EMPL_EMPL_ID,
              :NEW.CREATED_BY, :NEW.DT_CR

              :NEW.RANK_CODE, :NEW.TITLE, :NEW.SEQ_NO, :NEW.DT_EMBARKED, :NEW.DT_DISEMBARKED,
              :NEW.PASSENGER, :NEW.BASIC_RATE, :NEW.APPROVED, :NEW.BASIC_RATE_G, :NEW.TRAN_NO_EMBARKED,
              :NEW.TRAN_NO_DISEMBARKED);
   END IF;
   IF UPDATING THEN
      update pms_employees 
      set    vess_code = :NEW.VOYA_VESS_CODE,
             latest_embarked = :NEW.DT_EMBARKED 
      where  empl_id   = :NEW.EMPL_EMPL_ID
      and    (latest_embarked is null
      or      latest_embarked < :NEW.DT_EMBARKED);
      INSERT INTO cms_voyage_crew_audit
            ( ACTION, USER_ID, NEW_VOYA_VESS_CODE, NEW_VOYA_VOYAGE_DATE, NEW_EMPL_EMPL_ID,
              NEW_CREATED_BY, NEW_DT_CREATED, NEW_MODIFIED_BY, NEW_DT_MODIFIED,
              NEW_RANK_CODE, NEW_TITLE, NEW_SEQ_NO, NEW_DT_EMBARKED, NEW_DT_DISEMBARKED,
              NEW_PASSENGER, NEW_BASIC_RATE, NEW_APPROVED, NEW_BASIC_RATE_G, NEW_TRAN_NO_EMBARKED,
              NEW_TRAN_NO_DISEMBARKED, OLD_VOYA_VESS_CODE, OLD_VOYA_VOYAGE_

              OLD_CREATED_BY, OLD_DT_CREATED, OLD_MODIFIED_BY, OLD_DT_MODIFIED, OLD_RANK_CODE,
              OLD_TITLE, OLD_SEQ_NO, OLD_DT_EMBARKED, OLD_DT_DISEMBARKED, OLD_PASSENGER, OLD_BASIC_RATE,
              OLD_APPROVED, OLD_BASIC_RATE_G, OLD_TRAN_NO_EMBARKED, OLD_TRAN_NO_DISEMBARKED )
      VALUES ('U', USER, :NEW.VOYA_VESS_CODE, :NEW.VOYA_VOYAGE_DATE, :NEW.EMPL_EMPL_ID,
              :NEW.CREATED_BY, :NEW.DT_CREATED, :NEW.MODIFIED_BY, :NEW.DT_MODIFIED,
              :NEW.RANK_CODE, :NEW.TITLE, :NEW.SEQ_NO, :NEW.DT_EMBARKED, :NEW.DT_DISEMBARKED,
              :NEW.PASSENGER, :NEW.BASIC_RATE, :NEW.APPROVED, :NEW.BASIC_RATE_G, :NEW.TRAN_NO_EMBARKED,
              :NEW.TRAN_NO_DISEMBARKED, :OLD.VOYA_VESS_CODE, :OLD.VOYA_VOYAGE_DATE,
              :OLD.EMPL_EMPL_ID, :OLD.CREATED_BY, :OLD.DT_CREATED, :OLD.MODIFIED_BY, :OLD.DT_MODIFIED,
              :OLD.RANK_CODE, :OLD.TITLE, :OLD.SEQ_NO, :OLD.DT_EMBARKED, :OLD.DT_DISEMBARKED,
              :OLD.PASSENGER, :OLD.BASIC_RATE, :OLD.AP
INSERT INTO dmNavigation (ownedby,lastupdatedby,datetimelastupdated,internalRedirectID,label,externalRedirectURL,ExternalLink,status,lNavIDAlias,createdby,navType,fu,datetimecreated,target,lockedBy,options,locked,title,ObjectID) VALUES ('CDD3B33E-A463-9B75-DC0150D316830765','farcry_CLIENTUD','2014-05-05 16:58:57','','Features','','','approved','','farcry_CLIENTUD','aObjectIDs','','2014-05-05 16:56:04','_self','','',0,'Features','534208E0-D422-11E3-BA4ABC5FF41C5C33');
INSERT INTO dmNavigation (ownedby,lastupdatedby,datetimelastupdated,internalRedirectID,label,externalRedirectURL,ExternalLink,status,lNavIDAlias,createdby,navType,fu,datetimecreated,target,lockedBy,options,locked,title,ObjectID) VALUES ('CDD3B33E-A463-9B75-DC0150D316830765','farcry_CLIENTUD','2014-05-05 16:58:57','','Support','','','approved','','farcry_CLIENTUD','aObjectIDs','','2014-05-05 16:57:03','_self','','',0,'Support','769AA630-D422-11E3-BA4ABC5FF41C5C33');
INSERT INTO dmNavigation (ownedby,lastupdatedby,datetimela

INSERT INTO dmNavigation (ownedby,lastupdatedby,datetimelastupdated,internalRedirectID,label,externalRedirectURL,ExternalLink,status,lNavIDAlias,createdby,navType,fu,datetimecreated,target,lockedBy,options,locked,title,ObjectID) VALUES ('','farcry_CLIENTUD','2014-05-05 16:58:57','','Home','','','approved','home','farcry','aObjectIDs','','2007-12-17 16:18:21','_self','','',0,'Home','E689D721-B6C9-605B-DE1D813E4CDA3339');
INSERT INTO dmNavigation (ownedby,lastupdatedby,datetimelastupdated,internalRedirectID,label,externalRedirectURL,ExternalLink,status,lNavIDAlias,createdby,navType,fu,datetimecreated,target,lockedBy,options,locked,title,ObjectID) VALUES ('CDD3B33E-A463-9B75-DC0150D316830765','farcry_CLIENTUD','2014-05-05 16:58:57','','Downloads','','','approved','','farcry_CLIENTUD','aObjectIDs','','2014-05-05 16:24:32','_self','','',0,'Downloads','EBB75E90-D41D-11E3-9EBBBC5FF41C5C33');
INSERT INTO dmNavigation (ownedby,lastupdatedby,datetimelastupdated,internalRedirectID,label,external

INSERT INTO dmNavigation (ownedby,lastupdatedby,datetimelastupdated,internalRedirectID,label,externalRedirectURL,ExternalLink,status,lNavIDAlias,createdby,navType,fu,datetimecreated,target,lockedBy,options,locked,title,ObjectID) VALUES ('','farcry_CLIENTUD','2013-11-11 14:59:43','','Utility','','','approved','hidden','farcry','aObjectIDs','','2007-12-17 16:18:21','_self','','',0,'Utility','E689D724-AE3E-A438-FCD3CBF4D14557C3');
INSERT INTO dmNavigation (ownedby,lastupdatedby,datetimelastupdated,internalRedirectID,label,externalRedirectURL,ExternalLink,status,lNavIDAlias,createdby,navType,fu,datetimecreated,target,lockedBy,options,locked,title,ObjectID) VALUES ('','farcry_CLIENTUD','2013-11-11 14:59:25','','Root','','','approved','root','farcry','aObjectIDs','','2007-12-17 16:18:21','_self','','',0,'Root','E689D720-B19E-FC94-66DD3411BED0693C');
INSERT INTO dmNavigation (ownedby,lastupdatedby,datetimelastupdated,internalRedirectID,label,externalRedirectURL,ExternalLink,status,lNavIDAlia
# phpMyAdmin MySQL-Dump
# version 2.2.2
# http://phpwizard.net/phpMyAdmin/
# http://phpmyadmin.sourceforge.net/ (download page)
# Host: localhost
# Erstellungszeit: 18. März 2002 um 10:06
# Server Version: 3.23.39
# PHP Version: 4.1.1
# Datenbank : `dmerce_gt_vers`
# --------------------------------------------------------
# Tabellenstruktur für Tabelle `HeadNav`
CREATE TABLE HeadNav (
  ID int(11) NOT NULL default '0',
  CreatedBy int(11) NOT NULL default '0',
  CreatedDateTime float(16,4) NOT NULL default '0.0000',
  ChangedBy int(11) NOT NULL default '0',
  ChangedDateTime float(16,4) NOT NULL default '0.0000',
  active int(1) NOT NULL default '1',
  WordlistID int(11) NOT NULL default '0',
  TextID int(11) NOT NULL default '0',
  NameDE varchar(255) NOT NULL default '',
  Name_en varchar(255) NOT NULL default '',
  Name_es varchar(255) NOT NULL default '',
  Name_fr varchar(255) NOT NULL default '',
  Name_it varchar(255) NOT NULL default '',
  PRIMARY KEY  (ID)
) TYPE=MyISAM;
# Da
CREATE TABLE `xr7h81hn_term_taxonomy` (  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',  `taxonomy` varchar(32) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',  `description` longtext COLLATE utf8mb4_unicode_ci NOT NULL,  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',  `count` bigint(20) NOT NULL DEFAULT '0',  PRIMARY KEY (`term_taxonomy_id`),  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),  KEY `taxonomy` (`taxonomy`)) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40000 ALTER TABLE `xr7h81hn_term_taxonomy` DISABLE KEYS */;
INSERT INTO `xr7h81hn_term_taxonomy` VALUES('1', '1', 'category', '', '0', '0');
INSERT INTO `xr7h81hn_term_taxonomy` VALUES('2', '2', 'nav_menu', '', '0', '0');
INSERT INTO `xr7h81hn_term_taxonomy` VALUES('3', '3', 'nav_menu', '', '0', '0');
INSERT INTO `xr7h81hn_term_taxonomy` VALUES('4', '4', 'nav_menu', '', '0', '0');
INSERT INTO `xr7h81hn_te
﻿USE VIVALDI
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF  EXISTS (
	SELECT * FROM dbo.sysobjects 
	WHERE 	id = OBJECT_ID(N'[dbo].[spS_FundHistData]') AND 
		OBJECTPROPERTY(id,N'IsProcedure') = 1
	)
DROP PROCEDURE [dbo].[spS_FundHistData]
GO
CREATE PROCEDURE [dbo].[spS_FundHistData] 
	@FundId int,
	@EndDate datetime,
	@months int 
AS
SET NOCOUNT ON;
SELECT	NaVData.NaVPLDate AS ReportDate
	, NaVData.CostNaV AS NaV
	, NaVData.TotalPL AS TotalPL
	, NaVData.TotalPL/NaVData.CostNaV AS TotalPLPerc
	, VaRData.DollarVaR AS DollarVaR
	, VaRData.DollarVaR/NaVData.CostNaV AS VaRPerc
	, (NaVData.TotalPL/NaVData.CostNaV)/
	((VaRData.DollarVaR/NaVData.CostNaV)/ZScores.Zscore) AS ChiStatistic
	, VaREvent =
		CASE 
			WHEN NaVData.TotalPL/NaVData.CostNaV < -VaRData.DollarVaR/NaVData.CostNaV THEN
			1
		ELSE
			0
		END
	, ABS(NaVData.TotalPL)/NaVData.CostNaV AS AbsPLPerc
	, NaVData.GrossExposure As GrossExposure
	, NaVData.NetExposure AS NetExposure
	, NaVData.FIShortBonds AS FIShortExp
	, Na
SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;
SET search_path = public, pg_catalog;
CREATE AGGREGATE array_accum (
    BASETYPE = anyelement,
    SFUNC = array_append,
    STYPE = anyarray,
    INITCOND = '{}'
);
SET default_tablespace = '';
SET default_with_oids = false;
CREATE TABLE error (
    error_time integer NOT NULL,
    jobid bigint NOT NULL,
    message varchar(255) NOT NULL,
    funcid integer DEFAULT 0 NOT NULL
);
CREATE TABLE exitstatus (
    jobid bigint NOT NULL,
    funcid integer DEFAULT 0 NOT NULL,
    status smallint,
    completion_time integer,
    delete_after integer
);
CREATE TABLE funcmap (
    funcid serial NOT NULL,
    funcname varchar(255) NOT NULL
);
CREATE TABLE job (
    jobid serial NOT NULL,
    funcid integer NOT NULL,
    arg bytea,
    uniqkey varchar(255),
    insert_time integer,
    run_after integer NOT NULL,
    grabbed_until integer NOT NULL,
    priority smallint,
    "coalesce" varchar(25

);
CREATE TABLE note (
    jobid bigint NOT NULL,
    notekey varchar(255) NOT NULL,
    value bytea
);
ALTER TABLE ONLY exitstatus
    ADD CONSTRAINT exitstatus_pkey
            PRIMARY KEY (jobid);
ALTER TABLE ONLY funcmap
    ADD CONSTRAINT funcmap_funcname_key
            UNIQUE (funcname);
ALTER TABLE ONLY funcmap
    ADD CONSTRAINT funcmap_pkey
            PRIMARY KEY (funcid);
ALTER TABLE ONLY job
    ADD CONSTRAINT job_funcid_key
            UNIQUE (funcid, uniqkey);
ALTER TABLE ONLY job
    ADD CONSTRAINT job_pkey
            PRIMARY KEY (jobid);
ALTER TABLE ONLY note
    ADD CONSTRAINT note_pkey
            PRIMARY KEY (jobid, notekey);
CREATE INDEX error_funcid_errortime
	    ON error (funcid, error_time);
CREATE INDEX error_jobid
	    ON error (jobid);
CREATE INDEX error_time
	    ON error (error_time);
CREATE INDEX exitstatus_deleteafter
	    ON exitstatus (delete_after);
CREATE INDEX exitstatus_funcid
	    ON exitstatus (funcid);
CREATE INDEX ix_job_piro_non_null
	    ON
import studio
program f1 [# $ check ck rescheck hash_preprocessor list_preprocessor
		f1 var_preprocessor
		rescheck_list_tail rescheck_cont var_preprocessor_cont
		]
[[ck *x] [not is_var *x] [eq *x #] /]
[[ck *x] [is_var *x] / fail]
[[ck [*head : *tail]] [not is_var *head] [eq *head #]]
[[ck [*head : *tail]] [ck *tail]]
[[check * *x * *] [is_var *x] / fail]
[[check *var *h *var *] [not is_var *h] [eq *h #]]
[[check *var [*h : *tail] [*var : *tail] *] [not is_var *h] [eq *h #]]
[[check *var [*head : *tail] [*head : *tail2] *ret] [check *var *tail *tail2 *ret]]
[[check *var [*head : *tail] [*var : *tail] *head2] [ck *head] [check *var *head *head2 *]]
[[check *var [*head : *tail] [*head2 : *tail] *res] [check *var *head *head2 *res]]
[[hash_preprocessor *x *y]
	[check *sonda *x *instructions *instruction]
;	[show "	preprocessing => " [*instruction : *instructions]]
	/ [hash_preprocessor [*instruction : *instructions] *y]]
[[hash_preprocessor *x *x]]
[[list_preprocessor [] []]]
[[list_pr

	[hash_preprocessor [*h1] *h2]
	[list_preprocessor *t1 *t2]
	[APPEND *h2 *t2 *res]]
[[rescheck_cont *t *t] [is_var *t] /]
[[rescheck_cont *t *t2] [rescheck *t *t2]]
[[rescheck_list_tail *t1 *t2] [rescheck_cont *t1 *tx] [list_preprocessor *tx *t2]]
[[rescheck [*res : *tail] [res : *tail2]] [is_atom *res] [eq *res res] / [rescheck_list_tail *tail *tail2]]
[[rescheck [*head : *tail] [*head : *t2]] [is_var *head] /
	[rescheck_cont *tail *t2]/]
[[rescheck [*head : *tail] [*h2 : *t2]]
	[rescheck *head *h2] /
	[rescheck_cont *tail *t2] /]
[[rescheck *x *x]/]
[[var_preprocessor_cont *t *t] [is_var *t] /]
[[var_preprocessor_cont *t *t2] [var_preprocessor *t *t2]]
[[var_preprocessor [*u *array : *tail] [*call : *t2]] [is_atom *u] [eq *u $]
	[not is_var *array] [eq *array [*a : *i]]
	/ [APPEND [*a : *i] # *call]
	/ [var_preprocessor_cont *tail *t2]]
[[var_preprocessor [*u *var : *tail] [[*var : #] : *t2]] [is_atom *u] [eq *u $]
	/ [var_preprocessor_cont *tail *t2]]
[[var_preprocessor [*h : *t] [
select
		Customer.customerID as customerID
	,Customer.customerName as customerName
from
	Customer
	,BuriPathData
/*BEGIN*/
where
	/*IF dto.customerID != null*/ customerID = /*dto.customerID*/0/*END*/
	/*IF dto.customerID_not != null*/AND customerID != /*dto.customerID_not*/0/*END*/
	/*IF dto.customerID_large != null*/AND  /*dto.customerID_large*/0 < customerID/*END*/
	/*IF dto.customerID_moreLarge != null*/AND  /*dto.customerID_moreLarge*/0 <= customerID/*END*/
	/*IF dto.customerID_from != null*/AND  /*dto.customerID_from*/0 <= customerID/*END*/
	/*IF dto.customerID_to != null*/AND customerID <= /*dto.customerID_to*/0/*END*/
	/*IF dto.customerID_moreSmall != null*/AND customerID <= /*dto.customerID_moreSmall*/0/*END*/
	/*IF dto.customerID_small != null*/AND customerID < /*dto.customerID_small*/0/*END*/
	/*IF dto.customerID_isNull != null*/AND customerID is null /*END*/
	/*IF dto.customerID_isNotNull != null*/AND customerID is not null/*END*/
	/*IF dto.customerID_in != null*/AND custome

	/*IF dto.customerName_matchFull != null*/AND customerName Like /*dto.customerName_matchFull*/'%TestData%'/*END*/
	/*IF dto.customerName_matchFront != null*/AND customerName Like /*dto.customerName_matchFront*/'TestData%'/*END*/
	/*IF dto.customerName_matchBack != null*/AND customerName Like /*dto.customerName_matchBack*/'%TestData'/*END*/
	/*IF dto.customerName != null*/AND customerName = /*dto.customerName*/'TestData'/*END*/
	/*IF dto.customerName_not != null*/AND customerName != /*dto.customerName_not*/'TestData'/*END*/
	/*IF dto.customerName_large != null*/AND  /*dto.customerName_large*/'TestData' < customerName/*END*/
	/*IF dto.customerName_moreLarge != null*/AND  /*dto.customerName_moreLarge*/'TestData' <= customerName/*END*/
	/*IF dto.customerName_from != null*/AND  /*dto.customerName_from*/'TestData' <= customerName/*END*/
	/*IF dto.customerName_to != null*/AND customerName <= /*dto.customerName_to*/'TestData'/*END*/
	/*IF dto.customerName_moreSmall != null*/AND customerName <
select
		Customer.customerID as customerID
	,Customer.customerName as customerName
from
	Customer
	,BuriPathData
/*BEGIN*/
where
	/*IF dto.customerID != null*/ customerID = /*dto.customerID*/0/*END*/
	/*IF dto.customerID_not != null*/AND customerID != /*dto.customerID_not*/0/*END*/
	/*IF dto.customerID_large != null*/AND  /*dto.customerID_large*/0 < customerID/*END*/
	/*IF dto.customerID_moreLarge != null*/AND  /*dto.customerID_moreLarge*/0 <= customerID/*END*/
	/*IF dto.customerID_from != null*/AND  /*dto.customerID_from*/0 <= customerID/*END*/
	/*IF dto.customerID_to != null*/AND customerID <= /*dto.customerID_to*/0/*END*/
	/*IF dto.customerID_moreSmall != null*/AND customerID <= /*dto.customerID_moreSmall*/0/*END*/
	/*IF dto.customerID_small != null*/AND customerID < /*dto.customerID_small*/0/*END*/
	/*IF dto.customerID_isNull != null*/AND customerID is null /*END*/
	/*IF dto.customerID_isNotNull != null*/AND customerID is not null/*END*/
	/*IF dto.customerID_in != null*/AND custome

	/*IF dto.customerName_matchFull != null*/AND customerName Like /*dto.customerName_matchFull*/'%TestData%'/*END*/
	/*IF dto.customerName_matchFront != null*/AND customerName Like /*dto.customerName_matchFront*/'TestData%'/*END*/
	/*IF dto.customerName_matchBack != null*/AND customerName Like /*dto.customerName_matchBack*/'%TestData'/*END*/
	/*IF dto.customerName != null*/AND customerName = /*dto.customerName*/'TestData'/*END*/
	/*IF dto.customerName_not != null*/AND customerName != /*dto.customerName_not*/'TestData'/*END*/
	/*IF dto.customerName_large != null*/AND  /*dto.customerName_large*/'TestData' < customerName/*END*/
	/*IF dto.customerName_moreLarge != null*/AND  /*dto.customerName_moreLarge*/'TestData' <= customerName/*END*/
	/*IF dto.customerName_from != null*/AND  /*dto.customerName_from*/'TestData' <= customerName/*END*/
	/*IF dto.customerName_to != null*/AND customerName <= /*dto.customerName_to*/'TestData'/*END*/
	/*IF dto.customerName_moreSmall != null*/AND customerName <
DELIMITER $$
CREATE FUNCTION getTime(loc varchar(20),user varchar(255)) RETURNS INT
  DETERMINISTIC
BEGIN
   DECLARE userMin int;
   DECLARE closeTime time;
   DECLARE newMin int;
   SELECT minutes INTO userMin
     FROM users
     WHERE username = user;
   SELECT close_time INTO closeTime
     FROM closing_times
     WHERE location = loc AND dow = DAYOFWEEK(now());
   SELECT LEAST( userMin, time_to_sec(timediff(closeTime,time(now()) ))/60) INTO newMin;
   IF userMin != newMin THEN
      UPDATE users SET minutes=newMin where username=user;
   END IF;
   RETURN newMin;
END
$$
DELIMITER $$
CREATE TRIGGER check_for_close AFTER INSERT ON statistics
FOR EACH ROW
BEGIN
   DECLARE _newMin int;
   IF NEW.action = 'LOGIN' THEN
        SELECT getTime(NEW.client_location,NEW.username) INTO _newMin;
   END IF;
END;
$$
CREATE TABLE `closing_times` (
  `id` int(11) NOT NULL DEFAULT '0',
  `location` varchar(20) DEFAULT NULL,
  `dow` int(11) DEFAULT NULL,
  `close_time` time NOT NULL DEFAULT '00:00:0
SET DEFINE OFF;
CREATE TABLE D_ACC_TRANS_DETAIL
  TRANS_NUMBER         NUMBER(18),
  LEG_NUMBER           NUMBER(10),
  GL_NUMBER            VARCHAR2(20 BYTE),
  GL_NAME              VARCHAR2(85 BYTE),
  AFFECT_ON_GL         VARCHAR2(1 BYTE),
  LOCAL_AMOUNT_DETAIL  NUMBER(18,2),
  BASE_AMOUNT_DETAIL   NUMBER(18,2),
  TD_REF               VARCHAR2(50 BYTE),
  CLEARED              VARCHAR2(1 BYTE),
  CLEARED_PERIOD       NUMBER(10)
TABLESPACE DTW_ADV_TABLES
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          80K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE UNIQUE INDEX D_ACC_TRANS_DETAIL_PK ON D_ACC_TRANS_DETAIL
(TRANS_NUMBER, LEG_NUMBER)
LOGGING
TAB
-- ViewName : CompaniesByWorkgroup-CostCodesGroups
start transaction;
# module
select @FKModule := IDModule from lkp_module where ModuleName = 'BQM';
# delete columns
SELECT @idView := ifnull((select IDListView from listview_master WHERE ViewName = 'CompaniesByWorkgroup-CostCodesGroups'), -1);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_columns WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_sortoption WHERE fklistview = @idView);
DELETE FROM listview_fieldmaster WHERE idlistviewfield IN (SELECT fklistviewfield FROM listview_groupbyoption WHERE fklistview = @idView);
# delete criteria
SELECT @idCriteria := ifnull((select FKListViewCriteria FROM listview_master WHERE IDListView = @idView), -1);
DELETE FROM listview_criteria WHERE IDListViewCriteria = @idCriteria;
DELETE FROM listview_master WHERE IDListView = @idView;
# update sequence
update sequence_table se

update sequence_table set seq_count = (select ifnull(max(IDListViewCriteria),0) from listview_criteria) where seq_name = 'ListCriteria_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewFieldMapping),0) from listview_fieldmapping) where seq_name = 'ListFieldMapping_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListView),0) from listview_master where IsCustomList = 0) where seq_name = 'ListBox_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewSortby),0) from listview_sortoption) where seq_name = 'ListSortby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListColumn),0) from listview_columns) where seq_name = 'ListColumn_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDProductViewMenu),0) from cnf_productviewmenu) where seq_name = 'CNF_ProductViewMenu_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListActionItem),0) from listview_actionlinks) where seq_name = 'ListAction_SE

update sequence_table set seq_count = (select ifnull(max(IDListViewFilterBy),0) from listview_filteroption) where seq_name = 'ListFilterby_SEQ';
update sequence_table set seq_count = (select ifnull(max(IDListViewGroupby),0) from listview_groupbyoption) where seq_name = 'ListGroupby_SEQ';
-- retrieve max value for each table
select @IDListViewFieldMaster := ifnull(max(IDListViewField), 0) from listview_fieldmaster;
select @IDListViewCriteria := ifnull(max(IDListViewCriteria), 0) from listview_criteria;
select @IDListViewFieldMapping := ifnull(max(IDListViewFieldMapping), 0) from listview_fieldmapping;
select @IDListView := ifnull(max(IDListView), 0) from listview_master;
select @IDListViewSortby := ifnull(max(IDListViewSortby), 0) from listview_sortoption;
select @IDListColumn := ifnull(max(IDListColumn), 0) from listview_columns;
select @IDProductViewMenu := ifnull(max(IDProductViewMenu), 0) from cnf_productviewmenu;
select @IDListActionItem := ifnull(max(IDListActionItem), 0) from li
-- FOR UPGRADE ONLY
update phone set model_id = 'cisco' || model_id where bean_id = 'ciscoAta';
update phone set model_id = 'cisco' || model_id where bean_id = 'ciscoIp';
update phone set model_id = 'gs' || model_id where bean_id = 'grandstream';
update phone set model_id = 'kphoneStandard' where bean_id = 'kphone';
update phone set model_id = 'polycom' || model_id where bean_id = 'polycom';
update phone set model_id = 'snom' || model_id where bean_id = 'snom';
update phone set model_id = 'hitachi' || model_id where bean_id = 'hitachi';
update phone set model_id = 'acmePhoneStandard', bean_id = 'acmePhone' where bean_id = 'unmanagedPhone' or bean_id = 'acmePhone';
update gateway set model_id = 'audiocodesTP260_' || model_id where bean_id = 'gwAudiocodesTp260';
update gateway set model_id = 'audiocodesMP_' || model_id where bean_id = 'gwAudiocodesMediant';
update gateway set model_id = 'genericGatewayStandard' where bean_id = 'gwGeneric';
update gateway set model_id = 'sipTrunkStandard'
--------------------------------------------------------
--  Constraints for Table DM_ROLE_USER
--------------------------------------------------------
  ALTER TABLE "DM_ROLE_USER" ADD CONSTRAINT "PK_DMRR" PRIMARY KEY ("ROLE_USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "DM_ROLE_USER" MODIFY ("ROLE_USER_ID" NOT NULL ENABLE);
  ALTER TABLE "DM_ROLE_USER" MODIFY ("USER_ID" NOT NULL ENABLE);
  ALTER TABLE "DM_ROLE_USER" MODIFY ("ROLE_ID" NOT NULL ENABLE);
  ALTER TABLE "DM_ROLE_USER" MODIFY ("STATUS_ID" NOT NULL ENABLE);
  ALTER TABLE "DM_ROLE_USER" ADD CONSTRAINT "UK_DMRR" UNIQUE ("USER_ID", "ROLE_ID", "DATA_OWNER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTE
DROP TABLE K12INTEL_DW.MPSF_SGP_HIST CASCADE CONSTRAINTS;
CREATE TABLE K12INTEL_DW.MPSF_SGP_HIST
  TEST_SCORES_KEY                 NUMBER(10)    NOT NULL,
  CALENDAR_DATE_KEY               NUMBER(10)    NOT NULL,
  SCHOOL_DATES_KEY                NUMBER(10)    NOT NULL,
  TESTS_KEY                       NUMBER(10)    NOT NULL,
  TEST_SUBJECT                    VARCHAR2(20)  NOT NULL,
  STUDENT_KEY                     NUMBER(10)    NOT NULL,
  TEST_GROWTH_PERCENTILE          NUMBER(8)     NOT NULL,
  SYS_ETL_SOURCE                  VARCHAR2(50 BYTE) NOT NULL,
  SYS_CREATED                     DATE          NOT NULL,
  SYS_UPDATED                     DATE          NOT NULL,
  SYS_CURRENT_IND                 CHAR(1)       NOT NULL,
  SYS_PARTITION_VALUE             NUMBER(3)     NOT NULL
TABLESPACE K12INTEL_DW_DATA
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAX

            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;
CREATE INDEX K12INTEL_DW.VFIDX_FSGP_SK_DT ON K12INTEL_DW.MPSF_SGP_HIST
(TEST_SCORES_KEY, STUDENT_KEY)
LOGGING
TABLESPACE K12INTEL_DW_INDEX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;
ALTER INDEX K12INTEL_DW.VFIDX_FSGP_SK_DT
  MONITORING USAGE;
CREATE INDEX K12INTEL_DW.VFIDX_SGP_TSC ON K12INTEL_DW.MPSF_SGP_HIST
(TEST_SCORES_KEY)
LOGGING
TABLESPACE K12INTEL_DW_INDEX
PCT
-- Add option conditions for Warlock trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (1503,1522,2381,2383,2384,4503,4504,4505,4566,4567,4603,4604,4609,4610,4641,4643,4655,4656,4667,4681,4682,6628,7437,7566,4642);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,1503,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,1503,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,1503,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,1522,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,1522,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,1522,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,2381,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'

(15,2381,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,2381,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,2383,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,2383,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,2383,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,2384,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,2384,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,2384,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4503,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4503,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4503,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4504,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4504,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4504,2,0,15,256,0,0,

(15,4505,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4505,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4505,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4566,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4566,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4566,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4567,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4567,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4567,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4603,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4603,1,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4603,2,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4604,0,0,15,256,0,0,0,'','Show gossip option if player is a Warlock'),
(15,4604,1,0,15,256,0,0,
-- Timestamp: 2014-05-03 16:14:03.193
-- Source database is: db
-- Connection URL is: jdbc:derby:db
-- appendLogs: false
-- ----------------------------------------------
-- DDL Statements for tables
-- ----------------------------------------------
CREATE TABLE "APP"."SINGLE" ("BOOL" BOOLEAN, "PKINT" INTEGER NOT NULL, "BLOB" BLOB(2147483647), "CLOB" CLOB(2147483647), "decimal" NUMERIC(10,5), "VARCHAR100" VARCHAR(100), "DATE" DATE, "int" INTEGER);
-- ----------------------------------------------
-- DDL Statements for keys
-- ----------------------------------------------
-- PRIMARY/UNIQUE
ALTER TABLE "APP"."SINGLE" ADD CONSTRAINT "SQL140503160330990" PRIMARY KEY ("PKINT");
CREATE TABLE "APP"."MAIN" ("BOOL" BOOLEAN,
                           "PKINT" INTEGER NOT NULL,
                           "BLOB" BLOB(2147483647),
                           "CLOB" CLOB(2147483647),
                           "decimal" NUMERIC(10,5),
                           "VARCHAR100" VARCHAR(100),
           
CREATE OR REPLACE TRIGGER PEADMIN.TRG_PERSONAL_STATUS
  AFTER INSERT OR UPDATE OF C_UPGRADE_DATE, C_UPGRADE_REASON, C_TYPE, C_POSITION, C_REGBELONG, C_PARTY, C_GRADE, C_SCHOOLHISTORY 
  ON T_PERSONAL  FOR EACH ROW
BEGIN
--1.删除新的C_UPGRADE_DATE后有效的记录
 DELETE FROM T_PSN_STATUS 
  WHERE C_BELONG = :NEW.C_BELONG
      AND C_STATUSPSN = :NEW.C_PERSONALID
   AND C_ONDATE >= :NEW.C_UPGRADE_DATE;
--2.修改当前有效时间内的C_DOWNDATE为新的C_UPGRADE_DATE
  UPDATE T_PSN_STATUS SET C_DOWNDATE = (:NEW.C_UPGRADE_DATE - 1)
  WHERE C_BELONG = :NEW.C_BELONG
      AND C_STATUSPSN = :NEW.C_PERSONALID 
   AND C_ONDATE = (
                      SELECT MAX(C_ONDATE) 
                      FROM T_PSN_STATUS 
                      WHERE C_BELONG = :NEW.C_BELONG 
                      AND C_STATUSPSN = :NEW.C_PERSONALID 
                      AND C_ONDATE < :NEW.C_UPGRADE_DATE);
--3.插入新的状态变动记录
  INSERT INTO T_PSN_STATUS (
  C_BELONG,
  C_STATUSPSN,
  C_ONDATE,
  C_UPGRADE_REASON,
  C_TYPE,
  C_POSITION,
  C_REGBELONG,
  C_PAR
-- tkt3201.test
-- 
-- db eval {
--      CREATE TABLE t4(x);
--      CREATE TABLE t4_log(x);
--      CREATE TRIGGER r4_1 AFTER INSERT ON t4 WHEN new.x=1 BEGIN
--        INSERT INTO t4_log(x) VALUES(new.x);
--      END;
--      CREATE TRIGGER r4_2 AFTER INSERT ON t4 WHEN new.x=2 BEGIN
--        INSERT INTO t4_log(x) VALUES(new.x);
--      END;
--      CREATE TRIGGER r4_3 AFTER INSERT ON t4 WHEN new.x=3 BEGIN
--        INSERT INTO t4_log(x) VALUES(new.x);
--      END;
--      CREATE TRIGGER r4_4 AFTER INSERT ON t4 WHEN new.x=4 BEGIN
--        INSERT INTO t4_log(x) VALUES(new.x);
--      END;
--      INSERT INTO t4 VALUES(1);
--      INSERT INTO t4 VALUES(2);
--      INSERT INTO t4 VALUES(3);
--      INSERT INTO t4 VALUES(4);
--      SELECT * FROM t4_log;
-- }
CREATE TABLE t4(x);
CREATE TABLE t4_log(x);
CREATE TRIGGER r4_1 AFTER INSERT ON t4 WHEN new.x=1 BEGIN
INSERT INTO t4_log(x) VALUES(new.x);
END;
CREATE TRIGGER r4_2 AFTER INSERT ON t4 WHEN new.x=2 BEGIN
INSERT INTO t4_log(x) VALUES(n
SET IDENTITY_INSERT [#__extensions] ON;
INSERT INTO [#__extensions] ([extension_id], [name], [type], [element], [folder], [client_id], [enabled], [access], [protected], [manifest_cache], [params], [custom_data], [system_data], [checked_out], [checked_out_time], [ordering], [state])
SELECT 28, 'com_joomlaupdate', 'component', 'com_joomlaupdate', '', 1, 1, 0, 1, '{"legacy":false,"name":"com_joomlaupdate","type":"component","creationDate":"February 2012","author":"Joomla! Project","copyright":"(C) 2005 - 2017 Open Source Matters. All rights reserved.","authorEmail":"admin@joomla.org","authorUrl":"www.joomla.org","version":"2.5.2","description":"COM_JOOMLAUPDATE_XML_DESCRIPTION","group":""}', '{}', '', '', 0, '1900-01-01 00:00:00', 0, 0;
SET IDENTITY_INSERT [#__extensions] OFF;
INSERT INTO [#__menu] ([menutype], [title], [alias], [note], [path], [link], [type], [published], [parent_id], [level], [component_id], [ordering], [checked_out], [checked_out_time], [browserNav], [access], [img], [
DROP TABLE if exists ims_new_feature;
CREATE TABLE ims_new_feature
   item_code                       char(18),
   mps_code                        varchar(25),
   grade                           varchar(20),																																																																
   status                          varchar(20),
   body                            varchar(30),
   edge                            varchar(30),
   surface_type                    varchar(30),   
   surface_finish                  varchar(30),
   surface_application             varchar(30),
   design_style                    varchar(30),   
   design_look                     varchar(30),
   recommended_grout_joint_min     varchar(10),
   recommended_grout_joint_max     varchar(10),
   warranty                        numeric(4),
   created_date                    date,
   launched_date                   date,
   dropped_date                    date,
   last_modified_date              date,
   version                     
  CREATE OR REPLACE  VIEW HV_DEPOSIT_OUTSTANDING (NAV_DATE, AUM, TRANS_DATE, PORTFOLIO, PORTFOLIO_NAME, SECURITY, SECURITY_NAME, ISSUER_NAME, VALUE_DATE, RATE, NOOF_DAYS, MATURITY_DATE, FD_AMOUNT) AS 
  SELECT --HREP_NAV_SUMMARY_CURR.PORTFOLIO,
    HREP_NAV_SUMMARY_CURR.TRANS_DATE AS NAV_DATE,
    Sum(HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE)/10000000 AUM,
    HREP_SECURITY_HOLDING_CURR.TRANS_DATE AS TRANS_DATE,
    HREP_SECURITY_HOLDING_CURR.PORTFOLIO,
    HREP_SECURITY_HOLDING_CURR.PORTFOLIO_NAME,
    HREP_SECURITY_HOLDING_CURR.SECURITY,
    HREP_SECURITY_DETAIL_CURR.SECURITY_NAME,
    HREP_SECURITY_DETAIL_CURR.ISSUER_NAME,
    HREP_SECURITY_DETAIL_CURR.FF_D2 AS VALUE_DATE,
    HREP_SECURITY_DETAIL_CURR.COUPON_RATE AS RATE,
    (HREP_SECURITY_DETAIL_CURR.MATURITY_DATE  -  HREP_SECURITY_DETAIL_CURR.FF_D2) AS NOOF_DAYS,
        HREP_SECURITY_DETAIL_CURR.MATURITY_DATE,
    (HREP_SECURITY_HOLDING_CURR.MARKET_VALUE_PCY)/10000000 FD_AMOUNT
  FROM HREP_SECURITY_DETAIL_CURR, HREP_SECURITY_HOLDI

    HREP_NAV_SUMMARY_CURR
  WHERE HREP_SECURITY_HOLDING_CURR.PORTFOLIO     = HREP_NAV_SUMMARY_CURR.PORTFOLIO
  AND HREP_SECURITY_HOLDING_CURR.TRANS_DATE      = HREP_NAV_SUMMARY_CURR.TRANS_DATE
 --AND HREP_NAV_SUMMARY_CURR.TRANS_DATE           = '30 Sep 2013'
  AND HREP_NAV_SUMMARY_CURR.NET_ASSET_VALUE      >'0'
  AND HREP_NAV_SUMMARY_CURR.PORTFOLIO_CLASS NOT IN 'GLOBAL'
-- and (HREP_SECURITY_DETAIL_CURR.MATURITY_DATE  -  HREP_SECURITY_DETAIL_CURR.FF_D1) > 0
--  AND HREP_SECURITY_HOLDING_CURR.TRANS_DATE     between  '31 MAR 2012' and '30 Sep 2013'
  AND HREP_SECURITY_HOLDING_CURR.ASSET_CLASS     ='25'
AND  HREP_SECURITY_DETAIL_CURR.SECURITY  =   HREP_SECURITY_HOLDING_CURR.SECURITY        
 -- AND HREP_SECURITY_HOLDING_CURR.PORTFOLIO       = HREP_SECURITY_DETAIL_CURR.PORTFOLIO
--AND HREP_SECURITY_HOLDING_CURR.PORTFOLIO   IN 'HDFCAR'
-- AND HREP_SECURITY_DETAIL_CURR.FF_D1 between '31 Mar 2013' and '30 sep 2013'
GROUP BY HREP_NAV_SUMMARY_CURR.PORTFOLIO,
   HREP_SECURITY_DETAIL_CURR.MATURI
﻿CREATE VIEW dbo.v_Seme
AS
SELECT          Value, Name
FROM              dbo.v_Seme_ican5
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 

         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
  

      End
      Begin Tables = 
         Begin Table = "v_Seme_ican5"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 104
               Right = 203
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   
CREATE TABLE dmFlash(
lockedBy nvarchar(250) NULL DEFAULT NULL ,
lastupdatedby nvarchar(250) NOT NULL DEFAULT '' ,
flashPlay bit NOT NULL DEFAULT 1 ,
flashQuality nvarchar(250) NULL DEFAULT 'high' ,
flashWidth decimal(10,2) NULL DEFAULT 0 ,
flashBgcolor nvarchar(250) NULL DEFAULT '#FFFFFF' ,
status nvarchar(250) NULL DEFAULT NULL ,
metaKeywords nvarchar(250) NULL DEFAULT NULL ,
teaser nvarchar(MAX) NULL ,
flashAlign nvarchar(250) NULL DEFAULT 'center' ,
displayMethod nvarchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
ObjectID nvarchar(50) NOT NULL DEFAULT '' ,
flashMenu bit NOT NULL DEFAULT 0 ,
label nvarchar(250) NULL DEFAULT NULL ,
flashMovie nvarchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL DEFAULT {ts '2214-04-16 16:59:52'} ,
flashLoop bit NOT NULL DEFAULT 0 ,
createdby nvarchar(250) NOT NULL DEFAULT '' ,
flashVersion nvarchar(250) NULL DEFAULT '8,0,0,0' ,
flashURL nvarchar(250) NULL DEFAULT NULL ,
datetimecreated datetime NOT NULL DEFAULT {ts '2214-04-16 
insert into plugins (id, name, testedUpTo, stableTag, requiresAtLeast, created, modified) values (2856, "Nav Menu Roles", "4.1", "1.6.4", "3.8", now(), now());
insert into functions (id, plugin_id, function_name, function_loc, created, modified) values (52549, 2856, "Nav_Menu_Roles", "/nav-menu-roles.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384030, 2856, "Nav_Menu_Roles", "nag_ignore", "/nav-menu-roles.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384031, 2856, "Nav_Menu_Roles_Import", "import_start", "/inc/class.Nav_Menu_Roles_Import.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384032, 2856, "Nav_Menu_Roles", "nav_update", "/nav-menu-roles.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values 

insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384034, 2856, "Nav_Menu_Roles", "enqueue_scripts", "/nav-menu-roles.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384035, 2856, "Nav_Menu_Roles_Import", "__construct", "/inc/class.Nav_Menu_Roles_Import.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384036, 2856, "Nav_Menu_Roles", "exclude_menu_items", "/nav-menu-roles.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384037, 2856, "Walker_Nav_Menu_Edit_Roles", "start_el", "/inc/class.Walker_Nav_Menu_Edit_Roles.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384038, 2856, "Nav_Menu_Roles", "__clone", "/nav-menu-roles.php", now(), now());
insert into 

insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384040, 2856, "Nav_Menu_Roles_Import", "header", "/inc/class.Nav_Menu_Roles_Import.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384041, 2856, "Nav_Menu_Roles_Import", "process_nav_menu_meta", "/inc/class.Nav_Menu_Roles_Import.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384042, 2856, "Nav_Menu_Roles", "register_importer", "/nav-menu-roles.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384043, 2856, "Nav_Menu_Roles", "load_text_domain", "/nav-menu-roles.php", now(), now());
insert into methods (id, plugin_id, class_name, method_name, method_loc, created, modified) values (384044, 2856, "Nav_Menu_Roles_Import", "dispatch", "/inc/class.Nav_Menu_Roles_Import.php", now(
# Tests for PERFORMANCE_SCHEMA
#    Show existing objects and information about their structure
show databases like 'performance_schema';
show create database performance_schema;
use performance_schema;
show tables;
show create table accounts;
show create table cond_instances;
show create table events_stages_current;
show create table events_stages_history;
show create table events_stages_history_long;
show create table events_stages_summary_by_host_by_event_name;
show create table events_stages_summary_by_thread_by_event_name;
show create table events_stages_summary_by_user_by_event_name;
show create table events_stages_summary_by_account_by_event_name;
show create table events_stages_summary_global_by_event_name;
show create table events_statements_current;
show create table events_statements_history;
show create table events_statements_history_long;
show create table events_statements_summary_by_digest;
show create table events_statements_summary_by_host_by_event_name;
show create t

show create table events_statements_summary_by_user_by_event_name;
show create table events_statements_summary_by_account_by_event_name;
show create table events_statements_summary_global_by_event_name;
show create table events_waits_current;
show create table events_waits_history;
show create table events_waits_history_long;
show create table events_waits_summary_by_host_by_event_name;
show create table events_waits_summary_by_instance;
show create table events_waits_summary_by_thread_by_event_name;
show create table events_waits_summary_by_user_by_event_name;
show create table events_waits_summary_by_account_by_event_name;
show create table events_waits_summary_global_by_event_name;
show create table file_instances;
show create table file_summary_by_event_name;
show create table file_summary_by_instance;
show create table host_cache;
show create table hosts;
show create table mutex_instances;
show create table objects_summary_global_by_type;
show create table performance_timers;
sho
CREATE TABLE evenements as (
	SELECT distinct he1.idEvenement ,
	he1.idTypeStructure,
	he1.idTypeEvenement,
	he1.idUtilisateur,
	he1.idSource,
	he1.idEvenementRecuperationTitre,
	he1.idImagePrincipale,
	he1.titre,
	he1.description,
	he1.dateDebut,
	he1.isDateDebutEnviron,
	he1.dateFin,
	he1.dateCreationEvenement, 
	he1.nbEtages,
	he1.ISMH,
	he1.MH,
	he1.numeroArchive,
	he1.parent
	FROM `historiqueEvenement` he1, historiqueEvenement he2
	WHERE he1.idEvenement = he2.idEvenement
	GROUP BY he1.idEvenement, he1.idHistoriqueEvenement
	HAVING he1.idHistoriqueEvenement = max(he2.idHistoriqueEvenement)
);
ALTER TABLE `evenements` ADD PRIMARY KEY ( `idEvenement` ) ;
SET SQL_MODE=NO_AUTO_VALUE_ON_ZERO;
ALTER TABLE `evenements` CHANGE `idEvenement` `idEvenement` INT( 10 ) UNSIGNED NOT NULL AUTO_INCREMENT  ;
SET SQL_MODE='';
delimiter //
CREATE TRIGGER trig_historique_evenement_update
BEFORE UPDATE ON evenements FOR EACH ROW
  BEGIN
    SET NEW.dateCreationEvenement = NOW();
    INSERT INTO histori

      ( idEvenement ,
	idTypeStructure,
	idTypeEvenement,
	idUtilisateur,
	idSource,
	idEvenementRecuperationTitre,
	idImagePrincipale,
	titre,
	description,
	dateDebut,
	isDateDebutEnviron,
	dateFin,
	dateCreationEvenement, 
	nbEtages,
	ISMH,
	MH,
	numeroArchive,
	parent)
    VALUES
      (
      
	NEW.idEvenement ,
	NEW.idTypeStructure,
	NEW.idTypeEvenement,
	NEW.idUtilisateur,
	NEW.idSource,
	NEW.idEvenementRecuperationTitre,
	NEW.idImagePrincipale,
	NEW.titre,
	NEW.description,
	NEW.dateDebut,
	NEW.isDateDebutEnviron,
	NEW.dateFin,
	NEW.dateCreationEvenement, 
	NEW.nbEtages,
	NEW.ISMH,
	NEW.MH,
	NEW.numeroArchive,
	NEW.parent
      );
  END;
//
delimiter ;
delimiter //
CREATE TRIGGER trig_historique_evenement_insert
AFTER INSERT ON evenements FOR EACH ROW
  BEGIN
    INSERT INTO historiqueEvenement
      ( idEvenement ,
	idTypeStructure,
	idTypeEvenement,
	idUtilisateur,
	idSource,
	idEvenementRecuperationTitre,
	idImagePrincipale,
	titre,
	description,
	dateDebut,
	isDateDebutEnv
SET ECHO ON
SET VERIFY OFF
connect "SYS"/"change_me" as SYSDBA
startup nomount;
spool /tmp/orainstall/dbcreation.log append
CREATE DATABASE edie
   USER SYS IDENTIFIED BY change_me
   USER SYSTEM IDENTIFIED BY change_me
   MAXLOGHISTORY 1
   MAXLOGFILES 16
   MAXLOGMEMBERS 3
   MAXDATAFILES 1024
   CHARACTER SET AL32UTF8
   NATIONAL CHARACTER SET AL16UTF16
   EXTENT MANAGEMENT LOCAL
   DATAFILE '/u01/app/oracle/oradata/edie/system01.dbf'
     SIZE 700M REUSE AUTOEXTEND ON NEXT 10240K MAXSIZE UNLIMITED
   SYSAUX DATAFILE '/u01/app/oracle/oradata/edie/sysaux01.dbf'
     SIZE 550M REUSE AUTOEXTEND ON NEXT 10240K MAXSIZE UNLIMITED
   DEFAULT TABLESPACE users
      DATAFILE '/u01/app/oracle/oradata/edie/users01.dbf'
      SIZE 500M REUSE AUTOEXTEND ON MAXSIZE UNLIMITED
   DEFAULT TEMPORARY TABLESPACE tempts1
      TEMPFILE '/u01/app/oracle/oradata/edie/temp01.dbf'
      SIZE 20M REUSE AUTOEXTEND ON NEXT 640K MAXSIZE UNLIMITED
   UNDO TABLESPACE undotbs1
      DATAFILE '/u01/app/oracle/orada
CREATE OR REPLACE VIEW T_ACC_SLIP_BODY
AS 
SELECT
	a.SLIP_ID ,
	a.SLIP_IDSEQ ,
	a.MAKE_SLIPLINE ,
	a.ACC_CODE ,
	a.DB_AMT ,
	a.CR_AMT ,
	a.SUMMARY_CODE ,
	a.TAX_COMP_CODE ,
	a.COMP_CODE ,
	a.DEPT_CODE ,
	a.CLASS_CODE ,
	a.VAT_CODE ,
	a.VAT_DT ,
	a.SUPAMT ,
	a.VATAMT ,
	a.CUST_SEQ ,
	a.CUST_NAME ,
	a.BANK_CODE ,
	a.ACCNO ,
	a.RESET_SLIP_ID ,
	a.RESET_SLIP_IDSEQ,
	a.MAKE_COMP_CODE,
	a.MAKE_DEPT_CODE,
	a.MAKE_DT,
	a.KEEP_DT,
	a.ORG_SLIP_ID,
	a.ORG_SLIP_IDSEQ,
	a.BRAIN_GRP_SEQ,
	a.BRAIN_SLIP_SEQ1,
	a.BRAIN_SLIP_SEQ2 ,
	a.BRAIN_SLIP_LINE,
	a.BRAIN_SORT_SEQ,
	a.BRAIN_ACC_POSITION,
	a.SLIP_KIND_TAG,
	a.TRANSFER_TAG,
	a.IGNORE_SET_RESET_TAG,
	b.CRTUSERNO,
	b.CRTDATE,
	b.MODUSERNO,
	b.MODDATE,
	b.SUMMARY1 ,
	b.SUMMARY2 ,
	b.CARD_SEQ,
	b.CHK_NO ,
	b.BILL_NO ,
	b.REC_BILL_NO ,
	b.CP_NO ,
	b.SECU_NO ,
	b.LOAN_NO ,
	b.LOAN_REFUND_NO ,
	b.LOAN_REFUND_SEQ ,
	b.DEPOSIT_ACCNO ,
	b.PAYMENT_SEQ ,
	b.PAY_CON_CASH ,
	b.PAY_CON_BILL ,
	b.PAY_CON_BILL_DT ,
	b.PAY_CON_BILL_DAYS ,
	b.EMP_NO ,
	b.ANTICIPATION_D

	b.MNG_ITEM_CHAR1 ,
	b.MNG_ITEM_CHAR2 ,
	b.MNG_ITEM_CHAR3 ,
	b.MNG_ITEM_CHAR4 ,
	b.MNG_ITEM_NUM1 ,
	b.MNG_ITEM_NUM2 ,
	b.MNG_ITEM_NUM3 ,
	b.MNG_ITEM_NUM4 ,
	b.MNG_ITEM_DT1 ,
	b.MNG_ITEM_DT2 ,
	b.MNG_ITEM_DT3 ,
	b.MNG_ITEM_DT4 ,
	b.FIX_ASSET_SEQ
FROM	T_ACC_SLIP_BODY1 a,
		T_ACC_SLIP_BODY2 b
WHERE	a.SLIP_ID = b.SLIP_ID
AND		a.SLIP_IDSEQ = b.SLIP_IDSEQ;
CREATE OR REPLACE TRIGGER "ERPW".T_ACC_SLIP_BODY_trg
Instead OF INSERT OR UPDATE OR DELETE ON T_ACC_SLIP_BODY
FOR EACH ROW
BEGIN
	IF INSERTING THEN
		INSERT INTO T_ACC_SLIP_BODY1
		(
			SLIP_ID,
			SLIP_IDSEQ,
			MAKE_SLIPLINE,
			ACC_CODE,
			DB_AMT,
			CR_AMT,
			SUMMARY_CODE,
			TAX_COMP_CODE,
			COMP_CODE,
			DEPT_CODE,
			CLASS_CODE,
			VAT_CODE,
			VAT_DT,
			SUPAMT,
			VATAMT,
			CUST_SEQ,
			CUST_NAME,
			BANK_CODE,
			ACCNO,
			RESET_SLIP_ID,
			RESET_SLIP_IDSEQ,
			ORG_SLIP_ID,
			ORG_SLIP_IDSEQ,
			BRAIN_GRP_SEQ,
			BRAIN_SLIP_SEQ1,
			BRAIN_SLIP_SEQ2,
			BRAIN_SLIP_LINE,
			BRAIN_SORT_SEQ,
			BRAIN_ACC_POSITION
		)
		VALUES
		

			:NEW.SLIP_ID,
			:NEW.SLIP_IDSEQ,
			:NEW.MAKE_SLIPLINE,
			:NEW.ACC_CODE,
			NVL(:NEW.DB_AMT,0),
			NVL(:NEW.CR_AMT,0),
			:NEW.SUMMARY_CODE,
			:NEW.TAX_COMP_CODE,
			:NEW.COMP_CODE,
			:NEW.DEPT_CODE,
			:NEW.CLASS_CODE,
			:NEW.VAT_CODE,
			:NEW.VAT_DT,
			NVL(:NEW.SUPAMT,0),
			NVL(:NEW.VATAMT,0),
			:NEW.CUST_SEQ,
			:NEW.CUST_NAME,
			:NEW.BANK_CODE,
			:NEW.ACCNO,
			:NEW.RESET_SLIP_ID,
			:NEW.RESET_SLIP_IDSEQ,
			:NEW.ORG_SLIP_ID,
			:NEW.ORG_SLIP_IDSEQ,
			:NEW.BRAIN_GRP_SEQ,
			:NEW.BRAIN_SLIP_SEQ1,
			:NEW.BRAIN_SLIP_SEQ2,
			:NEW.BRAIN_SLIP_LINE,
			:NEW.BRAIN_SORT_SEQ,
			:NEW.BRAIN_ACC_POSITION
		);
		INSERT INTO T_ACC_SLIP_BODY2
		(
			SLIP_ID,
			SLIP_IDSEQ,
			CRTUSERNO,
			CRTDATE,
			MODUSERNO,
			MODDATE,
			SUMMARY1,
			SUMMARY2,
			CARD_SEQ,
			CHK_NO,
			BILL_NO,
			REC_BILL_NO,
			CP_NO,
			SECU_NO,
			LOAN_NO,
			LOAN_REFUND_NO,
			LOAN_REFUND_SEQ,
			DEPOSIT_ACCNO,
			PAYMENT_SEQ,
			PAY_CON_CASH,
			PAY_CON_BILL,
			PAY_CON_BILL_DT,
			PAY_CON_BILL_DAYS
# --- Created by Ebean DDL
# To stop Ebean DDL generation, remove this comment and start using Evolutions
# --- !Ups
create table email_user_model (
  email                     varchar(255) not null,
  password                  varchar(255),
  salt                      varchar(255),
  user_id                   bigint,
  email_confirm             boolean,
  constraint pk_email_user_model primary key (email))
create table page_model (
  url                       varchar(255) not null,
  last_update               timestamp not null,
  constraint pk_page_model primary key (url))
create table role_model (
  id                        varchar(255) not null,
  title                     varchar(255),
  description               TEXT,
  last_update               timestamp not null,
  constraint pk_role_model primary key (id))
create table system_property_model (
  name                      varchar(255) not null,
  value                     varchar(255),
  description               TEXT,
  last_u

  constraint pk_system_property_model primary key (name))
create table user_model (
  id                        bigint not null,
  name                      varchar(255),
  surname                   varchar(255),
  birth_date                timestamp,
  phone                     varchar(255),
  gender                    boolean,
  is_active                 boolean,
  last_update               timestamp not null,
  constraint pk_user_model primary key (id))
create table page_model_role_model (
  page_model_url                 varchar(255) not null,
  role_model_id                  varchar(255) not null,
  constraint pk_page_model_role_model primary key (page_model_url, role_model_id))
create table user_model_role_model (
  user_model_id                  bigint not null,
  role_model_id                  varchar(255) not null,
  constraint pk_user_model_role_model primary key (user_model_id, role_model_id))
create sequence email_user_model_seq;
create sequence page_model_seq;
create sequ

create sequence system_property_model_seq;
create sequence user_model_seq;
alter table email_user_model add constraint fk_email_user_model_user_1 foreign key (user_id) references user_model (id);
create index ix_email_user_model_user_1 on email_user_model (user_id);
alter table page_model_role_model add constraint fk_page_model_role_model_page_01 foreign key (page_model_url) references page_model (url);
alter table page_model_role_model add constraint fk_page_model_role_model_role_02 foreign key (role_model_id) references role_model (id);
alter table user_model_role_model add constraint fk_user_model_role_model_user_01 foreign key (user_model_id) references user_model (id);
alter table user_model_role_model add constraint fk_user_model_role_model_role_02 foreign key (role_model_id) references role_model (id);
# --- !Downs
drop table if exists email_user_model cascade;
drop table if exists page_model cascade;
drop table if exists page_model_role_model cascade;
drop table if exists role
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `guild_bank_right`;
CREATE TABLE `guild_bank_right` (
  `guildid` int(10) unsigned NOT NULL DEFAULT '0',
  `TabId` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `rid` tinyint(1) unsigned NOT NULL DEFAULT '0',
  `gbright` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `SlotPerDay` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`guildid`,`TabId`,`rid`),
  KEY `guildid_key` (`guildid

) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `guild_bank_right` WRITE;
/*!40000 ALTER TABLE `guild_bank_right` DISABLE KEYS */;
INSERT INTO `guild_bank_right` VALUES (1,0,0,0,0),(1,0,1,191,2097087),(1,0,2,0,0),(1,0,3,0,0),(1,0,4,0,0),(1,1,0,0,0),(1,1,1,191,2097087),(1,1,2,0,0),(1,1,3,0,0),(1,1,4,0,0),(1,2,0,0,0),(1,2,1,191,2097087),(1,2,2,0,0),(1,2,3,0,0),(1,2,4,0,0),(1,3,0,0,0),(1,3,1,191,2097087),(1,3,2,0,0),(1,3,3,0,0),(1,3,4,0,0),(1,4,0,0,0),(1,4,1,191,2097087),(1,4,2,0,0),(1,4,3,0,0),(1,4,4,0,0),(1,5,0,0,0),(1,5,1,191,2097087),(1,5,2,0,0),(1,5,3,0,0),(1,5,4,0,0),(1,7,1,1,0);
/*!40000 ALTER TABLE `guild_bank_right` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET C
-- MySQL dump 10.13  Distrib 5.6.10, for Win32 (x86)
--
-- Host: localhost    Database: f2e
-- ------------------------------------------------------
-- Server version	5.6.10
--
-- Table structure for table `append`
--
DROP TABLE IF EXISTS `append`;
CREATE TABLE `append` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `topic_id` int(11) DEFAULT NULL,
  `author_id` int(11) DEFAULT NULL,
  `content` text,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--
-- Table structure for table `blocked`
--
DROP TABLE IF EXISTS `blocked`;
CREATE TABLE `blocked` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `involved_user_id` int(11) DEFAULT NULL,
  `involved_topic_id` int(11) DEFAULT NULL,
  `trigger_user_id` int(11) DEFAULT NULL,
  `status` int(1) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `reason` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--
-- Table structure for table `favorite`
--
DROP TABLE IF EXISTS `favorite`;
CREATE TAB

  `id` int(11) NOT NULL AUTO_INCREMENT,
  `owner_user_id` int(11) DEFAULT NULL,
  `involved_type` int(11) DEFAULT NULL,
  `involved_topic_id` int(11) DEFAULT NULL,
  `involved_reply_id` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--
-- Table structure for table `image`
--
DROP TABLE IF EXISTS `image`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `image` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` text,
  `description` text,
  `owner_id` int(11) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `update` datetime DEFAULT NULL,
  `like_count` int(11) DEFAULT NULL,
  `waterfall` int(1) DEFAULT NULL,
  `authority` int(1) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DELIMITER ;;
CREATE TRIGGER `f2e`.`image_delete_trigger`
BEFORE DELETE ON `f2e`.`image`
FOR EACH ROW
BEGIN
        DELETE FROM notification WHERE 

        DELETE FROM imglike WHERE imglike.involved_image_id = OLD.id;
    END ;;
DELIMITER ;
--
-- Table structure for table `imglike`
--
DROP TABLE IF EXISTS `imglike`;
CREATE TABLE `imglike` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `owner_user_id` int(11) DEFAULT NULL,
  `involved_image_id` int(11) DEFAULT NULL,
  `trigger_user_id` int(11) DEFAULT NULL,
  `occurrence_time` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--
-- Table structure for table `node`
--
DROP TABLE IF EXISTS `node`;
CREATE TABLE `node` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` text,
  `slug` text,
  `thumb` text,
  `introduction` text,
  `created` text,
  `updated` text,
  `plane_id` int(11) DEFAULT NULL,
  `topic_count` int(11) DEFAULT NULL,
  `custom_style` text,
  `limit_reputation` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--
-- Table structure for table `notification`
--
DROP TABLE IF EXISTS `notification`;
CREATE TABLE 
insert into hotel (id, name) values (1, 'Orion');
insert into hotel (id, name) values (2, 'Taj');
insert into department (id, name, hotel_id) values (1, 'Food', 1);
insert into department (id, name, hotel_id) values (2, 'Travel', 1);
insert into department (id, name, hotel_id) values (3, 'Hospitality', 1)
insert into department (id, name, hotel_id) values (4, 'Food', 2);
insert into touch_point(id, name,  department_id) values(1, 'Dining',  1);
insert into touch_point(id, name,  department_id) values(2, 'Kitchen', 1);
insert into touch_point(id, name,  department_id) values(3, 'Parking', 2);
insert into touch_point(id, name,  department_id) values(4, 'Reception', 3);
insert into user_status (id, value) values (1,'disable');
insert into user_status (id, value) values (2,'enable');
insert into user_type (id, value) values (1, 'ROLE_ADMIN');
insert into user_type (id, value) values (2, 'ROLE_MANAGER');
insert into user_type (id, value) values (3, 'ROLE_STAFF');
insert into  user(id, user_

                  values( 1,  'manmay', 'secret',   'Manmay', 'Mohanty',               1,            1,        1);
insert into  user(id, user_name, password, first_name, last_name, user_status_id , user_type_id, hotel_id)
                  values( 2, 'mrunmay', 'secret',  'Mrunmay', 'Mohanty',               2,            1,        1);
insert into  user(id, user_name, password, first_name, last_name, user_status_id , user_type_id, hotel_id)
                  values( 3, 'santosh', 'secret',  'Santosh', 'Kunatha',               2,           3,         1);
insert into  user(id, user_name, password, first_name, last_name, user_status_id , user_type_id, hotel_id)
                  values( 4, 'subhash', 'secret',  'Subhash',    'Goel',               2,            2,        1);
insert into user_departments (uid, did) values (1,1);
insert into user_departments (uid, did) values (1,2);
insert into user_departments (uid, did) values (1,3);
insert into user_departments (uid, did) values (2,1);
in

insert into user_touch_points (uid, tid) values (1, 1);
insert into user_touch_points (uid, tid) values (1, 3);
insert into user_touch_points (uid, tid) values (2, 3);
insert into itcs_system_zone (id, zone_id, zone_name) values (1,1,'Dining');
insert into itcs_system_zone (id, zone_id, zone_name) values (2,2,'Kitchen');
insert into itcs_system_zone (id, zone_id, zone_name) values (3,3,'Parking');
insert into itcs_system_zone (id, zone_id, zone_name) values (4,4,'Reception');
insert into itcs_tag_read (id, guest_card, zone_id, x_coord_read, y_coord_read, tag_read_datetime) values (1, 1000, 1, 1.1, 1.2, '2010-04-01 00:03:10');
insert into itcs_tag_read (id, guest_card, zone_id, x_coord_read, y_coord_read, tag_read_datetime) values (2, 1000, 1, 2.1, 3.2, '2010-04-01 00:03:18');
insert into itcs_tag_read (id, guest_card, zone_id, x_coord_read, y_coord_read, tag_read_datetime) values (3, 1000, 1, 1.1, 4.2, '2010-04-01 00:03:20');
insert into itcs_tag_read (id, guest_card, zone_id, x_coord
# These data are a subset http://0-www.ncbi.nlm.nih.gov.elis.tmu.edu.tw/geo/query/acc.cgi?acc=GSE27619 from GEO, specifically:
# GSM721116, GSM721117, GSM721118, GSM721119, GSM721123, GSM721124
## LNCaP and PrEC are the names of prostate cancer cell lines used in this GEO dataset
## As you may have noticed, any lines starting with a hash (`#') are ignored 
## This file is based on the columns, so if you add extraneous columns, they will not be read into the program (ie you can add comments)
####
# This is a tab-delimited file, with the following columns:
# bam_prefix	id	group	gender	read_type	strandedness
## id = (user-defined, could be anything)
## group = (user-defined, could be anything)
## gender = male --or-- female
## read_type = single_read --or-- paired_end
## strandedness = whether the cDNA library preparation was strand-specific or not. values = "strand_specific" --or-- "not_strand_specific"
test-data/GSM721117_mctp_20F0GAAXX_1_chr9_withheader	LNCaP_1	LNCaP	male	single_read	n
TRUNCATE TABLE KSST_REQ_COM_FIELD_TYPE DROP STORAGE
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','CLU identifier','kuali.reqComponent.field.type.clu.id','CLU Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','CLU set identifier','kuali.reqComponent.field.type.cluSet.id','CLU Set Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Course CLU identifier','kuali.reqComponent.field.type.course.clu.id','Course CLU Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Course CLU set identifier','kuali.reqComponent.field.type.course.cluSet.id','Course CLU Set Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Duration value','kuali.reqComponent.field.type.duration','Duration Value',0,0)
INSERT INTO KSST_REQ_COM_FIEL

  VALUES ('string','Duration type identifier','kuali.reqComponent.field.type.durationType.id','Duration Type Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Grade point average value','kuali.reqComponent.field.type.gpa','Grade Point Average Value',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Grade value identifier','kuali.reqComponent.field.type.grade.id','Grade Value Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Grade type identifier','kuali.reqComponent.field.type.gradeType.id','Grade Type Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Relational Operator','kuali.reqComponent.field.type.operator','Relational Operator',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Organization identif

INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Person identifier','kuali.reqComponent.field.type.person.id','Person Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Program CLU identifier','kuali.reqComponent.field.type.program.clu.id','Program CLU Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Program CLU set identifier','kuali.reqComponent.field.type.program.cluSet.id','Program CLU Set Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Test CLU identifier','kuali.reqComponent.field.type.test.clu.id','Test CLU Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYPE,DESCR,ID,NAME,READ_ONLY,VER_NBR)
  VALUES ('string','Test CLU set identifier','kuali.reqComponent.field.type.test.cluSet.id','Test CLU Set Id',0,0)
INSERT INTO KSST_REQ_COM_FIELD_TYPE (DATA_TYP
drop view AREA_STATEINPUT_PARAM;
drop view ADDAREATYPE_LNS;
drop view ADDAREATYPE2010;
drop view AGREGION;
drop view AGREGION2008;
drop view AGREGION2009;
drop view AGREGION2010;
drop view AREA_STATEHANDBOOK_PARAM;
drop view AREA2008;
drop view AREA2009;
drop view AREA2010;
drop view AREAADDSUB2010;
drop view AREACODE2008;
drop view AREACODE2009;
drop view AREACODE2010;
drop view AREACENSUS2010;
drop view AREACENSUSQUERY;
drop view AREADECENNIAL2010;
drop view AREARELATION2010;
drop view AREATITLE2008;
drop view AREATITLE2009;
drop view AREATITLE2010;
drop view AREATYPE2008;
drop view AREATYPE2009;
drop view AREATYPE2010;
drop materialized view COMPONENTAREA;
drop view METHOD2008;
drop view METHOD2009;
drop view METHOD2010;
drop view NONCLAUSEDIT_TEST;
drop view TEMP_ADDAREATYPE;
drop view QDECOUNTY;
drop view QDECOUNTY_NO;
drop view QDECNTYADDINFO;
drop view QDECNTYADDINFO_NO;
drop view QDECOUNTYCALC;
drop view QDECOUNTYCALC_NO;
drop view QDECOUNTYTEST;
drop table TEMP_QDECOUNTY;  
dr

drop view QDELMA_NO;
drop view QDELMAADDINFO;
drop view QDELMAADDINFO_NO;
drop view QDELMACALC;
drop view QDELMACALC_NO;
drop view RESIDENCYRATIO2010;
drop view ADDAREATYPE2011;
drop view AGREGION2011;
drop view AREA2011;
drop view AREAADDSUB2011;
drop view AREACODE2011;
drop view AREACENSUS2011;
drop view AREADECENNIAL2011;
drop view AREARELATION2011;
drop view AREATITLE2011;
drop view AREATYPE2011;
drop view METHOD2011;
drop view RESIDENCYRATIO2011;
drop view ADDAREATYPE2012;
drop view AGREGION2012;
drop view AREA2012;
drop view AREAADDSUB2012;
drop view AREACODE2012;
drop view AREACENSUS2012;
drop view AREADECENNIAL2012;
drop view AREARELATION2012;
drop view AREATITLE2012;
drop view AREATYPE2012;
drop view METHOD2012;
drop view RESIDENCYRATIO2012;
drop view ADDAREATYPE2013;
drop view AGREGION2013;
drop view AREA2013;
drop view AREAADDSUB2013;
drop view AREACODE2013;
drop view AREACENSUS2013;
drop view AREADECENNIAL2013;
drop view AREARELATION2013;
drop view AREATITLE2013;
drop view
/*
三角数の数列は自然数の和で表わされ, 7番目の三角数は 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28 である. 三角数の最初の10項は:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
となる.
最初の7項について, その約数を列挙すると, 以下のとおり.
 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
これから, 7番目の三角数である28は, 6個以上の約数をもつ最初の三角数であることが分かる.
では, 500個以上の約数をもつ最初の三角数はいくつか.
http://odz.sakura.ne.jp/projecteuler/index.php?cmd=read&page=Problem%2012
*/
WITH RECURSIVE temp(n,z,prime,list,e) AS (
SELECT
  1
  , 1
  , 2
  , ARRAY[1]::int[]
  , 1::double precision
UNION ALL
SELECT
  (CASE n WHEN 1 THEN 2 ELSE (CASE z WHEN 1 THEN n+1 ELSE n END) END)
  , (CASE z WHEN 1 THEN n+1 ELSE
      (CASE WHEN z%prime=0 THEN z/prime ELSE z END)
    END)
  , (CASE z WHEN 1 THEN 2 ELSE
      (CASE WHEN z%prime=0
        THEN prime
        ELSE (CASE prime WHEN 2 THEN 3 ELSE prime+2 END)
      END)
    END)
  , (CASE z WHEN 1 THEN ARRAY[]::int[] ELSE
      (CASE WHEN z%prime=0
        THEN array_append(list,prime)
        ELSE list
      END)
    END)
  , (CASE WHEN
-- MySQL dump 10.14  Distrib 5.5.36-MariaDB, for Linux (x86_64)
--
-- Host: 104.130.221.139    Database: pantheon
-- ------------------------------------------------------
-- Server version	5.5.41-MariaDB-log
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
--
-- Dumping routines for database 'pantheon'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40
select xt.create_view('xt.invciteminfo', $$
  select
    invcitem_id,
    invcitem_invchead_id ,
    invcitem_linenumber,
    invcitem_item_id,
    invcitem_warehous_id,
    invcitem_custpn,
    invcitem_number,
    invcitem_descrip,
    invcitem_ordered,
    invcitem_billed,
    invcitem_custprice,
    invcitem_price,
    invcitem_notes,
    invcitem_salescat_id,
    invcitem_taxtype_id,
    invcitem_qty_uom_id,
    invcitem_qty_invuomratio,
    invcitem_price_uom_id,
    invcitem_price_invuomratio,
    invcitem_coitem_id ,
    invcitem_updateinv,
    invcitem_rev_accnt_id,
    invcitem.obj_uuid,
    case when invcitem_item_id = -1 then true else false end as invcitem_is_misc,
    invcitem_billed * invcitem_qty_invuomratio
      * (invcitem_price / invcitem_price_invuomratio) as invcitem_ext_price,
    sum(taxhist_tax) as invcitem_tax_total
  from invcitem
  left join invcitemtax on invcitem_id = taxhist_parent_id
  group by
    invcitem_id,
    invcitem_invchead_id ,
    invcitem_lin

    invcitem_item_id,
    invcitem_warehous_id,
    invcitem_custpn,
    invcitem_number,
    invcitem_descrip,
    invcitem_ordered,
    invcitem_billed,
    invcitem_custprice,
    invcitem_price,
    invcitem_notes,
    invcitem_salescat_id,
    invcitem_taxtype_id,
    invcitem_qty_uom_id,
    invcitem_qty_invuomratio,
    invcitem_price_uom_id,
    invcitem_price_invuomratio,
    invcitem_coitem_id ,
    invcitem_updateinv,
    invcitem_rev_accnt_id,
    invcitem.obj_uuid
$$, false);
create or replace rule "_INSERT" as on insert to xt.invciteminfo do instead
insert into invcitem (
  invcitem_id,
  invcitem_invchead_id,
  invcitem_linenumber,
  invcitem_item_id,
  invcitem_warehous_id,
  invcitem_custpn,
  invcitem_number,
  invcitem_descrip,
  invcitem_ordered,
  invcitem_billed,
  invcitem_custprice,
  invcitem_price,
  invcitem_notes,
  invcitem_salescat_id,
  invcitem_taxtype_id,
  invcitem_qty_uom_id,
  invcitem_qty_invuomratio,
  invcitem_price_uom_id,
  invcitem_price_invuo

  invcitem_coitem_id,
  invcitem_updateinv,
  invcitem_rev_accnt_id,
  obj_uuid
) values (
  new.invcitem_id,
  new.invcitem_invchead_id,
  new.invcitem_linenumber,
  new.invcitem_item_id,
  new.invcitem_warehous_id,
  new.invcitem_custpn,
  new.invcitem_number,
  new.invcitem_descrip,
  new.invcitem_ordered,
  new.invcitem_billed,
  new.invcitem_custprice,
  new.invcitem_price,
  new.invcitem_notes,
  new.invcitem_salescat_id,
  new.invcitem_taxtype_id,
  new.invcitem_qty_uom_id,
  new.invcitem_qty_invuomratio,
  new.invcitem_price_uom_id,
  new.invcitem_price_invuomratio,
  new.invcitem_coitem_id,
  new.invcitem_updateinv,
  new.invcitem_rev_accnt_id,
  new.obj_uuid
);
create or replace rule "_UPDATE" as on update to xt.invciteminfo do instead
update invcitem set
  invcitem_id = new.invcitem_id,
  invcitem_invchead_id = new.invcitem_invchead_id,
  invcitem_linenumber = new.invcitem_linenumber,
  invcitem_item_id = new.invcitem_item_id,
  invcitem_warehous_id = new.invcitem_warehous_
select  *
--INTO #tempTenants
from (select rank() over(partition by new_buildingidName order by new_buildingidName, count(New_incidentnumber) desc) Ranks
            ,new_buildingidName BuildingName
                     ,a.Name Name
                     ,SUM(CASE WHEN (i.CreatedOn > GETDATE() -90) THEN 1 ELSE 0 END) AS WO90Days
                     ,SUM(CASE WHEN (i.CreatedOn > GETDATE() -60) THEN 1 ELSE 0 END) AS WO60Days
                     ,SUM(CASE WHEN (i.CreatedOn > GETDATE() -30) THEN 1 ELSE 0 END) AS WO30Days
                     , Count(*) CountAll
                     ,b.new_buildingid
         from Incident i join Account a on i.AccountId = a.AccountId join New_buildingproperty b on b.New_buildingpropertyId=i.new_buildingid
         where i.CreatedOn >  GETDATE() -120
                     and i.SubjectIdName = 'Service Request'
                     and Name != 'General Building Maintenance'
                     --and b.new_buildingid ='087301'
                     --and new

                     --and @BuildingID=b.New_BuildingID --Parameter to use in code
         group by new_buildingidName,a.Name,b.new_buildingid) a
ORDER BY CountAll desc
--where s.ranks <= 5
SELECT  * FROM #tempTenants
--SELECT new_buildingid, BuildingName, Name, Ranks, WO90Days, WO60Days, WO30Days, CountAll
--INTO MREGDEVSQL2008.UNITED.dbo.[tblCRMBuildingTenants]
--FROM #tempTenants
select  new_buildingid, BuildingName, Name, Ranks, WO90Days, WO60Days, WO30Days, CountAll
from (select rank() over(partition by new_buildingidName order by new_buildingidName, count(New_incidentnumber) desc) Ranks
            ,new_buildingidName BuildingName
                     ,a.Name Name
                     ,SUM(CASE WHEN (i.CreatedOn > GETDATE() -90) THEN 1 ELSE 0 END) AS WO90Days
                     ,SUM(CASE WHEN (i.CreatedOn > GETDATE() -60) THEN 1 ELSE 0 END) AS WO60Days
                     ,SUM(CASE WHEN (i.CreatedOn > GETDATE() -30) THEN 1 ELSE 0 END) AS WO30Days
                     , Count
  --Account View
SELECT dropIfExists('VIEW', 'account', 'api');
  CREATE OR REPLACE VIEW api.account AS
  SELECT 
    c.crmacct_number::varchar AS account_number,
    p.crmacct_number AS parent_account,
    c.crmacct_name AS account_name,
    c.crmacct_active AS active,
    CASE WHEN (c.crmacct_type='O') THEN
      'Organization'
    ELSE 'Individual'
    END AS type,
    pc.cntct_number AS primary_contact_number,
    pc.cntct_honorific AS primary_contact_honorific,
    pc.cntct_first_name AS primary_contact_first,
    pc.cntct_middle AS primary_contact_middle,
    pc.cntct_last_name AS primary_contact_last,
    pc.cntct_suffix AS primary_contact_suffix,
    pc.cntct_title AS primary_contact_job_title,
    pc.cntct_phone AS primary_contact_voice,
    pc.cntct_fax AS primary_contact_fax,
    pc.cntct_email AS primary_contact_email,
    (''::TEXT) AS primary_contact_change,
    m.addr_number AS primary_contact_address_number,
    m.addr_line1 AS primary_contact_address1,
    m.addr_line2

    m.addr_line3 AS primary_contact_address3,
    m.addr_city AS primary_contact_city,
    m.addr_state AS primary_contact_state,
    m.addr_postalcode AS primary_contact_postalcode,
    m.addr_country AS primary_contact_country,
    (''::TEXT) AS primary_contact_address_change,
    sc.cntct_number AS secondary_contact_number,
    sc.cntct_honorific AS secondary_contact_honorific,
    sc.cntct_first_name AS secondary_contact_first,
    sc.cntct_middle AS secondary_contact_middle,
    sc.cntct_last_name AS secondary_contact_last,
    sc.cntct_suffix AS secondary_contact_suffix,
    sc.cntct_title AS secondary_contact_job_title,
    sc.cntct_phone AS secondary_contact_voice,
    sc.cntct_fax AS secondary_contact_fax,
    sc.cntct_email AS secondary_contact_email,
    sc.cntct_webaddr AS secondary_contact_web,
    (''::TEXT) AS secondary_contact_change,
    s.addr_number AS secondary_contact_address_number,
    s.addr_line1 AS secondary_contact_address1,
    s.addr_line2 AS secondary_con

    s.addr_line3 AS secondary_contact_address3,
    s.addr_city AS secondary_contact_city,
    s.addr_state AS secondary_contact_state,
    s.addr_postalcode AS secondary_contact_postalcode,
    s.addr_country AS secondary_contact_country,
    (''::TEXT) AS secondary_contact_address_change,
    c.crmacct_notes AS notes
  FROM
    crmacct() c
      LEFT OUTER JOIN crmacct p ON (c.crmacct_id=p.crmacct_parent_id)
      LEFT OUTER JOIN cntct pc ON (c.crmacct_cntct_id_1=pc.cntct_id)
      LEFT OUTER JOIN addr m ON (pc.cntct_addr_id=m.addr_id)
      LEFT OUTER JOIN cntct sc ON (c.crmacct_cntct_id_2=sc.cntct_id)
      LEFT OUTER JOIN addr s ON (sc.cntct_addr_id=s.addr_id);
GRANT ALL ON TABLE api.account TO xtrole;
COMMENT ON VIEW api.account IS 'Account';
--Rules
CREATE OR REPLACE RULE "_INSERT" AS
    ON INSERT TO api.account DO INSTEAD
INSERT INTO crmacct
	(crmacct_number,
         crmacct_parent_id,
         crmacct_name,
         crmacct_active,
         crmacct_type,
         crmacct_cn
-- phpMyAdmin SQL Dump
-- version 4.5.3.1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Feb 14, 2016 at 10:24 PM
-- Server version: 5.6.28-0ubuntu0.15.10.1
-- PHP Version: 5.6.11-1ubuntu3.1
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";
--
-- Database: `felicity_contestdb`
--
-- --------------------------------------------------------
--
-- Table structure for table `ttt_payment_dump`
--
CREATE TABLE `ttt_payment_dump` (
  `id` int(11) NOT NULL,
  `nick` varchar(64) NOT NULL,
  `type` enum('callback','webhook') NOT NULL,
  `response` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
-- --------------------------------------------------------
--
-- Table structure for table `ttt_registrations`
--
CREATE TABLE `ttt_registrations` (
  `id` int(11) NOT NULL,
  `nick` varchar(64) NOT NULL,
  `contact_number` varchar(15) NOT NULL,
  `payment_status` enum('pending','failed','success') NOT NULL DEFAULT 'pending',
  `payment_id` varchar(100) DEFAU
/* cs_ticket.cpp */
SET @id = 742;
-- Update command table with new RBAC permissions
UPDATE `command` SET `permission` = @id+0 WHERE `name` = 'ticket';
UPDATE `command` SET `permission` = @id+1 WHERE `name` = 'ticket assign';
UPDATE `command` SET `permission` = @id+2 WHERE `name` = 'ticket close';
UPDATE `command` SET `permission` = @id+3 WHERE `name` = 'ticket closedlist';
UPDATE `command` SET `permission` = @id+4 WHERE `name` = 'ticket comment';
UPDATE `command` SET `permission` = @id+5 WHERE `name` = 'ticket complete';
UPDATE `command` SET `permission` = @id+6 WHERE `name` = 'ticket delete';
UPDATE `command` SET `permission` = @id+7 WHERE `name` = 'ticket escalate';
UPDATE `command` SET `permission` = @id+8 WHERE `name` = 'ticket escalatedlist';
UPDATE `command` SET `permission` = @id+9 WHERE `name` = 'ticket list';
UPDATE `command` SET `permission` = @id+10 WHERE `name` = 'ticket onlinelist';
UPDATE `command` SET `permission` = @id+11 WHERE `name` = 'ticket reset';
UPDATE `command`
INSERT INTO `ext_media_descriptors` VALUES (1,'.*youtube.*','<object width=\"###WIDTH###\" height=\"###HEIGHT###\"><param name=\"movie\" value=\"http://youtube.com/v/###URL###\" /><param name=\"wmode\" value=\"opaque\" /><embed src=\"http://youtube.com/v/###URL###\" type=\"application/x-shockwave-flash\" width=\"###WIDTH###\" height=\"###HEIGHT###\" wmode=\"opaque\"></embed></object>',385,'.*youtube.com/watch.*[\\?&]v=(.*)','youtube','http://youtube.com',480);
INSERT INTO `ext_media_descriptors` VALUES (2,'.*blip\\.tv.*','<embed src=\"http://blip.tv/play/###URL###\" type=\"application/x-shockwave-flash\" width=\"###WIDTH###\" height=\"###HEIGHT###\" allowscriptaccess=\"always\" allowfullscreen=\"true\" wmode=\"opaque\" ></embed>',385,'.*blip.tv/file/([0-9]+).*','blip.tv','http://blip.tv',480);
INSERT INTO `ext_media_descriptors` VALUES (3,'.*video\\.google.*','<embed id=\"VideoPlayback\" src=\"http://video.google.com/googleplayer.swf?docid=###URL###&hl=es&fs=true\" style=\"width:###WID

INSERT INTO `ext_media_descriptors` VALUES (4,'.*video\\.yahoo.*','<object width=\"###WIDTH###\" height=\"###HEIGHT###\"><param name=\"movie\" value=\"http://d.yimg.com/static.video.yahoo.com/yep/YV_YEP.swf?ver=2.2.30\" /><param name=\"allowFullScreen\" value=\"true\" /><param name=\"AllowScriptAccess\" VALUE=\"always\" /><param name=\"bgcolor\" value=\"#000000\" /><param name=\"flashVars\" value=\"id=###URL###&embed=1\" /><embed src=\"http://d.yimg.com/static.video.yahoo.com/yep/YV_YEP.swf?ver=2.2.30\" type=\"application/x-shockwave-flash\" width=\"###WIDTH###\" height=\"###HEIGHT###\" allowFullScreen=\"true\" AllowScriptAccess=\"always\" bgcolor=\"#000000\"  wmode=\"opaque\" flashVars=\"id=###URL###&embed=1\" ></embed></object>',322,'.*video.yahoo.com/watch/(.*)','yahoo video','http://video.yahoo.com/',512);
INSERT INTO `ext_media_descriptors` VALUES (5,'.*vimeo\\.com/.*','<object width=\"###WIDTH###\" height=\"###HEIGHT###\"><param name=\"allowfullscreen\" value=\"true\" /><param n
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE VIEW [dbo].[ViewPeople]
AS
SELECT        dbo.People.*
FROM            dbo.People
GO
EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfigurati

         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin 
DELIMITER ;;
CREATE TRIGGER `trig_femaster_delete` AFTER DELETE ON `ya_feecollectiontransaction`
FOR EACH ROW BEGIN
        IF OLD.gid > 0 THEN
                UPDATE ya_feecollectionmaster SET paidamount = paidamount-OLD.paidamount, paiddate=current_date, status=0 WHERE fcid=OLD.fcid AND cid=OLD.cid AND studentid=OLD.studentid AND gid = OLD.gid;
		INSERT INTO ya_feereceiptcancellation (id,`studentid`, `fcid`,  `cid`, `paiddate`,  `paidamount`,  `paymentmode`,  `bankname`, `chequeorddno`,  `chequeordddate`,  `receiptno`, `gid`) VALUES(OLD.id,OLD.studentid,OLD.fcid,OLD.cid,OLD.paiddate,OLD.paidamount,OLD.paymentmode,OLD.bankname,OLD.chequeorddno,OLD.chequeordddate,OLD.receiptno,OLD.gid);
        ELSE
                UPDATE ya_feecollectionmaster SET paidamount = paidamount-OLD.paidamount, paiddate=current_date, status=0 WHERE fcid=OLD.fcid AND cid=OLD.cid AND studentid=OLD.studentid;
		INSERT INTO ya_feereceiptcancellation (id,`studentid`, `fcid`,  `cid`, `paiddate`,  `paidamount`,  `pa
CREATE TABLE new_employees
	id_num int IDENTITY(1,1),
	fname varchar (20),
	minit char(1),
	lname varchar(30)
create index IX_Name
	on new_employees (lname, fname)
CREATE TABLE new_employeesnew
	id_num int NOT NULL,
	fname varchar (20),
	minit char(1),
	lname varchar(30)
create index IX_Name
	on new_employeesnew (lname, fname)
INSERT new_employees
	(fname, minit, lname)
VALUES
	('Karin', 'F', 'Josephs')
INSERT new_employees
	(fname, minit, lname)
VALUES
	('Pirkko', 'O', 'Koskitalo')
ALTER TABLE new_employees SWITCH TO new_employeesnew
select * from new_employees
select * from new_employeesnew
drop table new_employees
exec sp_rename 'new_employeesnew', 'new_employees', 'object'
select * from new_employees
select * from sys.indexes where object_id = object_id('new_employees')
/*
if exists(select * from sys.objects where name = 'new_employees')
drop table new_employees
if exists(select * from sys.objects where name = 'new_employeesnew')
drop table new_employeesnew
*/
exec sp_spaceused
sel
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `gm_subsurveys`;
CREATE TABLE `gm_subsurveys` (
  `surveyid` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `subsurveyid` int(10) unsigned NOT NULL DEFAULT '0',
  `rank` int(10) unsigned NOT NULL DEFAULT '0',
  `comment` text NOT NULL,
  PRIMARY KEY (`surveyid`,`subsurveyid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Player System';
LOCK TABLES `gm_subsurveys` WRITE;
/*!40000 ALTER
--liquibase formatted sql
--This is for the sparrow_dss schema
--logicalFilePath: changeLog14AddGeomViewSparrowDss.sql
--changeset lmurphy:addviewa
CREATE OR REPLACE FORCE VIEW SPARROW_DSS.MODEL_GEOM_25_VW
   SPARROW_MODEL_ID,
   MODEL_REACH_ID,
   IDENTIFIER,
   REACH_GEOM,
   CATCH_GEOM,
   WATERSHED_GEOM,
   REACH_SIZE,
   SOURCE
AS
   SELECT /*
             Note:  In this View, reaches which contain no geometry and are not related to a nominal reach are not returned.
             .
             The first query returns reaches which have no geometry at the model level (no entry in MODEL_REACH_GEOM),
             but do inherit geometry from the enhanced level (entry in STREAM_NETWORK.ENH_GEOM_VW).  It is possible, however, that the
             geometry in ENH_GEOM_VW or MODEL_REACH_GEOM may be null.
             */
         model.SPARROW_MODEL_ID AS SPARROW_MODEL_ID,
          model.MODEL_REACH_ID AS MODEL_REACH_ID,
          model.IDENTIFIER AS IDENTIFIER,
          enh.REACH_GEOM

          enh.CATCH_GEOM AS CATCH_GEOM,
          enh.WATERSHED_GEOM AS WATERSHED_GEOM,
          model.REACH_SIZE AS REACH_SIZE,
          'enhanced' source
     FROM    MODEL_REACH model
          INNER JOIN
             STREAM_NETWORK.ENH_GEOM_VW enh
          ON (model.ENH_REACH_ID = enh.ENH_REACH_ID)
    WHERE     model.MODEL_REACH_ID NOT IN
                 (SELECT MODEL_REACH_ID FROM MODEL_REACH_GEOM)
          AND model.sparrow_model_id = 25
   UNION ALL
   SELECT /*
          The second query returns reaches which have geometry at the model level (an entry in MODEL_REACH_GEOM)
          */
         model.SPARROW_MODEL_ID AS SPARROW_MODEL_ID,
          model.MODEL_REACH_ID AS MODEL_REACH_ID,
          model.IDENTIFIER AS IDENTIFIER,
          geo.REACH_GEOM AS REACH_GEOM,
          geo.CATCH_GEOM AS CATCH_GEOM,
          geo.WATERSHED_GEOM AS WATERSHED_GEOM,
          model.REACH_SIZE AS REACH_SIZE,
          'model' source
     FROM    MODEL_REACH model
          INNER JOIN
 
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE VIEW [dbo].[GetUnisonPeople]
WITH SchemaBinding
AS
SELECT
	dbo.People_LOB.People_ID,
	dbo.People_LOB.UnisonAgentID
FROM
	dbo.People_LOB
GO
EXEC sp_addextendedproperty N'MS_DiagramPane1', N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration =

      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End

   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "PEOPLE"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 239
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "People_LOB"
            Begin Extent = 
               Top = 6
               Left = 277
               Bottom = 125
               Right = 484
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350

/*
 MySQL File to create Schema for CI3-Navigation-Library
 Author: Daniel Waghorn
 www.daniel-waghorn.com
 Target Server Type    : MySQL
 Target Server Version : 50625
 File Encoding         : utf-8
 Date: 06/16/2015 11:48:52 AM
*/
SET NAMES utf8;
SET FOREIGN_KEY_CHECKS = 0;
-- ----------------------------
--  Table structure for `CI-Nav-InMenu`
-- ----------------------------
DROP TABLE IF EXISTS `CI-Nav-InMenu`;
CREATE TABLE `CI-Nav-InMenu` (
  `MenuID` int(11) DEFAULT NULL,
  `ItemID` int(11) DEFAULT NULL,
  `LinkWeight` int(11) DEFAULT '0',
  KEY `MenuID` (`MenuID`),
  KEY `ItemID` (`ItemID`),
  CONSTRAINT `ItemIDConst` FOREIGN KEY (`ItemID`) REFERENCES `CI-Nav-Items` (`ItemID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `MenuIDConst` FOREIGN KEY (`MenuID`) REFERENCES `CI-Nav-Menus` (`MenuID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
-- ----------------------------
--  Table structure for `CI-Nav-Items`
-- ----------------------------
DROP T
INSERT INTO tiki_score (event, score, expiration) VALUES ('forum_topic_post',10,0);
INSERT INTO tiki_score (event, score, expiration) VALUES ('forum_topic_reply',5,0);
INSERT INTO tiki_score (event, score, expiration) VALUES ('forum_post_read',1,0);
INSERT INTO tiki_score (event,score,expiration) VALUES ('forum_post_is_read',2,0);
INSERT INTO tiki_score (event, score, expiration) VALUES ('trackeritem_create',10,0);
INSERT INTO tiki_score (event, score, expiration) VALUES ('trackeritem_edit',5,0);
INSERT INTO tiki_score (event, score, expiration) VALUES ('trackeritem_read',1,0);
INSERT INTO tiki_score (event,score,expiration) VALUES ('trackeritem_is_read',2,0);
INSERT INTO tiki_score (event, score, expiration) VALUES ('tracker_field_entered',10,0);
INSERT INTO tiki_score (event, score, expiration) VALUES ('item_favorited',1,0);
INSERT INTO tiki_score (event, score, expiration) VALUES ('item_is_favorited',10,0);
INSERT INTO tiki_score (event,score,expiration) VALUES ('item_is_rated',10,0
﻿CREATE TABLE [Production].[ProductModelIllustration] (
  [ProductModelID] [int] NOT NULL,
  [IllustrationID] [int] NOT NULL,
  [ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelIllustration_ModifiedDate] DEFAULT (getdate()),
  CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY CLUSTERED ([ProductModelID], [IllustrationID]),
  CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY ([IllustrationID]) REFERENCES [Production].[Illustration] ([IllustrationID]),
  CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])
ON [PRIMARY]
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Cross-reference table mapping product models and illustrations.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration'
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductModel.ProductModelID

GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to Illustration.IllustrationID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'IllustrationID'
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'ModifiedDate'
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Clustered index created by a primary key constraint.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'INDEX', N'PK_ProductModelIllustration_ProductModelID_IllustrationID'
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Primary key (clustered) constraint', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'PK_ProductModelIllustration_ProductModelID_IllustrationID'
GO
EXEC sys.sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing Illustration.IllustrationID.', 'SCHEM
ALTER TABLE os.job DROP CONSTRAINT job_check;
ALTER TABLE os.queue DROP CONSTRAINT job_check;
ALTER TABLE os.job DROP CONSTRAINT job_refresh_type;
ALTER TABLE os.queue DROP CONSTRAINT job_refresh_type;
ALTER TABLE os.job
  ADD CONSTRAINT job_check
  CHECK ((refresh_type = 'refresh'::text AND column_name IS NULL AND snapshot IS NULL AND sql_text IS NULL
          AND (source).type IN ('oracle'::text, 'sqlserver'::text) AND (source).server_name IS NOT NULL
          AND (source).database_name IS NOT NULL AND (source).schema_name IS NOT NULL
          AND (source).table_name IS NOT NULL AND (source).user_name IS NOT NULL
          AND (source).pass IS NOT NULL)  OR
         (refresh_type = 'append'::text AND column_name IS NOT NULL AND snapshot IS NULL AND sql_text IS NULL) OR
         (refresh_type = 'replication'::text AND column_name IS NOT NULL AND snapshot IS NOT NULL AND sql_text IS NULL) OR
         (refresh_type = 'transform' AND (source).type IS NULL AND (source).server_name IS N

          AND (source).instance_name IS NULL AND (source).port IS NULL
          AND (source).database_name IS NULL AND (source).schema_name IS NULL AND (source).table_name IS NULL AND (source).user_name IS NULL
          AND (source).pass IS NULL AND column_name IS NULL AND sql_text IS NOT NULL AND snapshot IS NULL ) OR
         (refresh_type = 'ddl'::text AND column_name IS NULL AND snapshot IS NULL AND sql_text IS NULL
          AND (source).type IN ('oracle'::text, 'sqlserver'::text) AND (source).server_name IS NOT NULL
          AND (source).database_name IS NOT NULL AND (source).schema_name IS NOT NULL
          AND (source).table_name IS NOT NULL AND (source).user_name IS NOT NULL
          AND (source).pass IS NOT NULL)
         );
ALTER TABLE os.queue
  ADD CONSTRAINT job_check
  CHECK ((refresh_type = 'refresh'::text AND column_name IS NULL AND snapshot IS NULL AND sql_text IS NULL
          AND (source).type IN ('oracle'::text, 'sqlserver'::text) AND (source).server_name IS

          AND (source).database_name IS NOT NULL AND (source).schema_name IS NOT NULL
          AND (source).table_name IS NOT NULL AND (source).user_name IS NOT NULL
          AND (source).pass IS NOT NULL)  OR
         (refresh_type = 'append'::text AND column_name IS NOT NULL AND snapshot IS NULL AND sql_text IS NULL) OR
         (refresh_type = 'replication'::text AND column_name IS NOT NULL AND snapshot IS NOT NULL AND sql_text IS NULL) OR
         (refresh_type = 'transform' AND (source).type IS NULL AND (source).server_name IS NULL
          AND (source).instance_name IS NULL AND (source).port IS NULL
          AND (source).database_name IS NULL AND (source).schema_name IS NULL AND (source).table_name IS NULL AND (source).user_name IS NULL
          AND (source).pass IS NULL AND column_name IS NULL AND sql_text IS NOT NULL AND snapshot IS NULL ) OR
         (refresh_type = 'ddl'::text AND column_name IS NULL AND snapshot IS NULL AND sql_text IS NULL
          AND (source).type 
﻿USE [UA_NAV]
GO
/****** Object:  StoredProcedure [dbo].[Scenic_Places]    Script Date: 4/24/2015 10:20:23 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[Scenic_Places] @no_of_tables INT
AS
BEGIN
SET nocount ON
	DECLARE @i INT
	SET @i=0
	DECLARE @cnt INT
	DECLARE @var varchar(10)
	DECLARE @insert_query  VARCHAR(8000)
	DECLARE @create_query  VARCHAR(8000)
	DECLARE @drop_query  VARCHAR(1000)
	SET @insert_query=''
WHILE(@i<@no_of_tables-1)
BEGIN
	SET @var = @i
	SET @insert_query = @insert_query + ' SELECT TOP 2 ADDRESS FROM [UA_NAV].[dbo].[Places_'+ @var+'] WHERE weather IN (''Light Rain'') OR temperature>''50'' OR Traffic >''1'' OR Safety >''2'' UNION'
	--SET @create_query = 'CREATE TABLE Places_' + @var + '(Scenic_Place_Name varchar(100) , Latitude varchar(100) , Longitude varchar(100) , Address varchar(100) , Zipcode varchar(100) , Weather varchar(100) , Temperature varchar(100) , Traffic varchar(100), Safety varchar(100))'
	SET @i=@i+1
END
	SET @var = @i
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `pool_quest_save`;
CREATE TABLE `pool_quest_save` (
  `pool_id` int(10) unsigned NOT NULL DEFAULT '0',
  `quest_id` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`pool_id`,`quest_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
LOCK TABLES `pool_quest_save` WRITE;
/*!40000 ALTER TABLE `pool_quest_save` DISABLE KEYS */;
/*!40000 ALTER TABLE `pool_quest_save` ENABLE KEYS */;
UNLOCK 
﻿USE [GTFSManager]
GO
/****** Object:  View [dbo].[export_agency]    Script Date: 06/04/2013 14:39:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[export_agency]
AS
SELECT     dbo.mixing_agency.*
FROM         dbo.mixing_agency
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      E

      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
  

         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "mixing_agency"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 211
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@
CREATE TABLE dmFlash(
lockedBy nvarchar(250) NULL DEFAULT NULL ,
lastupdatedby nvarchar(250) NOT NULL DEFAULT '' ,
flashPlay bit NOT NULL DEFAULT 1 ,
flashQuality nvarchar(250) NULL DEFAULT 'high' ,
flashWidth decimal(10,2) NULL DEFAULT 0 ,
flashBgcolor nvarchar(250) NULL DEFAULT '#FFFFFF' ,
metaKeywords nvarchar(250) NULL DEFAULT NULL ,
status nvarchar(250) NULL DEFAULT NULL ,
flashAlign nvarchar(250) NULL DEFAULT 'center' ,
teaser nvarchar(MAX) NULL ,
displayMethod nvarchar(250) NOT NULL DEFAULT 'displayPageStandard' ,
ObjectID nvarchar(50) NOT NULL DEFAULT '' ,
flashMenu bit NOT NULL DEFAULT 0 ,
flashMovie nvarchar(250) NULL DEFAULT NULL ,
label nvarchar(250) NULL DEFAULT NULL ,
datetimelastupdated datetime NOT NULL DEFAULT {ts '2214-05-29 16:10:36'} ,
flashLoop bit NOT NULL DEFAULT 0 ,
flashURL nvarchar(250) NULL DEFAULT NULL ,
flashVersion nvarchar(250) NULL DEFAULT '8,0,0,0' ,
createdby nvarchar(250) NOT NULL DEFAULT '' ,
datetimecreated datetime NOT NULL DEFAULT {ts '2214-05-29 
/* cs_ticket.cpp */
SET @id = 742;
-- Add new permissions
DELETE FROM `rbac_permissions` WHERE `id` BETWEEN @id AND @id+18;
INSERT INTO `rbac_permissions` (`id`, `name`) VALUES
(@id+0, 'ticket'),
(@id+1, 'ticket assign'),
(@id+2, 'ticket close'),
(@id+3, 'ticket closedlist'),
(@id+4, 'ticket comment'),
(@id+5, 'ticket complete'),
(@id+6, 'ticket delete'),
(@id+7, 'ticket escalate'),
(@id+8, 'ticket escalatedlist'),
(@id+9, 'ticket list'),
(@id+10, 'ticket onlinelist'),
(@id+11, 'ticket reset'),
(@id+12, 'ticket response'),
(@id+13, 'ticket response append'),
(@id+14, 'ticket response appendln'),
(@id+15, 'ticket togglesystem'),
(@id+16, 'ticket unassign'),
(@id+17, 'ticket viewid'),
(@id+18, 'ticket viewname');
-- Add permissions to "corresponding Commands Role"
DELETE FROM `rbac_role_permissions` WHERE `permissionId` BETWEEN @id AND @id+18;
INSERT INTO `rbac_role_permissions` (`roleId`, `permissionId`) VALUES
(2, @id+0),
(3, @id+1),
(2, @id+2),
(2, @id+3),
(2, @id+4),
(2, @id+5),
(4, 
--------------------------------------------------------------------------------------------------------------------------------------------------------
			/* Task Category required for user interface ddl */
----------------------------------------------------------------------------------------------------------------------------------------------------------
SET IDENTITY_INSERT [EmailTemplate] ON;
INSERT INTO [EmailTemplate]
           ([Id]
           ,[Name]
           ,[Subject]
           ,[Body]
           ,[Deleted]
           ,[CreatedOn]
           ,[CreatedBy])
     SELECT 1
           ,'CompanySummeryChangeNotification'
           ,'BusinessSafe - Change in Company Details'
           ,'Joanne Teasdale from 1 request on <date> the following details to be changed to their Main Company Details. Please find below the details of what they would like it to be changed to: <br />Company Name: $Model.CompanyName$ <br /> CAN: $Model.CAN$ <br /> Main Address: $Model.AddressLine1$ <br

           ,0
           ,GETDATE()
           ,'790D8CC9-04F8-4643-90EE-FAED4BA711EC'
     WHERE NOT EXISTS (SELECT * FROM dbo.EmailTemplate AS et WHERE id=1)
                
   GO    
   
   INSERT INTO [EmailTemplate]
           ([Id]
           ,[Name]
           ,[Subject]
           ,[Body]
           ,[Deleted]
           ,[CreatedOn]
           ,[CreatedBy])
     SELECT 2
           ,'SiteAddressChangeNotification'
           ,'BusinessSafe - Change in Site Address Details'
           ,'Joanne Teasdale from 1 request on <date> the following details to be changed on one of their Site Addresses. Please find below the details of what they would like it to be changed to: <br />Company Name: $Model.CompanyName$ <br /> CAN: $Model.CAN$ <br /> Site Address: $Model.AddressLine1$ <br /> $Model.AddressLine2$ <br /> $Model.AddressLine3$ <br /> $Model.AddressLine4$ <br /> Postcode: $Model.Postcode$ <br /> Telephone: $Model.Telephone$ <br /> Website: $Model.Website$ <br /> Main Contact: $
proc $sc_$cpu_evs_send_crit
;JAN 11 2006 CFE_TBL added
on ERROR resume
#include "ut_statusdefs.h"
write
write "*** Sending CRITICAL message for CFE_EVS."
write "*** NO CRITICAL messages are available at this time ***"
write ""
write "*** Sending CRITICAL message for CFE_SB."
write "*** NO CRITICAL messages are available at this time ***"
write ""
write "*** Sending CRITICAL message for CFE_ES."
write "*** NO CRITICAL messages are available at this time ***"
write ""
write "*** Sending CRITICAL message for CFE_TIME."
write "*** NO CRITICAL messages are available at this time ***"
write ""
write "*** Sending CRITICAL message for CFE_TBL."
write "*** NO CRITICAL messages are available at this time ***"
write ""
write "*** Sending CRITICAL message for CI_APP."
write "*** NO CRITICAL messages are available at this time ***"
write ""
write "*** Sending CRITICAL message for TO_APP."
write "*** NO CRITICAL messages are available at this time ***"
write ""
write "*** Sending CRITICAL message fo
/*
INSERT INTO model 
(name,description,manufacturer,scale,series,year_of_release,cover_price,cover_price_currency,selling_price,selling_price_currency,store,status)
VALUES
('',NULL,'','','',,,'',,'','','unboxed');
INSERT INTO zoid
(model_id,zoid_series,zoid_series_number,zoid_model_number)
VALUES
(LAST_INSERT_ID(),'',,'');
INSERT INTO model_has_category
(model_id,category_id)
VALUES
(LAST_INSERT_ID(),(SELECT @zoid_id));
*/
SET @zoid_id := (SELECT id FROM category WHERE name LIKE 'zoid');
INSERT INTO model 
(name,description,manufacturer,scale,series,year_of_release,cover_price,cover_price_currency,selling_price,selling_price_currency,store,status)
VALUES
('Geno Breaker Raven Ver.',NULL,'Kotobukiya','1/72','Zoids',2009,9200,'Japanese Yen',7360,'Japanese Yen','Hobby Link Japan','boxed');
INSERT INTO zoid
(model_id,zoid_series,zoid_series_number,zoid_model_number)
VALUES
(LAST_INSERT_ID(),'Highend Master Model',35,'EZ-034');
INSERT INTO model_has_category
(model_id,category_id)
VALUES
(L

INSERT INTO model 
(name,description,manufacturer,scale,series,year_of_release,cover_price,cover_price_currency,selling_price,selling_price_currency,store,status)
VALUES
('Gun Sniper Leena Special',NULL,'Kotobukiya','1/72','Zoids',2011,4500,'Japanese Yen',3600,'Japanese Yen','Hobby Link Japan','boxed');
INSERT INTO zoid
(model_id,zoid_series,zoid_series_number,zoid_model_number)
VALUES
(LAST_INSERT_ID(),'Highend Master Model',24,'RZ-030');
INSERT INTO model_has_category
(model_id,category_id)
VALUES
(LAST_INSERT_ID(),(SELECT @zoid_id));
INSERT INTO model 
(name,description,manufacturer,scale,series,year_of_release,cover_price,cover_price_currency,selling_price,selling_price_currency,store,status)
VALUES
('Berserk Fuhrer',NULL,'Kotobukiya','1/72','Zoids',2015,8800,'Japanese Yen',7040,'Japanese Yen','Hobby Link Japan','boxed');
INSERT INTO zoid
(model_id,zoid_series,zoid_series_number,zoid_model_number)
VALUES
(LAST_INSERT_ID(),'Highend Master Model',33,'EZ-049');
INSERT INTO model_has_

(model_id,category_id)
VALUES
(LAST_INSERT_ID(),(SELECT @zoid_id));
INSERT INTO model 
(name,description,manufacturer,scale,series,year_of_release,cover_price,cover_price_currency,selling_price,selling_price_currency,store,status)
VALUES
('Dibison Toma Custom',NULL,'Kotobukiya','1/72','Zoids',2012,9800,'Japanese Yen',7840,'Japanese Yen','Hobby Link Japan','boxed');
INSERT INTO zoid
(model_id,zoid_series,zoid_series_number,zoid_model_number)
VALUES
(LAST_INSERT_ID(),'Highend Master Model',36,'RZ-031');
INSERT INTO model_has_category
(model_id,category_id)
VALUES
(LAST_INSERT_ID(),(SELECT @zoid_id));
INSERT INTO model 
(name,description,manufacturer,scale,series,year_of_release,cover_price,cover_price_currency,selling_price,selling_price_currency,store,status)
VALUES
('Shadow Fox',NULL,'Kotobukiya','1/72','Zoids',2012,4500,'Japanese Yen',3600,'Japanese Yen','Hobby Link Japan','unboxed');
INSERT INTO zoid
(model_id,zoid_series,zoid_series_number,zoid_model_number)
VALUES
(LAST_INSERT_ID(
RUNSTATS ON TABLE DB2INST1.ANZO_B ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.ANZO_TL ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.ANZO_L ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.ANZO_LTL ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.ANZO_LL ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.ANZO_LU ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.ANZO_U ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.NAMEDGRAPHS ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.NAMEDGRAPHS_NR ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.LASTTRANSACTIONTIME ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.ANZO_DATATYPE ON ALL COLUMNS AND INDEXES ALL ALLOW WRITE ACCESS
RUNSTATS ON TABLE DB2INST1.ANZO_LANGUA
﻿-- =============================================
-- Author:		Ranjeet Kumar
-- Create date: 02-May-14
-- Description:	Edit the customer details and audit the changes.
-- =========================================================
CREATE PROCEDURE [dbo].[TC_UpdateCustomerDetails] 
@TC_CustomerId INT,
@NewName VARCHAR(100),
@NewLastName VARCHAR(100),
@NewMobile VARCHAR(15),
@NewEmail VARCHAR(100),
@NewAddress VARCHAR(200),
@Salutation VARCHAR(20),		
@UserId INT
--@DateModified DATE
AS
BEGIN
	SET NOCOUNT OFF;
DECLARE @OldTC_CustomerName NVARCHAR(100),@OldLastName NVARCHAR(100),@OldMobile NVARCHAR(15), @OldAddress NVARCHAR(200),@OldEmail NVARCHAR(100)
DECLARE @BranchId INT
--Get the old values
SELECT 
		@OldTC_CustomerName= TC.CustomerName, 
		@OldLastName = TC.LastName,
		@OldMobile = TC.Mobile, 
		@OldEmail = TC.Email,
		@OldAddress = TC.Address,
		@BranchId = TC.BranchId
		FROM TC_CustomerDetails AS TC 
						WHERE TC.id = @TC_CustomerId
--Update customer
--Check if Mobile Number not exis

IF (SELECT COUNT(Id) FROM TC_CustomerDetails WHERE Mobile = @NewMobile AND BranchId = @BranchId AND Id <> @TC_CustomerId) = 0
BEGIN
UPDATE  [dbo].[TC_CustomerDetails]
        SET [CustomerName] = @NewName
           ,[Email] = @NewEmail
           ,[Mobile] = @NewMobile
		   ,[LastName] = @NewLastName
		   ,[Address] = @NewAddress
		   ,[ModifiedDate] = GETDATE()
		   ,[ModifiedBy] = @UserId,
		   [Salutation] = @Salutation
		   WHERE id = @TC_CustomerId --Condition
	--Audit the customer details
	INSERT INTO [dbo].[AuditCustomerDetails]
           ([TC_CustomerId]
           ,[OldTC_CustomerName]
           ,[NewTC_CustomerName]
           ,[OldLastName]
           ,[NewLastName]
           ,[OldMobile]
           ,[NewMobile]
           ,[OldEmail]
           ,[NewEmail]
           ,[OldAddress]
           ,[NewAddress]
           ,[UserId]
           ,[DateModified])
     VALUES
			(@TC_CustomerId,
			@OldTC_CustomerName,
			@NewName,
			@OldLastName,
			@NewLastName,
			@OldMobile,
-- ---------------------------------------------------------------------------
-- Table t_model_data
--
-- Each repository model has versionable name and description properties.
-- ---------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `t_model_data` (
    `model_uuid` BINARY(16) NOT NULL,
    `name` VARCHAR(45) NOT NULL,
    `description` VARCHAR(255) NULL DEFAULT NULL,
    `version_uuid` BINARY(16) NOT NULL DEFAULT 0,
    PRIMARY KEY (`model_uuid`, `version_uuid`),
    CONSTRAINT `fk_model_data_version`
        FOREIGN KEY (`version_uuid` )
        REFERENCES `t_version` (`uuid` )
        ON DELETE NO ACTION
        ON UPDATE NO ACTION,
    CONSTRAINT `fk_model_data_model`
        FOREIGN KEY (`model_uuid` )
        REFERENCES `t_model` (`uuid` )
        ON DELETE NO ACTION
        ON UPDATE NO ACTION)
ENGINE = InnoDB;
CREATE INDEX `fk_model_data_model` ON `t_model_data` (`model_uuid` ASC);
CREATE INDEX `fk_model_data_version` ON `t_mod
CREATE TABLE [Production].[ProductModelIllustration]
[ProductModelID] [int] NOT NULL,
[IllustrationID] [int] NOT NULL,
[ModifiedDate] [datetime] NOT NULL CONSTRAINT [DF_ProductModelIllustration_ModifiedDate] DEFAULT (getdate())
) ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModelIllustration] ADD CONSTRAINT [PK_ProductModelIllustration_ProductModelID_IllustrationID] PRIMARY KEY CLUSTERED  ([ProductModelID], [IllustrationID]) ON [PRIMARY]
GO
ALTER TABLE [Production].[ProductModelIllustration] ADD CONSTRAINT [FK_ProductModelIllustration_Illustration_IllustrationID] FOREIGN KEY ([IllustrationID]) REFERENCES [Production].[Illustration] ([IllustrationID])
GO
ALTER TABLE [Production].[ProductModelIllustration] ADD CONSTRAINT [FK_ProductModelIllustration_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [Production].[ProductModel] ([ProductModelID])
GO
EXEC sp_addextendedproperty N'MS_Description', N'Cross-reference table mapping product models and illustrations.', 'S

GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to Illustration.IllustrationID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'IllustrationID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Date and time the record was last updated.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Primary key. Foreign key to ProductModel.ProductModelID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'COLUMN', N'ProductModelID'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Default constraint value of GETDATE()', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N'DF_ProductModelIllustration_ModifiedDate'
GO
EXEC sp_addextendedproperty N'MS_Description', N'Foreign key constraint referencing Illustration.IllustrationID.', 'SCHEMA', N'Production', 'TABLE', N'ProductModelIllustration', 'CONSTRAINT', N
-- 无限分类表触发器
-- 作者：Vergil <vergil@vip.163.com>
DROP TRIGGER IF EXISTS `before_update_category`;
DROP TRIGGER IF EXISTS `after_update_category`;
DELIMITER $$
-- BEFORE UPDATE 触发器 
-- 用于更新level字段和检查新的节点是否为自己的子节点
CREATE TRIGGER `before_update_category` BEFORE UPDATE ON `category` FOR EACH ROW
BEGIN
	DECLARE lv SMALLINT;
	DECLARE c SMALLINT;
	DECLARE self_node VARCHAR(500);
	DECLARE pos INT;
	IF NEW.parent_id != OLD.parent_id THEN
		IF NEW.parent_id = 0 THEN
			SET lv = 1;	
		ELSE
			-- 检查上级节点是否自己的子节点
			SELECT `node_index` INTO self_node FROM `category_node_index` WHERE `id` = OLD.id;
			SELECT POSITION(self_node IN `node_index`), COUNT(1) INTO pos, c FROM `category_node_index` WHERE `id` = NEW.parent_id;
			IF c = 0 THEN
				-- 父节点不存在，抛出异常
				INSERT INTO `parent_id_not_exists` VALUES(1);
			END IF;
			IF pos > 0 THEN
				-- 如果新的父节点是自己的子节点
				-- 这里故意写一条错误的SQL语言让其失败抛出异常
				-- 暂时没有更好的方法，先这么写吧
				INSERT INTO `new_parent_can_not_be_a_sub_category_of_itself` VALUES(1);
			END IF;
			SELECT 

		END IF;
		SET NEW.level = lv;
	END IF;
END;
$$
-- AFTER UPDATE 触发器
-- 
CREATE TRIGGER `after_update_category` AFTER UPDATE ON `category` FOR EACH ROW
BEGIN
	-- 新的节点
	DECLARE new_node VARCHAR(500);
	-- 旧的节点
	DECLARE old_node VARCHAR(500);
	-- 父节点level
	DECLARE new_parent_level SMALLINT;
	IF NEW.parent_id != OLD.parent_id THEN
		SELECT `node_index` INTO old_node FROM `category_node_index` WHERE `id` = NEW.id;
		
		IF NEW.parent_id = 0 THEN
			SET new_node = CONCAT(',0,', NEW.id, ',');
			UPDATE `category_node_index` SET `node_index` = new_node WHERE `id` = NEW.id;
			UPDATE `category_node_index` SET `node_index` = CONCAT(new_node, id, ',') WHERE `node_index` LIKE CONCAT(old_node, '%') AND `id` != NEW.id;
		ELSE
			SELECT `node_index` INTO new_node FROM `category_node_index` WHERE `id` = NEW.parent_id;
			SELECT `level` INTO new_parent_level FROM `category` WHERE `id` = NEW.parent_id;
			UPDATE `category_node_index` SET `node_index` =  CONCAT(new_node, id, ',') WHERE `id` = NEW.id;
			
CREATE TABLE issue_status_deltas (
    id INT NOT NULL PRIMARY KEY DEFAULT (nextval('deltas')),
    change_id INTEGER NOT NULL,
    issue_status_id INTEGER NOT NULL,
    new INTEGER,
    status VARCHAR,
    rank INTEGER,
    def INTEGER,
    UNIQUE(change_id,issue_status_id), -- one change per change
    FOREIGN KEY(change_id) REFERENCES changes(id) ON DELETE CASCADE
    FOREIGN KEY(issue_status_id) REFERENCES issue_status(id) ON DELETE CASCADE,
    CONSTRAINT def_constraint CHECK (
        def = 1 OR def IS NULL
    )
);
CREATE TRIGGER
    issue_status_deltas_ai_1
AFTER INSERT ON
    issue_status_deltas
FOR EACH ROW
BEGIN
    
    SELECT debug(
        NEW.change_id,
        NEW.issue_status_id,
        NEW.status,
        NEW.rank,
        NEW.def
    );
    UPDATE
        changes
    SET
        ucount = ucount + 1
    WHERE
        id = NEW.change_id
    ;
    UPDATE
        topics
    SET
        last_change_id = NEW.change_id
    WHERE
        id = NEW.issue_status_id
    ;
    U

        changes_pending
    SET
        terms = terms || (
            SELECT
                '-' || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    '  _: issue_status' || x'0A'
                ELSE
                    '  _: issue_status_delta' || x'0A'
                END
                || '  def: ' || COALESCE(NEW.def, '~') || x'0A'
                || CASE WHEN
                    NEW.new
                THEN
                    '  project_uuid: ' || p.uuid || x'0A'
                ELSE
                    '  issue_status_uuid: ' || topics.uuid || x'0A'
                END
                || '  rank: ' || COALESCE(NEW.rank, '~') || x'0A'
                || CASE WHEN
                    NEW.status = '-'
                THEN
                    '  status: ''-''' || x'0A'
                ELSE
                    '  status: ' || COALESCE(NEW.status, '~') || x'0A'
                END
                || CASE WHEN
                   

                THEN
                    '  topic_uuid: ' || topics.uuid || x'0A'
                ELSE
                    ''
                END
            FROM
                topics
            INNER JOIN
                issue_status ist
            ON
                ist.id = NEW.issue_status_id
            INNER JOIN
                topics p
            ON
                p.id = ist.project_id
            WHERE
                topics.id = NEW.issue_status_id
        )
    WHERE
        change_id = NEW.change_id
    ;
    INSERT INTO
        project_changes(
            change_id,
            project_id
        )
    SELECT
        NEW.change_id,
        project_id
    FROM
        issue_status
    WHERE
        id = NEW.issue_status_id
    ;
    INSERT OR IGNORE INTO
        issue_status_tomerge(issue_status_id)
    VALUES
        (NEW.issue_status_id)
    ;
    UPDATE
        issue_status_tomerge
    SET
        status = status + (NEW.status IS NOT NULL),
        rank   = rank 
﻿USE [NavIntegrationDB]
GO
/****** Object:  StoredProcedure [dbo].[SWITCH_ModelPortfolioClientGet]    Script Date: 02/13/2012 17:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWITCH_ModelPortfolioClientGet]
--@param_IFA_Code		NVARCHAR(50),
--@param_ModelGroup	NVARCHAR(50),
--@param_ModelName	NVARCHAR(50)
@param_IFA_ID			INT,
@param_ModelID			NVARCHAR(50),
@param_ModelPortfolioID	NVARCHAR(50),
@param_HasDiscretionary	BIT = 0
AS
BEGIN
	SELECT
	   mp.ClientID				AS ModelGroupID
	  ,mp.PortfolioID			AS ModelPortfolioID
	  ,mpgd.Surname				AS ModelIFA
	  ,mpgd.Forenames			AS ModelGroup
	  ,mp.AccountNumber			AS ModelName
	  ,c.ClientID				AS ClientID
	  ,cwd.Surname				AS ClientSurname
	  ,cwd.Forenames			AS ClientFornames
	  ,p.PortfolioID			AS ClientPortfolioID
	  ,co.Company				AS ClientPortfolioCompany
	  ,p.AccountNumber			AS ClientPortfolioAccountNumber
	  ,(CASE WHEN (ISNULL(p.MFPercent,0) = 0) THEN 0 ELSE 1 END) AS Discretionary
	  ,(CASE WHE

	  ,ISNULL(s.SwitchID,0)		AS SwitchID
	  
	FROM		NavGlobalDBwwwGUID.dbo.Portfolio AS mp							-- Model Portfolio
	INNER JOIN	NavGlobalDBwwwGUID.dbo.Client AS mpg							-- Model Portfolio Group
		ON		mpg.ClientID = mp.ClientID
		AND		mpg.IFA_ID = 210												-- all Model Portfolios are linked to the IFA_ID 210 
	LEFT JOIN	NavGlobalDBwwwGUID.dbo.ClientWebDetails AS mpgd
		ON		mpgd.ClientID = mpg.ClientID
	INNER JOIN	NavGlobalDBwwwGUID.dbo.IFA AS mpi								-- the actual IFA that owns the model is found from the 
		ON		mpi.IFA_Code = mpgd.Surname										-- code stored in the Surname field on the Model Portfolio Group
	INNER JOIN	NavGlobalDBwwwGUID.dbo.Portfolio AS p							-- The link between the Model Portfolio and the Client's portfolio is via the
		ON		p.CustodialPolicyID = mp.PortfolioID							-- CustodialPolicyID field.
	INNER JOIN	NavGlobalDBwwwGUID.dbo.Company AS co
		ON		co.CompanyID = p.Company
	INNER JOIN	NavGlobalDBwwwGUID.dbo.Client AS c								-- The Client Owning the li

		ON		c.ClientID = p.ClientID
		AND		c.IFA_ID = mpi.IFA_ID											-- cross check that the Client's IFA is the same as the owner of the Model Portfolio Group.
	INNER JOIN	NavGlobalDBwwwGUID.dbo.ClientWebDetails as cwd
		ON		cwd.ClientID = c.ClientID
	LEFT JOIN	NavIntegrationDB.dbo.SwitchHeaderTemp as sh
		ON		sh.ClientID = p.ClientID
		AND		sh.PortfolioID = p.PortfolioID
	LEFT JOIN	NavIntegrationDB.dbo.SwitchHeader as s
		ON		s.ClientID = p.ClientID
		AND		s.PortfolioID = p.PortfolioID
	WHERE		NOT EXISTS
				(SELECT ClientID, PortfolioID FROM NavIntegrationDB.dbo.SwitchHeader a where a.ClientID = c.ClientID AND a.PortfolioID =  p.PortfolioID AND a.Status = 6
					UNION
				 SELECT ClientID, PortfolioID FROM NavIntegrationDB.dbo.SwitchHeader a where a.ClientID = c.ClientID AND a.PortfolioID = p.PortfolioID AND a.ModelGroupID = mp.ClientID AND a.ModelPortfolioID = mp.PortfolioID)	
	AND			EXISTS(SELECT DISTINCT ClientID, PortfolioID FROM NavGlobalDBwwwGUID.dbo.PortfolioData a WHERE a.C
-- Add option conditions for Druid trainers
DELETE FROM `conditions` WHERE `SourceTypeOrReferenceId` IN (15) AND `SourceGroup` IN (1403,3921,3924,3925,3926,4507,4508,4571,4605,4606,4607,4687,4688,7567,4646);
INSERT INTO `conditions` (`SourceTypeOrReferenceId`,`SourceGroup`,`SourceEntry`,`ElseGroup`,`ConditionTypeOrReference`,`ConditionValue1`,`ConditionValue2`,`ConditionValue3`,`ErrorTextId`,`ScriptName`,`Comment`) VALUES
(15,1403,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,1403,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,1403,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,1403,3,0,8,0,3781,0,0,'','Mathrengyl Bearwalker - Show gossip option if player has rewarded quest 3781'),
(15,3921,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3921,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3921,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3924,0,0,15,1024

(15,3924,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3924,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3925,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3925,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3925,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3926,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3926,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,3926,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4507,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4507,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4507,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4508,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4508,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4508,2,0,15,1024,0,0,0,'','Show g

(15,4571,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4571,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4571,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4605,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4605,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4605,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4606,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4606,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4606,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4607,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4607,1,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4607,2,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4687,0,0,15,1024,0,0,0,'','Show gossip option if player is a Druid'),
(15,4687,1,0,15,1024,0,0,0,'','Show g
﻿CREATE VIEW [dbo].[vwDimDate]
AS
SELECT        dateId, dateDesc, year, yearMonth, yearMonthDesc, yearQuarter, yearQuarterDesc, fiscalYear, fiscalYearDesc, fiscalYearQuarter, monthOfYear, 
                         monthOfYearDesc, dayOfMonth, dayOfWeek, dayOfWeekDesc, dayOfWeekType, weekOfYear, yearWeek, yearWeekDesc, serialDate, date
FROM            dbo.DimDate
GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
     

      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration =

         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "DimDate"
            Begin Extent = 
               Top = 33
               Left = 168
               Bottom = 263
               Right = 354
            End
            DisplayFlags = 280
            TopColumn = 11
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
     
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Author: Patrick Conrad - Ekagra                                       */
/* Date:   12/1/2005                                                     */
/* Description: This script is used to grant the appropriate roles and   */
/*              permissions to a user to execute the Data Extract Utility*/
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
/* Modification History:                                                 */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
-- Added condition to exit when error.  Just incase run accidently.
WHENEVER SQLERROR EXIT
-- Spool a log file
spool Add_new_user.lst
GRANT EXT_ROLE to &&NewUser;
GRANT EXTRACT_ADMIN to &&NewUser;
GRANT EXTRACT_EXECUTE to &&NewUser;
  
Insert into CT_EXT_ACCOUNTS (USER_NAME)
       Values (UPPER('&&NewUser'));
Commit;
create synonym &&NewUser..CT_DATA for OC_DATA.CT_DATA;
create synonym &&
Select
	trans_nav.Externe_BelegNr 
	,trans_uster.AuftragsNr
	--,DHL_Kunde.Sendungsnummer
	--,tf.[ArtikelNr]
	--,case
	--	when tf.[ArtikelNr]  in (
	--						 Select 
	--							distinct [EAN] collate Latin1_General_CI_AS as ArtikelNr 
	--							 FROM [BI_Data].[dbo].[OPS_Fiege_Morphologie]
	--							 where (([Hoehe]>1200 or ([Laenge]>600 and [Breite]>600)) or [Volumen_L]>128)
	--							) then 1 else 0 end as Big_Item_oder_Sperrgut
	--,tf.[Zahlungsmethode]
	--,tn.[Betrugsfall]
	--,tn.[Warteliste]
	,trans_uster.LänderCode
	--,trans_uster.Name
	,trans_uster.PLZ
	,trans_nav.Webshop_Auftrag
	,trans_nav.Verkaufsbeleg_erstellt
	,trans_uster.Übergabe_Uster
	,max(rückmeldung_uster.Rückmeldung_Uster) as Rückmeldung_Uster
	--,DHL_Kunde.[DHL_Eingang]
	--,DHL_Kunde.[Auftrag_Kunde]
    ,cast(datediff(hour, trans_nav.Webshop_Auftrag,trans_uster.Übergabe_Uster) as Numeric)/24 Bruttozeit_Webshop_Uster_Tag
	--,cast(datediff(hour, tf.[Übergabe_Fiege], DHL_Kunde.[DHL_Eingang]) as Numeric)/24 as Gesamtzeit_F

	--,cast(datediff(hour, DHL_Kunde.[DHL_Eingang], DHL_Kunde.[Auftrag_Kunde]) as Numeric)/24 as Gesamtzeit_DHL_Kunde_Tag
	,cast(datediff(hour, trans_nav.Webshop_Auftrag, rückmeldung_uster.Rückmeldung_Uster) as Numeric)/24 Bruttozeit_Webshop_Rückmeldung_Uster
	, cast(datediff(hour, trans_nav.Webshop_Auftrag, trans_nav.Verkaufsbeleg_erstellt)  as Numeric)/24 as Bruttozeiteit_Warteliste
	,BI_Data.dbo.networkdays(trans_nav.Webshop_Auftrag,trans_uster.Übergabe_Uster) as Nettozeit_Webshop_Übergabe_Uster
	,BI_Data.dbo.networkdays(trans_nav.Webshop_Auftrag,rückmeldung_uster.Rückmeldung_Uster) as Nettozeit_Webshop_Rückmeldung_Uster
	--,BI_Data.dbo.networkdays(trans_nav.Webshop_Auftrag,trans_nav.Verkaufsbeleg_erstellt) as Nettozeit_Webshop_Warteliste
	--,case when tn.[Warteliste]=1 then cast(datediff(hour, tn.[Webshop_Auftrag], tn.[Verkaufsbeleg_erstellt])  as Numeric)/24  else 0 end as Zeit_Warteliste
	from /*1. Tabelle*/
	(select
 cdh.[Order Created at] as Webshop_Auftrag
 , BI_Data.dbo.ToUTCDa

, nvws.[No_] as Verkaufsrechnung
, nvws.[Sales Document No_] as AuftragsNr
, cdh.[ExternalDocumentNo] as Externe_BelegNr
, cdh.[FraudInfo] as Betrugsfall
,cdh.[Wait] as Warteliste
  FROM [Urban_NAV600_SL].[dbo].[Urban-Brand GmbH$CreateDocumentHeader] cdh with (nolock)                                
	left join [Urban_NAV600_SL].[dbo].[Urban-Brand GmbH$eBayNavCSalesHeader] nvws with (nolock)
	 on cdh.[ExternalDocumentNo]=nvws.[External Document No_] collate Latin1_General_CI_AS
  where  nvws.[Shop Code]='WINDELN_CH'
  and cdh.[Order Created at] between '2015-02-01' and '2015-02-28') as trans_nav 
  left join /*2. Tabelle*/ (
    Select 
   BI_Data.dbo.ToUTCDate(ffp.[Timestamp Upload_Download]) as Übergabe_Uster
   ,ffsh.[No_] as AuftragsNr
   ,ffsl.[No_] as ArtikelNr
   ,ffsh.[External Document No_] as Externe_BelegNr 
   ,ffsh.[Payment Method Code] as Zahlungsmethode
   ,ffsh.[Ship-to Country_Region Code] as LänderCode
   ,cr.[Name]as Name
   ,ffsh.[Ship-to Post Code] as PLZ
   FROM [
USE [ITInventory]
GO
/****** Object:  Trigger [dbo].[trUserissue]    Script Date: 12/01/2013 12:16:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER TRIGGER [dbo].[trUserissue]
   ON  [ITInventory].[dbo].[INV_Userissue] 
   FOR  INSERT,DELETE,UPDATE
AS 
DECLARE  @ModelID AS uniqueidentifier;
DECLARE  @LocID   AS uniqueidentifier;
select @ModelID=i.ModelID from inserted i;	
select @LocID=i.LocID from inserted i;	
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for trigger here
    IF (NOT EXISTS(SELECT * FROM dbo.INV_Factorystock WHERE ModelID=@ModelID and LocID=@LocID and FSDate=(SELECT MAX(UIssueDate) FROM dbo.INV_Userissue) ))
    INSERT INTO dbo.INV_Factorystock( ItemID, ModelID, FSDa

     SELECT ItemID as ItemID, 
            ModelID AS ModelID, 
            FSDate=convert(date,GETDATE(),103),            
            (SELECT sum(IssueQty) FROM dbo.INV_ItemIssue WHERE ModelID=@ModelID and LocID=@LocID) as TFSRQty, 
            (SELECT sum(UIssueQty) FROM dbo.INV_Userissue WHERE ModelID=@ModelID and LocID=@LocID) as TFSIQty, 
            LocID=LocID,           
            ((SELECT sum(IssueQty) FROM dbo.INV_ItemIssue WHERE ModelID=@ModelID and LocID=@LocID)-(SELECT sum(UIssueQty) FROM dbo.INV_Userissue WHERE ModelID=@ModelID and LocID=@LocID)) as FSBalanceQty  
        FROM
        dbo.INV_ItemIssue
        WHERE ModelID=@ModelID and LocID=@LocID
        GROUP BY ItemID, ModelID, LocID 
        
        UPDATE dbo.INV_Factorystock SET 
        TFSRQty=(SELECT sum(IssueQty) FROM dbo.INV_ItemIssue WHERE ModelID=@ModelID and LocID=@LocID) , 
        TFSIQty=(SELECT sum(UIssueQty) FROM dbo.INV_Userissue WHERE ModelID=@ModelID and LocID=@LocID),
        FSBalanceQty=((S
--------------------------------------------------------
--  File created - Ïîíåäåëíèê-Àïðèë-14-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ARTICLE
--------------------------------------------------------
  CREATE TABLE "ELSYS"."ARTICLE" 
   (	"ID" NUMBER, 
	"PUBLISHED_ON" DATE, 
	"CONTENT" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CATEGORY
--------------------------------------------------------
  CREATE TABLE "ELSYS"."CATEGORY" 
   (	"ID" NUMBER, 
	"CREATED_BY" VARCHAR2(20 BYTE), 
	"DATE_CREATED_ON" DATE, 
	"T

   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TAG
--------------------------------------------------------
  CREATE TABLE "ELSYS"."TAG" 
   (	"ID" NUMBER, 
	"PRIORITY" FLOAT(126), 
	"SECOND_PRIORITY" NUMBER(*,0), 
	"ARTICLE_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USERS
--------------------------------------

  CREATE TABLE "ELSYS"."USERS" 
   (	"ID" NUMBER, 
	"PICTURE_URL" VARCHAR2(10 BYTE), 
	"DESCRIPTION" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into ELSYS.ARTICLE
SET DEFINE OFF;
Insert into ELSYS.ARTICLE (ID,PUBLISHED_ON,CONTENT,NAME) values (1,to_date('2011-01-03','RRRR-MM-DD'),'TU','FFDH');
Insert into ELSYS.ARTICLE (ID,PUBLISHED_ON,CONTENT,NAME) values (2,to_date('2013-02-01','RRRR-MM-DD'),'rrfg','fh');
REM INSERTING into ELSYS.CATEGORY
SET DEFINE OFF;
Insert into ELSYS.CATEGORY (ID,CREATED_BY,DATE_CREATED_ON,TAG_ID) values (1,'eg',to_date('2011-02-01','RRRR-MM-DD'),1);
Insert into ELSYS.CATEGORY (ID,CREATED_BY,DATE_CREATED_ON,TAG_ID) values (2,'dg',to_date('201
﻿select  top 10000 "new_project0".new_title as "new_title" , "new_project0".new_startdate as "new_startdate" , "new_project0".new_estcompletion as "new_estcompletion" , "new_project0".new_projectid as "new_projectid" , "new_project0".owneridname as "owneridname" , "new_project0".cust_customerporeceiveddate as "cust_customerporeceiveddate" , "new_project0".cust_cosreceiveddate as "cust_cosreceiveddate" , "new_project0".cust_servicesrevenue as "cust_servicesrevenue" , "new_project0".cust_milestoneperprojectname as "cust_milestoneperprojectname" , "new_project0".statuscodename as "statuscodename" , "new_project0".statecodename as "statecodename" , "new_project0".cust_projecttypename as "cust_projecttypename" , "new_project0".new_invoiceaccountname as "new_invoiceaccountname" , "new_project0".new_salespersonname as "new_salespersonname" , "new_project0".new_projectendusername as "new_projectendusername" , "new_project0".new_percentcomplete as "new_percentcomplete" , "new_project0".new_sale
# --- !Ups
CREATE TABLE IF NOT EXISTS user (
  id   	     	    	    INT PRIMARY KEY AUTO_INCREMENT,
  email                     VARCHAR(255) NOT NULL,
  name_first                VARCHAR(255) NOT NULL,
  name_last    		    VARCHAR(255) NOT NULL,
  password                  VARCHAR(255) NOT NULL,
  birthday		    DATE,
  gender		    VARCHAR(1) NOT NULL,
  country		    VARCHAR(32) NOT NULL,
  container_list_number	    INT NOT NULL
);
CREATE TABLE IF NOT EXISTS monitor (
  id                        INT PRIMARY KEY AUTO_INCREMENT,
  manufacturer		    VARCHAR(255) NOT NULL,
  name                      VARCHAR(255) NOT NULL,
  product_id		    INT NOT NULL,
  vendor_id		    INT NOT NULL
);
CREATE TABLE IF NOT EXISTS container (
  id                        INT PRIMARY KEY AUTO_INCREMENT,
  name                      VARCHAR(255) NOT NULL,
  temperature_expected	    DOUBLE,
  temperature_range	    DOUBLE,
  read_frequency 	    INT,
  monitor_id		    INT,
  last_read_temperature	    DOUBLE,
  last
--Declare/assign our example xml blob
DECLARE @XML XML
SET @XML = '
<Order Id="1234">
    <Items>
        <Item PartId="A1111" Qty="1">
            <Description>Motherboard</Description>
        </Item>
        <Item PartId="B2222" Qty="2">
            <Description>Graphics Card</Description>
        </Item>
        <Item PartId="C3333" Qty="4">
            <Description>2gb Ram</Description>
        </Item>
        <Item PartId="D4444" Qty="1">
            <Description>700w PSU</Description>
        </Item>
        <Item PartId="E5555" Qty="2">
            <Description>300gb SSD</Description>
        </Item>
    </Items>
</Order>'
--Main xquery to enumerate the <Item> nodes and to return them with a new Position attribute
SELECT @XML.query('
for $Items in /Order/Items
return
(: safety check to return <Error/> if array is smaller than node count. Ensures nodes are not lost :)
if 
    (count( (1,2,3,4,5,6,7,8,9,10) ) < count($Items/*))
then
    <Error>Array too small.</Error>
else
    <O
IF OBJECT_ID('dbo.wsp_newBibitResponse') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.wsp_newBibitResponse
    IF OBJECT_ID('dbo.wsp_newBibitResponse') IS NOT NULL
        PRINT '<<< FAILED DROPPING PROCEDURE dbo.wsp_newBibitResponse >>>'
    ELSE
        PRINT '<<< DROPPED PROCEDURE dbo.wsp_newBibitResponse >>>'
END
go
/******************************************************************
**
** CREATION:
**   Author:        Andy Tran
**   Date:          February 2004
**   Description:   Inserts row into BibitResponse
**
** REVISION(S):
**   Author:        
**   Date:          
**   Description:   
**
******************************************************************************/
CREATE PROCEDURE wsp_newBibitResponse
 @transactionId     NUMERIC(12,0)
,@referenceId       NUMERIC(12,0)
,@actionCode        VARCHAR(3)
,@responseText      VARCHAR(32)
,@avsResponseText   VARCHAR(32)
,@cvcResponseText   VARCHAR(32)
,@errorMessage      VARCHAR(255)
AS
DECLARE @return		INT
,@dateCreated		DATETIME
EXEC
﻿CREATE TABLE [SalesLT].[ProductModelProductDescription] (
    [ProductModelID]       INT              NOT NULL,
    [ProductDescriptionID] INT              NOT NULL,
    [Culture]              NCHAR (6)        NOT NULL,
    [rowguid]              UNIQUEIDENTIFIER CONSTRAINT [DF_ProductModelProductDescription_rowguid] DEFAULT (newid()) NOT NULL,
    [ModifiedDate]         DATETIME         CONSTRAINT [DF_ProductModelProductDescription_ModifiedDate] DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [PK_ProductModelProductDescription_ProductModelID_ProductDescriptionID_Culture] PRIMARY KEY CLUSTERED ([ProductModelID] ASC, [ProductDescriptionID] ASC, [Culture] ASC),
    CONSTRAINT [FK_ProductModelProductDescription_ProductDescription_ProductDescriptionID] FOREIGN KEY ([ProductDescriptionID]) REFERENCES [SalesLT].[ProductDescription] ([ProductDescriptionID]),
    CONSTRAINT [FK_ProductModelProductDescription_ProductModel_ProductModelID] FOREIGN KEY ([ProductModelID]) REFERENCES [SalesLT].[Produc

